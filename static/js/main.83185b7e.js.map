{"version":3,"file":"static/js/main.83185b7e.js","mappings":"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","sources":["../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react-awesome-reveal/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-awesome-reveal/node_modules/react-is/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-is/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","assets/images/Services/undraw_firmware_re_fgdy.svg","assets/images/Services/undraw_speech_to_text_re_8mtf_AI.svg","assets/images/Services/undraw_projections_re_ulc6.svg","assets/images/Advantages/undraw_growth_analytics_re_pyxf.svg","assets/images/Advantages/undraw_pair_programming_re_or4x.svg","assets/images/Advantages/undraw_interview_re_e5jn.svg","assets/images/Advantages/undraw_audio_conversation_re_3t38.svg","json/landingPageData.js","../node_modules/@headlessui/react/dist/utils/disposables.js","../node_modules/@headlessui/react/dist/utils/micro-task.js","../node_modules/@headlessui/react/dist/hooks/use-disposables.js","../node_modules/@headlessui/react/dist/utils/env.js","../node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js","../node_modules/@headlessui/react/dist/hooks/use-latest-value.js","../node_modules/@headlessui/react/dist/hooks/use-event.js","../node_modules/@headlessui/react/dist/hooks/use-server-handoff-complete.js","../node_modules/@headlessui/react/dist/hooks/use-sync-refs.js","../node_modules/@headlessui/react/dist/hooks/use-transition.js","../node_modules/@headlessui/react/dist/hooks/use-flags.js","../node_modules/@headlessui/react/dist/internal/open-closed.js","../node_modules/@headlessui/react/dist/utils/class-names.js","../node_modules/@headlessui/react/dist/utils/match.js","../node_modules/@headlessui/react/dist/utils/render.js","../node_modules/@headlessui/react/dist/components/transition/transition.js","../node_modules/@headlessui/react/dist/hooks/use-is-mounted.js","elements/Button/index.js","themeColors.js","customize.js","parts/BrandIcon.js","parts/Header.js","../node_modules/@emotion/sheet/dist/emotion-sheet.esm.js","../node_modules/stylis/src/Utility.js","../node_modules/stylis/src/Tokenizer.js","../node_modules/stylis/src/Enum.js","../node_modules/stylis/src/Serializer.js","../node_modules/stylis/src/Parser.js","../node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","../node_modules/stylis/src/Middleware.js","../node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","../node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","../node_modules/@emotion/serialize/dist/emotion-serialize.esm.js","../node_modules/@emotion/hash/dist/emotion-hash.esm.js","../node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js","../node_modules/@emotion/react/dist/emotion-element-5486c51c.browser.esm.js","../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","../node_modules/react-intersection-observer/src/useInView.tsx","../node_modules/react-awesome-reveal/dist/index.js","svgBgChanger.js","assets/images/hero/control_ai.svg","parts/Hero.js","parts/Service.js","parts/Portfolio.js","parts/Advantage.js","../node_modules/swiper/shared/ssr-window.esm.mjs","../node_modules/swiper/shared/utils.mjs","../node_modules/swiper/shared/swiper-core.mjs","../node_modules/swiper/shared/update-swiper.mjs","../node_modules/swiper/swiper-react.mjs","../node_modules/swiper/shared/update-on-virtual-data.mjs","../node_modules/swiper/shared/create-element-if-not-defined.mjs","../node_modules/swiper/modules/navigation.mjs","../node_modules/swiper/shared/classes-to-selector.mjs","../node_modules/swiper/modules/pagination.mjs","../node_modules/swiper/modules/scrollbar.mjs","../node_modules/swiper/modules/a11y.mjs","../node_modules/swiper/modules/autoplay.mjs","parts/Testimonial.js","parts/Discuss.js","parts/Footer.js","pages/LandingPage.js","assets/images/hero/undraw_vr_chat_re_s80u.svg","parts/HeroPortfolio.js","../node_modules/react-tabs/esm/helpers/elementTypes.js","../node_modules/react-tabs/esm/helpers/childrenDeepMap.js","../node_modules/clsx/dist/clsx.mjs","../node_modules/react-tabs/esm/helpers/count.js","../node_modules/react-tabs/esm/components/UncontrolledTabs.js","../node_modules/react-tabs/esm/components/Tabs.js","../node_modules/react-tabs/esm/components/TabList.js","../node_modules/react-tabs/esm/components/Tab.js","../node_modules/react-tabs/esm/components/TabPanel.js","parts/AllPortfolio.js","pages/ProjectPage.js","assets/images/undraw_page_not_found_re_e9o6.svg","pages/NotFoundPage.js","assets/images/hero/undraw_team_collaboration_re_ow29.svg","parts/HeroTeam.js","parts/AllTeam.js","pages/TeamPage.js","parts/PortfolioDetail.js","pages/ProjectDetailPage.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","elements/Form/index.js","parts/DiscussForm.js","pages/DiscussProjectPage.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"69f6f56a\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"tailwind-arboraistudio:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktailwind_arboraistudio\"] = self[\"webpackChunktailwind_arboraistudio\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => DataFunctionReturnValue\n  ) => Promise<DataStrategyResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n  fetcherKey: string | null;\n}\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface DataStrategyResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<Record<string, DataStrategyResult>>;\n}\n\nexport type AgnosticPatchRoutesOnNavigationFunctionArgs<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = {\n  path: string;\n  matches: M[];\n  patch: (routeId: string | null, children: O[]) => void;\n};\n\nexport type AgnosticPatchRoutesOnNavigationFunction<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = (\n  opts: AgnosticPatchRoutesOnNavigationFunctionArgs<O, M>\n) => void | Promise<void>;\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  DataStrategyResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      viewTransitionOpts?: ViewTransitionOpts;\n      flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches\n        .slice(0, idx + 1)\n        .every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate: (() => void) | undefined = undefined;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = undefined;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          let nextHistoryUpdatePromise = new Promise<void>((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked, after the url\n              // restoration is also complete.  See:\n              // https://github.com/remix-run/react-router/issues/11613\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true,\n      }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error: discoverResult.error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    abortFetcher(key);\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        abortFetcher(staleKey);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset,\n        });\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    isNavigation: boolean,\n    {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    state: RouterState,\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    fetcherKey: string | null\n  ): Promise<Record<string, DataResult>> {\n    let results: Record<string, DataStrategyResult>;\n    let dataResults: Record<string, DataResult> = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e,\n        };\n      });\n      return dataResults;\n    }\n\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result as Response;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          ),\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n\n    return dataResults;\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    state: RouterState,\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let currentMatches = state.matches;\n\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          // Fetcher results are keyed by fetcher key from here on out, not routeId\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: ResultType.error,\n              error: getInternalRouterError(404, {\n                pathname: f.path,\n              }),\n            } as ErrorResult,\n          });\n        }\n      })\n    );\n\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n\n    await Promise.all([\n      resolveNavigationDeferredResults(\n        matches,\n        loaderResults,\n        request.signal,\n        currentMatches,\n        state.loaderData\n      ),\n      resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    if (!patchRoutesOnNavigationImpl) {\n      return { type: \"success\", matches };\n    }\n\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties\n            );\n          },\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null\n  ): Promise<Record<string, DataResult>> {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    let dataResults: Record<string, DataResult> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResultResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        dataResults[match.route.id] =\n          await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search\n        ? path.search.replace(/^\\?/, \"?index&\")\n        : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string,\n  includeBoundary = false\n) {\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  initialHydration: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(state.errors)[0],\n      true\n    );\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      pendingActionResult[0]\n    );\n  }\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      initialHydration ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction shouldLoadRouteOnHydration(\n  route: AgnosticDataRouteObject,\n  loaderData: RouteData | null | undefined,\n  errors: RouteData | null | undefined\n) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  let childrenToPatch: AgnosticDataRouteObject[];\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(\n    (newRoute) =>\n      !childrenToPatch.some((existingRoute) =>\n        isSameRoute(newRoute, existingRoute)\n      )\n  );\n\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n\n  childrenToPatch.push(...newRoutes);\n}\n\nfunction isSameRoute(\n  newRoute: AgnosticRouteObject,\n  existingRoute: AgnosticRouteObject\n): boolean {\n  // Most optimal check is by id\n  if (\n    \"id\" in newRoute &&\n    \"id\" in existingRoute &&\n    newRoute.id === existingRoute.id\n  ) {\n    return true;\n  }\n\n  // Second is by pathing differences\n  if (\n    !(\n      newRoute.index === existingRoute.index &&\n      newRoute.path === existingRoute.path &&\n      newRoute.caseSensitive === existingRoute.caseSensitive\n    )\n  ) {\n    return false;\n  }\n\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if (\n    (!newRoute.children || newRoute.children.length === 0) &&\n    (!existingRoute.children || existingRoute.children.length === 0)\n  ) {\n    return true;\n  }\n\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children!.every((aChild, i) =>\n    existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy({\n  matches,\n}: DataStrategyFunctionArgs): ReturnType<DataStrategyFunction> {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) =>\n      Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  state: RouterState | null,\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  fetcherKey: string | null,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<Record<string, DataStrategyResult>> {\n  let loadRouteDefinitionsPromises = matches.map((m) =>\n    m.route.lazy\n      ? loadLazyRouteModule(m.route, mapRouteProperties, manifest)\n      : undefined\n  );\n\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve: DataStrategyMatch[\"resolve\"] = async (handlerOverride) => {\n      if (\n        handlerOverride &&\n        request.method === \"GET\" &&\n        (match.route.lazy || match.route.loader)\n      ) {\n        shouldLoad = true;\n      }\n      return shouldLoad\n        ? callLoaderOrAction(\n            type,\n            request,\n            match,\n            loadRoutePromise,\n            handlerOverride,\n            requestContext\n          )\n        : Promise.resolve({ type: ResultType.data, result: undefined });\n    };\n\n    return {\n      ...match,\n      shouldLoad,\n      resolve,\n    };\n  });\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext,\n  });\n\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n\n  return results;\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  loadRoutePromise: Promise<void> | undefined,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<DataStrategyResult> {\n  let result: DataStrategyResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<DataStrategyResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<DataStrategyResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<DataStrategyResult> = (async () => {\n      try {\n        let val = await (handlerOverride\n          ? handlerOverride((ctx: unknown) => actualHandler(ctx))\n          : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise,\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertDataStrategyResultToDataResult(\n  dataStrategyResult: DataStrategyResult\n): Promise<DataResult> {\n  let { result, type } = dataStrategyResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: Record<string, DataResult>,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: Record<string, DataResult>\n): { key: string; result: RedirectResult } | undefined {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isDataStrategyResult(result: unknown): result is DataStrategyResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectDataStrategyResultResult(result: DataStrategyResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveNavigationDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  signal: AbortSignal,\n  currentMatches: AgnosticDataRouteMatch[],\n  currentLoaderData: RouteData\n) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then((result) => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\n\nasync function resolveFetcherDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  revalidatingFetchers: RevalidatingFetcher[]\n) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, routeId, controller } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(\n        controller,\n        \"Expected an AbortController for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, controller.signal, true).then(\n        (result) => {\n          if (result) {\n            results[key] = result;\n          }\n        }\n      );\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n  viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  DataStrategyFunction,\n  PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  PatchRoutesOnNavigationFunction,\n  PatchRoutesOnNavigationFunctionArgs,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        viewTransition={viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          flushSync: options.flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as useViewTransitionState };\n\n//#endregion\n","var _path, _path2, _path3, _path4, _path5, _path6, _rect, _path7, _path8, _path9, _rect2, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23, _rect24, _rect25, _rect26, _rect27, _rect28, _rect29, _rect30, _rect31, _rect32, _rect33, _rect34, _rect35, _path17, _ellipse, _ellipse2, _ellipse3, _path18, _path19, _path20, _rect36, _rect37, _rect38, _rect39, _rect40, _rect41, _rect42, _rect43, _rect44, _rect45, _rect46, _rect47, _rect48, _rect49, _rect50, _rect51, _rect52, _rect53, _rect54, _rect55, _rect56, _rect57, _rect58, _rect59, _rect60, _rect61, _rect62, _rect63, _rect64, _rect65, _rect66, _rect67, _rect68, _rect69, _rect70, _rect71, _path21, _polygon, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _rect72, _path29, _ellipse4, _ellipse5, _ellipse6, _ellipse7, _path30, _path31, _path32, _path33, _path34, _rect73, _path35, _rect74, _rect75, _rect76, _rect77, _path36, _rect78, _path37, _rect79, _path38, _rect80, _rect81, _rect82, _rect83, _path39, _rect84;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawFirmwareReFgdy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 738.81995,\n    height: 576.27002,\n    viewBox: \"0 0 738.81995 576.27002\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M844.96867,410.38909s-17.37008,9.66141-12.37008,20.66141,76,2,76,2-5-15-14-18S844.96867,410.38909,844.96867,410.38909Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#536dfe\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M838.19741,412.96505a33.803,33.803,0,0,1,11.44641-4.73315,77.516,77.516,0,0,1,41.17743,1.2843l-.24481-.1991a45.94574,45.94574,0,0,1,14.66607,12.22834Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#ccc\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M915.11861,460.27047q-.36,5.385-.72,10.76a172.67437,172.67437,0,0,1-2.45,22.38c-1.22,6.19-3.16,12.33-6.63,17.6-3.47,5.26-8.62,9.61-14.72,11.21a26.97334,26.97334,0,0,1-11.42.25c-7.13-4.05-11.96,1.13-4.84,6.4a55.18743,55.18743,0,0,0,5.03,3.31l3.23,49.87-60-13,11.71-66.34a39.58958,39.58958,0,0,1-4.9-5.35c-6.71-8.91-9.02-20.52-8.58-31.66.45-11.15,3.42-22.02,6.37-32.77a84.27789,84.27789,0,0,1,2.72-8.61005c1.31.54,2.64,1.03,3.99,1.44,8.63,2.62,17.8,2.83,26.82,2.82q24.075-.015,48.09-1.88a46.14229,46.14229,0,0,1,6.53,19.94A92.56934,92.56934,0,0,1,915.11861,460.27047Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#ccc\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M658.5,595.645l92.37,8.19995.99.09V209.795q-.49494-.345-.99-.69a288.32258,288.32258,0,0,0-62.01-32.94l-4.72,65.1-.43,5.96-4.67,64.56L677.6,331.645l-18.93,261.7Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#e6e6e6\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M430.07,202.455c-.66.42-1.32.84-1.98,1.28v400.2l1.98-.18,91.37-8.11-.17-2.30005L502.34,331.645l-1.44-19.86-4.67-64.56-.43-5.96-4.95-68.27A287.68677,287.68677,0,0,0,430.07,202.455Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#e6e6e6\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M428.09,203.735c-1.33.86-2.66,1.74-3.97,2.63v403.03c0,10.06995,5.97,18.51,13.95,20.66a15.24855,15.24855,0,0,0,4,.53h296.8a15.11793,15.11793,0,0,0,3.99-.53,17.05993,17.05993,0,0,0,7.78-4.66,22.91866,22.91866,0,0,0,6.18-16V213.375c-1.64-1.21-3.29-2.41-4.96-3.58q-.49494-.345-.99-.69v400.29a16.10772,16.10772,0,0,1-.46,3.85c-1.41,5.95-6.06,10.31-11.54,10.31H442.07c-6.62,0-12-6.35-12-14.16V202.455C429.41,202.875,428.75,203.295,428.09,203.735Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#e6e6e6\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 196.50257,\n    y: 79.40401,\n    width: 326.75223,\n    height: 5.95901,\n    fill: \"#e6e6e6\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M653.77,165.255c-1.98-.49-3.96-.95-5.96-1.38v161.81h5.96Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#e6e6e6\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M533.13,161.865c-1.99.37-3.98.75-5.96,1.16v162.66h5.96Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#e6e6e6\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M363.03,620.155a26.71127,26.71127,0,0,0,1.93,9.98,25.54045,25.54045,0,0,0,1.75,3.56,27.096,27.096,0,0,0,3.02,4.18,26.76039,26.76039,0,0,0,20.12,9.11H781.16a26.82,26.82,0,0,0,0-53.64H389.85A26.84644,26.84644,0,0,0,363.03,620.155Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#e6e6e6\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 427.0926,\n    y: 311.78391,\n    width: 324.76589,\n    height: 19.86336,\n    transform: \"translate(948.36106 481.5662) rotate(-180)\",\n    fill: \"#e6e6e6\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M575.57119,305.82491h27.8087a0,0,0,0,1,0,0v0a10.92484,10.92484,0,0,1-10.92484,10.92484h-5.959a10.92484,10.92484,0,0,1-10.92484-10.92484v0A0,0,0,0,1,575.57119,305.82491Z\",\n    transform: \"translate(948.36106 460.70967) rotate(-180)\",\n    fill: \"#e6e6e6\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.59,635.475a289.004,289.004,0,0,0,28.12,28.95H941.29a289.004,289.004,0,0,0,28.12-28.95Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415.75,538.665v102.56H487.6V538.665a3.448,3.448,0,0,0-2.43-3.3,3.17459,3.17459,0,0,0-1.03-.16H419.22A3.46327,3.46327,0,0,0,415.75,538.665Zm28.04,35.24a7.67033,7.67033,0,0,1,15.34,0v11.9a7.6701,7.6701,0,0,1-15.34,0Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#2f2e41\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415.53,637.945v9.89a1.94622,1.94622,0,0,0,1.93,1.94h68.43a1.93971,1.93971,0,0,0,1.93-1.94v-9.89Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.72,384.145v187.26a9.00714,9.00714,0,0,0,9,9h277.5a9.0071,9.0071,0,0,0,9-9V384.145a9.01147,9.01147,0,0,0-9-8.99H311.72A9.01151,9.01151,0,0,0,302.72,384.145Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M309.23,386.475v182.62a4.81833,4.81833,0,0,0,4.81,4.81H586.91a4.81829,4.81829,0,0,0,4.81-4.81V386.475a4.82046,4.82046,0,0,0-4.81-4.82H314.04A4.8205,4.8205,0,0,0,309.23,386.475Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#536dfe\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M364.87,652.105a2.94839,2.94839,0,0,0,2.32,1.11H529.53a2.98724,2.98724,0,0,0,2.92-3.6l-2.52-11.97a2.99262,2.99262,0,0,0-1.86-2.17,2.89455,2.89455,0,0,0-1.06-.2H369.7a2.89431,2.89431,0,0,0-1.06.2,2.99238,2.99238,0,0,0-1.86,2.17l-2.52,11.97A2.98494,2.98494,0,0,0,364.87,652.105Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#2f2e41\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 520.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(816.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 510.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(796.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 500.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(776.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 490.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(756.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 480.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(736.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 470.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(716.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 460.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(696.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 450.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(676.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 440.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(656.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 430.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(636.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 420.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(616.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 410.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(596.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 400.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(576.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 390.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(556.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 380.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(536.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 370.857,\n    y: 637.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(516.12397 1115.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 520.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(816.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 510.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(796.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 500.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(776.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 490.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(756.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 480.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(736.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect24 || (_rect24 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 470.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(716.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect25 || (_rect25 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 460.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(696.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect26 || (_rect26 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 450.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(676.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect27 || (_rect27 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 440.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(656.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect28 || (_rect28 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 430.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(636.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect29 || (_rect29 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 420.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(616.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect30 || (_rect30 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 410.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(596.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect31 || (_rect31 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 400.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(576.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect32 || (_rect32 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 390.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(556.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect33 || (_rect33 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 380.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(536.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect34 || (_rect34 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 370.97516,\n    y: 642.43078,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(516.3603 1125.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect35 || (_rect35 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 437.97516,\n    y: 648.43078,\n    width: 40,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(685.3603 1137.99656) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M327.75187,406.8117H583.07523a1.01559,1.01559,0,0,0,0-2.03069H327.75187a1.01559,1.01559,0,0,0,0,2.03069Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 335.10501,\n    cy: 231.64882,\n    rx: 5.95043,\n    ry: 6.08304,\n    fill: \"#3f3d56\"\n  })), _ellipse2 || (_ellipse2 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 314.54899,\n    cy: 231.64882,\n    rx: 5.95043,\n    ry: 6.08304,\n    fill: \"#3f3d56\"\n  })), _ellipse3 || (_ellipse3 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 293.99297,\n    cy: 231.64882,\n    rx: 5.95043,\n    ry: 6.08304,\n    fill: \"#3f3d56\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M339.04,390.045a1.0948,1.0948,0,0,0,1.09,1.1h14.6a1.1053,1.1053,0,0,0,0-2.21h-14.6A1.1034,1.1034,0,0,0,339.04,390.045Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M339.04,394.195a1.09474,1.09474,0,0,0,1.09,1.1h14.6a1.10527,1.10527,0,0,0,0-2.21h-14.6A1.1034,1.1034,0,0,0,339.04,394.195Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M339.04,398.335a1.1034,1.1034,0,0,0,1.09,1.11h14.6a1.1053,1.1053,0,0,0,0-2.21h-14.6A1.09476,1.09476,0,0,0,339.04,398.335Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _rect36 || (_rect36 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 104.83596,\n    y: 268.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect37 || (_rect37 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 164.83596,\n    y: 268.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect38 || (_rect38 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 181.83596,\n    y: 268.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect39 || (_rect39 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 121.15615,\n    y: 268.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect40 || (_rect40 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 201.15615,\n    y: 268.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect41 || (_rect41 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 120.83596,\n    y: 281.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect42 || (_rect42 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 180.83596,\n    y: 281.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect43 || (_rect43 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 197.83596,\n    y: 281.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect44 || (_rect44 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 137.15615,\n    y: 281.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect45 || (_rect45 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 217.15615,\n    y: 281.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect46 || (_rect46 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 136.83596,\n    y: 294.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect47 || (_rect47 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 196.83596,\n    y: 294.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect48 || (_rect48 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 213.83596,\n    y: 294.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect49 || (_rect49 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 153.15615,\n    y: 294.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect50 || (_rect50 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 233.15615,\n    y: 294.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect51 || (_rect51 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 152.83596,\n    y: 307.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect52 || (_rect52 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 212.83596,\n    y: 307.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect53 || (_rect53 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 229.83596,\n    y: 307.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect54 || (_rect54 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 169.15615,\n    y: 307.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect55 || (_rect55 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 164.83596,\n    y: 359.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect56 || (_rect56 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 181.83596,\n    y: 359.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect57 || (_rect57 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 201.15615,\n    y: 359.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect58 || (_rect58 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 104.83596,\n    y: 359.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect59 || (_rect59 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 121.15615,\n    y: 359.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect60 || (_rect60 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 120.83596,\n    y: 346.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect61 || (_rect61 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 180.83596,\n    y: 346.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect62 || (_rect62 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 197.83596,\n    y: 346.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect63 || (_rect63 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 137.15615,\n    y: 346.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect64 || (_rect64 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 136.83596,\n    y: 333.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect65 || (_rect65 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 196.83596,\n    y: 333.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect66 || (_rect66 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 213.83596,\n    y: 333.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect67 || (_rect67 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 153.15615,\n    y: 333.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect68 || (_rect68 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 152.83596,\n    y: 320.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect69 || (_rect69 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 212.83596,\n    y: 320.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect70 || (_rect70 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 229.83596,\n    y: 320.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect71 || (_rect71 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 169.15615,\n    y: 320.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M324.69,708.905c.61.31,1.23.62,1.84.92,15.8,7.9,28.43994,12.39,45.73,17.31,1.46-16.3,2.87-44.95,4.24-62.71.36-4.61.72-8.48,1.07-11.21a15.1823,15.1823,0,0,1,.88-4.25l-.06,4.25-.15,11.21-.87,64.11a288.58782,288.58782,0,0,0,65.84,9.49c1.16.03,2.3.05,3.4.06995.39.01.77.02,1.15.02,1.25.01,2.49.02,3.74.02a289.27116,289.27116,0,0,0,69.54-8.43c-.49-16.13-.98-44.46-1.45-65.28-.1-4.07-.19-7.86-.29-11.21-.19-7.16-.39-12.31995-.58-14.05a4.36108,4.36108,0,0,1,.39.97,97.15388,97.15388,0,0,1,1.89,13.08c.35,3.35.7,7.14,1.05,11.21,1.86,21.63,3.8,51.04,5.8,63.51a285.47262,285.47262,0,0,0,34.97-12.03q9-3.75,17.68-8.09c-1.1-7.2-2.25-15.27-3.43-23.64-.92-6.49-1.87-13.16-2.84-19.75-1.5-10.18-23.79-81.32-25.19995-84.02-1.21-2.31-2.36005-4.49-3.45-6.5-2.64-4.88-4.88-8.77-6.54-11.23a55.25656,55.25656,0,0,0-29.28-22.21l-.3-.08-.21.09-20.45-6.28-2.99-.92-2.01-.62-7.08-5.39-3.85-2.93-3.61-2.75-7.06-5.37-43.71,2.69-8.51,20.49-19.06,6.97-.32995-.15-.29-.12-.3.08a55.306,55.306,0,0,0-29.28,22.21c-.93994,1.41-2.08,3.27-3.37,5.52-1.1,1.91-2.3,4.09-3.6,6.5-1.85,3.43-3.87,7.3-6.01,11.49-.47.92-.95,1.86-1.43,2.81q-1.335,2.63993-2.71,5.38995c-2.13,4.25-4.33,8.69-6.53,13.2-1.91,3.91-3.84,11.95-5.74,22.18-1.57,8.5-3.13,18.52-4.64,28.95-1.98,13.52.13,29.71-1.66,42.15C324.92,707.365,324.8,708.135,324.69,708.905Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"303.59 473.566 295.093 440.774 287.59 469.07 303.59 473.566\",\n    opacity: 0.2\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M308.07,614.065c3.04,41.88-.11,60.32,16.67,94.85a286.15918,286.15918,0,0,0,47.52,18.22q2.55.72,5.11,1.4a288.58782,288.58782,0,0,0,65.84,9.49c1.16.03,2.3.05,3.4.06995.39.01.77.02,1.15.02,1.25.01,2.49.02,3.74.02a289.27116,289.27116,0,0,0,69.54-8.43q3.42-.84,6.81-1.77a285.47262,285.47262,0,0,0,34.97-12.03q9-3.75,17.68-8.09c1.31-.66,2.62-1.32,3.91-2,6.63-11.66,10.4-25.84,10.48-42.88C590.3,633.575,318.21,588.745,308.07,614.065Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#2f2e41\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M308.07788,621.23718c-.15527-2.59271-.32886-5.27093-.53131-8.05987,10.14-25.32,282.23,19.51,286.82,48.87-.01264,2.69184-.12775,5.30414-.32129,7.85456C582.92969,640.92358,324.44055,598.31555,308.07788,621.23718Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    opacity: 0.2\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.41933,635.05074a6.41621,6.41621,0,0,0,6.18311,4.331L279.09426,638.7a6.32847,6.32847,0,0,0,5.98085-4.657l3.74889-40.08722a9.794,9.794,0,0,0,4.23792.87079A9.66133,9.66133,0,0,0,292.577,575.51a8.184,8.184,0,0,0-1.73619.18056,6.54764,6.54764,0,0,0-4.87405-2.103l-40.75051,1.05229a5.85418,5.85418,0,0,0-1.00519.1248,6.36455,6.36455,0,0,0-4.87318,8.26464Zm43.17346-43.81684,2.66763-9.55274a6.50638,6.50638,0,0,0,.02037-3.37458c.12944-.00034.24362-.06168.37306-.062a6.91049,6.91049,0,0,1,.32357,13.81714A6.50522,6.50522,0,0,1,289.59279,591.2339Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#2f2e41\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.21109,574.76459c.86818,4.96412,10.62909,8.45388,22.36585,7.8473,10.79271-.49726,19.61746-4.287,21.23421-8.77851a6.025,6.025,0,0,0-1.84436-.24588l-40.75051,1.05229A5.85418,5.85418,0,0,0,244.21109,574.76459Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.728,613.02251a.49659.49659,0,0,0,.15091-.06642l5.75315-3.76566a.49922.49922,0,0,0,.00032-.83621l-5.97978-3.91667a.49972.49972,0,1,0-.54792.83585l5.34091,3.49818-5.114,3.34794a.49991.49991,0,0,0,.39637.903Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#536dfe\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.6412,613.44155a.5.5,0,0,0,.12608-.91842l-5.30305-3.04034,5.1256-3.80723a.49963.49963,0,1,0-.596-.80208l-5.73863,4.26265a.49951.49951,0,0,0,.04918.83476l5.96526,3.41968A.49962.49962,0,0,0,259.6412,613.44155Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#536dfe\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.15573,616.32252a.48211.48211,0,0,0,.137-.05785.49976.49976,0,0,0,.16751-.68714l-8.15548-13.40836a.50026.50026,0,0,0-.85441.52058l8.15548,13.40835A.50033.50033,0,0,0,268.15573,616.32252Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#536dfe\"\n  })), _rect72 || (_rect72 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 582.00856,\n    y: 398.18551,\n    width: 89,\n    height: 78,\n    fill: \"#3f3d56\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M914.79019,451.10052a47.54278,47.54278,0,0,0,4.14441,28.74269c1.60845,3.27865,3.60034,7.22833,1.64181,10.31067a6.35146,6.35146,0,0,1-4.78427,2.65123,15.579,15.579,0,0,1-5.58345-.723\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#ccc\"\n  })), _ellipse4 || (_ellipse4 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 606.00856,\n    cy: 256.68551,\n    rx: 3,\n    ry: 2.5,\n    fill: \"#3f3d56\"\n  })), _ellipse5 || (_ellipse5 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 617.00856,\n    cy: 257.68551,\n    rx: 3,\n    ry: 2.5,\n    fill: \"#3f3d56\"\n  })), _ellipse6 || (_ellipse6 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 628.00856,\n    cy: 262.68551,\n    rx: 3,\n    ry: 2.5,\n    fill: \"#3f3d56\"\n  })), _ellipse7 || (_ellipse7 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 641.00856,\n    cy: 259.68551,\n    rx: 3,\n    ry: 2.5,\n    fill: \"#3f3d56\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M598.524,471.43367c14.57046-4.04481,30.799.29013,42.05845,10.21976A43.88754,43.88754,0,0,1,653.461,501.80168c2.8747,9.25872,3.35019,19.02542,3.65131,28.6497.33295,10.64162.62195,21.28479.932,31.9271.29563,10.14716.33033,20.34171,1.00732,30.47209.56808,8.50055,1.92876,17.32514,6.47812,24.698,4.21772,6.83533,10.88125,11.45055,18.41173,13.99454,7.63283,2.57857,15.86067,3.17883,23.86752,3.12609a184.22208,184.22208,0,0,0,27.82752-2.20319c17.48705-2.80135,34.75967-9.94681,45.44026-24.68866a40.90967,40.90967,0,0,0,7.92253-23.02829c.22517-9.67482-2.86589-19.0455-6.25147-27.98171-3.29459-8.69606-6.85892-17.26379-8.94441-26.35578a110.576,110.576,0,0,1-2.74946-25.94259,114.04736,114.04736,0,0,1,12.22941-50.22476,98.67948,98.67948,0,0,1,15.01373-22.075c6.16842-6.712,13.80654-12.25291,22.88968-14.06934a27.63786,27.63786,0,0,1,13.36778.53755c1.85346.555,2.64543-2.33953.79752-2.89284-8.99811-2.69425-18.77351-.64565-26.75136,4.03063-7.84426,4.598-14.04332,11.49575-19.30419,18.80938A116.16931,116.16931,0,0,0,772.86781,538.54c5.3387,17.489,16.95029,35.69377,11.96192,54.62083-4.36632,16.56686-19.49159,27.82514-35.11678,32.911-9.47941,3.08546-19.41782,4.39075-29.33129,5.06595-8.37748.57059-16.86908.93352-25.2225-.1431-7.67264-.98887-15.56465-3.33433-21.51352-8.48465-6.52072-5.64541-9.50111-13.75775-10.79827-22.08308-1.46766-9.41955-1.25195-19.13285-1.52886-28.63751l-.9452-32.44314c-.53384-18.32358-.07373-38.63119-11.99528-53.81409a49.95822,49.95822,0,0,0-39.69658-18.60967,44.882,44.882,0,0,0-10.95493,1.61827,1.50128,1.50128,0,0,0,.79752,2.89283Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#3f3d56\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M385.55645,452.45491a57.57081,57.57081,0,0,0,114.03711-15.90964l-.114-.81682a57.57081,57.57081,0,0,0-113.90549,16.724Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#ffb6b6\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M436.30821,500.05886c-2.97656-5.99564-6.03523-12.43313-5.22664-19.078s7.30115-13.01532,13.70389-11.06278c3.82874,1.16759,6.73216,4.93479,10.73093,5.11467,5.502.2475,8.63493-6.05895,10.32968-11.29926l6.90225-21.34241c13.3133,10.45893-3.54751-.50593,12.94413-4.33463,6.46988-1.502,13.0015-4.41026,16.78137-9.87177s3.72872-13.91344-1.49453-18.01627c-2.56109-2.01172-5.96348-2.76793-8.41174-4.91554a9.40722,9.40722,0,0,1,7.457-16.3953l-17.56635-2.13577,5.2-9.47967c-3.75968,2.98431-9.00488,3.40151-13.73187,2.56672s-9.18269-2.765-13.80855-4.04671c-22.2072-6.153-47.956,4.76087-58.97743,24.99811a22.4777,22.4777,0,0,0-24.484,7.15867c-4.68052,5.98169-5.93217,13.94744-6.08887,21.54108a93.36791,93.36791,0,0,0,9.66245,43.21851c2.06958,4.17151,4.51579,8.26359,8.03345,11.31494s43.27139,19.95473,47.85937,19.1578\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#2f2e41\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M851.59859,460.5505a29.65677,29.65677,0,0,1-.99,7.69v.01c-.01.05-.03.1-.04.15-2.02,7.43-6.84,12.65-12.47,12.65-5.6,0-10.4-5.18-12.45-12.55-.14-.51-.26-1.02-.37-1.55-.14-.59-.25-1.2-.34-1.83-.08-.5-.14-1.01-.19-1.53-.07-.72-.12-1.44-.13-2.19v-.01c-.02-.28-.02-.56-.02-.84v-.25l.01-.01a29.29714,29.29714,0,0,1,.25-3.79c.07-.53.15-1.04.25-1.55.12-.62.25-1.23.41-1.83.13-.53.28-1.04.44-1.55.22-.68.46-1.34.73-1.97.17-.41.35-.81.53-1.2,2.46-5.06,6.42-8.35,10.88-8.35,6.17,0,11.37,6.29,12.98,14.87.02.13.05.26.06.39v.01A29.58013,29.58013,0,0,1,851.59859,460.5505Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#e6e6e6\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M827.34859,448.84048a.79582.79582,0,0,1-.66.76c.17-.41.35-.81.53-1.2A.83923.83923,0,0,1,827.34859,448.84048Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#536dfe\"\n  })), _rect73 || (_rect73 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 599.0043,\n    y: 286.06472,\n    width: 10.35447,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#536dfe\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M827.07857,452.34048a.781.781,0,0,1-.78.78h-.78c.13-.53.28-1.04.44-1.55h.34A.779.779,0,0,1,827.07857,452.34048Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#536dfe\"\n  })), _rect74 || (_rect74 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 598.10822,\n    y: 289.70287,\n    width: 2.97042,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#536dfe\"\n  })), _rect75 || (_rect75 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 603.32252,\n    y: 289.57327,\n    width: 10.35447,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#536dfe\"\n  })), _rect76 || (_rect76 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 597.83833,\n    y: 293.21142,\n    width: 2.97042,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#536dfe\"\n  })), _rect77 || (_rect77 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 602.42644,\n    y: 293.21142,\n    width: 2.97042,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#536dfe\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M826.99862,455.72049a.78106.78106,0,0,1-.78.78h-1.36c.07-.53.15-1.04.25-1.55h1.11A.77256.77256,0,0,1,826.99862,455.72049Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#536dfe\"\n  })), _rect78 || (_rect78 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 607.64074,\n    y: 293.08183,\n    width: 10.35447,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#536dfe\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M827.34859,460.84048a.77253.77253,0,0,1-.78.77h-1.41a.79058.79058,0,0,1-.54-.21v-.01c-.02-.28-.02-.56-.02-.84v-.25l.01-.01a.76989.76989,0,0,1,.55-.23h1.41A.781.781,0,0,1,827.34859,460.84048Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#ccc\"\n  })), _rect79 || (_rect79 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 599.0043,\n    y: 298.06472,\n    width: 10.35447,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#ccc\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M827.07857,464.34048a.781.781,0,0,1-.78.78h-1.36c-.08-.5-.14-1.01-.19-1.53a.33979.33979,0,0,1,.13995-.02h1.41A.779.779,0,0,1,827.07857,464.34048Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#ccc\"\n  })), _rect80 || (_rect80 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 598.10822,\n    y: 301.70287,\n    width: 2.97042,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#ccc\"\n  })), _rect81 || (_rect81 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 603.32252,\n    y: 301.57327,\n    width: 10.35447,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#ccc\"\n  })), _rect82 || (_rect82 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 597.83833,\n    y: 305.21142,\n    width: 2.97042,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#ccc\"\n  })), _rect83 || (_rect83 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 602.42644,\n    y: 305.21142,\n    width: 2.97042,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#ccc\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M826.99862,467.72049a.78106.78106,0,0,1-.78.78h-.57c-.14-.51-.26-1.02-.37-1.55h.94A.77256.77256,0,0,1,826.99862,467.72049Z\",\n    transform: \"translate(-230.59003 -161.86499)\",\n    fill: \"#ccc\"\n  })), _rect84 || (_rect84 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 607.64074,\n    y: 305.08183,\n    width: 10.35447,\n    height: 1.55454,\n    rx: 0.77727,\n    fill: \"#ccc\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawFirmwareReFgdy);\nexport default __webpack_public_path__ + \"static/media/undraw_firmware_re_fgdy.6ac8a71f7822c8514ce46c9177292301.svg\";\nexport { ForwardRef as ReactComponent };","var _circle,_circle2,_circle3,_path,_path2,_path3,_path4,_path5,_path6,_path7,_circle4,_path8,_ellipse,_ellipse2,_path9,_path10,_path11,_path12,_path13,_path14,_path15,_path16,_path17,_path18,_path19,_path20,_path21,_path22,_path23,_circle5,_ellipse3,_ellipse4,_ellipse5,_path24,_path25,_path26,_path27,_path28,_path29;function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from\"react\";function SvgUndrawSpeechToTextRe8MtfAi(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/React.createElement(\"svg\",_extends({width:833.72326,height:554.00006,viewBox:\"0 0 833.72326 554.00006\",ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,_circle||(_circle=/*#__PURE__*/React.createElement(\"circle\",{cx:512.40106,cy:148.87009,r:36,fill:\"#f2f2f2\"})),_circle2||(_circle2=/*#__PURE__*/React.createElement(\"circle\",{cx:298.40109,cy:82.87008,r:30,fill:\"#f2f2f2\"})),_circle3||(_circle3=/*#__PURE__*/React.createElement(\"circle\",{cx:200.40108,cy:366.87009,r:30,fill:\"#f2f2f2\"})),_path||(_path=/*#__PURE__*/React.createElement(\"path\",{d:\"M169.90892,412.87006c8.69,10.29999,18.09,84.55566,28.12,93.53564l470.58002,1c10.03003-8.97998,19.42999-83.2356,28.12-93.53564l-526.82001-1Z\",fill:\"#e6e6e6\"})),_path2||(_path2=/*#__PURE__*/React.createElement(\"path\",{d:\"M316.59892,325.64572v102.55997h71.84998v-102.56c.0025-1.51425-.98328-2.85291-2.42999-3.29999-.33215-.10971-.68024-.16379-1.03003-.16h-64.91998c-1.91272-.00369-3.46628,1.54385-3.46997,3.45657v.00345Zm28.03998,35.24002c.03912-4.23602,3.50476-7.63831,7.74078-7.59924,4.18085,.03864,7.56067,3.4184,7.59924,7.59924v11.90002c-.02014,4.23602-3.47046,7.65369-7.70648,7.63354-4.20758-.02002-7.61353-3.42596-7.63354-7.63354v-11.90002Z\",fill:\"#3f3d56\"})),_path3||(_path3=/*#__PURE__*/React.createElement(\"path\",{d:\"M203.56889,171.12576v187.25998c.00394,4.96893,4.03107,8.99603,9,9H490.06889c4.96893-.00391,8.99609-4.03107,9-9V171.12576c-.01184-4.96402-4.03595-8.98367-9-8.98999H212.56889c-4.96402,.00632-8.98816,4.02597-9,8.98999Z\",fill:\"#3f3d56\"})),_path4||(_path4=/*#__PURE__*/React.createElement(\"path\",{d:\"M210.0789,173.45572v182.61996c.00458,2.6546,2.15543,4.80542,4.81,4.81H487.7589c2.6546-.00458,4.80542-2.1554,4.81-4.81V173.45569c-.00024-2.65802-2.15198-4.81424-4.81-4.82001H214.8889c-2.65799,.0058-4.80975,2.16202-4.81,4.82004Z\",fill:\"#536dfe\"})),_path5||(_path5=/*#__PURE__*/React.createElement(\"path\",{d:\"M265.71892,439.08575c.56271,.70557,1.41754,1.11456,2.32001,1.10999h162.34003c1.64978-.00208,2.98553-1.34119,2.98352-2.99097-.00031-.20465-.02155-.40869-.06354-.60901l-2.52002-11.96997c-.21222-.99176-.91235-1.80859-1.85999-2.16998-.33771-.13251-.69727-.20038-1.06-.20001h-157.31c-.36273-.00037-.72232,.0675-1.06,.20001-.94769,.36139-1.6478,1.17816-1.85999,2.16998l-2.51999,11.96997c-.18161,.87952,.04242,1.79401,.60995,2.48999Z\",fill:\"#3f3d56\"})),_path6||(_path6=/*#__PURE__*/React.createElement(\"path\",{d:\"M223.66222,193.79245h255.32343c.56079-.01218,1.00549-.47665,.99329-1.03741-.01178-.54361-.44965-.98148-.99329-.99329H223.66222c-.56076,.01218-1.00546,.47665-.99329,1.03741,.01181,.54361,.44968,.98148,.99329,.99329Z\",fill:\"#3f3d56\"})),_path7||(_path7=/*#__PURE__*/React.createElement(\"path\",{d:\"M795.94298,392.19647c-.02002-.04999-.03003-.09003-.04993-.12994-.38629-1.04047-.83716-2.05579-1.3501-3.03998-2.90991-5.46997,.16998-13.87-3.10999-23.15002-5.29993-15.03998-11.76001-23.90997-21.22998-31.85999-.28003-.23999-.55994-.47-.84998-.70999l-.01001-.01001c-6.32007-5.19-13.93994-10.04001-23.40002-16.07999-1.97009-1.26001-8.78003,2.38-8.62-3.85999,.17993-6.92999,.37-14.10999-3.03003-18.59l-.21997-.29001-.3501-.09c-11.65735-2.30573-23.54688-3.22214-35.41992-2.73001h-.01001c-5.04126,.18723-10.04724,.92154-14.92993,2.19-.36011,.10001-.71997,.20001-1.07007,.32001-.27002,.07001-.53998,.16-.81006,.25l-.21997,.07999-.16992,.16c-3.28998,3.29001-4.04999,9.19-4.40997,15.34v.00995c-.06995,1.12006-.13,2.24005-.18005,3.35999-.28003,5.98001-14.71002,10.81-20.21002,13.51999-10.33002,5.10001-8.77191,16.98364-8.89191,16.98364,0,0-17.3681,35.65637-17.57806,71.76636-.01001,2.01001-.02338,4.03003-.03998,6.06-.12,16.82001-.43994,33.92999-1.69995,49.52002-.55005,6.70001-1.26001,13.10999-2.21002,19.09998-4.62012,29.16998-25.54999,4.95001-35.56006,24.35999,.32892,1.90863,.88281,3.77161,1.65002,5.54999,1.15002,.67999,2.33002,1.34003,3.5,2,5.19006,2.89001,10.47675,5.58673,15.85999,8.09003,.29999,.13995,.59998,.28003,.8999,.40997,9.87427,4.56866,20.05176,8.45123,30.46008,11.62,2.03003,.62,4.05994,1.21002,6.10999,1.77002,18.13367,5.00586,36.8056,7.80273,55.61011,8.33002,.07635-.00854,.1532-.01184,.22998-.01001,22.23907-.61493,44.3324-3.79938,65.83984-9.48999,.30005-.07996,.6001-.15991,.90015-.23999,1.40991-.38,2.80994-.76001,4.21002-1.15997,12.37799-3.52203,24.50525-7.87183,36.29999-13.02002,.01208,.43921,.05548,.87695,.12988,1.31,.01019,.14124,.03027,.28156,.06006,.41998,.02002-.15997,.03998-.31995,.04999-.47998,.05994-.46997,.10986-.95001,.15991-1.42999,6.12018-59.67999-6.5899-110.34998-16.3399-136.15002Z\",fill:\"#ccc\"})),_circle4||(_circle4=/*#__PURE__*/React.createElement(\"circle\",{cx:707.41901,cy:228.40308,r:58.07075,fill:\"#ffb6b6\"})),_path8||(_path8=/*#__PURE__*/React.createElement(\"path\",{d:\"M711.71782,287.51959c8.85358-1.58182,17.55585-3.91702,26.01196-6.98013,8.30261-3.44214,24.88171-21.38211,28.61169-30.96069h0c2.77112-7.11676,3.40497-17.51059,3.4491-24.97629,.18652-19.99271-8.11261-39.12701-22.83691-52.65247-2.84998-2.83554-6.41339-4.84808-10.31323-5.82477-.34088-.06216-.68823-.10843-1.03601-.13809-5.47467-.35577-10.71814-2.33972-15.05707-5.69714-.84796-.68484-1.74414-1.30774-2.68164-1.86383-4.6723-2.60458-9.89465-4.0665-15.24011-4.26624-8.68256-.60101-20.1983,3.91785-34.22552,13.43723-7.04724,4.78268-15.68597,5.23151-22.4267,5.0885-.76599,.00122-1.47388,.40884-1.85944,1.07074-2.24841,3.11926-5.59412,5.27185-9.36475,6.02518-2.29193,.55182-4.09369,4.22507-6.21216,8.97006-.48059,1.07706-1.04138,2.33405-1.47021,3.11569l-.3269-1.2775-1.02661,1.6962c-5.28265,8.72543-2.4917,20.08121,6.2337,25.36383,2.34503,1.41974,4.97662,2.29965,7.70398,2.5759,2.44586,.16568,4.90228,.08124,7.33099-.25201,1.48071-.15256,3.01239-.31039,4.5036-.34109,9.7937,.0939,18.81793,5.32632,23.76489,13.77936,2.05621,3.45633,6.52496,4.59134,9.98132,2.53513,.54279-.32291,1.04126-.71506,1.48285-1.1666,2.58734-2.96918,6.46411-4.48407,10.37909-4.05576,1.74194,.56778,3.23566,1.71719,4.23083,3.25549,1.17645,1.70062,2.83276,3.01227,4.75775,3.76764,6.44684,1.87924,9.45728,15.18137,9.52618,26.74582,.06641,11.14709-2.42761,19.70621-6.06482,20.81384-2.80017,.85233-3.08734,1.11899-3.1958,1.6647l-.09668,.48843,.40344,.36069c1.68982,.26468,3.41681,.16171,5.06317-.30182Z\",fill:\"#2f2e41\"})),_ellipse||(_ellipse=/*#__PURE__*/React.createElement(\"ellipse\",{cx:506.1909,cy:460.63092,rx:20.13235,ry:6.4252,fill:\"#3f3d56\"})),_ellipse2||(_ellipse2=/*#__PURE__*/React.createElement(\"ellipse\",{cx:506.1909,cy:456.34744,rx:20.13235,ry:6.4252,fill:\"#3f3d56\"})),_path9||(_path9=/*#__PURE__*/React.createElement(\"path\",{d:\"M502.65123,460.6532l3-.04492-.82764-56.01855c-.24487-18.60101,9.41705-35.92981,25.36914-45.5l57.25928-34.22607-1.53906-2.5752-57.25928,34.22705c-16.87073,10.12079-27.08911,28.4472-26.83008,48.11914l.82764,56.01855Z\",fill:\"#3f3d56\"})),_path10||(_path10=/*#__PURE__*/React.createElement(\"path\",{d:\"M585.9657,350.11728h.00006c-4.02167,0-7.28192-3.26022-7.28192-7.28189v-45.40485c0-4.02167,3.26025-7.28192,7.28192-7.28192h-.00006c4.02167,0,7.28192,3.26025,7.28192,7.28192v45.40485c0,4.02167-3.26025,7.28189-7.28192,7.28189Z\",fill:\"#536dfe\"})),_path11||(_path11=/*#__PURE__*/React.createElement(\"path\",{d:\"M490.73692,384.55267c2.52313,9.22919,12.05023,14.66553,21.27942,12.1424,.98407-.26898,1.94238-.62439,2.86389-1.06207l43.18292,43.87921,6.6817-31.28644-42.03162-36.87189c-4.6925-8.39752-15.30414-11.40106-23.70166-6.70856-7.02686,3.92657-10.44781,12.15674-8.27472,19.90735h.00006Z\",fill:\"#ffb6b6\"})),_path12||(_path12=/*#__PURE__*/React.createElement(\"path\",{d:\"M716.30119,338.73517l-.27423-.15295-31.48651-10.82791c-8.08643-2.78122-16.97784-1.95547-24.41382,2.26727-1.70667,.96561-3.31177,2.10056-4.79108,3.38773l-.00983,.0014c-4.93365,4.26242-8.33344,10.02509-9.67834,16.40479l-16.53815,78.51758-33.25189-17.92004-13.54999-3.23584-12.33405-12.37793-30.80078-12.54144-1.70984,2.04089-15.49799,18.5246-1.21729,1.45575,34.125,49.36993,15.29633,1.66455,4.28503,7.62299,.30255,.13879,12.53986,5.65198,53.48181,24.09546,25.89899-19.8208,4.05261-3.11108c33.50592-31.0426,49.16852-56.01447,55.70776-75.03363,3.461-10.04681,4.37231-18.41833,4.02942-25.16718-1.06476-20.85754-13.63416-30.55566-14.16559-30.9549Z\",fill:\"#ccc\"})),_path13||(_path13=/*#__PURE__*/React.createElement(\"path\",{d:\"M745.90117,357.87006h-15.00012c-43.35431,0-78.49994,35.14557-78.49994,78.49988v.00006c-13.99274,17.30432-13.13586,39.03302,0,64.4201l-42.99548-17.9248c-6.12262-2.53699-13.14258,.36969-15.67963,6.49231-2.52924,6.10394,.35156,13.10406,6.44452,15.65967l52.23059,21.77484v4.05426c0,12.71558,10.30804,23.02362,23.02362,23.02362h125.95276c12.71558,0,23.02362-10.30804,23.02362-23.02362,9.33765-34.25751,15.18243-67.48053,0-94.4765-.00006-43.35431-35.14563-78.49982-78.49994-78.49982Z\",fill:\"#3f3d56\"})),_path14||(_path14=/*#__PURE__*/React.createElement(\"path\",{d:\"M78.67146,407.59058c-.97202,.00409-1.94168,.09558-2.89731,.27325l-15.90154-100.66589,15.93044-96.91049c2.18689-13.30167-6.82341-25.85764-20.12508-28.04453-12.00392-1.97354-23.6286,5.19351-27.25693,16.8049v.00009c-5.97192,19.10971-8.92714,39.03384-8.75909,59.05426l.5556,66.09076,42.39226,101.50183c1.06218,8.87317,9.11638,15.2052,17.98953,14.14307,8.87317-1.06219,15.20523-9.11639,14.14307-17.98956-.97397-8.13629-7.87656-14.26013-16.07095-14.25775v.00006Z\",fill:\"#ffb8b8\"})),_path15||(_path15=/*#__PURE__*/React.createElement(\"path\",{d:\"M49.54887,175.80957c-21.18774,.03546-38.35484,17.20288-38.38995,38.39062l7.8,78.7998,.7,7.05957,.36,.02051,27.39,1.36035h.00999l13.28999,.65918,2.28,.11035,2.61002-9.20996,22.34-78.7998c-.02274-21.1929-17.19714-38.36755-38.39005-38.39062Z\",fill:\"#e6e6e6\"})),_path16||(_path16=/*#__PURE__*/React.createElement(\"path\",{d:\"M50.72893,554l-12.60001-38.66016s-23.10001-23.49023,6.53-85.84961c.64999-1.37988,1.32996-2.77051,2.03999-4.19043,1.23999-2.49023,2.56668-5.04364,3.98-7.66016,2.14-3.7998,4.31-7.72949,6.75999-11.78998l2.24001,.40039,2.12,.37012,7.25,1.28027h.00999l104.99001,18.5s-1.92999,8.61914-2.97,17.86914c-.82999,7.59082-1.10001,15.27051,.85999,18.52051,4.23999,7.25977-1.48999,26.87988-1.48999,26.87988,0,0,.32001,1.90039,.85999,5.25977v.01074c.53,3.26953,1.26999,7.90918,2.10999,13.5293,.04001,.37988,.09,.76013,.14999,1.14062,1.32999,9.09961,2.92001,20.58984,4.34,32.93945,.44,3.75,.85999,7.58008,1.26001,11.4502l-128.43994-.00006Z\",fill:\"#2f2e41\"})),/*#__PURE__*/React.createElement(\"g\",{transform:\"matrix(0.037123, 0, 0, 0.032214, 258.060303, 211.573746)\",style:{}},/*#__PURE__*/React.createElement(\"g\",{transform:\"translate(4970.7 29.138)\"},/*#__PURE__*/React.createElement(\"path\",{d:\"m-4917.2 3969.4c-10.959-0.511-8.1245-0.6807 14.344-0.8584 24.539-0.1938 28.188-0.4448 29.502-2.0281 1.7085-2.0586 1.6162-24.953 2.1167-124.39-3.3276-3.6807-1.9814-2.1917-5.3486-5.9163-11.359-0.0364-82.2-0.2646-93.607-0.3013-0.5459-336.8-0.832-379.45 0.9595-377.96 1.8789 1.5596 76.33 1.7568 224.82 2.6514 12.917-12.789 8.4502-8.366 21.88-21.662-1.4248-145.36-1.3862-169.44-2.6167-576.21l45.652-46.078c3.4067 0 546.04-0.199 548.35 0.687 1.2964 0.4976 1.7407 0.011 1.7285-1.9058-0.0361-5.5081-4.8657-8.4136-9.7705-5.8774-5.3154 2.7485-518.4 1.6633-542.78 0.5586-13.5 13.951-41.864 43.262-49.814 51.478 1.3901 196.91 1.4062 199.1 2.834 576.26-6.5166 5.8997-12.116 10.969-18.633 16.868-136.94-0.8198-86.047-0.5142-222.61-1.3374-0.4409-41.073-0.7925-54.328 0.8008-54.301 1.7236 0.0295 3.9434 5.5303 4.6626 7.0789 16.552 0.4868 32.866 1.0925 68.102 1.0925 29.677 0 31.019-0.0896 32.589-2.1853 1.4004-1.8687 1.5806-7.6968 1.2441-40.218-0.3154-30.453-0.6885-38.215-1.8711-38.945-4.3042-2.6602-87.905-2.6472-99.425 0.0151-3.7246 0.8611-5.0278 0.7932-5.7197-0.2966-1.0225-1.6116-1.4658-58.172 0.2554-55.216 0.6152 1.0562 0.8359 2.3782 0.4902 2.937-1.187 1.9211 102.2 1.6958 105.95 1.698 0.2871-51.983 0.6592-77.376-0.8784-78.353-2.0664-1.3135-102.16-1.0581-104.63 0.2671-2.5083 1.3425-2.1133 0.6472-2.1133-138.79 87.575 1.1875 105.51 1.6475 106.56-0.0537 1.2139-1.9634 1.061-77.744 1.0669-80.91-4.4287-1.1118 2.9575-1.4421-107.63 0.2549v-53.153c1.3413 0.0391 103.99 3.0024 106.76 1.2937 0.9277-0.5735 1.145-68.934-0.7964-78.277-26.817 0.1978-78.641 0.7437-78.641-0.3196 0-0.4941-0.9517-0.3896-2.1133 0.2324-2.6704 1.429-21.011 1.1311-25.203 1.1311v-116.44c109.92 0.9331 103.33 0.9495 108.2-1.6582-0.0688-10.092-0.502-73.339-0.5718-83.497l-107.63-0.5669v-62.24l107.63-0.5669v-79.763l-107.63-0.5669v-44.763c104.14 1.4087 106.05 1.7764 107.78-0.5901 1.7061-2.3325 1.4829-20.649 1.4829-86.837h-109.27v-39.635c59.043 2.0581 107.13 1.7087 107.84 1.0012 0.4097-0.4102 0.6611-16.915 0.8838-83.196-17.081-0.0889-91.656-0.4778-108.72-0.5667v-92.045c26.585 2.3738 103.22 2.5767 105.29 2.0571l2.8833-0.7239v-81.866c-11.317-2.8406-40.82 1.3469-108.17-1.4553v-46.982c6.4517 0.3315 103.15 4.2164 106.49 1.4446 1.436-1.1915 1.6787-5.7839 1.6787-31.764 0-16.704-0.2983-31.149-0.6631-32.099-0.584-1.5215-4.4858-1.7284-32.604-1.7284-43.261 0-74.905-1.1117-74.906-2.6316 0-1.6031 116.85-0.946 118.81 0.6682 1.5918 1.3112 1.5459 23.426 1.9282 66.976 60.531 0.5482 63.848 0.8928 64.767-1.3492 1.0566-2.5743 1.0215-69.112-0.0381-71.701-1.6157-3.9502-109.9 0.0726-185.47-1.9139v-115.43c86.072 0.9688 101.16 1.3479 102.27-0.3851 1.4946-2.3197 1.9272-75.77 0.4629-78.507-1.394-2.6052-0.5962-2.235-102.74-2.235v-46.201c21.673 1.1537 18.561 1.2344 103.73 2.8202l1.1274-2.9655c1.7339-4.5607 1.5161-77.286-0.2388-79.599-1.5698-2.0701-9.687-1.8525-104.62-2.4409-5e-4 -15.286-5e-4 -28.451-1e-3 -43.737 25.525 1.6002 31.684 1.5482 104.31 2.2158l0.709-3.278c0.5601-2.5944 1.894-77.845-0.3994-78.705-4.4165-1.6559-95.397-1.5775-104.62-1.6044v-103.58c2.9307 0.0704 103.74 2.6737 105.89 0.5275 1.5669-1.5668 1.6738-78.994 0.1108-79.96-1.4082-0.87-99.703-0.6613-106-0.6613v-48.126c14.73 1.0969 10.301 1.2218 105.44 1.7891 0.0195-2.6926 0.8672-78.24-0.3462-79.454-1.2251-1.2258-102.38-1.1083-105.09-1.1132v-46.896c11.688 1.0361 6.2861 1.1625 105.44 1.8129v-76.486c-35.054-1.4059-35.503-1.7191-105.44-1.0927 0-17.926 1e-3 -618.49 1e-3 -636.45 17.124-0.0681 124.26-0.4938 141.5-0.5623v-22.945c-17.124-0.0681-124.26-0.4938-141.5-0.5623v-68.821h171.05l61.904 62.044c-0.8853 671.97-0.7109 627.65-0.0894 650.5 2.0562-0.2374 3.8228-0.4414 5.8794-0.6788 1.4629-423.57 1.8345-486.74 0.8003-653.18l-66.433-66.33h-173.11v-53.54h94.644c21.255-24.755 60.455-67.458 60.494-69.11 0.0107-0.4507-1.0464-0.8195-2.3481-0.8195-2.1318 0-1.9707-0.3965 1.6211-3.9883 6.0186-6.0184 8.3945-11.804 8.3945-20.438 0-35.968-50.526-36.499-53.254-2.5332-1.3652 17.006 12.475 30.224 30.297 28.934l6.3291-0.4578c-19.973 21.778-23.403 25.702-55.045 61.311-11.016 0.0689-80.043 0.5009-91.132 0.5703v-173.76c45.522-0.3249 50.355-0.5026 101.07-1.639 0.0684-15.269 0.4956-110.83 0.5645-126.2h9.8159c0 3.6776-0.2168 122.72 0.6631 125.02 0.7612 1.9826 9.6055 1.7283 100.95 1.7283 0-80.403 0.1499-82.377 1.4414-126.75h8.522c-0.9146 73.664-1.7983 123.1-0.2944 124.91 1.4111 1.6998 18.753 1.3932 100.14 0.9351 0.1978-21.408 1.0938-125.23 1.3975-125.57 0.3086-0.3491 7.0898-0.2729 8.4365-0.2729 0.0024 0.755 0.3994 124.91 0.4834 125.72 0.0308 0.2955 3.0962 0.5596 35.028-3e-3 0.5884 293.63 0.5464 306.12 0.5464 600.35h6.5557c0-641.1 1.6392-635.33 1.6392-726.07h32.466c0.062 11.873 1.0601 201.74 1.1226 213.61l-4.1611 4.5457c-6.9287 7.5693-6.874 17.85 0.1274 23.741 9.1841 7.7277 21.44 4.6727 25.668-6.398 3.4897-9.1378-0.3457-17.816-9.2769-20.988l-5.519-1.96c0-112.04-0.1543-115.61-1.4492-212.55h9.833c1.3892 116.54 1.4502 122.18 1.4502 197.28l15.297 15.18c-0.311 34.857-0.1963 22.016-0.5083 56.876-2.1436-198.36-2.0283 160.56-1.8496 360.03-8.0264 0.1523-11.095 0.0845-29.182-0.1191-0.7544 7.8541-0.2144 7.166-6.6069 7.9034-0.7129 41.684-0.5342 42.651-0.0366 65.975 2.3867 0.7036 12.636 3.3436 13.435 5.4268 0.8975 2.3405 0.8999 464.7 1.8291 735.36 116.52 115.93 109.43 108.44 116.34 112.9 471.13 1.0487 534.13 1.2216 959.06 1.8451l0.9617-2.5295c1.2825-3.3733 1.2014-19.984-0.1084-22.055-2.6709-4.2257-941.84 0.4993-946.6-2.1283-3.562-1.9634-85.32-86.447-88.234-91.176-1.0713-1.7383-2.2114-5.426-2.5337-8.1948-0.5781-4.9686-5.2607-568.3-2.5171-568.3 0.4858 0 0.5576-0.5281 0.1587-1.1735-1.2593-2.0382-1.2935-8.0795-0.0498-8.9335 0.8208-0.5641 0.7041-1.134-0.376-1.8288-3.0391-1.9556 2.6382-3.7281-0.2974-4.7162-1.1221-0.3776-1.0903-0.8643 0.1572-2.3749 0.9175-1.1112 1.1445-2.2056 0.5464-2.6362-0.5625-0.405-1.0425-8.8463-1.0669-18.758-0.0396-15.847-0.2617-18.064-1.8452-18.369-3.1479-0.6063-1.0337 628.69 0.1318 632.39 1.1802 3.7454 1.1704 3.7623-0.9121 1.6389-1.9341-1.9716-2.1626-4.5371-2.813-31.647-1.5703-65.461-0.8306-653.04-0.7397-653.15 0.7075-0.8523 0.9561-1.8798 0.5522-2.2834-0.4043-0.4036-0.708-15.252-0.6768-32.997 0.0752-41.978-2.1309-49.977-2.7798 20.895-0.7837 85.592-1.4434 692.31-0.7559 695.05 1.0483 4.1764 17.924 22.006 9.4141 14.007-5.2783-4.9604-8.563-9.9988-11.348-14.004-1.4136-634.32 2.2827-756.27-0.2031-757.32-0.605-0.2548-0.5239-0.4984 0.1821-0.5463 1.6816-0.1138 2.0791-35.051 0.3989-35.051-0.6201 0-1.127-0.7375-1.127-1.639s-0.9502-1.639-2.1118-1.639c-1.1611 0-2.4233-0.9835-2.8052-2.1853-0.6284-1.98-1.6533-2.1853-10.909-2.1853-7.1504 0-10.381 0.4099-10.767 1.3658-0.3027 0.7512-0.5898 0.339-0.6372-0.916-0.0825-2.162 0.5142-2.2924 11.336-2.4808 10.453-0.182 11.523-0.0115 12.604 2.0087 2.5776 4.8159 3.2539 1.8895 3.0015-12.986-0.311-18.311 1.3813-27.238 1.3813 19.564 3.499 0 6.2544 0.4862 7.1206-2.2429 0.5684-1.7913 1.0229-1.9843 2.2588-0.9589 1.2695 1.0538 1.5747 0.7214 1.7017-1.8547 0.1289-2.6019 0.2886-2.3912 0.9375 1.2321 2.4604 13.739-0.2734-414.66-0.3604-427.77-5.4766 0-5.1924 0.0592-21.493-14.704v-195.08h68.551c1.1406 6.9055 1.3521-6.6185 1.3784 189.62l-20.76 20.674c0 417.86-0.3398 430.32 1.9585 432.28 1.7563 1.5039 1.9487 3.7274 1.8667 21.549-0.0522 11.342 0.3369 19.872 0.9072 19.872 0.5732 0 0.5493 0.5816-0.0557 1.3658-1.2378 1.6027-1.2153 6.2403 0.0396 8.1948 0.4824 0.7512 0.4102 1.3658-0.1606 1.3658-1.4854 0-1.2344 23.288 0.2612 24.295 0.8179 0.5505 0.7637 0.808-0.1729 0.8195-1.8018 0.0209-1.8081 3.2892 0 3.3114 0.9292 0.0114 0.9873 0.2737 0.1816 0.8195-3.4834 2.3622-1.0078 369.16 0.0918 686.99 0.7017 1.016 5.7983 8.7936 6.8423 8.5641 1.2031-0.2639 49.676 51.79 69.129 70.868 387.21-5.4619 389 5.4296 397.71-6.7909 4.5237-6.353 1.6147-17.768-5.51-21.622-3.2551-1.7609-83.861-1.1654-381.85 0.6499-29.201-30.932-33.477-35.434-54.231-57.639-0.5522-332.23-1.4458-692.57 0.0088-696.31 0.9102-2.3417 2.1021-3.1368 5.5186-3.6832 4.2007-0.6718 4.3843-0.8774 5.1113-5.7203 1.2212-8.1427-0.5688-61.721-2.0942-62.691-0.7134-0.4534-3.3862-0.832-5.9404-0.8412-5.3125-0.0193-4.6436-0.0718-4.6436-6.5727h-25.864c-1.1782-139.77-1.4507-145.2-1.4521-416.35 6.8789-6.5865 12.789-12.246 19.668-18.833v-194.18h9.8335v211.97h-3.9678c-5.8398 0-13.01 7.3614-14.072 14.449-1.502 10.015 5.7261 18.331 15.933 18.331 11.949 0 18.968-13.5 13.05-25.1-4.9839-9.7672-4.3862 21.903-4.3862-219.65h59.922c1.0439 11.599 1.1841-44.986 1.8125 776.58-42.768 43.951-36.898 39.067-56.271 48.858v9.8695c4.2759-6.4936 6.4175-10.609 10.648-11.692 5.3691-1.3745 5.3218-5.4656 10.002-7.9052 3.8491-2.0068 35.916-34.46 37.956-38.412 3.5503-6.8802 4.6885-5.817 2.4717 2.3099-1.6113 5.9061-10.41 13.658-25.205 29.502-6.5938 7.0611-37.424 37.986-36.689 40.109 0.6592 1.9063 20.449-17.467 26.61-26.05 2.6455-3.6857 7.1069-8.5832 9.9136-10.883 7.6162-6.241 24.25-24.081 30.675-28.137 2.4995-1.5781 5.1812-3.9828 5.9585-5.3438 1.6123-2.8242 1.3496-152.77 1.0864-778.8h52.958c1.5786 358.76 1.6353 379.77 2.9082 725.26l-2.3369 0.7418c-5.5903 1.7743-9.7085 11.432-7.8086 18.313 0.9517 3.4473 6.3926 9.6523 9.5181 10.856 1.1772 0.4531 1.9131 7.1421 2.4902 11.591-14.241 1.3684-14.242-0.9683-14.242 22.725 0 10.714-0.73 40.356-2.2778 30.55l-0.6904-4.3706c-0.3354 10.794-0.6182 9.5773 5.8706 18.28 9.876 0.3324 18.362 0.618 28.238 0.9503l8.1948-6.8238c-0.0024-4.412 0.2817-55.614-1.0669-57.751-1.27-2.0139-9.228-2.167-17.99-2.7316 0.6138-9.8555 0.0459-10.255 5.4014-15.255 3.311-3.0916 4.9565-5.653 5.4971-8.5569 1.0752-5.7786-1.9438-13.324-6.5356-16.334l-3.5381-2.3189c-1.8403-79.818-1.4351-268.11-1.4351-725.12h13.112c0 3.6591-0.2134 121.64 0.6631 123.93 0.7769 2.0247 6.8735 1.7283 48.41 1.7283 0.2246 5.5411 0.4175 10.302 0.6421 15.843 24.106 1.5407 21.307 3.6881 21.307-17.191 8.9805 0.2803 16.697 0.5211 25.678 0.8013l-0.7104-125.11 8.3589-6e-4v125.11l33.636 0.6049c-1.1714 12.546-1.646 13.363 1.3765 19.048 3.0645 5.7632 2.6836 5.5567 2.6836 43.449-41.159 41.58-59.901 60.36-70.968 72.387-0.0454-91.923 0.1685-110.45-1.5879-111.91-2-1.6596-14.635-0.814-19.774-0.6342 0.2158 229.06 0.0425 270.53 1.7666 271.63 0.8311 0.5265 4.8022 0.9648 8.8252 0.974 6.3291 0.0146 7.542-0.31 9.0142-2.4117 1.9429-2.7734 1.7007-16.796 1.7007-145.17l80.856-82.053c0-37.19-0.3096-39.252 2.3218-45.2 2.7646-6.2504 2.3218-11.726 2.3218-19.067h45.618v-126.75h14.751c-9e-3 11.945-0.311 412.51-0.3201 424.49-8.6106 0.2173-16.009 0.4039-24.62 0.6212 0.3638 28.058 1.3418 113.82 2.0981 114.58 0.8938 0.8966 60.804 1.7001 58.626 2.0458-1.5645 0.2484-1.3657 39.087-1.3657 167.66 21.324 21.587 13.034 13.195 34.273 34.696 83.825 0 84.464 0.4072 85.143-2.1853 0.6765-2.5875 0.5991-2.1853-81.814-2.1853-10.71-10.796-21.43-21.601-32.139-32.397 0.0339-26.027 0.0728-55.758 0.1067-81.785 20.029 20.284 62.109 62.9 73.905 74.846h41.961c-0.8589-6.0471 3.3899-4.8555-40.31-5.5115-75.576-76.372-75.664-75.723-75.664-80.82 0-2.3973 0.2017-4.3588 0.4475-4.3588 0.583 0 69.619 69.555 76.584 76.559 1.8633 9e-4 35.243 0.2208 36.636-0.6399 0.5835-0.3602 1.0608-1.3637 1.0608-2.2297 0-1.7944-5.8875-1.5745-34.709-1.5745-12.407-12.559-66.549-67.367-78.926-79.896-0.0034-2.8672 0.1604-50.334-1.5994-59.143-0.4434-2.2193 1.738-1.9122 31.966-1.9122 3.1909 3.3006 80.852 84.134 82.85 84.134 7.9224 0-11.67-17.43-74.061-83.041 10.051 0 8.0796-1.6183 22.09 12.839 64.126 66.173 59.194 61.462 67.038 61.462-20.41-21.944-36.712-37.095-74.383-77.201-1.5879-65.298-1.4526-67.922-1.4526-112.92-35.19 0-44.12 0.2541-49.147-1.7576-2.4163-0.9667-4.3928-2.1296-4.3928-2.5843 0-1.0998 4.324-6.3238 4.4419-6.4738-0.0427-11.715-1.479-403.6-1.522-415.32h154.42c0 82.18-0.1345 89.236 1.4268 162.26-20.104 20.284-27.085 27.528-85.822 87.998l-4.6897-4.3227c-7.8462-7.2325-16.75-7.0182-23.406 0.5631-2.8054 3.1954-3.3318 4.6966-3.3284 9.494 0.011 10.687 6.9932 17.622 17.008 16.885 6.6577-0.4898 10.341-2.964 13.88-9.3234 4.8979-8.803 89.711-91.973 90.895-97.927 0.2544-1.2798 2.5654-38.333 0.3359-39.258-1.8372-0.7626 89.572-0.5759 92.583-0.5759 0.3457-77.115 0.2173-48.604 0.5659-125.79h10.909c0 108.91-0.241 121.55 1.7009 124.32 6.3547 9.0726 5.9478-15.215 5.9478 48.587-106.44 110.83-102.96 109.04-107.27 109.01-3.2817-0.0181-8.6665 4.7568-11.463 10.164-1.4072 2.7213-1.6169 5.3289-1.0596 13.179 0.3818 5.3826 0.9824 10.073 1.334 10.423 0.3516 0.3499 1.5955-0.5432 2.7642-1.9849 2.063-2.5449 2.1707-2.5608 3.6953-0.5463 0.8638 1.1412 1.5862 2.4436 1.6052 2.8943 0.0186 0.4507 2.4207 0.8195 5.3362 0.8195 14.177 0 22.331-15.194 14.366-26.77-1.8027-2.6204-3.2781-5.6028-3.2781-6.6275 0-4.3176 31.73-35.01 100.6-107.56-0.199-15.629-0.4272-33.532-0.6262-49.161l6.5559-4e-4c-0.3892 26.807-0.2456 16.913-0.6343 43.708h7.8242c-0.3889-26.674-0.2454-16.827-0.634-43.48 22.634-1.2124 22.868-1.292 61.735-1.146 0 25.032 0.1545 25.92 1.4026 47.572-60.775 63.76-66.94 70.326-109.44 113.78l-4.6926-1.3856c-7.9768-2.3553-15.822 0.9582-19.544 8.2553-7.5559 14.811 6.1328 29.675 21.194 23.013 7.3518-3.252 9.6265-7.4808 9.27-17.232-0.5249-14.357-7.6904 1.703 110.82-124.34-1.1741-64.179 0.4985-13.15-0.459-175.48h61.14c0.0515 11.873 0.8757 201.74 0.9272 213.61-24.009 26.376-65.294 67.946-69.148 70.598-10.822 7.4455-12.034 20.688-2.6187 28.611 2.7849 2.3434 4.6331 2.9538 8.9441 2.9538 16.602 0 23.393-16.394 12.205-29.466l-3.8198-4.4624c10.662-11.885 7.4128-8.7187 75.427-78.069-0.0701-11.328-1.188-192.45-1.2578-203.78h74.649v219.84c-105.68 107.03-96.92 100.8-103.91 100.96-6.4585 0.1439-13.484 4.0396-15.698 8.7049-0.9233 1.9455-1.6785 6.0273-1.6785 9.0706 0 4.5881 0.5591 6.17 3.2729 9.2609 10.773 12.27 31.018 4.6702 29.137-12.22-0.3118-2.7996-0.8896-6.5917-1.2839-8.427-1.4143-6.5818 4.4724-9.1074 98.698-105.93-0.0684-12.284-1.1611-208.98-1.2292-221.26h80.101v264.13c-154.51 154.72-163.72 164.51-167.04 163.68-1.5784-0.3917-5.5737-0.9562-8.8789-1.2544-7.8035-0.704-12.352 1.9521-15.49 9.0469-3.6655 8.2867-1.3699 15.309 6.8491 20.95 3.0044 2.0621 4.7422 2.461 8.9954 2.0647 9.1814-0.8554 14.723-6.7498 15.925-16.938 0.6379-5.413 1.5063-7.4648 4.8013-11.35 8.5122-10.035 111.56-113.2 173.41-172.73 0.0352-66.636 0.032-75.395-0.0349-257.6h31.362c1.4431 164.68 1.4507 172.18 1.4521 272.24-37.038 37.622-29.076 29.708-222.35 223.65-72.748 1.3873-80.617 1.2674-168.14 1.2674-46.006 45.502-109.34 108.44-113.98 110.78-4.0864 2.0613-8.4736 1.764-11.254 1.764 0 31.84-0.2366 40.035 1.6003 41.872 3.0676 3.0675 44.254 2.6596 48.661 2.5623v-44.325c-4.2544-0.2292-7.9104-0.4262-12.165-0.6554 11.503-11.48 82.935-82.767 94.441-94.25 84.581-0.8515 161.39-1.5784 161.88-2.3627 2.5371-4.1051-1.5208-3.4609-164.94-1.9669-4.2268 4.1979-95.038 94.933-99.772 97.38-3.426 1.7716-7.854 1.5397-7.854-0.4114 0-0.9247 50.59-50.861 105.01-104.58 133.9-1.4049 135.69-1.4159 169.8-1.4662 53.26-48.473 212.6-207.4 215.94-208.52 3.3926-1.141 3.1113-9.8675 3.1113 256.09 7.9749 7.9348 57.524 57.236 65.505 65.177l-4.5005 5.6544c-29.179 36.66-4.5427 88.123 38.998 88.123 13.948 0 26.912-5.0112 37.135-14.355 3.2971-3.0134 6.3962-5.3129 6.887-5.1099 1.1794 0.4882 45.45 45.96 47.214 47.765v30.512c53.592 54.756 62.73 64.115 100.52 102.53v52.488c-4.7153 2.1484-4.7109 1.7979-14.995 11.277h-24.003c-2.2646-44.411-0.2688-40.122-4.8701-45.363-5.2542-5.9887-8.2627-7.0844-19.447-7.0844-5.4385 0-9.8882 0.3997-9.8882 0.8882s1.355 2.1866 3.0112 3.7735c2.6587 2.5469 4.0315 2.9233 11.707 3.2092 9.9587 0.371 8.5642 0.1289 13.691 7.7493 0 15.63-0.3203 89.382 1.062 93.018 0.5842 1.5363 0.7961 3.4866 0.4709 4.334-0.8118 2.1151-4.7183 2.9752-7.2815 1.6033-1.6887-0.9036-1.9377-1.7225-1.2297-4.0413 0.4883-1.5994 0.9768-22.945 1.0854-47.434 0.2341-52.721 0.9912-49.463-11.666-50.179l-7.7617-0.4385c-140.47-142.1-57.025-54.261-215.11-213.36l-40.579-0.7193c-8.7515-9.8069-6.7356-7.7845-53.89-57.39-371.8 0.7545-345.82-0.6512-345.82 5.6616l343.17-0.5475c33.971 35.725 47.069 49.837 55.816 57.193 13.126-0.0208 24.403-0.0386 37.529-0.0594 170.81 172.04 115.57 112.93 177.15 175.12 41.399 41.812 39.286 40.142 50.824 40.176 2.5562 0.0077 4.21 0.6101 4.6218 1.6833 0.8196 2.1359-0.5249 27.306-0.7473 32.201h-104.65c-79.466-83.356-113.54-118.68-113.54-120.24 0-0.6896 0.7952-3.989 1.7671-7.3318 5.5173-18.979-4.8359-45.992-21.14-55.153-13.613-7.6499-31.884-8.4395-45.3-1.9576-6.9688 3.3669-2.7166-0.3248 5.0679-4.3999 8.1274-4.2548 9.8293-5.7761 11.953-7.3782-0.7339-7.4882-3.4553-38.118-5.1445-41.343-1.1267-2.1501-32.525-36.367-57.016-61.141l-340.49 0.8286 0.675 4.7393 336.54-0.8966c6.8164 7.0429 48.672 50.092 52.789 55.272 3.7681 4.7412 4.1436 6.4285 5.6494 25.378 1.3782 17.339 2.5999 14.23-14.732 24.142-53.435-55.609-50.934-53.046-59.003-61.66-316.02 1.22-321.79 0.8805-321.79 3.2693 0 2.3976 5.1704 2.027 319.95 2.027 1.8176 2.1601 5.8257 6.7517 5.3567 7.221-0.2148 0.2148-65.262 0.4933-144.55 0.6187-186.7 0.2953-180.76 0.2333-180.76 3.1837 0 2.5472 0.6733 2.1348 331.28 1.9879 51.942 53.949 49.738 51.063 46.722 52.02-4.1519 1.3178-15.796 13.967-19.13 20.781-2.6553 5.4272-3.2192 8.1055-3.5759 16.983-0.6724 16.743 1.0349 21.05 13.308 33.569 15.124 15.428 13.649 14.846 39.604 15.625 20.842 0.6253 22.13 0.7892 25.449 3.2435 4.2578 3.1481 89.531 92.512 116.5 122.22l118.55 0.0795c0 16.938 0.2678 18.696-2.3115 21.441-2.9209 3.109-3.1846 11.883-0.4812 16.009 2.4048 3.6704 9.8162 6.6166 14.455 5.7463 4.7495-0.891 9.7603-5.2562 11.264-9.8124 0.9678-2.9324 0.8804-4.5065-0.4241-7.6282-4.3647-10.444-5.0225 4.7079-5.0225-25.209l19.126 1.0927c12.848 13.775 13.26 13.44 21.307 17.038v32.677h-238.77c-157.15-157.85-176.41-177.99-179.12-179.55-3.4775-1.9987-340.91-1.147-345.01 0.8708-2.9456 1.4481-2.9521 1.4424-1.2822-1.1059 2.7263-4.1614 7.5823-1.9464 7.4299-5.1489-0.1143-2.4-0.4114-38.275-0.4578-43.473l-50.808 0.5866c0.7961 46.588-1.2461 45.345 12.686 45.345 4.2898 0 7.5276 0.47 7.5276 1.0927 0 1.4655-151.17 1.0927-214.04 1.0927-5.7751-5.8127-10.738-10.807-16.512-16.62v-64.236c-6.4141 0-9.834-0.307-9.834 1.6733 0 0.9203-0.7822 1.9734-1.7388 2.3404-1.9653 0.7542-1.6265 5.4318-0.2896 62.092 5.0703 5.0218 26.437 26.573 29.472 27.696 2.1099 0.7805 2.1755 0.9802 0.5286 1.6121-2.2305 0.856-11.862-9.0553-31.462-28.253-0.1904-10.264-0.7998-60.735-2.2344-62.517-1.6089-1.9994-4.519-1.6717-7.7544 0.8734-3.3027 2.5979-2.8477 2.2834-3.5283 29.994-0.3877-25.2-0.6938-30.691 1.1641-32.233 0.9014-0.7481 1.6387-2.1019 1.6387-3.0084 0-1.2874-0.876-1.5059-4.0029-0.9986-2.2017 0.3574-4.3643 1.0363-4.8052 1.5089-1.0615 1.1365-1.646 64.751-1.6797 67.285 12.894 13.545 27.642 29.036 40.536 42.581l580.86-1.4533c21.674 23.643 62.099 64.055 144.5 148.63-113.08 159.63-159.66 221.6-163.69 229.39-2.98 5.7629-2.2493 55.05-1.4492 70.291 1.9624-0.0311 55.095-0.6013 56.247-1.7493 1.1511-1.1476 1.9146-44.044 1.9663-46.195 80.74-111.93 110.46-157.41 127.96-176.43 9.5959-10.438 3.5332-9.1107 11.708-21.429l4.5161-6.8054c56.553-0.8524 1150.8 4.1071 1151.3-1.5388 0.3079-3.3776-0.3083-18.971-0.8184-20.711-0.4551-1.5521-1.5813-1.9496-5.1292-1.8109-8.626 0.3375-9.4685 0.1024-10.636-2.9694-1.5159-3.9879-1.061-165.17-1.0388-226.9 19.795-20.465 15.517-16.191 137.9-139.57-1.4548-184.95-1.6611-217.36-3.6624-506.34-9.0847-8.9804-16.891-16.697-25.975-25.677l-11.537 0.0507c10.839 10.181 12.352 11.507 26.809 24.534 1.571 264.03 1.8918 322.69 3.1995 504.2-96.665 97.854-101.53 102.78-136.53 138.65-0.0312 12.918-0.5347 219.44-0.5662 232.36l-0.5361-233.41c131.99-134.21 123.64-125.82 135.83-138.62-1.6953-303.91-2.2009-444.94-3.9041-496.22-7.5332-7.6127-54.441-55.014-61.997-62.65v-103.29h30.416c1.5283 47.936 0.9329 122.4 1.9282 123.4 0.7229 0.7245 79.079 1.9348 98.774-0.1041-0.3894-33.097-1.2146-103.23-1.4506-123.3h17.84v123.21c21.739 1.7267 5.3397 0.5901 97.246 0.2546v-123.47h16.39v123.49l95.607-0.5693-0.1661-122.92h14.638c0.5166 33.094 1.6178 103.64 1.9188 122.92 41.66-0.0781 44.691-0.0494 96.699-0.5463v-122.38h15.297c9e-4 3.2772-0.2689 119.17 0.9708 121.12 1.067 1.6839 17.038 1.2096 97.454-0.1396-0.0507-9.6959-0.5675-108.56-0.6324-120.99l91.096 8e-4c-1.1876 98.547-1.1682 96.481-2.5916 276.42l-39.313 39.356c-51.008 0-53.016 0.2946-53.016-1.9714 0-1.0842-1.4497-4.2573-3.2216-7.0512-9.663-15.237-31.374-11.76-38.889 6.2276l-1.6243 3.8877h-23.712l-1.8248-4.7781c-7.927-20.758-29.344-16.858-36.926-0.6872l-2.5203 5.3757-21.853 0.0575-2.7316-5.6723c-4.646-9.6472-14.53-14.488-25.415-12.446-4.507 0.8455-10.277 6.247-12.969 12.14-6.0347 13.212 2.704 29.565 16.508 30.891 10.986 1.0556 20.072-5.3836 23.014-16.309l1.1316-4.2022h22.348l1.859 5.1901c5.8934 16.452 27.931 23.822 37.982 1.0927l2.295-5.1901 22.297 0.0088 2.0085 4.8843c7.2896 17.727 34.05 18.979 41.216-0.8355l1.3511-3.7361c29.658-1.5126 30.724-1.4056 57.117-1.4134 7.1689-7.2108 40.553-40.089 41.306-43.706 1.4318-6.8785 2.2461-277.39 2.2466-277.53h52.654c-0.8376 112.04-1.0798 132.66-2.7463 296.54-7.7944 7.7916-107.58 107.54-115.39 115.35l-100.81 1.479c-0.9512-1.8097-2.4939-5.0994-4.2666-6.1454-4.2209-2.4906 13.444-2.5003-77.733-1.7913-16.626 16.772-30.938 31.211-47.564 47.983-11.192 0.1721-12.314 0.2178-23.637 0.061-97.354 100.09-235.76 235.87-347.66 353.89 0.0559 42.917 0.0337 115.53 0.8818 172.33 1.0488 70.256-1.032 35.158-0.9521 73.07l-2.282-16.936c-10.649 0-12.812 0.592-15.822-5.0332-1.5652-2.9249-2.0901-105.33-2.7612-183.69l2.7537-3.7048c16.513-22.218-9.8472-50.896-31.131-31.709-8.7935 7.9279-10.857 18.968-5.4226 29.008l3.0049 5.5516c-0.2278 203.87-0.365 190.62-1.093 213.1 57.412-0.3009 147.39-0.6635 148.27-1.4944 0.4188-0.3967 0.9104-20.02 1.0927-43.608l0.3315-42.887-14.204-0.0953c10.923-5.6483 18.029-9.4555 18.029-23.735 0-25.681-34.611-32.084-43.117-7.9758-4.2366 12.008 0.8333 24.756 11.798 29.665 2.3928 1.0713 3.6941 2.2043 3.0142 2.6246-1.6155 0.9983-1.1965 32.068-1.1965 46.228-17.59 5.6561-17.781 3.4663-17.272 25.239 0.3062 13.09 0.1653 14.374-1.5762 14.372-3.2051-0.0021-1.0012-7.0107-2.6204-20.491l-0.6892-5.7379-6.364 0.2747c-12.482 0.5387-9.9136 19.253-11.126-209.81 34.981-35.523 156.81-159.2 197.19-199.36 106.54-105.96 127.55-131.96 136.84-131.96 6.4574 0 14.193-6.9608 15.935-14.339l0.8712-3.6901c0.3215 9.5884 0.1981 9.2875 15.596 9.2875-1.0264-7.7372-2.4993-14.797 4.2819-21.294 1.7675-1.6935 2.9667-3.4787 2.6649-3.9671-0.3019-0.4884-4.4375-0.5882-9.1903-0.2217l-8.6415 0.6664c12.295-12.684 24.552-25.328 36.847-38.011 0.1104 7e-4 177.19 1.2926 179.94-0.2925 1.8365-1.0611 117.31-115.84 120.73-119.23 1.1705-53.171 1.1801-62.061 2.4542-299.51h153.95c-1.1969 11.668-1.2151 17.062-2.5254 210.34-54.332 54.725-95.368 95.903-248.41 249.59-121.46 0.9928-196.35 1.3774-197.04 3.4049-0.2046 0.5991-1.2974-0.0876-2.4288-1.526-4.7159-5.9955-15.69-7.9806-22.894-4.1413-2.6143 1.3933-4.8138 3.9823-7.0197 8.2627-3.2789 6.3623-3.3011 8.7211-0.1527 16.065 0.6676 1.5575-0.5232 1.7959-9.8373 1.9695-10.533 0.1963-10.625 0.2218-15.276 4.2376-2.5734 2.222-4.2739 4.4584-3.7791 4.9697 0.4949 0.5113 9.6761 0.6591 20.403 0.3284 23.818-0.7342 28.342-0.143 32.615-2.4442 3.7538-2.0218 21.752-1.8961 216.34-3.2718 14.926-14.888 253.75-253.1 268.67-267.99 0.0526-12.211 0.8939-207.57 0.9465-219.79h32.73c-1.1602 136.91-1.2194 152.38-2.6793 227.77-35.434 37.007-249.1 252.82-283.53 287.6-11.879 0.0703-271.33 1.3807-282.42 2.3836-8.3064 0.7508-8.4818 0.83-12.513 5.6528-6.4045 7.6632-284.58 283.63-287.08 288.9-2.5576 5.3899-2.2778 6.6841 0.9833 4.5473 4.2574-2.7896 3.2091-1.187-1.4808 2.2635-5.303 3.9017-28.442 28.319-34.03 34.136 0 150.38-0.2197 172.29 1.5864 173.79 1.8179 1.5087 6.0554 0.5351 6.0752-1.3959 0.0178-1.1559-0.0391-168.54-0.0393-169.05 274.42-273.65 295.67-294.88 321.33-319.92 8.6012-0.4963 12.865-0.9697 12.248 0.6286-0.2899 0.7512 0.1133 1.3658 0.896 1.3658 1.7716 0 6.0653 4.4476 7.3622 5.6902 149.6-0.3895 177.7-0.4178 278.94-1.0585 183.62-186.72 164.4-164.79 303.63-305.91 0-148.12 0.2527-152.1 1.448-237.4h31.345c-0.0469 9.703-1.0417 251.76-1.7902 256.65-1.274 8.3266-300.14 305.22-303.31 310.89-0.6978 1.2469-0.4958 1.7269 0.7268 1.7269 2.0049 0 2.2281 2.306 0.4004 4.1339-0.7112 0.7111-1.0229 1.5629-0.6931 1.8928 1.0795 1.0792 297.7-302.13 301.05-302.13 2.3159 0 1.4314 126.56 0.4294 129.13-1.2448 3.199-17.299 19.848-20.869 23.637v15.496h65.559c0-3.7701-0.1066-10.112 0.6195-13.795 0.7035-3.5675-1.4164-5.6743-15.17-22.786 1.556-110.62 1.5941-133.88 2.889-404.85h50.212c-0.2861 59.264-1.5023 402.48-3.4636 406.15-0.9009 1.6855-13.348 14.302-15.864 16.886-0.0352 5.8603-0.0654 10.896-0.1006 16.756 7.7272 0.07 56.142 0.5089 63.92 0.5793v-18.998c-5.7322-5.8904-10.658-10.952-16.39-16.842 0-133.59-0.1336-135.59 1.453-404.53h37.629c-0.192 10.1-0.8549 44.968-1.1655 61.307 4.5085-0.2326 8.3825-0.4325 12.891-0.6651 0.1845-19.273 0.3961-41.369 0.5807-60.642 2.4719-3e-4 4.5959-5e-4 7.0678-8e-4v121.83c25.367 1.4765 33.262 1.1759 96.7 0.1938v-122.02h18.907l-1.194 122.2c21.845 1.7071 32.9 1.2531 91.005 0.7233 0.152-33.098 0.4761-103.64 0.5646-122.92 9.6882 0 17.232-0.3008 17.171 1.3658-0.0673 1.7811 0.2744 114.38 0.2935 121.01h94.71c1.5547-63.929 1.4437-66.15 1.4437-122.38h17.482c0 112.32-0.2407 122.05 1.7283 122.81 2.2867 0.8775 88.559 0.6632 91.919 0.6632 1.4904-17.63 1.4134-22.035 1.4134-123.47h19.786c-0.1752 13.663-1.3711 106.91-1.5558 121.31 11.227-0.0693 81.085-0.5008 92.338-0.5703 0.9989-110.75 1.1136-105.42 2.1697-120.74h19.472c0.6013 36.679 0.5463 45.818 0.5463 120.74l21.853 0.8284c25.941 0.9833 69.944 0.6197 71.148-0.5879 1.1263-1.1293 1.76-116.91 1.7919-120.98h18.259c-1.2131 103.24-1.6195 119.71 0.1342 120.84 2.0409 1.314 92.287 1.6218 95.793 1.6461 2.243-12.648 1.9661-114.57 3.0804-120.02 0.5544-2.7122 0.9557-2.4585 15.717-2.4585-1.1561 102.95-1.3196 108.01 0.5962 121.83h90.681c2.3739-25.459 2.2909-117.41 2.7043-121.56 0.0151-0.1502 3.4691-0.2732 7.6759-0.2732h7.6485v122.38h78.671v167.97c-8.756 1.2002-5.6911 1.3905-69.383 1.3834-45.36-46.69-50.511-51.51-48.208-52.883 7.583-4.5222 11.604-11.319 11.604-19.614 0-12.859-12.774-24.139-25.074-22.143-5.5223 0.8962-12.04 5.9112-15.081 11.605-3.7366 6.9956-3.2023 17.6 1.1763 23.34 8.3933 11.004 14.94 4.622 14.94 9.49 0 3.3776 50.13 54.72 55.76 60.045 47.078 0 62.22-0.2613 74.266 1.3897v62.828c-8.8086 1.3265 1.0283 1.6235-154.62 0.8001-9.4882 9.5837-68.389 69.078-77.867 78.65-2.9291 191.06-4.4221 778.56-4.9522 958.27-6.0868 2.8988-12.722 5.2811-13.645 16.412-1.5815 19.071 22.332 27.04 32.375 12.432 2.1728-3.1602 2.4949-4.7748 2.1637-10.84-0.6794-12.435-6.1134-14.335-13.258-17.725 1.6333-403.13 1.8738-459.53 5.9282-954.11l71.45-72.473c153.73-0.2606 143-0.1712 152.42 2.2028v62.871c-12.472 2.3391-97.36-0.8366-100.09 1.4326-2.3117 1.9185-1.4619 147.93-0.6641 149.17 2.0782 3.2207 55.589 2.5867 100.76 2.6146-0.0822 35.166 0.0833 42.492-1.426 38.96-1.2864-3.0107-1.3852-3.0436-3.1808-1.0596-1.6381 1.8102-2.8408 1.9578-10.369 1.2729-15.347-1.3963-83.858-1.0905-85.329 0.3809-1.93 1.9301-1.8777 81.008 0.0546 82.558 1.8583 1.4897 24.338 2.3867 63.984 2.553 31.1 0.1305 33.211 0.0152 34.657-1.8939 1.3399-1.769 1.5398 1.0168 1.5398 21.459 0 20.89-0.1777 23.257-1.6042 21.371-0.8823-1.1666-1.6042-2.5033-1.6042-2.9705 0-0.4123 4.5629 0.5084-97.792 0.7208-1.2208 78.394-1.2999 72.929 1.6452 78.057 99.123 0.6437 97.438 1.6035 98.669-4.6905 0.2522-1.2894 0.5255 10.147 0.6073 25.414 0.1438 26.828 0.082 27.698-1.8493 25.95-1.7957-1.625-6.876-1.8083-50.128-1.8083-39.835 0-48.348 0.2626-49.395 1.5239-1.6349 1.9699-1.2029 83.063 0.4508 84.634 1.6938 1.6089 98.237 2.5579 99.814 0.9811 1.4645-1.4647 1.2563 37.5 1.2563 123.82-3.5886-1.9205 0.4924-2.6257-52.283-2.0282-44.482 0.5035-47.582 0.6648-48.957 2.546-1.9043 2.6042-2.1869 86.244-0.2954 87.413 1.0598 0.6549 98.338 0.8765 98.824 0.2249 1.847-2.4801 2.6381-9.8756 2.6789 18.144 0.0306 21.277-0.094 22.738-1.8789 22.016-2.4579-0.9934-98.912-0.6759-99.908 0.3289-1.2669 1.2781-1.3952 83.182-0.1322 84.446 0.7358 0.7357 17.776 1.0883 49.573 1.0253 43.124-0.0852 48.668-0.2914 50.416-1.8732 1.8842-1.7052 1.9638-0.8314 1.9638 21.546 0 19.791-0.2223 23.02-1.4677 21.316-1.397-1.9104-3.7971-1.9805-49.696-1.4512-36.488 0.4208-48.632 0.8911-49.887 1.9324-1.4267 1.184-1.6581 6.9175-1.6581 41.086 0 36.727 0.1436 39.781 1.9121 40.662 2.7159 1.3519 87.482-0.9891 93.278-0.1331 3.2847 0.485 4.2595 0.1482 5.7608-1.9912 2.1135-3.0121 1.7991 2.788 1.6471 110.81-2.857-3.0667-1.8022-1.9344-4.6572-4.9988-58.712 0.7686-95.562 1.0005-97.45 2.5682-1.3268 1.1012-1.5826 7.5262-1.5826 39.75 0 28.438 0.3411 38.778 1.3112 39.748 2.6801 2.6801 70.601 0.5366 98.369-0.1388 4.4848-7.3544 4.1125-10.168 4.1172 20.419 0 30.241 0.2714 27.494-3.9725 22.253-4.0361 0.0101-97.726-0.0527-98.965 1.1863-0.8436 0.8435-1.4619 81.489 1.3254 83.298 2.3253 1.5093 96.204 0.0503 98.188-1.5258 0.8184-0.6504 1.8018-2.027 2.1853-3.0593 0.9171-2.469 0.8992 49.955 0.9096 52.639-2.4935-4.1001-1.5813-2.6001-4.1704-6.8577-17.989 1.2257-14.841 1.4186-97.307 1.7347l-0.9952 2.6177c-1.3509 3.5531-1.287 74.774 0.0699 78.344l1.0657 2.8027h97.332c2.6567-4.3573 1.6758-2.7485 4.3303-7.1023-0.0045 4.6754 0.1593 136.2-1.0252 133.3-2.364-5.7758-1.0796-5.6639-53.053-4.6185-34.076 0.6855-48.461 1.3397-49.396 2.2466-0.973 0.9435-1.3678 11.131-1.5035 38.808-0.1738 35.42-0.0688 37.637 1.8657 39.461 1.9178 1.8079 4.444 1.8735 39.2 1.0205 20.433-0.5015 41.683-0.6144 47.224-0.2511 11.135 0.7305 15.005-0.5685 15.921-5.3433 0.2625-1.3669 0.544 10.722 0.6259 26.864 0.1656 32.66 0.4191 29.683-3.8246 24.442-81.36 0.1191-96.706-0.0583-98.752 1.6936-1.5168 1.2988-1.9298 4.9175-2.534 22.202-1.909 54.628 0.0653 52.437 2.5388 55.969 77.352-0.8164 97.584-0.8164 99.329-2.5308 0.8392-0.824 1.8889-3.3755 2.3328-5.6702 1.1036-5.7053 0.8917 107.14 0.067 97.629-0.8041-9.2683-2.6105-11.089-9.9351-10.015-2.7043 0.397-24.308 0.9343-48.008 1.1943-37.983 0.4165-43.326 0.6851-45.072 2.2651-2.2665 2.051-1.9809 4.8562-1.9809 76.723 4.5498 3.1865 0.3715 3.4016 52.521 3.4016 47.036 0 47.692-0.0305 49.746-2.2952 1.7686-1.9502 2.1726-4.6194 2.6879-17.756 0.8243-21.011 0.6348 371.13 0.2104 354.99-0.2516-9.5623-0.7735-13.541-1.9459-14.837-1.44-1.5911-6.6002-1.738-51.045-1.4546-49.09 0.3132-49.456 0.3323-51.355 2.6653-2.1848 2.6851-1.9121 7.2664-1.9121 75.415l5.43 5.4299c106.01-0.6755 98.524 0.9963 100.46-8.8667 1.2125-6.1833 1.4003 746.53-0.0498 740.33-3.5704-15.259-20.968-22.436-34.342-14.168-5.5403 3.4253-10.257 10.015-10.29 14.374-0.0109 1.3167-0.3868 2.6191-0.8375 2.894-1.0892 0.6653-114.15 1.2466-117.35 1.2676-9.5305-10.212-21.197-23.29-21.92-21.27-0.4588 1.282-1.0052 1.3486-2.7315 0.3337-1.9431-1.1426-2.1066-1.0002-1.6422 1.4292 0.3101 1.6218 1.0744 2.4839 1.9164 2.1606 1.8362-0.7048 22.178 20.819 23.904 22.592 46.875-1.2271 49.262-1.4597 123.93-1.4836 0.9533-5.6426 1.794-13.158 9.232-16.688 7.7035-3.6558 15.773-1.7163 20.821 5.0032 5.6448 7.5142 4.7035 15.439-2.6196 22.055-3.6949 3.3381-5.0718 3.8962-9.6113 3.8962-10.188 0-14.039-7.1472-17.094-12.137-99.669 0.5776-127.89 0.5283-129.89 2.1929-0.9613 0.7979-1.5294 1.8042-1.2622 2.2363 0.56 0.9062 83.547 0.1226 124.6-0.2053 4.8678 6.9661 9.2672 14.675 22.31 14.725 3.3542 0.0129 8.182-0.8279 10.728-1.8684 5.3076-2.1687 10.878-7.9736 11.84-12.339 1.5963-7.2439 1.4059-33.53 1.2175 242.32-0.0929 136.12-0.4231 219.3-0.7333 184.84-0.5438-60.403-0.6399-62.698-2.685-64.193-3.25-2.376-65.658-1.6301-66.17-1.5928-6.6251 0.4849-5.5655-3.0549-4.9169 127.88-4.2036 5e-4 -7.8156 1e-3 -12.019 0.0017 0.1054-6.4685 1.3421-123.61-2.4247-127.38-1.3789-1.3792-7.8488-1.6108-43.304-1.553-59.163 0.0957-55.267 0.6641-57.01 4.8044-2.3227 5.5181-0.2242 120.31 0.7598 122.21 0.894 1.7336 0.2653 1.9121-6.7395 1.9121-7.6244 0-7.7085-0.0317-6.437-2.4072 1.9475-3.6387-0.0723-20.609-0.2175-83.554-0.0808-35.037-0.2564-38.583-1.9866-40.149-1.6638-1.5056-7.8091-1.7222-49.774-1.7534-26.332-0.0198-48.062 0.1499-48.289 0.377-0.5501 0.5503-1.1908 104.87-1.4676 127.49h-16.39c-0.0019-7.0239 0.2775-123.52-1.0151-125.57-0.8279-1.3079-8.58-1.5134-49.426-1.3091-44.085 0.2207-48.576 0.4094-49.921 2.0979-1.6942 2.1284-1.2243 23.906-0.0695 124.78h-17.557l-0.564-126.2c-22.943-0.366-14.473-0.2307-37.398-0.5969-0.1962-15.894-1.4237-115.34-1.6212-131.34-9.6642-9.4294-17.968-17.532-27.632-26.961-17.689-0.0259-37.919-0.0554-55.608-0.0811-6.6183 6.7209-47.715 48.456-54.335 55.179l1.101 104.49c-41.947-0.3948-51.484-0.2517-52.025 0.2903-1.1927 1.1931-0.9767-2.8315-1.3915 125.22h-16.39c-0.0359-7.833-0.5014-109-0.527-117.02-0.0354-11.113 0.4882-9.7312-35.631-9.7312 0.0518-6.4771 0.5803-72.549 0.647-80.884 21.614-21.538 67.03-66.795 79.763-79.484 71.45-2.4668 84.386-0.1521 140.1-2.7471 45.869 42.525 34.355 32.525 91.54 87.323-4.8953 6.9651-6.3895 8.1509-6.8943 16.082-0.6434 10.103 3.4893 17.294 12.576 21.886 4.3244 2.1848 15.443 2.3286 20.385 0.2634 7.7543-3.2397 13.669-14.786 12.158-23.733-1.55-9.1746-11.075-18.47-18.926-18.47-1.423 0-2.8908-1.0068-3.584-2.4585-1.4247-2.9834-2.1917-1.4128-55.947-53.782-22.944-22.352-42.7-41.106-43.902-41.675-3.905-1.8491-300.97 1.4214-555.56-0.6816-8.5992 8.884-33.112 34.087-41 42.872-7.8501 8.7424-82.435 83.343-85.45 88.773-1.8417 3.3162-1.7942 10.099 0.0962 13.717 2.0697 3.9617 7.054 8.5596 10.822 9.9834 7.5754 2.8621 15.096-0.1707 19.081-7.6943 2.899-5.4736 2.4556-5.929 1.0508-23.961 45.514-46.751 36.432-39.388 102.45-107.26 15.027 0.5156 32.261 1.1069 47.288 1.6226 1.6026 76.47 1.442 104.5 1.9284 287.05-39.953 0-44.735 0.2026-43.243-1.5955 1.6378-1.9731 0.4001-126.65-1.2894-129.9-1.0017-1.926-3.309-1.9973-51.294-1.5771-42.224 0.3696-50.414 0.6917-51.298 2.0171-1.4171 2.1226-0.5431 107.56-0.4301 131.06-3.923 0-7.2938-2e-4 -11.217-5e-4 -0.1276-19.496-0.4592-129.58-1.9189-131-1.4203-1.3813-88.294-1.5515-103.78-1.6421-0.0405 55.262-0.157 59.029 1.0927 132.65l-47.607-2e-3c2.0275-3.7883 2.6936 2.0898 1.8773-67.726-0.6766-57.868-0.8851-62.963-2.6334-64.325-3.0446-2.3726-97.832-0.1565-99.453 1.1895-2.7307 2.2661 1.2169 125.53 1.4012 130.86h-15.297c-0.5742-105.32-0.4966-129.26-2.2026-131.01-1.2236-1.2571-9.952-1.6333-47.827-2.0615-46.509-0.5261-55.902-0.1482-56.789 2.2856-0.5282 1.449 0.6007 105.46 2.5216 130.79-5.1769 2e-4 -9.6251 5e-4 -14.802 7e-4 0.6575-138.6 0.6616-128.29-2.0083-133.3-103.75 0-95.53-0.6023-101.6 3.6489 1.5333 117.79 1.6313 112.34 2.8619 129.61-9.2466-0.1704-5.8126-0.1072-15.075-0.2776 0.0874-15.623 0.6354-113.48 0.7234-129.21-5.1001-4.6157-0.9463-4.2917-52.507-4.7141-42.022-0.3442-47.898-0.1892-49.131 1.2966-1.6071 1.9363-1.2419 31.449-0.7013 132.94-7.8146-2e-4 -4.8899 0-12.669-7e-4 0.9882-85.367 1.7418-130.65 0.2622-131.57-1.1766-0.7271-2.3235-56.575 0.1455-77.13h54.15c3.8298 6.1494 3.4933 6.1992 16.022 18.365 56.692 0.6868 63.294 0.7666 71.505 0.866 6.0967-6.1526 11.335-11.44 17.432-17.592-4.3267-286.14-4.1104-273.71-6.6981-546.32-5.4402-5.8333-4.2032-4.2261-30.338-36.044 0-23.578 0.6027-22.458-3.5511-27.192-3.2545-3.7097-4.1589-4.1025-10.83-4.7017-6.3496-0.5703-7.7935-0.3352-11.312 1.8394-5.957 3.6816-8.1702 8.019-8.1752 16.022 0 5.9346 0.4221 7.2991 3.5471 11.369 4.2777 5.5715 5.1042 5.283 10.014 7.6604 4.8419 2.3442 20.266 24.989 23.316 29.374 1.832 391.19 2.3824 303.78 2.5043 385.15 0.1038 69.139 1.1486 63.176-10.973 62.635l-7.1067-0.3169c-2.5057-17.266-2.165-393.7-3.3621-401.27-1.1014-6.97-103.17-105.58-103.17-111.05 0-0.9541 2.2988-2.345 5.7363-3.4705 13.803-4.5188 21.772-10.918 31.314-25.148 6.2874-9.3762 8.3446-17.513 7.4427-29.44-1.5469-20.453-13.765-25.492-21.762-41.415-1.8351-3.6541-3.7667-6.8074-4.2927-7.0078-0.5259-0.2004-0.9562-1.0945-0.9562-1.9873 0-1.6819 32.958-35.863 36.321-37.668 2.9401-1.5786 4.782 1.6345 13.108 2.8835 6.3239 0.9482 11.085-1.5544 21.195-11.14 5.9739-5.6646 6.7871-6.9517 7.4677-11.82 1.162-8.3103 6.577-18.951 5.7532-19.775-1.1805-1.1807-6.7312 2.0857-10.3 6.0608l-3.8644 4.3047-5.7001-3.217c-13.986-7.8931-27.794-0.1934-29.784 16.608-0.7201 6.0793 1.3138 5.4141-49.03 56.66h-31.117c-12.843 12.342-27.522 26.447-40.365 38.789 0 94.964-1.2458 91.027 6.5664 95.067 3.6699 1.8977 13.791 1.6328 44.568 1.6328 81.947 82.746 79.143 80.001 91.87 93.46 0.3258 385 1.9574 380.56-0.3123 384.86-1.9955 3.7759-15.956 17.197-19.224 20.426 0 20.523 0.1582 64.842-0.8196 65.419-1.0833 0.6392-54.846-0.6206-57.163-0.668 2.6338-98.993 0.9901-217.14 2.8036-218.47 1.3948-1.0247-12.655-0.832-14.412-0.8357-1.4003 205-1.4202 209.17-2.8105 219.64-13.574-0.0688-98.101-0.4973-111.71-0.5662-0.2094-12.765-0.3893-23.734-0.5986-36.499 82.686-84.894 78.957-81.243 93.224-96.804-0.9757-59.799-0.996-75.296-2.8687-78.85-2.3608-4.4807-14.91-16.564-14.91-14.357 0 0.9819 3.1827 4.5801 7.0729 7.9954 8.4166 7.3894 9.1204 9.6655 7.2231 23.36-1.635 11.8-1.0801 47.939-1.0099 60.085-61.661 64.03-85.156 88.01-93.015 96.657 0.5117 127.76 0.1049 127.95 2.698 128.32 2.5798 0.3704 2.1853 0.1763 2.1853-73.151 3.4103 0.0081 108.76 0.0723 109.98 0.8269 1.2753 0.7883 0.5945 67.067 1.9069 69.139 0.5221 0.8242 1.5778 1.2896 2.3457 1.0334 2.2317-0.7437 0.297-14.386 1.6652-49.627 0.7209-18.582 0.9335-20.104 2.8099-20.104 2.3944 0 2.0299 2.1709 2.0299 74.044-87.493-1.0007-95.467-1.3403-97.105 0.634-1.6748 2.0176-1.2695 30.916-0.687 134.02-5.1483-2e-4 -9.572-5e-4 -14.72-7e-4 1.0956-109.95 1.5143-131.41-0.1787-133.57-1.3783-1.762-5.2728-1.9089-51.623-1.9502-27.573-0.0242-50.329 0.1511-50.568 0.3904-0.4918 0.4924-0.3716 87.809-0.3372 135.13h-77.678c0.199-120.43-0.0237-130.96 1.9497-132.06 1.4885-0.833 1.3549-1.217-0.9475-2.7256-2.3561-1.5435-7.9882-1.7446-46.554-1.6602-31.164 0.0679-44.371 0.4595-45.589 1.3506-2.9766 2.1765-1.7175 86.937-2.6943 132.09-0.0774 3.5837 0.0615 3.0046-15.48 3.0046 1.1936-1086.8 0.9414-1017.3-0.0964-1027.1-10.816 0.2117-20.11 0.3936-30.926 0.6052-1.1785 1029.9-0.0356 952.04-1.9805 1026.5h-18.906c-0.2898-1072.5-0.4314-1021.4-1.6863-1027.1h-30.674c0.8569 721.72 0.7129 682.71 0.188 737.75l-2.1697-2.7583c-5.9072-7.51-23.546-7.4951-28.252 9.8608-0.8357 3.0823-25.346 27.702-103.98 107.03 0.3865 35.538 0.2332 21.454 0.6187 56.876-18.879-1.3525-18.201-1.8074-30.814 12.222-0.3472 20.429-1.0818 63.682-1.2922 76.066l3.7451 3.5513c3.9111 3.7087 8.6013 4.9126 7.45 1.9121-0.7732-2.0154 2.365-2.2522 3.6204-0.2732 0.4763 0.7512 0.7173 3.8242 0.5354 6.8291-0.3101 5.1221 0.7329 11.736 2.542 16.116 0.8989 2.1775-0.6042 1.9121-29.093 1.9121 1.0906-117.38 1.1758-132.89 2.5925-202.52 8.6038-8.585 146.32-146 154.92-154.58-0.585-470.37-0.6436-668.34-3.303-670.02-2.0945-1.324-25.99-1.0647-30.596-1.0703-0.4812 83.26-0.5461 51.552-0.5461 649.76-109.65 111.79-109 110.87-156.46 157.6-2.4387 49.566-1.0212 111.3-2.606 220.82h-17.4c0.0215-208.64-0.3284-214.18 2.0417-217.77 1.1128-1.6877 28.449-29.846 60.748-62.575 53.197-53.905 58.659-59.768 58.026-62.29-0.3955-1.5752-1.3459-2.6335-2.1902-2.4377-2.3467 0.5439-118.52 118.88-122.03 124.3l-3.1462 4.8577c0 209.46 0.2976 215.92-1.9121 215.92-2.2153 5e-4 -1.8921-6.9194-1.2964-213.07h-5.533c-0.2678 116.06-0.6963 60.508-1.0964 213.07h-4.7048c1.2412-60.871 1.312-58.621 2.7788-212.52 53.942-55.353 134.55-135.33 133.92-137.22-1.7029-5.1084-3.4709-3.6125-44.201 37.403-46.716 47.042-72.5 74.038-96.25 98.72-1.1716 124.12-1.2671 141.45-2.7576 213.62h-40.143c0.1155-33.597 1.8403-157.92 2.3735-231.77 38.13-37.316 130.1-128.04 166.76-166.84 0.022-17.74 0.7554-611.29 0.7773-629.03-19.759-0.3706-12.478-0.2341-32.233-0.6047-0.4573 378.12-0.6204 121.66-1.0928 610.79-163.45 163.24-163.42 162.47-165.38 169.46-1.9512 6.957-1.8948 41.329-3.1904 247.99h-43.138c1.1182-181.11 1.2634-187.06 2.4624-296.17 39.458-39.362 86.989-86.192 88.649-90.779 2.0598-5.6914 1.7317-9.6284-1.2217-14.668-3.8191-6.5168-10.468-9.6309-19.212-8.9985-7.8611 0.5688-10.532 2.3447-17.953 11.938-7.5959 9.8193-78.921 80.917-81.371 84.373-2.1418 3.0222-2.4827 54.135-4.666 314.31h-24.112c0.4031-100.88 0.9153-310.01 2.3586-313.75 2.0808-5.3879 137.42-138.52 139.08-144.59 0.9258-3.3848 1.4824-565.97 1.4893-570.94 12.498-2e-4 7.884-2e-4 20.373-2e-4 -0.1741 159.85-0.3916 302.22-0.1577 324.25 5.2705 6.1719 42.332 49.468 49.716 59.101 2.1475 2.8018 2.1909 4.7876 2.511 114.76 0.2883 98.983 0.1306 112.4-1.3657 116.14-3.293 8.2297-1.1284 18.503 4.3362 20.58 4.1729 1.5864 13.295 1.3257 16.699-0.4775 3.3367-1.7678 8.3364-7.762 10.278-12.322 1.5613-3.667 1.5972-90.112 2.1309-246.07-52.16-57.797-50.417-60.188-50.426-58.061 0 1.2693-0.2786 1.312-1.3726 0.2153-1.5879-1.5913-1.2283-77.179-0.7939-316.87-6.1006-1.1729-60.918-0.9158 846.5-2.2112l0.6624 4.8328c0.9735 7.1025 7.7723 19.74 13.754 25.567 9.9553 9.6968 24.826 15.027 38.946 13.958l7.8224-0.5918c-2.1216 5.5774-4.2065 9.853-4.8829 21.153-0.6637 11.084 0.7081 17.379 6.1486 28.216 3.1073 6.189 3.1622 6.5654 1.6727 11.473-1.8264 6.0168-1.5475 24.831-1.5637 66.518 8.3605 8.427 15.495 15.619 23.856 24.046 1.5714 30.011 2.6062 302.29 2.7649 365.97-7.5437 6.8152-12.049 9.8975-11.08 19.987 0.9421 9.8057 8.5273 16.423 18.824 16.423 14.948 0 25.2-17.332 13.087-31.483l-3.6761-4.2944c-1.8865-226.47-2.2324-257.97-2.2565-374.03-13.525-14.279-8.8787-9.3738-22.946-24.225 0-16.974-0.3489-51.108 1.1271-51.108 0.62 0 4.1848 1.0415 7.9218 2.3149 7.77 2.6472 9.46 2.1765 31.951 1.0093 9.8444 9.5183 5.968 5.7703 15.773 15.251l358.98-0.0261 20.214 21.272 0.0657 24.099 84.267 85.818c-0.0444 8.0559-1.5323 277.63-1.5768 285.68-8.808 9.6873-8.2139 9.1477-34.579 36.399-9.8494 0.8206-18.676 1.2097-18.676 3.0193 0 1.2156-30.033 1.5176-177.28 1.7827-175.78 0.3167-177.31 0.301-180.38-1.866-2.3566-1.6633-4.8568-2.1853-10.465-2.1853-6.3179 0-7.9193 0.4199-11.228 2.9431-5.4784 4.1785-7.8035 9.6428-7.2001 16.921 1.5236 18.373 23.003 21.511 32.324 9.2983 3.3466-4.3843 2.9989-6.0796 3.3314-19.328 19.518-0.0305 332.49-0.5222 352.05-0.553 1.4658-3.8555 2.1161-7.4707 10.276-5.9397 12.274 2.303 11.877-2.0845 47.578-37.731v-291.84c-2.3541-2.4043-80.618-82.644-82.62-83.413-1.79-0.6868-1.5137-7.9939-1.5137-25.943-3.3807-3.667-18.33-20.319-22.094-22.319-5.4062-2.8728-354.88-0.0952-358.25-2.1379-2.1989-1.3325-11.063-9.2776-13.209-11.171 7.306-5.1174 6.0347-5.4287 16.263 6.6882 293.36-1.0857 262-1.0835 357.35-0.3992 9.2679 9.9255 17.232 18.454 26.5 28.38v23.263c28.179 30.313 33.907 35.758 83.076 84.392-2e-3 16.457-0.033 279.99-0.0349 296.44-33.357 35.044-41.128 43.137-39.47 43.69 4.7401 1.5798 11.087-5.8276 44.933-41.344v-300.65c-46.776-46.703-55.63-55.446-83.041-83.755v-25.379c-10.631-10.73-19.765-19.951-30.396-30.681l-354.35 0.5554c-5.8994-5.8994-3.8593-3.8594-9.9928-9.9929 5.9675-6.4204 14.716-15.415 19.447-27.95 2.001-5.3022 6.5665-9.4089 10.47-9.418 2.1859 0 8.4534-4.6362 10.259-5.8857 448.49-0.3464 317.31-0.75 383.6-3.5671 15.755-0.6697 16.604-0.8235 19.668-3.5664 8.2271-7.3645 8.119-6.9675 8.119-29.862 0-25.976-0.4534-19.404-3.9136-19.404-0.2513 0-0.457 8.6289-0.457 19.176 0 20.577-0.7588 24.132-5.7477 26.931-12.245 6.8706-379.18 5.2434-404.92 5.2478-11.822 9.9468-6.1752 2.6558-17.65 10.085v-22.513c2.1511 2.0608 3.9994 3.8315 6.1505 5.8921 150.3 0 410.36 0.8318 415.43-3.8542 1.738-1.6052 2.0133-17.111 2.9148-42.607 3.5275-0.0232 86.979-0.8701 88.206 0.3567 1.0737 1.0737 1.0654 402.28-0.2474 606.57-2.5647 1.3083-8.4339 3.9844-9.7973 6.532-1.7142 3.2031-1.5012 42.312 0.2366 43.436 1.9584 1.2673 44.781 0.3401 46.438-1.0056 0.9965-0.8093 1.3658-6.1785 1.3658-19.854 0-23.939-0.0342-21.807-12.37-27.369 1.2471-354.48 1.4386-393.81 1.4386-609.21h36.016c2.573 10.251-0.232 527.78-1.2072 609.15-5.602 4.8677-3.5337 3.0706-9.1313 7.9343-0.7529 38.107-1.0259 34.877 2.7819 40.688 34.395 0 41.063 0.251 43.031-1.7168 1.826-1.8262 2.4127-11.531 1.8116-29.97-0.3257-9.9902-1.7229-13.554-5.8019-14.797-6.2099-1.8936-6.5234-2.9419-5.8586-19.59 0.4224-10.572 2.7604-612.87 0.6944-616.73-1.7277-3.2283 22.904-1.6426-432.63-3.73l-0.7352-5.8848c-0.4044-3.2366-0.3888-6.231 0.0349-6.6541 0.3268-0.3269 25.222-0.7632 470.97-0.6533-0.0452 36.07-0.7716 614.95-0.817 651.1-8.9177 8.718-9.4412 7.0078-9.0001 28.955 0.3586 17.842 0.2667 17.064 2.2466 19.044 2.5519 2.552 40.998 2.552 43.55 0 1.4359-1.4358 1.717-4.9924 1.717-21.719 0-23.935 0.6984-21.067-11.473-26.439 0-5.8572 0.3004-676.25-0.9102-677.46-1.205-1.207-122.37-1.3108-126.93-1.3259-0.597-36.121-1.1026-35.606 2.1249-39.837 8.9316-11.71 7.91-25.831-2.5145-34.753-10.308-8.8228-22.302-8.3308-31.987 1.3127-3.9653 3.9482-5.3226 6.2603-6.2712 10.683-2.2449 10.468 1.5963 20.748 9.6534 25.834l4.4102 2.7842c0 30.738 0.2991 32.515-2.0834 33.79-2.7529 1.4729-226.92 1.0359-345.38 0.9944l0.0831-109.66c5.5862-6.3386 3.6544-4.1467 9.4622-10.737l36.592-0.1902 44.48 45.345h234.07l3.1939-3.1938c3.8292-3.8291 4.2488-8.8633 1.0087-12.103-2.5861-2.5859-1.7978-2.1853-231.1-2.1592-13.955-14.416-29.964-30.954-43.92-45.371-4.4484-0.0579-50.328-0.8513-53.636-0.0198-3.8948 0.9778-2.9821 5.6582-11.825 14.963l-5.8939 6.2017c0 76.374-0.0702 115.9-0.8746 116.39-1.1534 0.7131-34.936 2.0376-36.478 2.1052-10.723-12.054-10.582-12.054-34.002-36.305 1.1992-103.88 0.8021-103.63 3.4988-106.5 4.9232-5.2405 1.0831-9.6077-4.0901-4.6514-4.6047 4.4116-8.4103 4.5942-15.992 0.7673-5.8124-2.9341-6.7175-3.1177-8.1764-1.6589-3.5332 3.5332 3.8585 7.5142 8.7028 10.706v100.89c-4.7792 4.6814-28.05 27.501-31.715 30.972-5.0873 4.8186-8.1434 14.445-8.1556 25.69-0.011 8.8943 0.3313 10.554 3.4832 16.954 5.9893 12.161 16.129 21.009 29.286 25.554 7.7673 2.6833 3.5328 2.26 364.45 2.8555l-0.5933 42.023c-62.642 1.4275-81.712 1.4478-408 2.9316-42.191-40.538-34.698-35.711-71.997-35.711-0.8018-20.947 0.0681-28.937-13.338-41.349-9.2617-8.5747-15.895-10.866-30.044-10.38-10.323 0.3545-10.926 0.2546-10.926-1.8101 0-2.8235 38.384-59.754 123.16-187.94-0.7222-23.63-1.7495-38.842 2.8165-38.753 2.499 0.0483 211.5-0.5779 213.08-0.5825 2.7068 2.5986 13.852 13.638 15.687 13.736 19.684 1.054 697.14-1.1277 941.02-1.324l56.39 56.51v674.55c1.6436 0.8794 4.1872 2.4578 6.3151 2.0479 2.116-0.4072 1.7995-31.23 1.1647-677.69-5.0299-5.282-54.772-57.777-60.99-62.118-1.6939-1.1826-2.0967-1.886-1.0798-1.886 3.4208 0 51.414 49.756 68.497 67.198 5.0499 2002.6 2.1606-1278.2 5.6914 668.7 4.7749 4.3953 8.9983 8.0823 22.893 22.527 11.312 11.759 14.5 16.442 12.174 17.88-1.5358 0.9495-11.08-7.2866-21.405-18.47-10.265-11.119-16.387-15.756-18.289-13.854-1.6607 1.6609 36.129 39.029 36.719 39.287 1.5824 0.6907 4.8606-3.1519 5.5255-6.4763 0.3573-1.7866 1.4339-3.5488 2.3924-3.9167 1.3051-0.501-2.5762-5.0178-15.456-17.99-16.592-16.709-17.132-17.394-15.311-19.408 2.2138-2.4463 1.8713-28.768 1.4521-678.8l-74.388-74.326c-211.99 1.0923-190.2 1.1604-944.64 2.5107-2.6499-3.6885-7.0663-10.631-11.235-12.084-7.1769-2.5017-224.28 0.5359-227.21-2.9915-1.7682-2.127-1.4995-12.79-1.4995-35.542l199.55-0.9023 5.115 3.5193c6.6067 4.5454 16.274 5.4836 21.657 2.1016 7.7327-4.8584 11.961-14.976 9.8209-23.501-1.9597-7.8086-11.924-13.56-21.121-12.192-5.9426 0.8843-6.7502 2.3381-17.876 13.794-9.8929-0.0623-195.61-0.8604-197.01-2.2632-1.287-1.2869-1.5936-70.492-0.3181-71.773 0.9595-0.9639 235.55-1.0505 239.99 1.2717 6.8799 3.6008 90.724 93.993 115.79 118.58 391.02-0.5144 539.23-0.9023 814.08-3.6167v-24.819c-152.54-0.7087-705.17 1.062-802.55 1.375-120.77-124.37-116.99-119.39-118.24-119.42-1.0708-0.0208-56.933-0.144-124.14-0.2732-119.55-0.2297-122.22-0.2805-123.74-2.3557-1.6273-2.2246-2.03-6.8328-0.8633-9.8735 1.1982-3.1226 257.16-0.2217 260 0.6409 4.2622 1.2942 60.821 58.748 111.25 109.41 62.563-1.0293 717.84-4.4246 782.27-4.7668 28.811 29.318 133.92 138.63 146.79 153.88 1.4799 46.36 1.1634 51.424 2e-3 107.39h-26.641c-1.6793 33.93-1.304 38.057 0.0034 79.763h26.984v55.725h-28.637c0.0276 2.6973 0.51 76.596 1.6658 78.398 1.0437 1.6265 28.873 1.3657 95.835 1.3657-0.1562-21.586-0.4836-66.801-0.5735-79.217l-37.696-0.5979c-0.3913-20.871-0.3978-21.179-0.5467-54.577 32.257 0 37.674 0.2356 38.411-1.6846 0.8534-2.2239-0.903-76.029-0.9674-79.123l-37.443-0.5967c-0.7272-70.179-1.0181-105.47-0.1414-105.76 1.2207-0.4062 1.7672-9.5164 0.5707-9.5164-0.8779 0-4.2454-2.9377-8.6242-6.7822 0-68.456 1.6951-62.982-10.38-55.911 0.2358 15.31 0.4691 30.453 0.7048 45.758-6.6275-6.7625-4.1907-4.2761-11.085-11.31v-43.868c2.5807 0 56.09-0.2107 58.367 0.6631 1.9657 0.7544 1.7283 7.4595 1.7283 73.356l-8.7814 0.5085c-9.711 0.562-13.64 2.4426-7.4775 3.5786 4.5671 0.8418 18.49 0.1821 23.361 0.0181l0.5723-83.588h-72.337c0.4973 16.248 0.924 30.189 1.4212 46.438-19.88-22.093-115.85-120.86-134.89-140.73-623.58 3.7876-756.84 5.5986-756.84 3.8174 0-3.6057 6.9901-19.235-0.1432-31.927-2.4833-4.4185-13.346-13.116-18.376-14.712-2.5637-0.8135 11.092 9.8215-107.96-112.92-22.502-2.2983-274.83-1.1169-277.67-3.957-2.4141-2.4143-1.7212-20.128-1.126-20.731 0.6279-0.6355 125.01-0.8887 281.98-1.1804 0.0261-1.9062 0.5992-25.265-0.489-26.353-1.1134-1.1138-273.82-1.5166-281.05-1.5344-2.792-4.9932-2.7559-3.9534-2.1853-30.023 0.181 2e-4 252.98 0.1016 261.23 3.946 6.0281 2.8091 17.334 16.469 54.05 53.963 33.399 34.108 57.207 64.111 98.836 106.54 33.778 34.431 41.587 42.69 50.939 52.454 16.825-0.0686 121.27-0.4941 138.09-0.5625 2.4741-41.736 4.4706-36.985-14.751-39.044 0-33.342-1.0128-298.51-3.9118-302.94-2.278-3.4766-90.81-90.164-92.083-90.164-2.0005 0-13.27 11.131-13.27 13.107 0 2.5752 75.79 76.753 87.172 87.985 2.0593 25.918 3.2064 169.15 2.7555 170.08-0.1976 0.4062-4.1813-3.0833-8.8527-7.7546-14.541-14.541-24.943-15.849-37.915-18.241-2.5352-16.662-0.4493-53.847-3.0941-162.6-4.1254-4.1731-84.718-85.983-87.596-87.709-4.6727-2.8025-429.13 0.427-431.9-3.3108-1.6561-2.2351-1.1685-14.152-0.7925-34.714 133.5-1.5288 163.34-1.5505 481.99-3.0564 49.528 45.98 146.18 142.91 151.58 145.95 3.9935 2.2502 10.154 1.9221 174.99 1.408 13.905 13.824 100.27 99.688 114.18 113.52v156.13c1.6014 1.614 31.699 31.441 31.648 33.535-0.0492 1.9707-3.8501 6.2517-5.1112 7.7932-9.0898-0.2576-16.9-0.4788-25.99-0.7363-3.261-3.3257-36.426-36.957-38.5-39.918-1.3208-1.8855-1.3823-3.1748-0.3474-7.2844 1.4951-5.9382 0.7518-61.896-0.1136-159.31-2.8693-2.8376-65.121-64.775-67.447-65.539-4.4721-1.4695-5.4863-17.343-26.506-17.212-9.4888 0.0591-14.516 2.5078-19.137 9.3206-1.8984 2.7986-3.6394 5.6519-3.8689 6.3406-0.2877 0.8628-2.1724 1.0107-6.0616 0.4758-5.2191-0.7178-5.858-1.1411-8.4838-5.6216-11.04-18.838-37.889-11.412-41.554 3.1917-0.4187 1.6682-1.5129 2.9553-2.5312 2.9775-2.2621 0.0503-11.655 1.0398-13.925 1.27-5.8013-9.7771-6.6552-12.244-13.398-15.747-13.777-7.1577-30.406-0.6765-32.577 12.697l-0.6371 3.9258c-11.604 0-11.492 0.4993-13.213-3.551-7.5025-17.659-30.462-14.839-36.594-4.917-2.8074 4.5425-3.2161 14.558-0.7859 19.258 2.3129 4.4727 9.6964 10.724 13.707 11.605 5.2869 1.1614 12.745-0.3557 16.25-3.3052l3.1271-2.6311 16.447 16.9c1.0836 31.161 4.4929 215.62 1.7012 217.4-7.1545 4.573-8.8407 6.0271-11.692 10.085-6.5186 9.2749-4.7945 22.484 4.0428 30.976 13.952 13.407 37.751 4.697 41.549-15.206 2.1495-11.265-6.5717-18.531-13.714-25.674-1.591-131.62-1.8549-149.2-1.9628-206.53-33.199-33.466-36.764-35.672-24.771-35.672 5.8496 0 5.8979 0.0283 9.1684 5.2891 4.053 6.52 12.293 11.106 19.926 11.09 7.1952-0.0151 15.662-5.1345 19.981-12.083l3.3501-5.3889h14.624l1.2347 4.0974c2.7806 9.2273 12.7 16.686 22.129 16.639 9.1392-0.0449 18.416-6.6265 22.239-15.777 1.4434-3.4546 1.8448-3.6782 6.0337-3.366 4.1575 0.3101 4.7974 0.8145 8.7033 6.8574 5.2354 8.0999 12.605 12.309 21.552 12.309 9.8152 0 11.562-2.4009 19.659-9.7156 14.472 14.482 45.155 45.189 53.928 53.968 1.1083 116.93 1.1758 145.95 2.9088 149.74 1.9669 4.3 47.285 48.944 53.566 55.205 31.055-1.5366 32.943-0.8667 37.498-8.2378 5.1959-8.407 3.6668-8.2266-29.674-41.836-0.3665-47.101-1.5032-149.96-0.0541-149.96 1.1888 0 4.4446 3.7954 7.5495 7.3313 0.1526 16.873 1.1082 122.45 1.2619 139.43 21.528 21.559 13.127 13.146 34.569 34.619h185.74c8.9919-8.9685 16.718-16.675 25.71-25.643v-151.44l-2.4584-0.9883c-3.812-1.5322 15.305-0.8828 12.566-0.3555l-2.4585 0.4734v155.39l-32.233 31.182-186.71 0.1289c-11.142 10.875-6.8441 6.6802-17.897 17.469h-36.595c-43.103-42.536-62.496-61.208-62.899-64.74-0.7759-6.8103-4.5911-0.1055-4.5497 3.2063 0.0602 4.7859 58.065 61.162 63.968 66.996h42.329l19.128-17.482c48.835-0.0017 46.644 0.1145 187.59-1.3877l33.326-32.939c0-152.89-0.3436-160.16 1.9121-160.18 3.5804-0.0198 13.25-5.283 18.36-9.9929 24.725-22.791 24.527-64.776-6.8857-82.387l-5.7353-3.2156c-0.4515-347.57-0.535-248.07-1.0944-308.58-7.6692-5.4309-28.749-20.076-35.637-26.452-3.5854-3.3188-6.9154-5.3849-9.2875-5.7625-2.0338-0.3235-120.47-0.9728-263.2-1.4429-668.09-2.2-890.78 4.8811-895.95-0.2831-2.4978-2.4978-3.0441-9.6812-0.8994-11.826 2.1385-2.1385 55.653-0.5275 176.58-2.9501 15.165-16.813 16.679-18.27 33.426-35.548 101.43 0.6899 94.452 0.7903 405.08 0.9702 30.175 31.591 25.425 29.66 48.371 29.66h17.117c26.115-27.302 22.736-18.31 21.563-60.642l-24.332-24.585h-33.878l-29.014 28.955-272.76 0.5956c-73.02-71.154-73.629-71.688-107.52-104.19-29.26 0.6393-54.381 1.4329-149.52 1.5116-82.2 0.0677-83.516 0.035-85.678-2.1263-4.244-4.244-3.3744-21.628 1.2023-24.034 2.0802-1.094 37.079-1.3893 265.47-3.6934 39.243 37.88 50.602 49.12 60.779 57.169 117.97-1.061 122.2-1.0052 222.24-1.172 0.3979-4.7773 1.8472-17.792 0.4308-20.438-0.6108-1.1414-3.8485-2.9226-7.2767-4.0032-7.1561-2.2557-13.817-1.8978-202.76-0.6825-7.7241-7.3861-55.699-53.261-63.425-60.649-55.51-3.157-269.07 3.8395-274.95 0.6918-3.4481-1.8455-4.4783-8.4435-1.7449-11.177 2.0183-2.0183 6.3235-2.119 132.27-3.0927 86.116-0.6659 130.9-1.3912 132.3-2.1428 1.1676-0.625 4.6471-3.8979 7.7321-7.2734 8.6022-9.4121 6.2479-11.218-1.2551-21.42-263.07 1.5232-267.46 1.9423-270.43-0.5089-3.6676-3.033-4.2987-8.968-1.3519-12.714l2.3632-3.0045h274.37c60.733 59.939 68.811 68.026 107.91 104.89 175.98 0.1544-117.56 0.637 575.74 1.0922l13.738 12.801 40.359 0.343c2.4988-2.4904 22.469-21.852 22.469-24.324 0-1.6564 1.0514-1.9318 7.3754-1.9325 8.4088-7e-4 7.425-0.0396 19.456-9.4845l113.47-1.5653 9.1862-8.0707c0.2731-42.548-1.304-27.6 8.7897-36.093 9.0228-7.5923 6.1806-23.873-4.9819-28.537l-3.6021-1.505v-163.87h2.3138c3.5027 0 10.389-7.5356 11.852-12.97 2.7347-10.156-2.7783-20.108-12.434-22.448l-3.1848-0.7717c2.5616-811.19 3.4585-529.25 3.6379-806.24 2.7177-0.0039 23.155 0.1897 24.704-0.8362 2.4798-1.6423 3.2437-194.85 4.0652-312.75 35.837 0 37.626 0.3353 38.936-2.1135 0.7332-1.37 1.1311-19.998 1.1311-52.955 0-49.147-0.071-50.879-2.1135-51.973-2.4591-1.3161-94.714-1.6171-95.491-0.3116-0.6459 1.0853-1.2521 101.99-1.2803 105.71l26.77 0.6136c0.0739 212.65-2.46 232.38-6.8311 1121.9l-2.4724 0.6205c-3.5598 0.8936-9.0432 7.5994-9.8857 12.089-1.5583 8.3068 2.4331 16.895 9.6593 20.784l4.0606 2.1853c0 159.59 0.6349 164.44-2.912 164.44-1.9488 0-10.073 7.9728-12.062 9.8337-21.278 0-43.271 0.3177-44.882-1.293-1.5367-1.5366-4.3834-1.0652 2.0246 2.9801 8.8899 5.6118 4.4146-0.1094 42.537 2.9836v3.1628c0 7.6519 5.6888 15.112 11.524 15.112h3.4633l1.2843 30.048-8.0694 7.2534c-53.062-0.3778-58.529-0.4818-110.67-0.1509-12.013 9.9271-8.6134 8.7411-25.369 8.7411v-71.62l-16.936-16.661c-27.134-0.5988-35.561-0.7849-44.492-0.9821-1.8547 1.6936-24.558 22.282-25.437 23.703-0.9243 1.4956-382 1.0935-522.75 1.0935-14.496-13.307-33.861-30.688-37.907-38.959-1.5266-3.1205-3.4739-5.9413-4.3273-6.2688-0.8534-0.3274-1.5516-1.1721-1.5516-1.8773 0-2.0084 348.38-0.5054 350.47-0.1339 21.762 3.8717 45.547-14.895 48.119-37.967l0.7772-6.972c9.3529-3.8239 17.418-7.3014 45.345-17.216 83.657-29.699 14.878-13.993 238.74-15.503-60.732-2.9982-128.2-4.0463-189.03-4.5476-64.441 21.009-94.704 32.418-95.065 31.941-1.2178-1.6062-2.4833-23.754-25.435-34.512-5.5898-2.62-7.5138-2.9283-18.267-2.9283-18.421 0-20.575 3.1519-33.641 15.746l-320.69-0.166c-9.7681-9.4613-18.161-17.591-27.93-27.052-117.19-0.0455-140.3 0.3069-352.89 2.5502l-2.5591-2.9749c-3.1665-3.6814-3.4083-9.6522-0.5085-12.552 1.9783-1.9783 7.2756-2.0754 150.51-2.7616 232.87-1.1156 170.56-3.3828 392.12-3.3828 95.684 0 147.04-0.3787 148.21-1.0927 1.3663-0.8308 91.896-87.941 102.57-99.977h210.32c87.995-88.152 99.727-99.487 100.4-103.81 1.5898-10.164 5.399-603.49 5.4288-611.34-10.045-0.2131-18.676-0.3962-28.721-0.6093-0.6633 50.686-0.7527 88.678-0.9328 167.09-0.4571 198.77-3.2893 382.34-3.517 435.6-10.288 10.297-74.271 74.334-84.57 84.642l-210.99 0.0328-104.89 103.49c-602.16 1.4524-310.29-1.4657-672.93 1.6777l-2.5317-2.9432c-3.1104-3.616-3.2413-7.5751-0.3464-10.47 2.594-2.594 0.7739-2.1853 333.06-2.1853 20.487-16.266 81.761-84.269 225.88-224.73 21.811-2.2346 20.443-1.6061 29.235-18.928h27.85c4.5076 9.085 6.7872 15.297 19.283 15.297 15.086 0 18.064-8.3229 20.498-13.112 142.22 0 141.83 0.4038 141.83-2.1853 0-2.1257-0.7739-2.189-28.409-2.3218-25.698-0.124-28.836-0.677-72.115-0.8196-38.762-0.1274-41.521-0.2637-41.525-2.0487-0.0109-3.4703-4.2101-8.8901-8.6508-11.156-5.953-3.0369-16.736-3.0619-21.676-0.0503-3.8653 2.3567-7.9011 8.1095-7.9077 11.272 0 1.823-1.1634 1.9606-14.755 1.7494-10.049-0.156-14.751-0.6204-14.751-1.4563 0-4.616-14.238-15.503-19.067-14.58-2.467 0.4717-2.5267 0.3629-1.0452-1.8983 1.7973-2.7428 0.7653-10.453-1.5-11.208-0.9522-0.3175-1.3335 1.4561-1.3335 6.2024 0 5.9724-0.2273 6.6469-2.2399 6.6469-3.5282 0-156.82 150.69-177.28 174.28-11.701 13.486-46.684 48.042-59.221 60.549-17.934 0.0355-305.11 0.6038-323.07 0.6394-4.0824-5.0399-4.1791-2.714-4.1791-28.34 0-25.941-0.2701-22.926 5.0579-27.932 226.53 0 218.43-0.2366 269.18-1.4417 27.631-35.466 212.81-214.89 211.31-217.31-0.4597-0.7438-0.248-0.9015 0.5491-0.4088 0.8126 0.5022 5.8591-3.8228 13.509-11.577 19.13-19.393 18.157-17.783 18.084-29.908-0.0404-6.5546-0.4892-10.334-1.2288-10.334-0.7455 0-0.6932-0.4729 0.1453-1.3113 1.6563-1.6562 1.719-6.3373 0.0852-6.3373-0.7832 0-0.8669-0.4937-0.2319-1.3658 1.5737-2.161 1.755-7.3403 0.3177-9.0723-0.7695-0.927-0.8556-1.5811-0.2086-1.5811 0.6258 0 1.1215-3.0754 1.1448-7.1022 0.0438-7.5047-0.7936-8.6204-3.5327-4.7097-0.9216 1.3159-1.8099 2.1764-1.974 1.9122-0.9995-1.6098-2.4526-4.9438-4.2941-4.4869-0.8071 0.2004-1.0977-0.0054-0.6457-0.4576 0.452-0.452 0-1.7324-1.0093-2.8452-2.104-2.3248-1.8356-2.0256-8.5507 4.0347 3.5725-3.9699 2.2656-2.5176 5.9753-6.6398-1.0873-1.1322-6.261-6.3784-4.7555-5.5532 1.2672 0.6947 5.212-2.8639 4.2457-3.8301-0.3018-0.3018 0.2022-0.5488 1.1201-0.5488 1.2173 0 0.9154 0.7865-1.1153 2.9061-2.6855 2.8031-2.7133 2.9702-0.7817 4.7181 1.8882 1.7089 2.2393 1.5696 6.1576-2.4432 2.2853-2.3404 3.8275-4.7857 3.4268-5.4341-0.4427-0.7164-0.0962-0.9362 0.8826-0.5605 2.3007 0.8827 2.3104 3.7272 3.9312 3.7272 1.8852 0 1.2592-5.0582-0.9655-7.8007l-2.0925-2.5795c-1.4731 1.3816-5.6487 5.5069-5.6487 4.2775 0-0.5612 1.0246-1.6601 2.2768-2.4421 1.4948-0.9336 2.0338-2.0551 1.5692-3.2657-0.88-2.2932 4.0533 2.7173 5.8376 4.4268 0.0869-125.83 0.4337-130.14-1.8335-127.56-2.2257 2.5298-5.285 4.9165-7.3032 6.5559 1.5492-1.9127 3.9529-5.0521 6.8088-7.4053 2.1797-1.796 2.4311-2.9775 2.3711-11.143-0.0535-7.3633-0.4496-9.48-2.0409-10.92-1.8448-1.6694-2.1262-1.5928-4.2987 1.1691-1.2786 1.6255-2.457 2.7574-2.6187 2.5155-2.2891-3.4261-4.5834-5.6636-1.4625-3.207 1.8417 1.4495 2.2708 1.332 4.4694-1.2241 2.3151-2.6915 2.4935-2.7292 3.7084-0.784 0.702 1.124 1.738 2.0436 2.3025 2.0436 1.0328 0 1.0778-34.947 1.1533-86.319h-40.441v6.0096c-17.803 0-17.98-0.3689-18.392 2.5413-0.4257 3.0056-0.4764 2.5456 18.394 1.8293 0 4.6321-0.4067 21.307 1.1545 21.307 1.2551 0 0.9651 2.9103-2.8881 0.3856-2.0618-1.351-4.289-1.6321-9.3169-1.1763-7.3806 0.6693-8.0907 1.0243-7.1182 3.5585 0.5642 1.4703 2.1568 1.7091 9.425 1.4128 5.3232-0.2169 8.7614 0.0712 8.7851 0.7362 0.0499 1.3699 0.9691 42.305 0.9883 43.16-18.128 0-19.818-0.2647-19.403 1.9121 0.3009 1.5771 1.7682 1.9688 8.376 2.2352 4.9655 0.2003 8.5958-0.1622 9.5491-0.9533 1.2555-1.042 1.5379-0.7504 1.5379 1.5891 0 3.0306 1.9399 3.7664 4.137 1.5692 0.9999-0.9999 0.8625-1.8118-0.601-3.5511-4.0276-4.7869 2.0977 2.127 3.3816 0.8434 0.8052-0.8053 1.6583 0.1711-1.7182 2.9052-2.4147 1.9554-2.4199 2.0152-0.369 4.2814 1.9384 2.1419 2.2149 2.1762 4.0621 0.5045 1.0902-0.9866 1.6691-2.3428 1.2864-3.0137s-0.288-0.85 0.2102-0.3979c0.4983 0.452 1.8184-0.0044 2.9335-1.013 1.9599-1.7736 1.9081-1.9637-1.5502-5.6913-1.9679-2.1209-2.7921-3.2648-1.8316-2.5419 1.4095 1.061 2.0961 0.928 3.5599-0.6897 1.6945-1.8724 1.6776-2.1271-0.2563-3.8774-1.9698-1.7826-2.1763-1.7383-4.2635 0.9153-2.6298 3.3432-3.0961 3.427-3.8132 0.6851-0.3879-1.4833-0.0994-1.9305 0.9791-1.5168 1.9726 0.757 4.9711-1.7129 4.0458-3.3325-0.3903-0.6831-0.3018-0.8722 0.1965-0.4202s1.8046 0.0087 2.903-0.9854c1.6384-1.4827 1.7523-2.1208 0.635-3.5535-1.1764-1.5082-1.1249-1.5614 0.3775-0.3899 0.9567 0.746 2.1041 0.9918 2.5494 0.5463 0.4456-0.4455 0.6462-0.1127 0.4458 0.7396s0.7732 2.1423 2.1631 2.8667c1.3901 0.7244 2.4286 1.7479 2.3079 2.2746-0.1206 0.5266 0.8219 1.4896 2.0945 2.14 2.2865 1.1685 2.2755 1.2192-0.9421 4.3018-4.4966 4.3077-3.8772 1.439-0.9678-0.378 2.1909-1.3682 2.2067-1.5192 0.369-3.5496-1.7939-1.9822-2.0499-2.0023-3.9232-0.307-1.6147 1.4613-1.7497 2.153-0.6948 3.56 1.0924 1.4569 1.0579 1.5224-0.2075 0.3954-2.1539-1.9184-6.0776 1.4996-4.2498 3.702 2.2228 2.6785 6.0574-0.0045 1.6831 4.5613-2.8632 2.9886-2.8934 3.1472-0.9352 4.9193 1.1129 1.0071 2.2897 1.5648 2.6153 1.2391 0.3257-0.3257 0.8447 0.374 1.1535 1.5548 0.8973 3.4313-1.4024 0.0649-4.1356 2.3331-1.3348 1.1079-1.383 1.6755-0.2592 3.0636 2.4192 2.9884-1.6284 0.0886-3.9349-2.8188-1.9456-2.4526-2.1298-2.4822-4.136-0.6666-1.1946 1.0812-1.8197 2.6363-1.4501 3.6082 0.5168 1.3588 0.3713 1.4318-0.7119 0.3566-1.5826-1.5707-0.1911-2.597 3.5507-6.58-3.6729-2.8903-2.3292-1.8329-6.1431-4.8342-0.1945 15.186-0.3887 30.359-0.5831 45.545-18.632-0.6639-19.884-1.0109-19.419 1.2858 0.462 2.2825 2.2171 1.9493 19.455 1.5434 9e-4 3.9178-0.1842 126.32 0.6981 129.93 0.643 2.6293 0.6058 2.6512-0.9905 0.5859-1.5862-2.0521-2.4377-1.39-19.531 15.188-44.696 43.347-54.746 57.372-166.28 169.98-11.782 0-56.464 0.3485-56.464-1.0927 0-1.9778-4.3237-5.4633-6.7771-5.4633-2.8896 0-7.0244 4.4048-9.0664 6.3524-54.862 0.4539-64.634 0.6024-94.235 0.2032l-0.7133-4.4609c-0.9562-5.9794-5.1271-13.975-9.5411-18.29-4.3145-4.2181-12.468-6.757-16.627-8.2737l6.6542-2.9713c16.704-7.459 25.476-25.858 20.554-43.114-8.4575-29.655-42.451-38.464-62.745-16.259-7.0417 7.7048-9.9924 15.414-9.9285 25.939 0.0884 14.451 5.5243 21.164 15.6 34.596-3.546 3.791-9.4751 9.6901-13.087 16.573-2.7234 5.1892-3.0864 7.0392-3.0851 15.715 0 9.0096 0.3081 10.429 3.6597 16.936 4.5045 8.7452 12.647 16.698 19.482 19.026 2.8142 0.9589 8.6455 1.7338 13.048 1.7338 11.388 0 18.939-3.0745 26.76-10.895 6.0074-6.0074 6.8385-7.6564 10.342-20.519 0.4459-1.6367 27.758-1.3658 94.639-1.3658l3.2463 2.7316c6.8523 5.7657 9.8525 0.8638 12.681-2.7316h58.125c49.943-50.754 85.864-87.029 97.458-100.52 2.3115-2.6906 85.301-88.637 85.942-84.232l0.363 2.4958c2.0022-1.7938 3.7227-3.3352 5.7249-5.129-1.9975 2.4594-5.9047 6.7745-5.9047 9.9562 0 2.3241 0.287 2.5326 2.1293 1.5466 3.0388-1.6263 5.202-6.1747 6.0928-5.2841 0.5784 0.5784-2.8973 3.6376-8.2734 8.2393l0.2708 23.389c-81.809 78.772-144.71 144.74-222.57 225.63-16.854 0.2964-240.05 3.9517-242.27 2.871-0.4397-0.2135 0.7034-3.0513 2.5403-6.3059 6.3154-11.19 8.7954-4.9767-40.99-102.7-53.952-105.9-56.272-110.31-63.631-121.1-11.382-16.679 2.6758-1.7555-22.293-46.737-7.8229-14.093-15.75-31.088-17.658-32.27-1.8618-1.1537-329.34-0.2181-335.41-0.2061 2.5483-3.4467 8.1666-9.592 5.1543-21.205-2.4342-9.3844-11.341-16.062-21.487-16.11-7.1732-0.0341-16.022 4.7584-19.224 10.411-2.6833 4.7377-3.4481 3.3467-0.8849-1.6098 0.8774-1.6968 1.2871-3.3933 0.9108-3.77-0.6796-0.6796-5.4547-0.6847-11.247-0.6847v34.808c-9.7074 1.1679-8.6217 1.2491-44.252 2.8889-0.7444 29.704-0.4861 29.539 0.6813 42.613 211.48-0.4003 355.74-1.1074 373.73 0.7394 3.4614 5.4569 7.7772 11.898 12.8 22.206 51.326 105.34 120.82 238.12 122.67 252.14 1.6344 12.333 0.0792 601.52 1.433 777.13 1.4646 189.97-1.7842 90.017-1.7842 403.19 1e-4 102.76-0.4109 189.91-0.9133 193.65-1.0874 8.1055-5.8126 16.406-23.492 41.267-14.659 20.613-7.1794 10.312-44.243 66.726-58.698 89.343-57.16 88.273-62.827 99.599-103.9-2.5095-1392.3-2.4316-1705.5-3.5205-120.05-200.51-84.273-138.49-135.37-230.94-3.0422-5.5039-3.1663-6.1941-2.0627-11.473 1.6833-8.0532 2.2415-116.01 3.1062-119.03 0.5325-1.8572-1.1145-1.9426-31.671-1.6389-17.728 0.176-32.456 0.5659-32.729 0.8665-0.7068 0.7771-1.8267 141.27-2.5991 142.04-1.1575 1.1575-437.31 2.5308-510.87 3.5793-16.102 0.2292-17.334 0.3967-19.595 2.6609-2.8313 2.8345-4.0349 13.152-2.1143 18.124 2.647 6.8533 8.2117 6.2297 56.185 6.2297-1.2666 119.01-1.4495 79.21-1.4495 864.28-5.7327 6.3459-11.971 12.372-11.971 24.591 0 22.049 22.947 35.493 45.792 26.827l7.0508-2.6748c39.388 40.691 39.983 40.599 39.988 45.728 0 6.2532 3.3601 11.169 9.384 13.751 6.3394 2.7173 8.4595 2.6892 14.412-0.1924 12.434-6.0193 11.758-22.419-0.1477-28.182-8.7109-4.2173-11.857-1.6824-21.591 3.615-12.27-12.27-26.331-26.331-38.601-38.602 4.7334-9.6511 8.9377-16.72 5.5217-27.004-3.7322-11.237-11.936-15.579-21.439-21.445l0.033-860.69c282.76-0.2285 133.74-0.4995 480.2-1.6387 14.133 26.915 11.665 22.517 40.469 70.517 6.8914 11.485 50.707 88.1 70.978 121.79 18.289 30.396 22.391 45.377 30.597 50.074 3.4631 1.9822 60.418 1.9385 62.366 3.1655 2.0103 1.2676 0.9788 684.85 2.2717 690.11 1.3474 5.4807 121.98 125.83 124.04 129.51 1.228 2.1943 0.3779 72.516 0.3542 75.557h-6.5559c-0.0256-1.6174-1.0898-73.097-1.4028-73.546-1.7012-2.4382-118.09-118.02-121.21-124.52-1.8613-3.8843-1.9519-20.071-1.9519-349.02 0-942.69-4.8806 346.53-0.8604 355.21 2.7473 5.9324 85.831 87.95 118.32 122.26-0.0239 52.046-0.2266 50.931-1.4275 69.07h-5.0251c-6.0796 0-12.155 2.8445-14.008 6.5542-1.6003 3.2024-1.3765 41.156-1.3918 132.21h-111.43c-0.1794-41.545-0.3843-89.026-0.5635-130.57-68.948-0.4172-93.79-0.7861-95.808 0.8081-3.4504 2.7268-3.0508 47.139-3.0769 129.76h-15.297c0-118.59 0.2576-129.69-1.7271-130.45-2.6475-1.0159-90.973-0.7383-91.607 0.2878-0.7388 1.1948-0.7881 125.86-0.7961 130.17h-14.042c0-104.79 0.2236-128.48-1.4915-129.9-1.9329-1.6038-50.907-0.9478-98.486-0.6685-1.1467 82.285-1.2954 91.738-1.6392 130.57h-14.378c0.1782-41.545 0.3818-89.026 0.5601-130.57-31.773-0.967-31.405-1.1702-99.272 0-0.1792 41.545-0.3843 89.026-0.5635 130.57h-17.372c1.1819-113.88 1.5557-129.3-0.2393-130.79-2.4961-2.0662-96.1-1.6931-96.884-0.9099-1.6943 1.6924-1.8831 113.55-1.8552 128.97l6.8467 0.6548c27.908 2.6692-31.8 1.9224-25.81 1.2876 3.5107-0.3718 4.0417-0.8274 4.4854-3.8511 0.2769-1.8862 0.5813-26.567 0.6763-54.847 0.2336-69.572 2.031-71.011 0.137-72.181-1.4531-0.8979-98.75-2.1248-100.48-0.0452-0.9656 1.1636-3.2769 83.477-3.3081 117.82-0.0107 11.201 0.1106 11.83 2.448 12.769 3.551 1.428-103.8 0.8835-101.23 0.377 2.5867-0.5095 3.7029 1.0698 3.71-77.063 0.0107-58.282 0.5671-54.341-7.7246-54.21-33.84 0.5393-83.376-2.1121-86.716 1.2273-1.0249 1.0249-2.5659 1.863-3.4243 1.863s-1.583 0.123-1.6089 0.2732c-0.0264 0.1501-0.3311 28.726-0.6763 63.502-0.5244 52.821-0.3813 63.385 0.8677 64.176 1.9746 1.2512-18.909 1.4133-16.533-0.0886 1.8604-1.176 1.8862-16.816 3.6152-127.14l-3.1733-2.5393c-3.3413-2.6731-9.8755-3.426-13.394-1.543-2.8262 1.5122-49.7 2.7341-52.263 1.3621-3.0024-1.6067-11.088-0.3201-11.74 1.8682-1.7534 5.8826-1.7207 122.96-1.7158 129.07-5.9766-0.043-19.857 0.1589-16.799-1.0754 2.3101-0.9331 2.3267-1.2371 3.2778-59.753 0.5254-32.349 0.8589-60.701 0.7397-63.005-0.249-4.8406-2.5713-6.5447-5.7505-9.7239-35.808 3.189-57.386 2.644-58.164 1.8665-0.4443-0.4446-13.504-1.4944-21.097-1.6958-3.1909-0.084-11.467 2.6445-12.879 4.2468-1.8511 2.1011-1.7305 18.556-2.4185 129.14-5.5508-0.0383-20.45 0.1804-17.374-1.063 2.2783-0.9211 2.2979-1.3284 3.0898-63.913 0.6968-55.058 0.5903-63.301-0.8423-65.487-1.4927-2.2783-2.6929-2.5554-13.47-3.1111-17.247-0.8896-29.129 1.6467-29.677 0.167-0.2002-0.542-2.6587-0.9204-5.4634-0.8416-12.366 0.3494 10.581 1.6296-5.6455 1.8811-5.9468 0.0918-7.7446-0.1831-6.5557-1.0044 3.002-2.0718-23.612 1.4377-25.16-1.0684-1.2158-1.968-6.2798 1.3936-7.0884 4.7056-0.7905 3.2395-0.0063 125.18 0.0156 129.74-39.111-0.3689-19.212-0.6504-15.898-2.6982 1.3286-0.8213 1.6333-123.89 0.311-125.69-2.4844-3.3813-6.2212-5.2144-12.024-5.8987-4.5449-0.5359-6.8022-0.363-7.6914 0.5894-1.5244 1.6321-52.116 2.1714-51.111 0.5449 0.3599-0.5815-4.8213-0.9053-12.468-0.7791-14.921 0.2463-13.31 0.4297-18.595 5.3945 0.0684 15.433 0.4946 111.43 0.5635 126.9 29.899 0.4741 23.8 1.6558-1.1841 1.5261-23.879-0.1243-20.173-0.5359-13.737-2.249 1.7031-19.395 1.2007-45.438 0.7168-127.97l-2.7695-2.0679c-3.9902-2.9788-15.503-2.8125-14.172-1.9958 4.8154 2.9749-60.135 2.271-57.358 1.1655 1.3618-0.542-2.5522-1.0659-10.38-1.3899-14.15-0.5847-12.473-0.6074-18.029 4.6472v128.34c15.269 0.8977 21.185 1.2195-3.8242 1.2935-34.131 0.1006-13.731-0.8567-12.221-2.3657 0.8794-0.8787 1.166-87.626 1.3467-125.15l-4.9692-6.7654c-35.461 2.4287-71.981 2.2595-70.476 1.3025 1.0981-0.698-2.2358-1.0474-10.107-1.0586-17.711-0.0249-16.083-5.2388-16.285 52.157-0.1841 52.114 0.1289 79.185 0.9248 80.037 0.2812 0.3005 4.0366 0.8335 8.3452 1.1846 10.13 0.8247-51.252 0.7322-69.197-0.105l4e-4 0.0017zm1549.4-226.18c4.2632-4.6375 7.9265-8.6223 12.19-13.26-1.2593-13.438-1.3579-16.223-1.009-16.223 0.2812 0 1.9766 2.3567 3.7673 5.2373 3.626 5.833 11.508 11.632 18.313 13.473 6.2217 1.6838 17.749 0.6509 23.01-2.0615 18.336-9.4534 21.718-34.877 6.4243-48.305-6.3416-5.5676-11.9-7.6289-20.629-7.6494-15.133-0.0354-16.821 2.9905-27.638 13.807-1.478-48.02-2.6064-135.7-1.0034-213.76 7.8677-4.4404 15.642-8.0088 16.901-19.174 2.8608-25.385-29.43-31.151-38.07-12.125-6.0601 13.346 3.0117 21.162 14.654 33.848-0.1868 28.692-1.0605 209.33-2.4167 212.89-0.5896 1.5508-7.7354 8.0505-16.326 14.85-18.526 14.664-19.632 17.05-12.761 27.541 2.4929 3.8064 2.5076 4.0579 3.1309 53.54 0.3442 27.344 0.6431 49.839 0.6641 49.989 0.0461 0.3325 4.1958 0.2732 5.5435 0.2732-0.0066-4.8643 0.1814-97.023-1.1128-101.54-0.5413-1.8872-2.2429-4.9272-3.7812-6.7556-1.5386-1.8284-2.7971-3.761-2.7971-4.2952 0-2.3188 7.7336-9.4255 16.879-15.511 11.394-7.582 13.943-10.404 16.993-13.28 0 7.1099 0.4268 10.928-2.1853 13.54-2.4368 2.4368-2.1853 4.697-2.1853 19.905-4.1252 4.125-11.585 10.976-12.425 15.174-0.9229 4.6147-0.8843 93.292 0.0417 94.218 0.8347 0.8347 3.8547 0.7285 5.8274 0.7285v-95.08zm37.227-23.977c-6.6282-2.625-9.9111-6.676-9.9111-12.23 0-21.207 28.389-21.791 28.405-0.2515 0 13.864-10.923 11.122-10.923 13.619 0 1.3901-1.9158 1.1023-7.5713-1.1372v-2e-4zm-32.773-256.37c-4.7227-3.9739-3.8943-5.6294-1.0073-3.0771l2.3545 2.0815c-3.5955-5.5969-3.5986-5.0964-3.6331-9.0144-0.0142-1.6343-0.1707-1.6738-1.0759-0.2732-0.8103 1.2544-1.063 1.2927-1.0757 0.1638-0.011-0.8113 1.6548-3.1467 3.6982-5.1902 4.1389-4.1387 8.4551-4.8232 13.609-2.158 2.9751 1.5383 5.6216 5.7419 5.6216 8.9287 0 3.1091-3.3215 8.0557-6.52 9.7097-4.6272 2.3928-8.1443 2.0488-11.971-1.1711l-2e-4 3e-4zm-469.55 359.25c0.8425-16.523 0.7122-46.703 0.7122-63.198 16.057-15.713 19.573-18.97 19.984-18.97 2.5461 0 4.0544 1.7495 4.0544 4.7034 0 3.7434-2.5679 5.875-14.942 17.91-2.1353 46.69-1.4297 74.632-0.6279 74.617 1.0454-0.0254 4.6074-1.03 5.7366-1.3328v-68.72c15.101-15.853 16.39-16.609 16.39-21.498 0-4.8867-3.1182-9.6284-7.4031-11.258-7.0071-2.6638-12.395 4.259-29.43 22.765-1.0603 68.239-1.4304 77.147 0.4395 78.618 3.5339 2.7795 4.3582 0.5688 5.0825-13.636h0.0043zm128.65-23.938 0.6357-38.469c2.7168-2.8728 15.527-16.802 18.326-17.909 3.6794-1.4565 7.1726 0.8613 7.1726 4.7595 0 3.8845-3.6038 7.1445-17.482 21.636 0 60.937-0.2422 67.88 1.7124 68.63 4.8796 1.8726 4.3022-2.4136 4.9614-67.073 3.7981-3.5972 13.846-12.574 15.876-17.433 1.4951-3.5786 1.4832-4.4221-0.1228-8.6274-2.1912-5.7373-5.6218-8.113-11.736-8.1267-5.356-0.0129-4.7661 0.0781-24.896 21.239-0.2285 82.398-4.0989 81.124 4.9163 79.842l0.6357-38.469 8e-4 -3e-4zm102.83 15.123c0.2441-26.168 0.2825-36.007 0.3352-45.95 10.341-10.532 14.699-14.017 12.553-21.988-1.4951-5.552-5.5903-8.6931-11.334-8.6936-4.1912-2e-4 -5.0398 0.574-12.505 8.468-4.405 4.6577-8.4614 9.6069-9.0144 10.998s-1.0054 19.953-1.0054 41.248c0 37.597 0.061 38.718 2.1206 38.718 1.1665 0 2.3806-0.4204 2.6985-0.9343 0.7656-1.2397 1.9751-74.761 2.0212-77.19 5.6189-6.8401 12.659-15.843 15.835-15.843 3.4812 0 5.8601 2.5806 5.9709 6.4771 0.1187 4.1809-1.5864 5.248-13.349 16.167 0 28.037-0.0911 70.868 0.6094 71.569 0.3354 0.3354 1.5647 0.3599 2.7317 0.0547 2.0059-0.5244 2.1335-1.7915 2.3323-23.1h0.0011zm-718.05-43.51-55.018-54.688c5.5239-7.7568 5.1743-7.4392 6.0557-19.626 23.79-0.7498 40.091-1.5444 43.052 0.0154 3.2451 1.709 74.037 72.436 77.137 75.517l-0.3447 63.998h5.5713v-66.145c-21.742-21.712-67.518-67.428-80.401-80.294-15.46 0.3586-33.169 0.7693-48.629 1.1279-5.9302-4.0298-7.1294-5.4749-14.198-5.4749-7.7036 0-12.58 2.9824-16.025 9.801-3.1147 6.1653-3.1079 10.481 0.0273 16.409 5.0815 9.6091 13.013 8.7549 23.843 8.7549l53.435 51.7v65.366c1.7197-0.2444 3.1973-0.4541 4.917-0.6985 0.0703-7.9845 0.5068-57.747 0.5776-65.763zm-70.952-56.428c-10.79-3.7043-11.048-18.856-0.396-23.306 3.5156-1.469 4.3838-1.4502 8.6792 0.1904 15.256 5.8267 7.1612 28.418-8.2832 23.116zm911.19 40.946c-16.679-17.485-15.994-17.639-21.88-17.639-4.1086 0-5.575 0.5618-7.8416 3.0049-9.0466 9.7505 0.9224 18.782 9.4814 27.83v67.502l6.0095 0.0017v-71.19c-2.5259-2.324-5.728-5.374-9.7305-8.3833-4.2449-3.1909-5.2925-6.9724-2.9302-10.578 3.1521-4.8108 6.887-3.6807 13.954 4.2219l6.21 6.9446c0.2292 12.734 1.1025 59.817 1.1772 71.139 0.0676 10.253-0.0647 9.1082 4.9775 8.3918 0.3508-49.8 0.2214-31.446 0.5727-81.246zm-1290 80.036c1.9468-0.7468 1.7285-4.4924 1.7285-24.224l4.0195-0.7542c5.4336-1.0193 10.838-6.6106 12.405-12.833 2.3574-9.3623 2.9722-3.5137 157.39-153.27 11.163-10.826 22.278-20.981 24.702-22.566 6.5405-4.2803 9.4463-11.001 8.9043-20.595-0.3628-6.4163-0.9224-8.1584-3.7578-11.698-4.6538-5.8098-13.804-10.589-20.275-10.589-7.833 0-17.158 5.2244-20.308 11.378-4.334 8.4656-2.8418 21.607 3.1812 28.019l2.2573 2.4033c-12.95 17.89-125.21 120.83-150.2 145.19-8.8936 8.6704-11.041 10.25-13.112 9.6472-8.8447-2.5752-16.524-1.1204-21.381 4.0503-8.771 9.3364-3.7383 17.265-3.5703 43.663 0.0698 10.955 0.2212 11.746 2.2397 11.746 3.4722 0 3.27-3.501 3.8442-27.135 2.4839 1.0461 4.6182 1.9451 7.1021 2.9915-1e-4 26.53-0.6358 26.394 4.829 24.573zm-5.6528-30.47c-5.6953-2.4753-9.0088-6.7769-9.0088-11.695 0-9.167 6.6372-14.758 16.234-13.676 3.9536 0.4456 5.7476 1.3816 8.5864 4.4792 4.4541 4.8601 4.8403 10.509 1.0977 16.062-4.2325 6.2806-9.8672 7.8895-16.909 4.8294zm21.291-23.368-1.8584-3.146c45.674-42.705 118-110.88 161.86-155.08 5.5977 1.2808 9.6592 2.1797 9.6592 3.219 0 3.3782-156.37 150.06-156.5 150.18-4.644 4.3855-9.0859 7.9734-9.8711 7.9734-0.7856 0-2.2646-1.4155-3.2866-3.1458l-5e-4 2e-4zm165.56-160.9c-1.5884-1.6101-1.8535-7.5034-0.3379-7.5034 0.5659 0 1.3325 0.4917 1.7036 1.0928 0.3716 0.6008 2.1289 1.0925 3.9048 1.0925 4.8999 0 10.824-5.9346 11.585-11.605 0.542-4.0398 0.1982-4.9502-3.3457-8.8728-2.1719-2.4041-3.9644-5.2952-3.9839-6.4243-0.0693-4.1443-1.2007 1.7715-4.8374 1.7715-3.5293 0-9.4185 3.5535-11.019 6.6489-2.1899 4.2334-1.9922 7.843 0.6084 11.15 1.8633 2.3684 2.0034 3.2271 0.9175 5.6106-0.7056 1.5479-1.6953 2.8142-2.1997 2.8142-3.0693 0-7.4927-8.7649-7.4434-14.751 0.0542-6.6204 7.6357-16.046 14.038-17.452 5.1572-1.1328 14.808 2.2473 18.535 6.4922 6.2563 7.1257 6.814 15.196 1.5996 23.154-3.6289 5.5391-16.564 9.9868-19.726 6.7822l4e-4 1e-4zm-0.2729-9.6604c-1.4116-0.9363-1.3789-1.0898 0.2344-1.1042 1.9297-0.0176 4.8057-4.0815 3.6831-5.2046-1.52-1.5188-8.2544 5.5398-8.2544-3.0071 0-4.2168 3.8208-6.8025 9.8003-6.6331 2.5698 0.073 2.7285 0.4236 2.6807 5.9041-0.0449 5.0359 0.1406 5.564 1.3657 3.8887 1.6577-2.2673 1.4668-6.9402 1.4946-9.7156l1.5615 2.7317c2.9658 5.1882 1.2666 11.585-2.8398 10.692-0.7871-0.1714-1.4536 0.4258-1.481 1.3274-0.0591 1.9531-5.811 2.7354-8.2441 1.1208h-1e-3zm-73.426 223.75c1.7012-1.7014 1.311-16.75 1.311-24.45 7.9727-6.6643 12.256-9.3318 13.789-19.196 1.0259-6.6018-2.5117-0.7815 121-125.42 24.686-0.0171 340.82-0.2349 365.51-0.252 9.4526 8.0186 16.525 14.46 16.525 11.336 0-1.9128-12.56-15.631-14.834-16.201-3.2622-0.8191-381.32 0.1057-388.01 0.1184-53.929 55.628-57.08 58.578-111.75 112.72l-5.4644-1.1194c-15.507-3.1765-29.372 14.537-20.259 27.947 2.5298 3.7224 2.7324 4.9734 2.7466 16.916 0.0176 15.596 0.4932 17.814 3.8198 17.814 4.2192 0 3.8135-2.6262 3.8135-26.265 1.0762 0.2583 5.8677 1.3123 6.5562 1.9395 0.3003 0.2737 0.4326 6.1047 0.2939 12.958-0.2295 11.316-0.0732 12.46 1.6934 12.46 1.0703 0 2.5356-0.5901 3.2568-1.311l0.0011 4e-4zm-12.488-32.008c-4.4419-2.6626-8.0547-8.1379-8.0547-12.208 0-3.6306 3.9004-9.4329 7.7158-11.48 2.0479-1.0979 5.8276-1.9966 8.3999-1.9966 3.7534 0 5.4419 0.7012 8.5522 3.5515 7.0112 6.4253 5.9038 17.621-2.2407 22.655-4.7188 2.916-8.8896 2.7646-14.373-0.5222l5e-4 3e-4zm22.163-23.312c-2.709-2.9934-2.3042-4.0095 3.6343-9.1245 7.0513-6.0737 92.038-93.406 103.06-104.7 3.3701 0 11.695-0.0496 11.655 0.2732-0.1367 1.0894-114.41 115.58-115.34 115.57-0.6582-0.011-2.0107-0.9167-3.0049-2.0156v-3e-4zm71.399 18.583 0.5464-37.473c0.9634-0.7397 5.2451-4.1885 6.2827-4.2192 0.4507-0.0132 0.8193 17.958 0.8193 39.938 0 37.47 0.1191 39.939 1.9121 39.594 2.2217-0.427 1.9712-5.0676 3.0049-87.169 20.604-21.107 21.724-22.261 51.322-52.482h55.31l-0.6851 3.6504c-1.4634 7.8013 4.1353 17.5 11.44 19.819 2.6826 0.8513 2.2573-0.0095 2.2573 115.3h5.4634v-113.47l3.752-1.2383c4.9443-1.6318 11.23-8.7034 12.165-13.686 2.542-13.55-5.606-23.249-18.626-22.169-3.5547 0.2949-6.9927 1.4026-9.1738 2.9553-3.4194 2.4346-4.0537 2.4827-32.133 2.4353-15.755-0.0261-29.453 0.2966-30.44 0.7185-2.373 1.0142-64.657 64.821-67.272 67.486-0.0474 3.197-1.2661 73.455-0.5654 76.13 0.3003 1.146 1.3047 1.885 2.3027 1.6929 1.5791-0.3032 1.8301-4.4028 2.3174-37.813v2e-4zm127.93-86.262c-8.4253-8.425-2.811-22.603 8.9497-22.603 3.5537 0 4.9282 0.6963 8.0078 4.0564 3.105 3.3884 3.7173 4.887 3.7173 9.0989 0 4.2776-0.5635 5.6057-3.7148 8.7571-3.166 3.166-4.4702 3.7151-8.8247 3.7151-4.1265 0-5.6929-0.5828-8.1353-3.0249v2e-4zm119.44 122.58c0.8716-2.2708 0.6631-52.237 0.6631-55.242-1.7197 0.2441-3.1973 0.4541-4.917 0.6985-0.0225 2.0762-0.7559 53.054-0.0537 54.885 0.7476 1.9475 3.5137 1.728 4.3081-0.342h-5e-4zm77.344-23.949c0.1074-14.123 0.2305-26.783 0.2734-28.136 0.0928-2.9197-1.918-2.7419-4.8394-3.1567 0 56.313-0.4009 56.97 2.1855 56.97 2.1178-1e-4 2.1911-0.7935 2.3805-25.677zm126.29-14.322 0.2866-39.452c8.0654-7.8472 14.996-14.59 23.062-22.437l6.4624 6.1912-20.211 20.295c-0.0527 75.612-0.4814 74.794 2.2583 75.185 4.1929 0.5984 3.6987-3.814 3.6987-72.579 7.5688-7.3635 22.026-21.234 21.638-22.171-1.0142-2.4475-42.268-41.458-42.645-40.327-0.5957 1.7881 1.2681 3.5947 24.292 28.72-21.411 21.471-24.087 24.625-28.035 24.625-8.353 0-9.8999 4.0605-1.7461 4.584l5.1899 0.3328c0.0161 3.0762 0.3521 73.831 0.4629 75.742 0.0991 1.7302 3.1143 1.0115 5.0005 0.7437l0.2866-39.453h-4e-4zm190.38 3.127 0.5461-36.326c19.192-19.163 22.616-22.998 25.416-22.256 1.4172 0.3755 2.76 1.8091 3.1499 3.3625 0.7727 3.0789-1.8687 5.2666-19.825 23.296v68.25h5.4634c0.0701-7.9153 0.5088-57.483 0.5793-65.451 18.064-18.46 20.992-20.306 17.298-28.413-1.6191-3.553-7.8613-6.532-11.688-5.5774-3.7065 0.9248-21.821 19.532-26.055 23.743-0.0481 2.4612-1.6619 73.913-0.7954 75.313 0.3594 0.5813 1.7131 0.9055 3.0085 0.7209 2.3452-0.3342 2.3577-0.489 2.9014-36.661l5e-4 3e-4zm-516.8-69.27c-1.7275 0.2451-3.2114 0.4558-4.9385 0.7012-0.0864 15.948-0.4785 88.111-0.5679 104.5 1.7275-0.2454 3.2114-0.4558 4.9385-0.7012 0.0864-15.948 0.4785-88.111 0.5679-104.5zm2582.7 60.509c0.1656-22.865-0.1276-39.594-0.6938-39.594-1.281 0-4.0824 4.7341-4.3535 5.1479-13.486-0.1926-72.662-0.6272-77.485-2.2822-2.4462-0.8394-24.771-22.216-70.695-67.692-64.314-63.688-67.143-66.656-67.669-71.022-0.7644-6.3386-1.7407-141-1.7422-240.3-2e-3 -111.42-2.0093-97.354-1.7122-35.756 0.1826 37.84-0.0547 47.246-1.2166 48.21-1.7268 1.4331-1.9292 5.301-0.2771 5.301 0.6692 0 0.8706-0.9319 0.4727-2.1853-0.4182-1.3181-0.1963-2.1853 0.5596-2.1853 1.7627 0-0.2144 3.0972-0.2639 56.405-0.0073 7.7959-1.4165 97.376-2.4609 100.01-0.3933 0.991-0.1902 2.1262 0.4519 2.5229 1.5789 0.9758 1.1672 49.761 1.1672 73.22 20.075 19.943 134.77 134.48 140.41 137.4 7.1974 3.7322 23.718 1.6448 81.591 3.0354-0.4856 74.503-0.9227 70.231 1.723 69.722 1.7729-0.3413 1.933-3.2537 2.199-39.962l-2e-4 -1e-4zm1734.3 33.74c4.698-2.3552 10.476-10.616 11.448-16.366 3.1674-18.748-22.347-35.617-38.536-17.179l-3.5779 4.0752c-94.312-91.263-112.07-108.8-165.1-160.91l1.7314-4.3274c3.6549-9.1343 0.663-18.273-7.9373-24.246-4.6475-3.2275-5.7974-3.5293-13.449-3.5293-7.73 0-8.686 0.2583-12.566 3.3938-5.4626 4.4155-7.9587 8.8142-8.7095 15.349-0.5096 4.4351-0.0984 6.2656 2.5349 11.268 4.0764 7.7446 11.551 12.05 20.949 12.069l6.158 0.012c173.2 169.72 182.53 179.36 190.35 181.81 5.8827 1.8467 11.062 1.405 16.708-1.4253l-1e-4 -2e-4zm-17.35-5.2112c-5.1887-2.6418-7.7722-7.3826-7.7773-14.271 0-4.814 0.5202-6.2954 3.3736-9.5454 11.08-12.619 31.405-1.8516 26.212 13.886-3.0617 9.2771-13.635 14.092-21.808 9.9312v-3e-4zm12.9-8.7202c2.9034-3.6909 2.8694-6.7163-0.1111-9.8889-3.1761-3.3806-8.887-3.4319-11.22-0.1006-2.6096 3.7258-2.1349 7.998 1.1781 10.604 3.9028 3.0701 7.4229 2.8569 10.153-0.6145zm-70.397-45.329c-69.117-67.144-127.29-123.29-127.29-124.52 0-0.9229 0.4708-1.1365 3.1652-1.4373 0.539-0.0601 19.592 18.079 42.34 40.309 100.13 97.845 124.23 120.39 123.68 123.72-0.2995 1.813-8.6797-5.8018-41.895-38.069v3e-4zm-146.52-128.64c-11.51-5.3599-12.225-20.8-1.2714-27.479 4.4428-2.709 8.8048-2.7271 14.676-0.061 5.5083 2.5007 8.1216 6.1973 8.7489 12.376 1.2275 12.089-10.912 20.399-22.153 15.165l-1e-4 -5e-4zm13.867-11.334c0.9801-8.6765-1.7171-11.955-8.961-10.892l-3.1623 0.4641v17.234c1.5091 0 6.838-0.2483 6.0381 1.0466-0.3558 0.5757 0.7216 0.3398 2.394-0.5239 2.574-1.3296 3.1407-2.4543 3.6912-7.3293zm-724.78 197.42c5.1514-2.1526 8.6571-5.4321 11.286-10.558 2.7189-5.3015 2.6224-8.2312-0.4634-14.076-5.1547-9.7639-16.058-14.179-24.448-9.8989-11.935 6.0889-14.79 19.074-6.2672 28.507 6.6366 7.3457 12.489 9.1187 19.892 6.0254v3e-4zm-12.152-9.3042c-3.4336-2.7009-5.0532-7.9988-3.8208-12.497 2.0741-7.5691 10.854-9.5674 17.075-3.8857 3.3728 3.0803 3.9822 4.9495 3.5828 10.988-0.4482 6.7737-10.847 10.106-16.837 5.3943zm-116.87 8.0928c4.5359-2.1523 8.9182-8.3533 9.8168-13.89 1.2205-7.5205-4.1598-16.883-11.404-19.843l-2.9146-1.1914c52.906-54.839 41.511-44.532 92.831-96.568 54.365-55.123 38.28-41.013 73.553-78.094 24.469-25.722 29.853-31.961 28.151-32.614-0.8447-0.324-3.4296 0.8042-5.7442 2.5071-4.3378 3.1919-36.369 36.979-53.373 56.299-10.079 11.452-141.82 146.34-145.68 149.13-8.895 6.4436-12.143 12.986-10.74 21.633 1.8462 11.377 14.712 17.751 25.498 12.632l2e-4 -3e-4zm-15.406-10.293c-9.2195-10.956 5.1545-23.719 15.294-13.579 6.1719 6.1719 1.0179 16.941-8.1078 16.941-3.5244 0-4.8982-0.6426-7.1863-3.3618v-3e-4zm-179.79 7.4553c5.5162-3.7173 7.9602-8.7168 7.9602-16.284 0-7.2388-1.1763-8.0388-4.9452-13.137 19.329-20.03 102.6-110.34 108.24-113.36 2.8671-1.5344 27.036-28.97 84.769-87.517 144.12 0.0874 147.04 0.4363 150.26-1.9766 2.7184-2.0352 1.6493-2.0776-72.203-2.8831-41.229-0.4497-76.39-0.5037-78.136-0.1204-2.323 0.51-19.284 16.998-63.258 61.492-70.218 71.049-64.776 65.591-134.36 140.12-9.7906-0.29-17.188-1.3091-23.236 7.6663-2.8976 4.2996-3.3748 13.694-0.9352 18.411 4.7754 9.2346 17.746 13.044 25.842 7.5879h2e-4zm-12.711-5.6467c-13.268-5.7769-8.6702-24.68 5.3629-22.047 10.643 1.9966 12.409 17.841 2.4528 22-4.4878 1.875-3.6276 1.8701-7.8157 0.0469v-3e-4zm1176.8-37.445c-7.7745-13.266-27.092-14.994-37.087-3.3169-9.3792 10.958-7.2424 26.096 4.7574 33.706 4.1811 2.6516 6.0841 3.1416 12.121 3.1213 22.07-0.0734 28.686-19.044 20.208-33.511zm-25.174 26.003c-15.746-7.1992-11.876-27.976 5.4712-29.367 4.5085-0.3616 6.2884 0.0427 9.3876 2.1313 7.3744 4.9702 9.6456 13.998 5.1864 20.615-4.8182 7.1495-12.987 9.8475-20.045 6.6204zm7.9078-3.9412c0.3459-0.9016 1.2965-1.6392 2.1125-1.6392 4.0378 0 5.2245-11.633 1.5605-15.297-2.2091-2.209-9.4844-3.1792-8.1949-1.0925 0.3714 0.6011 0.1546 1.0925-0.4818 1.0925-1.6587 0-0.7681-2.1848-1.9766-2.1875-0.4507 0-0.6574 3.9851-0.4594 8.8594 0.2886 7.1008 0.071 8.7134-1.0926 8.1143-0.799-0.4114-0.2918 0.2732 1.1269 1.5208 3.0232 2.6587 6.5129 2.9553 7.4055 0.6296l-1e-4 -3e-4zm-1834.2-6.8076c12.093-8.6926 12.738-21.969 1.4841-30.552-3.554-2.7109-4.9456-3.0681-11.949-3.0681-6.3015 0-8.5452 0.4619-10.944 2.2529-5.8452 4.3643-7.5229 7.7363-7.5229 15.122 0 5.8386 0.4561 7.4319 3.1313 10.939 4.5684 5.9893 8.9426 8.281 15.815 8.2859 4.6172 0 6.7009-0.6184 9.9851-2.9792v2e-4zm-16.913-4.9929c-1.9832-1.9832-4.2295-5.6877-4.9919-8.2327-1.1812-3.9429-1.1313-5.1616 0.3374-8.2419 1.7932-3.7603 7.4482-7.2361 11.773-7.2361 3.9463 0 10.707 4.4673 12.51 8.2659 1.9868 4.187 2.0295 4.873 0.5452 8.7769-2.3201 6.1035-2.5586-3.5168-8.7002 2.625-4.3108 4.3108-13.703 1.2991-10.006-0.9863 1.5684-0.9692-0.6396-8.5061-2.7268-9.3066-1.7578-0.6746-2.114 5.3967-0.3789 6.469 0.6008 0.3713 1.0925 1.6018 1.0925 2.7339 0 1.1326 1.0928 2.8242 2.4285 3.7598 2.8701 2.0105 11.867 2.2656 13.743 0.3899 0.988-0.9883 1.311-0.9949 1.311-0.0283 0 1.8665-5.8914 4.6169-9.8889 4.6169-2.4365 0-4.4944-1.0527-7.0471-3.6055v1e-4zm15.843-9.5706c0-0.6365 0.5686-0.8059 1.2632-0.3765 0.9084 0.5615 1.0601-0.2349 0.54-2.8362-0.8704-4.3513-2.5413-6.5625-4.9419-6.54-1.4404 0.0129-1.4912 0.1987-0.2673 0.9736 1.2666 0.8022 1.2224 1.3694-0.2729 3.5044-4.5232 6.4583 1.4937 2.8694 1.4937 5.3389 0 1.436 2.1853 1.4734 2.1853-0.0645v3e-4zm554.56 12.964c8.5497-9.3291 6.4666-23.467-4.3074-29.233-3.3103-1.7715-2.8369-1.9092-2.8134-20.271 66.661-68.151 71.076-72.678 148.18-151.33h162.27c-7.0612 9.0347-174.98 177.26-174.98 181.91 0 0.7817 0.8605 1.7576 1.9121 2.1685 2.1437 0.8376 5.9078-2.908 45.017-44.795 37.198-39.839 139.91-141.47 139.91-143.47 0-1.6462-168.95-1.8306-174.86-0.1907-5.0754 1.4102-13.428 11.228-154.03 154.57 0 20.367 0.4231 20.47-2.4585 20.061-2.8595-0.4062-2.4686-0.7446-3.0828-24.249 39.258-39.748 115.42-117.72 152.74-157.48 399.93-1.1985 378.36-0.6233 378.36-4.4351 0-1.3647-25.045-1.5745-188.04-1.5745-172.4 0-188.36 0.1499-191.84 1.8008-5.0072 2.376-35.324 35.693-156.61 159.28v29.163l-3.5122 4.3704c-4.548 5.6597-4.9158 13.521-0.934 19.964 4.1526 6.7188 7.9731 8.4924 17.393 8.074 7.6527-0.3398 8.2019-0.5439 11.68-4.3396l4e-4 5e-4zm-17.872-23.383c7.2268-3.7371 14.914 1.0066 15.907 9.8164 0.4967 4.4075 0.2013 5.2876-2.7742 8.2629-11.62 11.62-29.881-9.4189-13.133-18.079zm-491.12 23.639c6.5195-3.9753 9.299-13.08 6.2888-20.603-4.6-11.497-19.099-14.247-27.62-5.2383-8.3286 8.8044-6.2312 20.668 4.7214 26.71 3.6082 1.9907 12.7 1.5151 16.61-0.8689h5e-4zm-15.946-6.4824c-3.2087-3.2085-3.8577-6.9822-1.864-10.838 5.3047-10.258 20.362-6.5972 18.87 4.5876-0.7389 5.5403-2.2872 6.8582-9.1119 7.7554-4.8364 0.636-5.969 0.4202-7.894-1.5054zm890.43-57.218c67.264-68.181 111.02-113.39 123.47-127.56 13.846-15.757 12.908-14.209 8.5911-14.175-7.8259 0.0625 1.3545 1.106-108 110.35-49.004 48.954-84.201 85.425-84.201 87.248 0 0.6787 0.8604 1.2292 1.9121 1.2239 1.0703-0.011 26.702-25.138 58.225-57.091v1e-4zm-2835.1 38.035c19.162-6.834 14.598-36.075-7.6838-34.227-6.8652 0.5693-10.748 3.0652-14.224 9.1431-5.5449 9.6965-0.8782 21.102 10.258 25.074 5.2271 1.864 6.45 1.865 11.649 0.011l2e-4 -5e-4zm-11.518-8.8616c-5.1733-2.8076-7.1213-8.9185-2.7932-8.7637 3.3184 0.1179 3.7361-3.7375 1.4802-3.7375-0.9456 0-1.7192-0.7095-1.7192-1.5769 0-2.4536 4.4526-4.979 8.7783-4.979 10.49 0 14.33 15.243 4.8396 19.209-4.626 1.9327-6.8022 1.9017-10.586-0.1516zm2137.5-27.276v-22.424c15.176-17.064 89.437-92.51 92.142-98.127 1.5988-3.321 0.8832-16.805-0.9303-66.268-0.5465 20.107-1.174 43.192-1.7206 63.299-31.944 33.917-61.258 64.784-93.862 98.678 0 41.459 0.4037 40.632-2.4584 41.568-3.2396 1.0596-72.83-0.2605-76.233-0.312-15.44-15.448-111.41-111.46-126.87-126.93 0.7568-74.879-0.3105-66.876 5.604-73.169 0-136.01-0.7324-222.72-1.2361-87.996-0.3066 82.054-1.9031 67.876-0.8687 71.481 1.4653 5.1091 1.1833 10.874-0.6504 13.298-5.6042 7.408-4.8994-5.6104-5.2805-138.69-1.5911 140.71-1.7134 142.79-3.1848 217.16 95.838 95.705 128.09 128.33 132.5 129.58 4.9686 1.3992 73.993 1.251 83.041 1.2737v-22.424l-2e-4 4e-4zm-2030.3-12.248c4.259-3.1541 7.7969-8.9055 7.7969-12.675 0-4.8486-3.8018-11.84-7.9731-14.661-4.7278-3.1978-14.083-3.3909-18.643-0.3848-7.3145 4.8225-9.6326 15.322-5.0447 22.847 4.4749 7.3401 17.062 9.9102 23.863 4.8733l2e-4 -2e-4zm-12.963-3.2497c-5.6355-2.0601-9.1987-10.134-6.6082-14.974 3.1936-5.9673 12.101-7.8853 16.947-3.6489 6.2468 5.4619 5.1624 14.773-2.073 17.796-3.9968 1.6699-5.5369 1.8237-8.2656 0.8264v2e-4zm415 4.0229c3.8069-2.321 7.7927-9.4973 7.8342-14.106 0.0427-4.7729-4.325-11.971-9.3716-15.443l-4.8088-3.3086c0-87.344-0.3047-201.97 1.166-205.97 2.8843-7.8357 16.028-6.6748 14.948-23.548-0.8899-13.912-14.951-22.245-27.032-16.02-8.321 4.2871-11.957 12.122-10.41 22.435 0.8794 5.8647 2.356 6.6575 14.769 18.533-0.0339 212.5 0.946 205.11-4.4392 208.2-6.7334 3.8645-9.6294 16.178-5.5806 23.728 3.9316 7.3311 15.409 10.086 22.925 5.5039v-4e-4zm-12.902-2.9338c-5.679-2.0881-8.6924-9.9087-6.1562-15.978 3.98-9.5256 15.112-9.822 19.918-0.53 3.2224 6.2317-0.083 13.289-7.5493 16.118-3.3401 1.2654-3.7595 1.292-6.2117 0.3901h-3e-4zm0.395-247.8c-0.3459-0.9014-1.3013-1.6389-2.1228-1.6389s-2.2981-1.5549-3.2808-3.4553c-1.4773-2.8567-1.5713-4.1748-0.5425-7.6091 1.5378-5.1333 4.7676-7.5107 10.203-7.5107 11.875 0 15.279 13.773 7.0198 19.394-4.1592 2.8308-10.333 3.2793-11.277 0.8196h3e-4zm2.6773-11.187c-0.4231-2.1973-3.8835-3.1897-5.4971-1.5762-1.6433 1.6433-5e-4 3.4756 3.1155 3.4756 2.0215 0 2.6506-0.502 2.3813-1.8994h3e-4zm-284.1 260.09c7.5742-5.655 9.5349-13.199 5.4741-21.061-9.0051-17.435-35.13-7.6548-31.933 9.3877 0.8701 4.6377 6.1257 11.036 10.81 13.163 4.2679 1.9367 12.052 1.1958 15.648-1.489zm-15.332-4.6597c-8.8708-6.9775-4.5635-19.705 6.6689-19.705 3.9578 0 9.4614 4.3733 10.447 8.3015 2.4295 9.6802-9.3391 17.52-17.116 11.403zm120.41 5.989c7.5413-3.8997 10.571-13.642 6.7168-21.602-7.5737-15.645-31.144-10.471-31.144 6.8357 0 12.1 13.639 20.346 24.427 14.767v-5e-4zm-15.496-7.0068c-2.9326-2.6201-3.5435-3.9585-3.5435-7.7603 0-3.802 0.6108-5.1404 3.5435-7.7605 6.1602-5.5042 14.434-3.4351 17.69 4.4243 4.4333 10.704-8.8225 19.019-17.69 11.096zm-323.63 1.9829c4.6682-4.3611 6.1914-8.3667 5.6526-14.863-0.3799-4.5811-1.1792-6.584-3.6716-9.2063-8.2532-8.6809-18.576-8.6584-25.909 0.0557-7.0173 8.3398-3.8765 21.297 6.2791 25.905 5.0999 2.3142 14.19 1.3398 17.649-1.8921v7e-4zm-15.973-4.1353c-5.3884-2.8879-7.3999-8.3799-4.9553-13.531 4.5493-9.5869 18.136-8.502 20.713 1.6538 1.2661 4.9897-0.5437 9.5825-4.7559 12.071-4.0093 2.3684-6.2976 2.3281-11.002-0.1931h-5e-4zm620.15-21.476c6.8699-1.9258 17.339-8.6145 22.236-14.207 12.915-14.748 14.555-38.535 3.7761-54.774-6.384-9.6182-11.835-12.174-23.813-18.856 0.1558-116.47 0.3557-353.46 1.1953-463.94 0.7668-100.92 1.0696-95.585-5.7358-100.94-9.5293-7.4958-21.613-3.3225-28.31 9.7769-1.4138 2.7656-3.8184 5.5542-5.417 6.2827-3.7341 1.7014-101.83 1.6838-225.67-0.0405-122.26-1.7019-114.24-1.7725-120.48 1.0625-16.535 7.5107-25.941 28.381-21.175 46.983 4.6799 18.269 15.07 27.95 33.36 31.087 19.831 3.4006 40.327-5.5249 48.144-20.965 5.3884-10.643 6.0247-31.193 7.9297-32.371 1.3723-0.8484 274.53-0.564 279.25 0.2905 1.9695 0.356 4.0481 1.521 4.6196 2.5884 1.3101 2.4478 0.4294 40.252-1.3032 519.45l-5.5256 2.7791c-8.1284 4.0884-15.642 11.903-19.718 20.507-3.3877 7.1516-3.5066 7.885-3.5066 21.607 0 13.506 0.1533 14.496 3.1155 20.123 1.7134 3.2551 5.647 8.418 8.7412 11.473 13.153 12.986 30.019 17.207 48.29 12.085v1e-4zm-25.801-31.087c-4.9004-2.5906-8.1648-9.2024-7.1282-14.436 0.8638-4.3625 5.5371-11.323 9.6533-14.378 10.758-7.9844 34.984 5.2979 19.28 21-2.3379 2.3379-4.2505 4.7876-4.2505 5.4438 0 1.843-6.0369 4.5325-10.053 4.479-1.9829-0.0261-5.3589-0.9753-7.5022-2.1086h-2e-4zm-342.57-554.46c-15.289-6.657-8.969-30.134 7.2896-30.134 8.3335 0 17.031 10.256 15.752 18.575-1.5533 10.108-13.086 15.894-23.042 11.559zm350.98-48.312c-5.2673-5.2673-2.4617-13.509 4.5984-13.509 6.6899 0 9.9395 10.052 4.6375 14.345-3.4402 2.7859-5.8308 2.5691-9.2361-0.8359l2e-4 -3e-4zm-1374.4 629.46c8.4766-3.5417 12.491-9.6702 12.491-19.069 0-3.4331-0.7402-7.6646-1.6445-9.4036-4.8979-9.4182-17.455-14.013-26.217-9.593-4.5845 2.312-9.2964 6.7473-11.352 10.685l-1.6504 3.1614-123.25-1.5693c0 2.4351-0.3809 4.4155 2.4585 4.9922 1.3521 0.2747 28.972 0.7607 61.377 1.0801 67.018 0.6606 60.67 0.1646 60.727 8.0105-118.56-1.0815-123-1.4082-123.84 0.7722-0.3999 1.0425-0.4507 2.343-0.1128 2.8896 0.8213 1.3289 112.34 0.9941 125.19 0.9941 8.1509 6.2175 15.475 11.375 25.825 7.0503l-5e-4 -3e-4zm-15.176-6.375c-7.3696-5.1179-9.2861-15.317-4.1133-21.893 6.8066-8.6528 19.177-7.7563 25.012 1.8132 8.0278 13.167-8.2832 28.839-20.898 20.08zm4760 0.2338c4.8491-2.4575 8.6187-8.4971 11.14-12.108 27.993 0.4956 59.964 1.062 87.958 1.5581v-5.3926c-36.944-0.3318-30.758-1.3562-13.84-1.3562 15.419 0 13.84 0.356 13.841-4.917h-87.876l-1.0919-3.8242c-1.5549-5.4456-10.21-13.758-15.93-15.298-9.4757-2.5515-21.005 3.1519-25.246 12.489-2.5671 5.6519-2.5791 13.051-0.0306 18.662 2.3479 5.1682 8.7958 11.162 13.006 12.09 1.6417 0.3616 3.4765 0.8328 4.0774 1.0466 2.1375 0.7612 9.898-0.8745 13.991-2.9492l3e-4 -3e-4zm-17.515-5.3815c-11.46-5.6729-12.071-20.415-1.1293-27.285 5.2445-3.293 13.936-2.4819 18.311 1.709 8.0559 7.7178 6.0934 21.446-3.7324 26.108-4.9118 2.3311-7.905 2.2126-13.449-0.5317v2e-4zm12.278-7.5608c4.4175-4.8811 0.8733-13.371-5.5819-13.371-3.4788 0-8.089 4.5779-8.089 8.0325 0 3.2522 4.8451 7.5378 8.5222 7.5378 1.7773-1e-4 4.0285-0.9617 5.1487-2.1995zm27.644-4.0816c22.519-0.4478 59.978 0.3347 16.049 0.3335-18.029-5e-4 -25.251-0.1504-16.049-0.3335zm-3801.4 10.463c4.0469-2.4395 5.8408-7.4211 7.322-10.779 17.608 0.1799 127.16 1.3005 144.81 1.481l4.1343-2.8813c4.6174-3.218 37.586-36.159 41.504-41.47 2.3223-3.1475 2.5122-4.4954 2.5122-17.826 0-11.483-0.3176-14.544-1.5593-15.02-3.8782-1.4883-3.8157 5.3369-5.1099 28.227-13.476 13.475-28.94 28.938-42.415 42.414-128.99-1.5227-123.86-1.4248-144.27-1.4438-3.7664-7.3833-5.5383-12.675-17.864-11.783-5.6526 0.4089-6.9592 0.939-9.6001 3.8943-3.5391 3.9609-4.8091 9.2441-3.8032 15.818 0.9214 6.019 3.5095 9.2861 8.866 11.192 5.0645 1.8018 10.524 1.1572 15.474-1.8267v0.0048zm-196.56-7.4881c4.1743-2.5452 6.7634-7.8965 6.7634-13.98 0-12.452-16.655-19.482-25.924-10.941-3.1201 2.8752-5.7632 8.3804-5.7632 12.003 0 3.8833 4.042 11.146 7.3413 13.19 4.2703 2.646 13.018 2.5105 17.582-0.272h-4e-4zm3119.9-10.975c1.6199-2.3906 0.6561-28.789-1.1298-30.94-1.065-1.2832-3.3494-1.7629-8.3933-1.7629-9.1497 0-9.4696 0.6465-9.0062 18.21 0.3205 12.144 0.6025 13.838 2.5457 15.292 2.7933 2.0896 14.42 1.5085 15.984-0.7986h1e-4zm-12.523-5.0232c-0.8206-0.8206-0.7286-12.835-0.7286-21.124 6.9 0 8.3938-0.3459 9.1452 2.4583 0.8597 3.208 0.8774 15.446 0.0251 17.666-0.6663 1.7366-6.96 2.4819-8.4421 0.9998h4e-4zm67.385 5.9102c2.1293-1.5569 1.8209-4.4146 1.2698-33.044h-16.3l-0.8253 3.8245c-1.1147 5.1646 0.2173 27.078 1.7197 28.294 2.9057 2.3518 11.423 2.9099 14.136 0.926h1e-4zm-10.515-5.8582c-0.881-0.8806-0.7805-12.98-0.7805-21.302l9.2875 0.6719v20.76c-3.504 0.2949-7.6346 0.7422-8.507-0.1304zm98.015 6.5694c1.4553-0.5583 1.7283-2.9426 1.7283-15.088 0-9.8354-0.4356-15.021-1.3694-16.298-1.661-2.2715-8.0325-3.4446-13.32-2.4529l-3.8853 0.7288c0 32.811-1.124 33.773 9.3675 33.773 3.1631-1e-4 6.5286-0.2984 7.4792-0.6631zm-10.564-5.9803c-1.5765-0.9182-1.9122-2.6956-1.9122-10.128 0-9.5017 0.9022-11.637 4.9169-11.637 3.9582 0 4.9169 2.1558 4.9169 11.055 0 4.6384-0.2983 9.2109-0.6633 10.162-0.7475 1.948-4.3833 2.2227-7.2583 0.5481zm-160.32 2.7478c0.5859-1.5415 1.0656-8.2637 1.0656-14.938 0-15.146-0.6313-16.132-10.331-16.132-3.7653 0-7.2902 0.5762-8.0255 1.3113-1.799 1.7993-1.8013 29.448 0 31.25 0.7636 0.7639 4.4252 1.3113 8.7682 1.3113 6.9991 0 7.5225-0.1721 8.5228-2.803l-2e-4 2e-4zm-12.41-3.3889c-0.6995-0.6995-1.5988-20.557 0.8049-21.479 1.9833-0.761 6.4323 0.3704 7.4641 1.8977 0.9694 1.4353 1.1063 16.149 0.173 18.582-0.6663 1.7366-6.96 2.4819-8.4421 0.9998l1e-4 2e-4zm67.738-26.84c-1.5323-0.9749-12.961-1.1064-15.383-0.177-1.4596 0.5601-1.7283 2.9895-1.7283 15.625 0 10.434 0.4093 15.371 1.3525 16.314 1.7688 1.7686 11.961 0.9436 17.671 0.7234-0.231-11.365-0.2721-31.442-1.9116-32.486zm-12.012 26.84c-0.9052-0.905-0.9358-15.322-0.0394-18.666 0.7392-2.7583 2.1019-2.4583 9.1452-2.4583v21.853c-3.3404 0-8.2706 0.1067-9.1053-0.7285h-5e-4zm60.701-27.452-8.4358 0.3184c-0.2827 14.046-0.9297 29.908 0.6841 31.853 1.4354 1.7295 5.9333 1.3823 17.891 0.9268-0.4201-35.393 1.2452-33.528-10.139-33.098zm-4.1223 26.787c-0.7386-1.9246-0.0568-16.644 0.0571-19.913 9.1759-0.6665 9.0677-1.1941 9.8378 2.9451 0.8063 4.333 0.2109 13.298-4e-3 17.815-4.6049 0.3328-9.17 1.031-9.8911-0.8477l2e-4 3e-4zm42.086-24.901c-1.2855-2.4023-3.3473-2.1135-17.444-2.1135 0 14.935-0.3162 30.934 1.3112 32.561 1.6779 1.6777 13.641 1.3113 17.264 1.3113 0-4.5157 0.301-29.083-1.1311-31.759zm-11.988 24.096c-1.4818-2.7693-0.6583-15.947-0.5391-19.108h8.7412l0.6254 21.307c-4.3511 0-7.4139 0.4426-8.8276-2.1987h1e-4zm96.6-21.943c4.9816-1.3831 10.579-7.1538 14.311-10.682 0-12.866 0.4083-14.439-2.9802-19.56-3.6117-5.4573-11.299-10.176-17.767-10.904-9.5608-1.0776-20.189 7.2993-21.868 17.236-1.9806 11.723 9.5713 29.112 28.306 23.911l-0.0028-5e-4zm-13.005-5.7524c-18.056-8.3391-6.8723-36.401 11.451-27.195 7.4349 3.7354 11.092 14.008 7.3585 20.666-3.5749 6.3755-12.462 9.4599-18.81 6.5283zm11.664-5.4587c2.5837-3.2356 0.9637-13.391-2.4751-15.516-1.4708-0.9092-4.5592 2.5366-3.6265 4.0459 0.7179 1.1614-1.7383 1.7358-1.7383-1.2534 0-3.825-1.5643-2.3657-4.0784 3.8044-6.7106 16.468 9.0603 12.498 11.918 8.9192h-1e-4zm68.373 10.09c11.467-5.551 14.889-21.661 6.6052-31.096-7.1961-8.1956-18.131-11.088-26.536-7.0195-12.374 5.9902-15.104 21.724-5.6401 32.503 6.75 7.6877 16.75 9.8823 25.571 5.6118v2e-4zm-12.233-3.9192c-9.0461-2.3896-15.182-11.884-12.805-19.815 3.9193-13.082 21.592-13.74 28.155-1.0481 5.2031 10.062-4.7949 23.651-15.35 20.863zm6.6096-3.9485c0.8885 0.3408 1.4907 0.1907 1.3384-0.3337-0.609-2.0989 3.0102-3.7307 1.838-10.083-1.314-7.1211-8.2646-11.881-9.6444-6.6042-0.3301 1.2625-1.062 2.0098-1.6263 1.6611-0.5645-0.3486-1.8328 1.4778-2.8185 4.0593-1.4182 3.7131-1.5441 5.4058-0.6027 8.1062 0.7347 2.1079 1.7422 3.2012 2.6345 2.8586 0.7946-0.3049 1.7742-0.0208 2.1771 0.6306 0.4028 0.6516 1.1561 0.9231 1.674 0.603 1.6767-1.0354 2.4144 3.5264 3.0476 0.3337 0.2225-1.1216 1.004-1.6072 1.9824-1.2314v-2e-4zm67.195 8.9419c5.5662-1.8635 10.575-6.0193 13.012-10.795 2.5913-5.0793 2.8785-14.026 0.5921-18.447-2.0475-3.9592-8.6267-9.7202-12.095-10.591-1.4915-0.3743-2.7117-1.1189-2.7117-1.6548 0-1.3074-10.926-1.2412-10.926-0.0544 0 0.5059-1.9002 1.489-4.2227 2.1848-5.8314 1.7473-9.8915 5.208-12.28 10.468-8.2352 18.133 12.157 34.406 28.632 28.89zm-14.118-7.1499c-4.1685-2.054-8.3293-7.1838-9.3588-11.538-1.4991-6.3401 4.2206-13.868 12.214-16.075 8.1664-2.2551 18.801 5.8796 18.801 14.382 0 11.247-11.467 18.253-21.657 13.231v-2e-4zm13.4-4.9615c4.3099-6.1533-1.1192-13.281-2.7444-12.276-0.5599 0.3459-1.0179 0.0798-1.0179-0.5925 0-0.6719-0.4918-0.9175-1.0927-0.5464-0.601 0.3713-1.1002 0.032-1.1094-0.7549-0.012-1.0393-0.3062-0.9822-1.0759 0.2087-0.9415 1.4568-1.0629 1.4568-1.0927 0-0.0596-2.8665-1.0269 1.1492-2.8538 1.4268-0.5338 0.0808-0.8147 0.8262-0.6242 1.6553 0.1971 0.8584-0.1669 1.1907-0.8453 0.7715-1.8023-1.114-0.1128 8.3027 1.9063 10.624 2.4299 2.7938 8.4376 2.4998 10.55-0.5161zm62.036 12.214c20.926-5.812 18.872-39.287 3.1576-39.287-1.1964 0-2.479-0.4917-2.8504-1.0928-0.8348-1.3506-12.566-1.4641-12.566-0.1216 0 0.5342-1.6348 1.2778-3.6329 1.6526-3.5996 0.6753-8.2079 4.6365-10.294 8.8494-7.3533 14.847 6.6498 35.425 26.185 30v-3e-4zm-13.719-7.6619c-5.111-2.7715-8.923-10.247-7.8097-15.316 1.3472-6.1338 8.8536-12.773 14.97-13.241 3.8848-0.2974 10.735 3.5095 13 7.2241 1.1287 1.8511 2.0541 5.2334 2.0564 7.5168 0.0119 12.085-11.829 19.448-22.217 13.816zm12.514-4.1924c3.2748-2.6519 3.5447-9.7747 0.498-13.141-2.799-3.0933-9.3397-3.1572-10.139-0.0996-0.3125 1.1951-0.9694 1.925-1.4597 1.6221-0.4902-0.303-0.7017 1.7925-0.4699 4.6562 0.6561 8.106 6.1077 11.386 11.571 6.9626v-2e-4zm70.837 9.8381c2.0714-1.0527 5.2452-3.7415 7.0531-5.9753 2.697-3.3323 3.3656-5.2957 3.7249-10.94 0.9047-14.208-7.6956-22.789-22.98-22.929-6.1124-0.0557-7.6487 0.2996-8.9433 2.0703-0.8599 1.176-1.9139 1.7871-2.3426 1.3586-1.4449-1.4448-4.775 1.3369-7.8292 6.5393-3.6601 6.2349-4.1458 16.044-1.079 21.79 1.9883 3.7258 9.5889 8.7983 15.335 10.234 4.6699 1.1671 12.469 0.1847 17.062-2.1491zm-17.609-5.6137c-11.494-6.0718-12.243-18.713-1.5787-26.673 6.5595-4.8965 17.739-1.2295 22.603 7.4141 7.3157 13-7.7951 26.247-21.024 19.259zm12.176-4.3006c0.8856-0.5601 1.869-0.5999 2.1853-0.0884 0.3163 0.5112 0.6961-1.8167 0.844-5.1731 0.273-6.1992-1.9693-11.935-4.1411-10.593-0.5746 0.355-1.0447 0.072-1.0447-0.6284 0-0.7009-0.7057-1.0034-1.5684-0.6724-0.8626 0.3311-1.7899 0.0151-2.0607-0.7026-0.2708-0.7173-1.0089-0.0754-1.6403 1.4272-1.0028 2.3857-1.1674 2.4548-1.3005 0.5464-0.2213-3.1729-3.0757 4.6079-3.1809 8.6707-0.1561 6.0242 6.9655 10.339 11.907 7.2136l1e-4 -2e-4zm73.478 8.0581c22.799-16.023 1.0751-47.279-22.641-36.096-8.9897 4.2395-12.566 9.5635-12.566 18.709 1e-4 19.197 22.35 26.423 35.206 17.387zm-19.647-3.8488c-11.112-5.5-12.935-16.434-4.1597-24.94 12.701-12.31 33.821 4.3135 24.631 19.388-2.2181 3.6379-9.4414 7.7891-13.631 7.8333-1.202 0.013-4.2799-1.0136-6.8399-2.2809zm10.58-3.1575c3.6793 0 5.6933-8.6196 3.4146-14.613-1.7246-4.5356-5.8437-4.9126-12.153-6.1086 0.6011 19.317 0.2159 20.117 3.0863 20.525 1.3521 0.1921 2.4973 0.9294 2.5447 1.6389 0.0612 0.9109 0.2482 0.8887 0.6374-0.0764 0.3031-0.7512 1.4146-1.366 2.4699-1.366v7e-4zm-4034.5 8.2507c9.5845-4.0049 13.665-9.9626 13.592-19.85-0.0405-5.5317-4.146-13.468-8.4888-16.408-4.2891-2.9033-11.977-4.1411-16.066-2.5864-2.2812 0.8674-3.397 0.8359-4.2744-0.1199-0.8716-0.949-0.8247-1.0884 0.1772-0.5225 0.7515 0.4241 1.3662 0.2092 1.3662-0.4771 0-1.5583-2.7817-0.915-2.5947 1.4233 0.082 1.0242-0.4609 1.4788-1.3569 1.1353-0.8213-0.3154-1.8291 0.3005-2.2388 1.3687-1.2979 3.3823-3.896 3.252-6.3916 11.836-3.4009 11.697 2.0898 20.909 14.76 24.763 4.2861 1.304 7.4136 1.1514 11.514-0.562l0.0014-2e-4zm-12.744-9.9004c-1.5815-0.8594-3.2065-2.426-3.6123-3.4819-0.937-2.4424 1.7876 0.4519 4.9326 3.4062 0.4272-1.6335 0.9961-4.8306 2.7104-4.8306 1.9971 0 2.6621-1.3621 3.1738-6.5054 0.3589-3.6118 0.0269-4.6443-1.811-5.6277-1.249-0.6687-2.5532-0.7786-2.9312-0.2468-1.8198 2.5586-6.3096 2.7593-6.9907 8.261l-0.4424 3.5723-0.1704-3.2781c-0.4312-8.2722 7.4536-13.335 15.519-9.9651 12.09 5.0513 3.2358 20.278 0.6045 18.652-0.5527-0.3416-1.0054-0.1006-1.0054 0.5361 0 1.6682-6.6001 1.3423-9.9771-0.4924v3e-4zm11.138-14.74c-0.8848 0-3.3462 5.7461-3.3462 7.8115 0 0.5115 1.0361 0.9297 2.3018 0.9297 1.686 0 2.1182 0.4805 1.6143 1.7935-0.5752 1.4998-0.4155 1.5671 0.9756 0.4126 3.5965-2.9854 0.4266-10.947-1.5455-10.947zm67.736 22.963c4.7563-3.1179 9.2388-9.2061 10.268-13.945 1.4004-6.4473-4.0063-17.512-9.8604-20.179-1.4209-0.6477-2.3403-1.5728-2.042-2.0559 1.061-1.717-3.8398-3.1704-10.1-2.9949l-6.355 0.178 12.02 1.4729c-8.1763 0.2749-15.444 0.0847-21.38 8.2798-10.334 14.265 0.8237 33.5 18.653 32.156 2.7681-0.209 6.6167-1.4827 8.7959-2.9114h0.0011zm-19.022-9.2529c-4.4478-4.1223-4.0601-10.282 0.9746-15.466 3.4292-3.5312 4.311-3.908 7.8188-3.3389 6.5864 1.0688 12.388 8.5349 10.485 13.493-1.0078 2.626-2.3569 1.4814-2.2603-1.9172 0.0591-2.0671-0.8013-4.2493-2.2441-5.6917-2.313-2.3127-2.3569-2.3152-3.9224-0.1987-1.377 1.8621-1.3794 2.4556-0.0146 4.5605 0.8628 1.3313 1.5693 3.2275 1.5693 4.2144 0 1.146 0.5923 1.5669 1.6387 1.1655 1.0972-0.4209 1.6392 0.0469 1.6392 1.415 0 1.3103-1.2349 2.4749-3.4414 3.2437-5.3848 1.8772-9.106 1.4275-12.243-1.48l-5e-4 3e-4zm8.0855-7.8987c-0.5181-4.4404-0.9932-5.2207-3.6035-5.9158-2.5654-0.6831-3.1016-0.426-3.6479 1.7505-0.9946 3.9624-0.1255 6.3699 2.8413 7.8708 4.4985 2.2761 5.0542 1.8093 4.4111-3.7056h-1e-3zm74.25 17.632c3.7393-1.9099 8.3628-6.9646 9.7646-10.676 2.439-6.4539 0.5195-15.831-4.2866-20.948-1.1372-1.21-1.9741-2.6836-1.8599-3.2742 0.2363-1.2263-6.2119-2.5549-13.451-2.7712l-4.917-0.147c6.3213-2.0833 9.2656-2.8679 6.0098-2.9475-3.6943-0.0898-10.572 2.4561-13.3 4.9236-3.6484 3.2991-6.5781 10.196-7.0884 16.688-0.5635 7.1633 2.2944 13.226 8.0693 17.118 1.9204 1.2937 3.1421 2.7393 2.7153 3.2122-0.4268 0.4731-0.2417 0.5559 0.4102 0.1851 0.6523-0.3713 2.6191-0.248 4.3706 0.2744 3.6738 1.0955 9.6196 0.3779 13.564-1.6375l-9e-4 2e-4zm-17.701-11.475c-2.8521-2.8518-3.2378-3.8921-2.6914-7.2588 0.8555-5.2683 4.5757-9.0845 8.8369-9.0635 2.501 0.012 2.9492 0.2769 1.7524 1.0339-1.3784 0.8718-1.3403 1.1201 0.2681 1.7371 3.6089 1.385-1.0464 8.3682 2.002 10.539 1.2495 0.8892 1.2188 0.9885-0.1704 0.553-0.9321-0.2925-2.8306 0.0764-4.2192 0.8196-2.4644 1.3188-2.4365 1.3579 1.1475 1.6226 8.5093 0.6282 10.043-0.4185 6.999 1.8066-1.1577 0.8467-4.0161 1.5396-6.3511 1.5396-3.2754 0-5.0073-0.761-7.5747-3.3286l9e-4 -3e-4zm4.5459-2.1348c0.479 0 1.4819-1.4753 2.229-3.2788 1.5278-3.6882 0.1416-6.5549-3.1689-6.5549-1.9277 0-5.5723 3.6284-5.5723 5.5476 0 2.5554 2.4141 5.5249 3.9976 4.9175 0.9043-0.3472 2.0366-0.6313 2.5151-0.6313h-5e-4zm212-16.417c-2.5767-5.0503-5.2397-7.0002-12.617-9.238-6.1128-1.8542-8.3125-2.0894-6.0293-0.6443 1.1382 0.7207 0.2627 1.312-3.2778 2.2141-7.2466 1.8464-9.7988 3.448-12.856 8.0674-1.9292 2.9153-2.9009 6.0847-3.1831 10.38-0.3643 5.5535 0.0107 6.8696 3.6274 12.908 2.2183 3.698 5.0771 7.2297 6.3525 7.8477 13.593 6.5844 38.172-11.562 27.984-31.535zm-388.01 28.653c7.5166-3.8711 11.699-16.938 7.7695-24.28-1.7871-3.3391-1.5889-6.1511-3.2734-8.1807-1.8545-2.2344-8.3599-4.9805-10.161-4.2893-0.895 0.3438-1.9526 0.0996-2.3496-0.5422-1.229-1.9893-8.5762-1.2522-13.047 1.3093-3.5703 2.0452-4.7739 3.7332-7.4341 10.426-3.1089 7.8203-3.1406 8.1035-1.5215 13.674 1.8076 6.218 6.647 11.684 12.123 13.693 4.3456 1.5944 12.979 0.7209 17.894-1.8104zm-21.555-17.256c-0.1846-5.0459 1.603-7.2974 7.3999-9.3181 2.8662-0.9988 3.7808-0.9568 4.5005 0.2073 1.4668 2.373-0.0479 3.4475-3.8535 2.7336-2.9438-0.5525-3.8501-0.2219-5.2485 1.9121-2.7071 4.1304-2.5377 11.575-2.7984 4.4651zm270.03 19.327c5.9165-0.9734 10.669-4.7966 13.993-11.258 2.7153-5.2798 2.6689-5.8259-1.1748-13.761-2.1831-4.5071-4.7227-7.7896-7.6899-9.9385-6.7671-4.9019-12.33-5.3374-22.376-1.7512-2.4248 0.8657 2.7466-3.8037 8.5322-3.814 2.2891 0 3.8975-0.4348 3.5747-0.9573-0.8286-1.3408-8.7407 0.2827-12.098 2.4827-3.9849 2.6111-8.2041 12.741-8.2041 19.696 0 4.3564 0.7163 6.7783 3.1123 10.517 6.1158 9.545 9.5337 10.89 22.331 8.784zm70.78-2.7502c8.6934-5.7529 12.3-19.485 6.5303-24.861-1.2256-1.1426-2.2295-3.2112-2.2295-4.5969 0-7.1841-16.407-12.101-25.686-7.698-8.4819 4.0249-6.8467 7.9431-9.2021 12.346-1.6431 3.0688-1.4551 12.654 0.3291 16.841 4.6372 10.884 19.814 14.882 30.259 7.97h-0.0011zm268.48 2.0742c12.741-3.7839 21.029-14.532 20.983-27.211-0.0154-4.1113-0.8044-8.3518-2.0767-11.154-4.3555-9.5923-14.451-17.61-24.467-19.432-4.8833-0.8884-14.972 0.9741-20.416 3.7688-29.63 15.21-11.573 65.178 25.977 54.027v6e-4zm-9.5874-20.154c0-0.5833-1.98-2.1812-4.3994-3.551-4.9749-2.8169-6.2842-5.9963-4.3718-10.614 2.5657-6.1938 10.682-7.0024 16.082-1.6021 3.5286 3.5283 2.2205 4.3862 1.0479 11.784-0.5628 3.552-8.3587 7.2761-8.3587 3.9824zm76.025 17.563c12.148-5.5173 14.58-20.453 4.8411-29.727-6.8828-6.554-16.06-6.5154-22.393 0.095-1.7363 1.8125-2.8018 3.2954-2.3669 3.2954 0.4346 0-0.457 1.835-1.981 4.0779-3.3857 4.9827-3.4985 9.0266-0.4285 15.369 3.9219 8.1013 13.294 10.993 22.328 6.8901v-5e-4zm-12.897-6.1872c-10.193-5.5312-4.6738-22.335 7.3354-22.335 3.2566 0 8.6165 4.4524 10.325 8.5774 3.2253 7.7871-7.3858 19.334-17.66 13.758zm6.7902-8.6631c2.522-3.0388-1.0105-7.3257-4.3591-3.2917-1.0852 1.3076-1.0852 1.9702 0 3.2778 1.7102 2.0608 2.658 2.0637 4.3591 0.0142v-3e-4zm-193.63 12.551c6.3638-2.7378 13.738-10.059 16.297-16.182 2.6575-6.3567 2.2649-13.221-1.155-20.212-8.7773-17.94-31.078-22.44-46.022-9.2869-25.21 22.19-1.5611 59.636 30.879 45.68zm-16.149-22.945c-2.4707-2.4705-2.9722-8.9653-0.8193-10.61 0.751-0.5737 2.9299-1.6628 4.8416-2.4202 3.3047-1.3093 3.6396-1.197 6.7971 2.2754 3.5549 3.9094 4.2969 6.384 1.9153 6.384-2.0747 0-4.9875 4.5603-6.3328 3.729-0.5251-0.3242-1.2495 0.1792-1.6096 1.1187-0.875 2.2808-2.1631 2.1523-4.7927-0.4771l4e-4 -2e-4zm2121.2 21.842c6.1323-4.2019 8.4045-8.5081 8.3896-15.9-0.0284-12.529-6.1796-11.493-4.2972-19.874 1.2605-5.6091 5.4465-262.71 1.6774-271.73-3.6113-8.6428-144.56-149.43-148.4-157.71-2.1853-4.718-1.8872-15.364-1.9404-201.29h-31.738c0.0332 12.007 0.5645 203.98 0.5977 215.99l3.1296 4.5154c4.6985 6.7798 141.71 141.42 144.8 147.47 3.293 6.4548 2.9487 37.034 2.3136 113.89h-27.908c-3.1426 3.1904-18.517 18.496-20.048 21.508-1.5287 3.0061-1.2133 21.777-1.2133 26.385-3.1401 2.4871-5.8384 4.624-8.9785 7.1111 1.7587 63.78 0.5911 57.07 6.4924 63-0.7643-22.635-0.4065-28.773-1.8844-27.86-1.4564 0.8999-1.4574-3.0857 0-2.1853 0.6725 0.4158 1.1235-1.5544 1.1729-5.1255 0.1376-10.027 1.3495-13.935-0.7119-14.726-0.8309-0.3191-1.4154-1.7332-1.2988-3.1426 0.1619-1.9558 0.5452-2.2869 1.6178-1.3965 1.069 0.8872 1.4056 0.623 1.4056-1.1028 0-2.6721 3.5662-5.8357 5.4633-7.7327v12.779c19.233 0.447 33.16 0.4673 35.336 2.2729 3.4092 2.8296 4.1672 9.3535 3.3918 29.196-0.4492 11.495-0.3423 19.026 0.2697 19.026 0.5573 0 1.7894-0.6145 2.7383-1.3657 1.4269-1.1296 1.8076-4.8613 2.2026-21.58 0.2628-11.118 0.1366-18.493-0.2798-16.39l-0.7573 3.8245-0.1438-4.0977c-0.0787-2.2534 0.3479-4.0974 0.9489-4.0974 1.1991 0 1.417-3.5972 0.4388-7.2422-0.3434-1.2788-1.8116-2.8665-3.2631-3.5276-3.0264-1.3789-3.327-1.0007-1.0299 1.2961 1.417 1.417 1.0582 1.5459-3.0048 1.0806-8.3301-0.9539-7.3456-0.8193-7.3456-10.27 4.6719 4.3318 5.0309 5.332 10.345 4.7329 5.3419-0.6021 4.6073-0.6223 11.508 9.4072 0 78.438 0.4565 31.183 3.4054 77.451-8.3381 9.6343-15.422 16.549-10.455 28.436 2.1101 5.0503 5.5288 8.8215 9.7819 10.79 4.5874 2.1235 12.79 1.2654 17.274-1.8071h-8e-4zm-17.319-5.825c-4.1642-4.1641-5.4131-7.874-4.4246-13.143 0.6573-3.5032 1.7225-4.8713 8.5916-11.033 3.4044-3.0537 2.7767-3.3162 11.617 4.8572 3.8755 3.5835 4.4751 4.7546 4.4751 8.7415 0 5.7495-2.6809 10.418-7.2194 12.572-5.5127 2.6159-8.9561 2.0893-13.039-1.9942zm6.6744-28.873c-0.8741-0.8743-0.62-120.95-0.62-121.06l-12.565-12.284c-16.758-0.5642-10.571-0.356-27.316-0.9199-7.9486 6.6118-11.812 8.9126-11.46 20.633 0.2753 9.1445 0.1702 9.4958-3.5062 11.732-2.573 1.5647-3.8683 1.813-4.917 0.9429-1.509-1.2524-1.9924-5.3745-0.6041-5.1553 2.3242 0.3672 4.7021-0.2434 4.1881-1.0754-0.3215-0.5205-1.7662-0.7202-3.2104-0.4441-2.2625 0.4324-2.558 0.1475-2.1362-2.0586 0.3806-1.9919 1.2007-2.5608 3.6921-2.5608 2.0435 0 3.2642 0.5933 3.3719 1.6389 0.0928 0.9016 0.4799-2.417 0.8595-7.3743 0.7871-10.275 0.2078-8.5232 11.455-19.942h30.922c5.9296 5.6479 11.025 10.501 16.954 16.149-0.7676 84.861-1.1057 89.28 1.1017 91.721 1.5912 1.759 1.9121 4.2549 1.9121 14.866 0 12.492 0.0502 12.753 2.4585 12.769 1.9193 0.0132 2.1106 0.2368 0.8715 1.0208-2.2639 1.4326-1.7662-0.4802-7.0659 0.9841-2.0708 0.5718-4.0443 0.7607-4.3853 0.4197v-3e-4zm-23.593-93.748c-2.0826-5.4783-0.828-11.513 2.6726-12.856 1.0887-0.4177 1.416-0.1038 1.0062 0.9639-0.3862 1.0068 0.1312 1.6458 1.4214 1.7542 6.3694 0.5359 8.0385 0.3379 8.0385-0.9531 0-0.7715 0.7377-1.4031 1.639-1.4031 2.0922 0 2.1471 3.1516 0.0688 3.949-0.8635 0.3313-1.3375 1.2087-1.0532 1.9492 1.1097 2.8918-1.4005 6.3931-5.6422 7.8694-5.9714 2.0784-6.9342 1.9282-8.1514-1.2732l3e-4 1e-4zm-1814.1 128.39c7.0476-2.6628 12.364-10.188 12.364-17.503 0-9.5764-7.6704-16.027-17.652-14.844-11.431 1.3538-17.733 7.0503-17.733 16.03 0 6.7144 3.0664 11.763 9.074 14.94 5.2485 2.7751 9.2107 3.1665 13.948 1.377h3e-4zm-13.55-9.0857c-3.3765-3.094-4.0093-4.3718-3.9094-7.8918 0.354-12.489 21.572-14.409 23.87-2.1599 1.334 7.1108-4.3555 13.743-11.788 13.743-3.1838 0-5.0764-0.8552-8.1719-3.6919l-2e-4 2e-4zm9.3406-7.6365c0.2134-1.1086-0.1533-2.5569-0.8147-3.2188-1.667-1.667-5.001 1.7412-4.0715 4.1628 0.8975 2.3391 4.3838 1.6655 4.8865-0.9441h-3e-4zm-842.25-21.998-1.4116-92.464c6.9331-7.1008 11.256-10.558 11.243-19.331-0.0181-11.039-5.3311-15.724-10.606-21.508-1.5195-538.33-1.625-504.35-2.8267-532.35 9.0332 1.6372 18.859 4.344 29.555-6.6619 3.9248-4.0381 5.604-5.0271 8.3311-4.9053 4.543 0.2031 454.99 1.6472 457.96 1.657l3.4893 3.314c10.173 9.6621 33.124 1.2974 33.11-16.335-0.0107-9.7693-6.2153-15.625-16.565-15.625h-4.6206c3.6348 1.811 10.747 4.8975 12.279 8.2598 1.6597 3.6416 1.5449 11.305-0.2158 14.478-4.0244 7.2524-14.902 9.0625-21.547 3.5854l-3.8555-3.1782c-168.12-0.5701-462.05-1.5422-462.25-1.7029-0.2231-0.1787-0.895-7.4919-0.9243-7.7844 463.87 0.7307 468.2 0.3557 471.71 2.8276 3.6611 2.584 3.5513 2.5874 6.7866-0.2256 12.504-10.873-20.712-5.1389-479.85-9.158-7.6069-9.9761-10.805-15.06-23.974-14.502-7.0981 0.3008-8.4448 0.7463-14.164 4.6855-7.353 5.0652-9.8574 10.084-12.956 15.106 0.0371 67.124 0.6938 230.9 1.9146 559.61l-3.3013 1.7959c-8.0947 4.4028-11.572 17.822-6.9595 26.862 2.1699 4.2532 8.0122 10.131 10.069 10.131 0.5996 0 1.0088 17.333 1.0088 42.714 0 39.324-0.1543 42.901-1.9424 45.072-2.4536 2.9775-19.091 18.997-22.94 22.73-254.19-0.2107-281.8-0.4675-282.52 1.4077-0.3467 0.9026-0.1592 1.9326 0.4165 2.2883 0.7549 0.4668 278.02 3.1265 283.5 0.1848 4.1436-2.2258 24.336-22.123 28.926-26.561 0.3633-53.906 0.2144-31.822 0.5728-85.105 2.0571-0.2375 3.8252-0.4417 5.8823-0.6792 0.854 31.866 0.8438 38.84 1.2793 89.278-2.2373 2.2065-31.967 32.105-34.626 32.248-1.1206 0.0601-66.327 0.0283-144.9-0.071-142.45-0.1809-142.86-0.175-142.86 2.0154 0 4.0291-12.964 2.9827 290.77 3.4092 22.824-21.892 14.298-13.714 37.021-35.51zm-16.933-99.492c-4.2417-2.1829-6.8091-5.4893-8.2339-10.604-0.9468-3.4001-0.7773-4.9417 0.9839-8.9224 1.1704-2.6465 3.4043-5.6479 4.9634-6.6692 3.2397-2.123 12.237-2.4973 15.683-0.6523 3.7119 1.9863 7.1816 8.6843 7.1816 13.862 0 10.801-11.15 17.838-20.578 12.986v-2e-4zm10.688-1.9734c13.364-5.6562 10.059-25.467-5.8892-23.329-6.0967 0.8176-10.809 5.6194-10.809 11.014 0 6.0193 6.5864 13.727 11.781 13.787 0.7705 0.0107 2.9829-0.6536 4.917-1.4724v2e-4zm-5.4067-33.213c-2.8516-1.8489-2.1909-526.18-4.8652-549.32 1.1943 2.532 4.2715 9.4087 6.1377 11.471 2.4233 2.6782 5.5913 537.7 1.6406 538.39-0.9019 0.1577-2.2124-0.085-2.9131-0.5391zm9.3149-536.93c-12.017-6.9683-11.304-26.018 1.21-32.334 2.6787-1.3523 6.3833-2.4585 8.2319-2.4585 10.118 0 19.619 10.69 18.766 21.115-0.5322 6.5059-3.2427 10.379-9.5 13.577-6.1636 3.1494-13.383 3.1885-18.707 0.1016l-5e-4 -6e-4zm4670.1 697.28c0-2.4788-1.533-2.2483-9.2875-2.5674 10.258-0.9238 9.2875-0.2793 9.2875-6.1738-5.764-0.0081-308.27-0.3984-314.28-0.5374-5.5084-0.1274-6.4508 0.2014-64.869-59.731 0-70.833 0.3936-71.208-2.1664-70.538-1.823 0.4768-1.9951 0.2468-1.0868-1.4507 3.6511-6.8223 3.2532 57.581 3.2532-707.99h2.57c8.4149 0 25.102-19.064 12.448-33.477-9.4573-10.772-24.3-10.5-33.817 0.6182-4.7907 5.5969-5.7133 8.5059-3.1963 10.078 1.2655 0.7905 1.7492 2.2632 1.5096 4.5969-0.5637 5.489 5.0826 14.131 11.152 17.069l4.9633 2.4028v698.68l-5.4633 7.4048v77.081c8.0273 8.9395 5.015 6.0081 63.64 65.622 339.61 0.7804 325.34 2.0348 325.34-1.0831zm-39.609-2.9995c13.581-0.4841 37.26 0.3606 10.107 0.3606-11.118 0-15.666-0.1622-10.107-0.3606zm-344.97-63.106c0.0731-11.323 0.3923-60.792 0.4654-72.115 0.1379 8.8069 0.9985 63.767 1.1371 72.618l61.017 61.223c13.792 0.0312 234.41 0.5334 248.2 0.5649l-249.48 0.5369c-7.4715-7.6519-53.871-55.173-61.344-62.827zm-4.5187-790.81c-3.9501-2.625-8.6296-10.576-8.6296-14.662 0-2.991 5.6611-9.6677 10.177-12.003 2.1794-1.1272 4.9442-1.5193 8.1575-1.157 15.602 1.7588 19.479 21.312 5.626 28.376-5.146 2.6243-10.86 2.418-15.331-0.5534zm10.788-5.0034c1.7438-1.1067 2.4883-12.656 2.7515-15.475h-12.335c0 8.2334-0.3733 11.646 2.1853 14.204 2.2873 2.2871 5.049 2.7615 7.3983 1.2703zm-1538.2 845.95c4.5253-3.8079 6.6005-8.0776 6.6005-13.582 0-7.0254-2.8674-11.907-8.4432-14.373-5.6647-2.5056-9.8737-1.9502-15.834 2.0894-4.6542 3.1541-5.614 5.342-5.5337 12.615 0.1352 12.264 14.582 20.511 23.211 13.25zm-14.492-4.8137c-3.6146-2.8433-8.5096-12.441-5.3488-10.488 0.4812 0.2974 1.4877-1.5349 2.2367-4.0723 0.8542-2.8923 2.056-4.6907 3.2228-4.8218 5.6821-0.6399 12.201-3.1992 15.673 3.3174 1.1852 2.2244 1.1364 2.3013-0.5677 0.8955-1.4119-1.165-2.1709-1.2312-3.129-0.2732-0.9583 0.958-0.8323 1.2649 0.519 1.2649 0.9812 0 2.0984 0.9905 2.4825 2.2012 0.3842 1.2104 1.1548 1.9189 1.7125 1.5745 1.3638-0.8428 1.2794 1.6929-0.197 5.9285-2.1936 6.2922-11.205 8.72-16.604 4.4734v-3e-4zm2.9842-13.198c-0.1566-1.4402-0.3254-3.0164-0.3756-3.5027s-0.5615-0.593-1.137-0.2378c-1.1008 0.6807-1.2444 5.7998-0.292 10.409 0.5481 2.6531 0.5863 2.6345 1.3265-0.6592 0.4193-1.865 0.6344-4.5693 0.4778-6.0098h3e-4zm-92.112 16.023c5.5938-3.801 7.9351-9.3101 7.1577-16.841-0.7594-7.3579-3.3945-11.174-9.0146-13.054-12.122-4.0554-24.014 6.3857-21.927 19.251 1.8386 11.33 14.461 16.979 23.783 10.644l2e-4 -4e-4zm-19.227-11.597c-0.6417-4.4148-0.193-2.7683 1.3904 1.696 0.2377-5.1667-0.0795-6.5664 4.3004-9.0144 3.291-1.8396 5.7513-1.7224 5.7513 0.2732 0 2.2583 4.6715 1.9165 3.8243 0.5464-0.3716-0.6011 0.0918-1.0928 1.0281-1.0928 1.5574 0 2.209 1.3108 1.8057 3.6323-0.0864 0.4954 0.3477 0.5891 0.9633 0.2085 1.3955-0.8623 1.2804 3.8254 1.3381 5.4468l0.781-2.7317c0.4298-1.5024 0.3807-2.8955-0.1094-3.0957-1.1761-0.4814-1.2491-2.718 0.2025-1.8213 2.675 1.6531 0.4247-8.1948-9.5188-8.1948-3.5359 0-7.9633 2.6938-7.9633 4.8452 0 0.7937-0.7377 2.0554-1.639 2.8035-2.8119 2.3335-2.0262-3.6367 0.8195-6.229 6.3129-5.7498 10.988-5.76 16.936-0.0371 3.0493 2.9341 3.551 4.1663 3.551 8.72 0 2.9167-0.7458 6.7456-1.6573 8.5083-4.3807 8.4709-19.712 9.934-21.804-4.4634zm1016.7-16.86c-13.369-6.9133-23.702 10.774-11.759 20.823 2.9158 2.4536 4.1644 2.8013 8.359 2.3286 14.097-1.5888 11.437-18.995 3.4-23.152zm-9.1538 16.012c-2.8286-3.1255-2.3306-8.5356 0.9858-10.709 2.6471-1.7346 2.9492-1.7156 5.7365 0.356 3.6823 2.7368 4.6406 8.8064 1.7269 10.937-2.7374 2.0015-6.3341 1.7529-8.449-0.5842h-2e-4zm-2636.5 4.9631c3.8857-2.1606 54.164-51.392 57.72-56.519 3.7834-5.4536 3.2397-3.842 4.3579-41.864l3.5542-1.1938c4.8596-1.6326 10.037-6.762 12.542-12.426 1.7937-4.0549 1.9204-5.4958 0.9011-10.248-2.2292-10.395-8.103-15.111-18.822-15.111-10.995 0-18.744 8.854-18.378 20.999 0.0962 3.1738 0.1143 6.5083 0.0417 7.4097-0.1316 1.6262-3.5796-6.9062-5.7217-14.158-1.5947-5.3987-14.13-17.506-22.195-21.436-6.0369-2.9419-7.5076-3.1943-18.575-3.1902-10.474 0-12.698 0.3413-17.299 2.6208-8.7288 4.325-16.582 12.372-21.207 21.73-3.9636 8.02-4.1077 8.7148-4.1077 19.84 0 10.423 0.2944 12.129 3.0679 17.777 8.4216 17.15 27.724 27.269 46.033 24.132 13.487-2.3105 27.528-11.8 32.456-21.936 3.4768-7.1499 7.2991-23.559 7.4126-20.329 0.1406 4.0176 5.7349 1.8508 10.735 5.3652 2.3662 1.6626 2.4556 2.3306 2.3816 17.782-0.0427 8.8301-0.428 16.946-0.8577 18.035-1.4087 3.5725-55.212 56.471-57.44 56.474-1.9116 0-32.949-30.243-51.758-50.438l-6.7815-7.281c0-60.28 1.0342-60.643-6.925-67.631-17.776-15.607-39.003 5.4368-30.255 22.584 6.1521 12.059 17.334 10.938 30.078 10.44 0.7834 24.252 1.2751 39.341 1.4548 39.536 6.4617 7.0383 48.562 48.869 51.714 55.797 2.0955 4.6077 2.1562 4.6436 7.7971 4.6052 3.127-0.0208 6.7603-0.6365 8.074-1.3672l5e-4 -2e-4zm-10.072-87.156c-12.645-3.7209-15.409-22.843-4.4812-31.002 7.4348-5.5505 28.008-1.9573 28.008 15.234 0 3.5703-2.55 10.361-3.8906 10.361-0.7817 0 1.7275-3.6631 1.6492-5.6648-0.0308-0.7905-0.79 0.3276-1.6863 2.4851-2.6401 6.354-12.502 10.674-19.598 8.5862h-3e-4zm66.372-20.164c-3.6189-1.5723-6.7881-6.8699-6.7881-11.347 0-3.3289 5.1877-8.6814 9.594-9.8977 4.8408-1.3369 11.812 1.4226 11.563 4.5769-0.082 1.0452 0.3389 1.5984 0.9365 1.229 0.677-0.4182 0.7922 0.2554 0.3059 1.7876-1.5908 5.0125 2.6533-2.0583 1.178 3.9343-1.2141 4.9341-3.7478 8.1289-7.7837 9.8149-4.46 1.8638-4.4905 1.8633-9.0054-0.0984h-2e-4zm-141.73-0.7662c-3.5903-2.0591-4.8455-4.4373-4.8821-9.25-0.0251-3.345 0.7185-5.4553 2.7939-7.9216 7.5159-8.9321 22.413 1.1152 17.88 12.059-2.2773 5.4983-10.486 8.1558-15.792 5.1125zm4.917-11.362c0-2.6499-2.5171-3.6372-3.8352-1.5044-0.3774 0.6108-1.22 0.7808-1.8721 0.3774-1.2078-0.7463-0.4465 0.9985 1.5869 3.6375 1.5371 1.9944 4.1206 0.4207 4.1206-2.5105h-2e-4zm1853 83.074-0.2145-31.225 12.33-12.46v-45.633l-26.206-26.507c-0.0166-25.792 0.3179-130.62-1.2097-136.31-2.2338-8.3093-141.8-145.49-146.42-153.7-1.7278-3.0708-1.7106-31.745-2.6295-185.2-31.829-0.5808-30.239-0.3689-34.527 0.6152 0.6536 194.63 0.2812 194.41 2.8401 198.42 3.2715 5.1243 144.57 146.44 147.06 151.81 1.9976 4.3184 1.9424 20.297 3.2643 126.42l-19.752 20.141c0 41.849-0.3436 45.05 2.1853 50.01 1.9733 3.8706 2.1853 6.4436 2.1853 26.526 0 13.909-0.4445 23.071-1.1863 24.457-1.0697 1.9985-0.9352 2.1409 1.3658 1.4443 1.4037-0.425 2.9672-1.1567 3.4742-1.6265 1.2161-1.1257 1.248-44.419 1.2632-46.431 4.6956-0.1536 40.834-1.1306 43.979-2.1721 3.4205-1.1331 2.0916-0.0564 2.8834 21.294 0.3319 8.9275 0.3982 33.872 1.4994 33.872 0.4575 0 0.9344-1.5979 1.0602-3.551 0.4905-7.6274 0.8629-8.8105 2.8636-9.1038 1.5984-0.2341 1.9188 0.2546 1.5237 2.322-0.2753 1.4399-0.0797 2.3582 0.4343 2.0403 1.2681-0.7837 0.6887 25.775 1.5403 25.775 0.3329 0 0.5093-14.051 0.391-31.225l7e-4 -1e-4zm-4.8564-1.9351c-1.8058-2.0146-1.3263-10.305-2.3165-11.908-0.2784-0.4507 0.3108-1.9265 1.3096-3.2798 1.7478-2.3679 1.7955-2.2075 1.2693 4.2634-0.3069 3.772-0.072 7.1987 0.535 7.8057 0.5952 0.5952 0.9128 1.8232 0.7064 2.7295-0.2785 1.2225-0.6669 1.3226-1.5038 0.3892zm4.7338-38.08c1.6757-1.6755 1.311-22.32 1.311-41.464-4.3198-4.5291-8.0316-8.4207-12.351-12.95h-34.16l-11.466 11.611c0.215 9.8877 0.3997 18.384 0.6146 28.271 4.6069 0.4443 7.1022 0.2869 7.1022 2.801 0 2.8455 2.1433 2.7363 1.4741 0.1782-0.3999-1.5295 0.7712-2.3721 5.5591-3.9995 5.8409-1.9856 6.1461-1.989 8.2362-0.0974 3.1356 2.8379 3.045 9.3127 4.5199 9.3127 5.0519 0-7.9862 6.9956-11.799 3.1829-0.8555-0.8555-1.3932-0.8555-1.922 0-0.4038 0.6533-2.6953 1.1877-5.0924 1.1877-3.314 0-5.0028-0.6956-7.0486-2.9028-1.4797-1.5964-3.0248-2.5684-3.4337-2.1594s-1.3173-0.6204-2.0189-2.2871c-1.6265-3.8655-0.7385-22.34-0.3644-35.81 5.8801-6.2183 6.2122-6.8132 15.495-13.658h34.512c2.4429 2.1077 14.999 12.62 15.849 14.834 0.366 0.9536 0.6653 10.232 0.6653 20.619 0 17.451-0.172 19.103-2.2645 21.764-2.9486 3.7488-5.2571 3.4075-3.4166 1.5681l-4e-4 -9e-4zm-40.098-27.88c-3.562-2.8843-3.4043-7.6648 0.3594-10.902 3.629-3.1218 7.1064-3.2034 10.855-0.2551 5.5688 4.3804 2.8386 11.374-4.9324 12.636-2.6863 0.436-4.4221 0.0273-6.2817-1.4785v2e-4zm-2802.3 82.613c12.309-3.4175 18.794-20.146 7.395-31.865-7.8018-8.02-17.233-7.686-26.451 0.936l-5.1914 4.8562c-1.6152-5e-4 -226.05-0.0784-230.02-0.0522-3.4067 0.0225-3.0049 0.9736-3.0049 5.4834 0.123 2e-4 233.82-0.1519 236.42 2.24 1.166 1.0696-0.0347 4.8347-0.4204 6.3726-13.176-0.0732-223.54-1.2415-236-1.3108 0 9.0859-15.732 3.6116 235.47 7.0908 9.1909 6.2075 12.384 8.864 21.802 6.2495l-1e-3 -3e-4zm-12.188-8.5784c-11.869-7.2368-6.9897-22.99 7.1211-22.99 8.2188 0 14.25 8.8528 11.143 16.355-3.2954 7.9553-11.318 10.87-18.263 6.6345h-5e-4zm4440.2 7.3694c4.8932-1.8081 10.035-6.5227 12.119-11.111 6.6853-14.721-4.7709-31.232-21.691-31.262-4.0679 0-6.4686-2.9749-31.865-28.961-0.0175-15.04-0.6013-518.17-0.6187-533.21-0.031 15.009-1.0683 517.11-1.0993 532.12l-10.926-10.926c-0.0161-189.23 0.2728-668.87-1.1473-670.29-1.3441-1.3442-5.5766 0.1099-7.5936 0.6494-0.0155 19.29-0.5343 664.42-0.5498 683.69l36.384 36.613-1.394 4.979c-3.0235 10.799 0.4171 20.286 9.3605 25.814 6.7054 4.144 11.607 4.6316 19.022 1.8918h-3e-4zm-17.128-7.2864c-5.2257-3.7856-7.3925-8.4731-6.6108-14.301 0.8058-6.0081 4.3487-10.463 10.052-12.642 6.7585-2.5811 11.928-1.4287 17.188 3.8318 3.693 3.6931 4.1514 4.751 4.1514 9.5818 0 13.494-14.16 21.224-24.782 13.529zm16.324-6.0146c0.4568-0.6682 0.745-4.0349 0.6408-7.4817-0.1871-6.1855-0.2368-6.2756-3.8268-6.9492-2.0005-0.3752-4.3786-0.3977-5.2846-0.05-1.0676 0.4097-1.6472-0.0188-1.6472-1.2158 0-3.595-1.9677 3.3469-5.22 2.3279-1.7632-0.5525-1.7654-0.4932-0.0339 0.939 1.2176 1.0071 1.9632 3.5388 2.1853 7.4202 0.3006 5.2517 0.6323 5.9604 3.0546 6.5281 3.5734 0.8372 9.0869 0.011 10.132-1.5181l-2e-4 -4e-4zm-40.451-41.382-17.743-17.768c0.0846-6.0286-0.0677-10.303 1.05-7.6245 0.8633 2.0684 7.2014 8.4248 30.226 30.313 9.2288 8.7732 9.8318 9.603 8.1089 11.162-1.0237 0.9263-2.3198 1.6843-2.8802 1.6843-0.5605 0-9.0034-7.9954-18.762-17.768h4e-4zm-17.228-227.53c3e-4 -81.894 0.9364-38.073 0.3032 36.41-0.1668 19.638-0.3033 3.2532-0.3032-36.41zm0.0186-264.97c0-209.36 0.9019-109.29 0.2855 94.241-0.157 51.832-0.2855 9.4241-0.2855-94.241zm-128.1 542.25c20.478-8.1355 11.596-41.817-13.622-41.817-4.0151 0-10.504 2.7239-13.789 5.7883-6.0154 5.6113-9.2982 17.593-6.8513 25.007 3.8416 11.64 19.791 16.77 34.263 11.021v3e-4zm-18.403-5.6404c-4.366-2.6624-7.7617-7.0278-8.6647-11.139-1.2642-5.7559 7.081-24.122 22.36-16.328 5.2064 2.6562 8.4352 6.6338 9.9492 12.256 3.2015 11.889-12.513 21.998-23.644 15.21v3e-4zm14.088-5.7949c3.8513-5.1819 1.4642-15.085-3.6364-15.085-1.188 0-2.1676-0.6147-2.1768-1.3657-0.0109-0.9106-0.3698-0.8196-1.0759 0.2729-0.6699 1.0366-1.0653 1.1497-1.0759 0.3076-0.0251-2.0305-3.2923-0.3323-3.3113 1.7217-0.0142 1.5593-0.1573 1.5798-1.086 0.1565-1.512-2.3176-0.99 13.679 1.0256 15.551 3.0425 2.8267-1.9046-3.4775 1.8353 0.0625 2.7924 2.6435 6.8452 1.9516 9.5014-1.6221zm69.482 11.18c13.698-7.0474 16.206-22.024 5.485-32.746-10.958-10.958-28.704-10.18-35.403 1.552-3.3375 5.8447-4.1765 11.362-2.65 17.425 1.5847 6.2935 7.7657 13.326 13.562 15.431 5.2991 1.9244 13.416 1.2144 19.007-1.6621zm-18.756-5.3298c-11.661-7.6892-11.114-22.315 1.0351-27.689 4.4495-1.968 5.5856-2.0747 9.5263-0.894 2.5849 0.7744 6.4376 3.3037 9.1234 5.9895 4.2296 4.2297 4.649 5.1416 4.649 10.109 0 6.1106-2.4112 10.148-7.6907 12.878-4.3707 2.2602-12.926 2.0578-16.643-0.3936zm13.331-3.3826c2.4691-1.5623 2.9678-13.412 0.6615-15.718-2.1244-2.1245-4.9561-2.429-4.9561-0.5327 0 0.7161-0.6405 0.4255-1.4233-0.645-2.5384-3.4714-4.1889 0.3149-3.8189 8.7605 0.3008 6.8699 0.5306 7.4849 3.0569 8.1843 3.8778 1.0735 4.7169 1.0671 6.4799-0.0491v3e-4zm-251.41 8.2176c1.8393-0.9512 4.722-3.5354 6.4056-5.7429 2.7806-3.6453 3.0613-4.8389 3.0613-13.012 0-8.3921-0.2251-9.281-3.3413-13.197-12.708-15.97-35.688-8.3171-38.319 10.881-0.5715 4.1697-0.1795 6.1226 2.2087 11.004 4.3134 8.8162 11.464 12.976 21.027 12.233 3.0873-0.2402 7.1184-1.2148 8.9578-2.1663h1e-4zm-17.32-4.8474c-18.501-9.8318-3.6891-37.834 12.122-27.179 11.799 7.9509 11.365 22.621-0.8189 27.712-4.7324 1.9771-6.759 1.8816-11.303-0.5327v-3e-4zm10.732-2.6209c0.7853-1.0515 2.2604-1.9194 3.278-1.929 1.4182-0.0129 1.5128-0.2307 0.405-0.9331-0.9852-0.6245-1.2228-2.1011-0.7471-4.6384 1.4398-7.6741-3.9313-13.686-9.8269-11-1.8088 0.8242-2.7316 2.1304-2.7316 3.8657 0 3.9954-2.7842 3.4011-3.5378 8.5347-0.4167 2.8384 0.0109 3.677 2.6058 5.155 1.7068 0.9707 3.1066 2.0303 3.1103 2.3545 0.0175 1.4661 6.1666 0.3022 7.4442-1.4087l1e-4 -5e-4zm70.052 7.2151c7.6154-3.7949 12.108-10.517 12.108-18.117 0-7.1833-2.1113-11.694-7.7215-16.496-11.763-10.069-28.731-7.3464-35.627 5.717-9.5515 18.092 10.667 39.148 31.241 28.896zm-17.197-5.5012c-14.749-7.2681-10.298-27.676 6.0322-27.66 7.7675 0.011 15.616 7.4194 15.616 14.747 0 6.9414-7.8351 14.766-14.743 14.722-1.8029-0.011-4.9106-0.8255-6.9059-1.8086zm15.573-3.7671c0.8399-0.9158 0.8015-1.0667-0.1375-0.5391-0.9521 0.5352-1.2469-0.9209-1.0927-5.3962 0.1791-5.1965-0.1658-6.4348-2.267-8.1392-1.9173-1.5549-3.216-1.7986-5.7365-1.0759-1.792 0.5142-3.2581 0.6135-3.2581 0.2212s-0.795 0.4219-1.7667 1.8093c-3.1345 4.4751-0.4274 13.261 4.0858 13.261 1.1284 0 2.0516 0.7034 2.0516 1.5627 0 1.2368 0.7254 1.3547 3.4774 0.5652 1.9127-0.5483 4.0024-1.5696 4.6437-2.2693v3e-4zm64 9.9719c11.28-5.7546 15.232-23.425 7.4515-33.317-3.3273-4.23-12.34-8.177-18.701-8.1899-24.14-0.0481-27.37 33.502-10.414 41.857 5.2386 2.5815 16.265 2.4031 21.663-0.3508v2e-4zm-20.895-8.6096c-3.7676-3.7676-4.2417-4.8364-4.2381-9.5605 0.0109-9.4351 6.3875-16.019 15.402-15.895 11.203 0.1548 17.198 10.323 12.588 21.354-2.4184 5.7878-6.5594 8.3433-13.52 8.3433-5.5021 0-6.3368-0.346-10.233-4.2422zm17.248-1.2803c1.4463-6.0955 1.5364-9.126 0.3561-11.975-0.7433-1.7947-1.9063-3.3005-2.5847-3.3464-2.0719-0.1401-5.0525-1.1975-5.0743 0.4534-0.0109 0.7178-0.477 0.5569-1.0759-0.3699-0.8785-1.3594-1.0649-1.2661-1.0927 0.5464-0.0273 1.8127-0.2141 1.9058-1.0927 0.5464-0.898-1.3896-1.0617-1.3384-1.0759 0.3376-0.011 1.0874-0.4486 1.7097-0.9763 1.3835-1.2834-0.7932-2.2836 4.6255-1.5508 8.4021 0.702 3.6179 1.707 4.3306 7.4274 5.2646 5.4385 0.8884 6.2706 0.7349 6.7398-1.2424v-2e-4zm-4033 7.0659c6.7612-5.4727 8.5225-8.5684 8.5225-14.985 0-7.0393-2.9136-13.064-8.5078-17.592-5.5288-4.4751-15.737-5.3206-22.774-1.8867-7.1318 3.4807-10.161 8.7346-10.161 17.622 0 6.0913 0.4839 7.9932 3.002 11.799 4.4067 6.6597 9.5303 9.0581 18.517 8.6682 6.2557-0.2711 7.9046-0.7953 11.402-3.6259zm-17.828-3.842c-9.79-2.8291-11.959-17.987-3.4414-24.052 4.6509-3.3115 11.522-3.8152 15.752-1.1545 4.4985 2.8289 7.437 9.1555 6.6255 14.264-0.7075 4.4519-6.9385 11.056-10.432 11.056-4.3267 0-3.293 1.3799-8.5049-0.1133h5e-4zm80.624 6.4809c11.865-4.092 17.197-16.367 12.04-27.72-2.4751-5.4485-7.7886-10.062-12.456-10.816-6.0381-0.9751-10.173-1.3354-4.0654-1.699 4.896-0.2913 4.9009-0.2954 1.0923-0.9707-4.728-0.8381-10.926-0.2224-10.926 1.0854 0 1.7207 7.2651 0.2444 0.5464 2.6035-7.3008 2.5635-13.693 11.792-13.628 19.676 0.0264 3.2493 3.73 10.81 6.6743 13.627 5.4438 5.207 13.243 6.793 20.722 4.2136h5e-4zm-14.291-10.34c-1.8823-1.5837-3.1709-3.5347-2.8633-4.3357 0.3071-0.8008 0.0488-1.7715-0.5747-2.1567-1.5938-0.9849-0.144-5.9976 2.5776-8.9133 5.2554-5.6311 15.901-3.7278 18.869 3.3733 1.5391 3.6824 1.0991 8.8286-0.6606 7.7407-0.5259-0.325-0.6865 0.113-0.356 0.9734 1.1543 3.008-8.9096 10.118-16.992 3.3183zm8.3506-0.0371c-1.0801-1.0806 2.5347-4.6704 4.0991-4.0701 0.7378 0.283 1.8936-0.696 2.5679-2.176 0.9707-2.1299 0.897-2.9639-0.3516-4.0002-0.8682-0.7202-1.5776-0.9922-1.5776-0.6042s-1.2305-0.1006-2.7334-1.0857c-1.5034-0.9851-3.7158-1.5342-4.917-1.2202-2.9556 0.7729-2.7705-0.1516 0.2749-1.3757l2.4585-0.988-2.4585-0.0688c-3.2046-0.0906-6.8291 3.5947-6.8291 6.9436 0 3.8843 1.0791 6.0356 2.7114 5.4089 2.0225-0.7761 3.3535 1.823 1.5259 2.9807-2.269 1.4365 6.1182 1.144 5.2295 0.2563v-6e-4zm69.91 10.022c4.4321-1.8518 11.49-7.6575 10.505-8.6418-0.3569-0.3572-0.0752-0.6494 0.625-0.6494 0.7012 0 1.188-0.3687 1.082-0.8193-0.106-0.4509 0.4048-2.9082 1.1343-5.4609 1.2256-4.2866 1.0942-5.1218-1.7188-10.926-3.8853-8.0159-9.792-12.352-17.994-13.207-6.4912-0.6775-5.3618-0.71 0.7427-2.1069-2.3755-0.0886-10.38-0.6926-10.38 2.0771 0 3.0535-12.994 7.7571-11.781 22.374 1.1636 14.029 15.027 22.691 27.784 17.361l0.0011 1e-4zm-10.794-9.4748c3.2817-3.2812-14.085-6.4053-4.2012-16.29 4.4346-4.4346 10.656-4.4565 15.582-0.0547 7.6562 6.8408 1.8887 17.621-8.0854 17.621-3.4873 0-4.2695-0.3032-3.2959-1.2766v3e-4zm6.9488-6.0354c2.5132-3.0979-0.3247 0.0022-3.5718 0.2412-1.4561 0.1069-1.6426-0.365-0.9067-2.2988 0.6851-1.8015 0.4092-2.9014-1.062-4.2324-1.8315-1.6575-2.126-1.6599-3.7559-0.0298-2.3027 2.3027-2.231 3.3362 0.416 5.9834 2.6699 2.6707 6.8589 2.8291 8.8804 0.3367v-3e-4zm68.382 14.849c8.7637-4.2422 13.399-13.551 11.098-22.287-1.4106-5.3579-5.5249-10.963-10.09-13.747-4.1084-2.5051-13.08-2.7454-17.083-0.4575-3.6602 2.0925-5.3076 2.0554-2.667-0.0601 2.0317-1.6277 2.0161-1.6482-0.3682-0.4912-1.3687 0.6641-2.2441 1.6033-1.9458 2.0869 0.2988 0.4832-0.6797 2.0278-2.1743 3.4321-3.2407 3.0444-6.2007 12.203-5.2393 16.212 2.9243 12.192 14.982 21.842 28.47 15.313v-4e-4zm-13.4-8.3728c-1.4316-0.9995-4.8599-8.2554-4.8599-10.285 0-2.1453 3.7651-6.3445 2.5205-6.3992-2.0244-0.0886 4.7944-3.1653 7.0947-3.2007 3.3647-0.0515 8.6299 2.7666 10.02 5.364 0.6187 1.1562 1.125 3.8779 1.125 6.0481 0 5.7-3.9121 9.3147-10.057 9.2927-2.5811-0.011-5.2109-0.3779-5.8433-0.8196h-4e-4zm3.8808-9.448c0-0.8066-0.7583-2.0962-1.6855-2.8655-2.3633-1.9617-4.2515 0.1882-3.3433 3.8066 0.6089 2.427 1.0225 2.6692 2.8701 1.6807 1.1871-0.6352 2.1587-1.8152 2.1587-2.6218zm74.044 17.31c6.6812-3.3293 9.9165-7.9722 10.81-15.511 0.9204-7.7717-2.2954-14.522-8.9219-18.724-4.5542-2.8882-4.8096-3.2566-2.5288-3.6501 2.4746-0.4268 2.4614-0.469-0.5396-1.7251-12.586-5.2695-31.401 7.5688-17.171 2.5481 6.3193-2.2292 9.6035-1.9348 3.6821-0.083-6.2676 1.9602-10.669 6.3137-11.87 5.229-0.479-0.4329-0.5542-0.2322-0.1675 0.4458 0.3877 0.6782-0.0718 2.79-1.022 4.6929-7.0659 14.166 7.1201 37.046 27.728 26.777l6e-4 1e-4zm-17.822-10.8c-6.0068-6.0071-1.9165-14.54 7.478-15.598 10.748-1.2114 15.114 8.303 7.3662 16.051-3.3295 3.3301-11.305 3.0864-14.844-0.4529zm14.603-3.458 3.9546-3.9546c-1.5386-1.231-6.8857-5.1902-4.9048-5.197 1.3115 0 1.335-0.241 0.1367-1.3713-2.6279-2.4792-0.9482 1.366-4.0181 1.366-2.2773 0-0.7607 5.5317 2.1538 7.8538 2.0977 1.6716 2.1392 1.9116 0.4395 2.564-3.1816 1.2205-15.816-1.4868-8.2183 1.5671 4.3711 1.7568 6.4272 1.2009 10.456-2.8279h5e-4zm-9.5669-2.1382c1.1821-1.4241 1.1665-1.8843-0.0874-2.6594-0.834-0.5154-1.9033-0.6985-2.376-0.4062-0.4727 0.292-0.585-0.3552-0.2495-1.438 0.335-1.0828-0.1216-0.741-1.0151 0.7598-1.1465 1.926-1.29 3.1311-0.4878 4.0974 1.5015 1.8096 2.4893 1.7266 4.2158-0.353v-6e-4zm75.983 16.964c7.1943-3.4827 10.267-8.2971 10.267-16.09 0-10.732-5.0503-18.082-14.814-21.56-4.9424-1.7605-2.9331-2.1472 2.834-0.5449 8.8618 2.4624 16.669 17.506 12.677 9.2947-3.582-7.3643-11.456-12.565-19.023-12.565-8.2837 0-16.035 4.3867-19.305 10.926-2.0806 4.1614-1.2812 16.258 1.4263 21.564 5.0459 9.8911 16.126 13.725 25.938 8.9749h-5e-4zm-12.133-9.7788c0.3711-0.6011 1.6299-1.0925 2.7959-1.0925 1.1665 0 2.1211-0.4917 2.1211-1.0928s0.5581-1.0925 1.2402-1.0925c1.5527 0 5.4614-4.5542 6.501-5.676-2.8252-2.4268-4.9146-4.7268-9.0674-4.5598-10.398 0.418-9.6963 0.1519-8.9863 3.4067 0.4658 2.135 0.3457 2.5635-0.415 1.4805-0.874-1.2449-1.1714-1.145-1.6196 0.5464-0.7026 2.6484-0.6104-5.0317 0.5601-5.0317 0.4731 0 0.8599-0.6895 0.8599-1.532 0-1.8479 5.5361-3.9312 10.446-3.9312 4.6528 0 9.2217 5.1362 9.2217 10.367 0 4.8096-5.0845 9.301-10.529 9.301-2.2583 0-3.5303-0.4443-3.1294-1.0928h3e-4zm75.141 10.863c5.5732-1.5476 12.089-8.1069 11.438-11.514-0.2695-1.4084-0.0688-2.301 0.4453-1.9834 1.5786 0.9758 1.0352-9.9712-0.7017-14.128-2.0518-4.9111-7.5688-11.266-11.583-13.342-7.5361-3.897-20.159-0.7654-25.146 6.2378-1.3706 1.925-1.8398 3.0969-1.043 2.6045 0.9917-0.613 1.2749-0.4165 0.8979 0.6221-0.3037 0.835-0.9995 1.4299-1.5469 1.3228-1.0913-0.2139-1.3862 1.6694-1.6143 10.295-0.4062 15.383 12.653 24.383 28.854 19.884l-3e-4 2e-4zm-16.703-13.868c-2.6553-3.376-2.4458-8.3965 0.541-12.955 1.4272-2.178 2.6221-2.616 7.1372-2.616 5.209 0 5.4897 0.1577 7.0918 3.9919 2.2822 5.4609 0.5469 5.2419 0.5469 3.8386 0-1.5811-2.6001-2.1174-1.6411 0.9036 0.5146 1.6226 0.2832 2.0217-0.9087 1.5647-2.1943-0.8425-3.3916 1.7202-1.7163 1.7202 0.8232 0 0.5762 0.8291-0.6514 2.1853-1.5127 1.6711-1.6167 2.1892-0.4424 2.2021 1.249 0.0129 1.23 0.2141-0.104 1.0759-3.1504 2.0359-7.3955 1.2122-9.853-1.9121v6e-4zm5.9371-3.1592c0.3784-0.9861 0.3687-2.7988-0.022-4.0286-0.6987-2.2026-0.7334-2.2043-2.3364-0.1191-1.5444 2.0098-1.6006 1.9648-1.106-0.8884 0.6016-3.4683 0.4629-3.5796-1.7319-1.385-1.9692 1.9692-1.1631 6.1296 1.0249 5.2898 0.9219-0.3535 1.5308 0.1113 1.5308 1.1682 0 2.2883 1.7573 2.2637 2.6396-0.0371l1e-3 2e-4zm19.29-10.043c-1.709-4.126-7.7676-9.7119-11.569-10.666-1.4912-0.3743-2.7119-1.1255-2.7119-1.6694 0-1.4512 7.7451 2.0305 10.742 4.8289 6.832 6.3796 6.2251 13.995 3.5381 7.5061l4e-4 2e-4zm-31.997-8.0561c2.7339-2.9893 9.0801-5.3066 14.02-5.1189 2.4648 0.094 2.1152 0.3235-1.6055 1.0549-5.5615 1.0933-11.29 4.7051-14.911 6.7949l2.4971-2.7309zm86.068 34.221c5.5562-2.5239 12.176-10.146 13.688-15.76 2.8892-10.731-2.9819-19.957-15.079-23.694-11.676-3.6067-9.3613-2.1704-4.5859 1.9709l-4.4707 0.7551c-5.2217 0.8823-13.022 6.4414-15.109 10.768-1.8149 3.7622-1.8882 11.69-0.1401 15.083 1.7812 3.457 7.5405 9.1787 5.6943 8.1245-0.751-0.429-1.3657-0.481-1.3657-0.1155 0 1.3689 9.4331 4.8801 13.112 4.8801 2.103 2e-4 5.8183-0.9058 8.2558-2.0128zm-15.071-7.298c-5.5815-3.0286-7.9995-11.822-4.9141-17.872 0.7422-1.4558 3.7236-4.3135 6.624-6.3511 6.3589-4.4656 9.584-4.1768 14.929 1.3376 2.8525 2.9436 3.709 4.8687 4.1348 9.2991 0.4834 5.0312 0.2236 5.9167-2.6133 8.9009-6.02 6.333-12.19 7.925-18.16 4.6858zm3417.3 6.6777c14.602-7.0105 13.815-28.878-1.3174-36.598-15.592-7.9541-30.704 0.8918-30.704 17.972 0 9.6038 4.5277 16.494 13.27 20.197 3.753 1.5893 13.948 0.7348 18.751-1.5713zm-17.795-4.6958c-4.6275-2.3247-8.7629-8.2178-8.7629-12.487 0-8.1458 6.9695-16.196 14.015-16.189 8.3224 0.0107 15.475 7.5005 15.482 16.217 0.0109 10.977-10.781 17.46-20.735 12.459l1e-4 3e-4zm13.631-11.23c-0.4072-2.4102-1.4096-5.051-2.2276-5.8691-0.818-0.8179-1.2648-1.7097-0.993-1.9817 0.558-0.5579-2.4689-1.0688-3.2718 1.0232-1.4549 3.79-4.1457-5.4575-8.3408 6.1445-1.2873 3.5596-1.2646 4.5225 0.1664 7.062 1.134 2.0127 2.5768 2.9561 4.5721 2.9902 1.6035 0.0273 3.2395 0.3743 3.6359 0.7705 0.3963 0.396 2.1781-0.7373 3.9597-2.5188 2.8798-2.8796 3.157-3.7253 2.4989-7.6211l2e-4 3e-4zm-3322.6 15.88c6.3943-1.8989 14.556-8.5938 17.156-14.073 6.2969-13.27-3.3245-35.551-29.019-35.624-9.7954-0.0283-12.334 0.7627-17.77 5.5359-21.04 18.473-3.3364 53.952 29.633 44.161zm-15.911-12.09c-8.3804-7.0518-3.5857-23.435 6.8552-23.422 4.678 0.0107 10.181 3.6116 12.304 8.0618 2.3491 4.9255 1.1899 10.968-2.8862 15.044-4.2469 4.2466-11.436 4.3862-16.272 0.3159zm4039 12.632c55.365 0 56.093-0.0283 56.093-2.1853 0-2.5332-1.1198-2.2065-22.399-2.6084 24.1-1.3411 21.724-0.3069 22.571-6.2861l-178.82 1.199c-9.5224-10.276-5.8494-6.3125-15.296-16.507-0.9513-14.327-0.79-17.565-4.0583-22.504-6.732-10.173-22.483-11.765-32.177-3.2534-11.825 10.382-8.3255 30.08 6.4397 36.25 7.157 2.9902 10.313 1.417 19.649-1.7527 6.824 6.6777 12.688 12.416 19.512 19.093 32.295-0.6443 64.639-1.4441 128.49-1.4441v-5e-4zm-134.98-13.199c-12.583-13.525-10.788-13.658 1.0638-1.2944l9.1803 9.5767 61.188 1.144-62.281 0.4104-9.1515-9.8367zm92.466 8.0105c32.103-0.5215 70.778 0.3242 19.941 0.3242-21.935 0-30.908-0.1458-19.941-0.3242zm-124.01-17.308c-7.9657-4.064-10.608-15.672-5.0667-22.258 11.078-13.166 27.746-4.6035 27.931 8.7737 0.1472 10.662-13.092 18.47-22.864 13.484v-2e-4zm12.062-7.2783c1.0082-0.751 2.124-2.8486 2.4795-4.6609 0.8305-4.2339-2.8397-9.2703-6.7555-9.2703-3.0395 0-8.0659 4.4397-8.0659 7.1243 0 2.1453 2.0735 6.2407 3.7147 7.3364 1.8889 1.2613 6.6129 0.9715 8.6272-0.5295zm-3741.3 28.49c5.2915-1.5852 13.116-8.3159 15.494-13.329 2.6218-5.5247 2.3645-17.355-0.5061-23.285-7.5439-15.584-30.453-19.388-44.477-7.3838-15.114 12.937-10.647 36.992 8.1108 43.678 5.2476 1.8706 15.681 2.0264 21.378 0.3194zm-18.916-12.376c-5.5923-3.0393-7.9866-13.374-4.7874-20.663 1.8118-4.1292-3.7183 2.1616-0.4329-2.8721 2.0896-3.2012 9.3396-6.0234 13.068-5.0874 2.6604 0.668 8.0049 4.2019 5.9397 3.9275-1.3796-0.1831-8.2478 0.2625-9.8337 0.3528l4.8745 0.9556c6.8872 1.3499 10.423 5.1853 10.423 11.307 0 3.6162-0.6755 5.5269-2.7317 7.7275-5.4346 5.8162-11.085 7.3047-16.519 4.3516l-5e-4 2e-4zm1841-4.6404c-0.5254-8.3723-0.5259 20.946 0 12.565 0.2168-3.4555 0.2168-9.1098 0-12.565zm-1746.5 13.57c9.5691-7.2988 10.41-19.68 1.9133-28.176-15.375-15.376-38.121 2.7305-28.472 22.664 3.3406 6.9009 7.6877 9.3259 15.92 8.8809 5.2772-0.2854 7.534-0.9998 10.639-3.3682zm-15.274-3.9878c-1.2693-0.5127-3.4072-2.3254-4.7512-4.0281-2.0029-2.5374-2.3513-4.0696-1.9302-8.4946 0.6799-7.1482 4.26-10.445 11.344-10.445 9.667 0 15.668 10.379 10.533 18.216-3.0598 4.6699-10.015 6.8445-15.196 4.7512v-2e-4zm6.1318-10.402c1.0852-1.3076 1.0852-1.9702 0-3.2778-2.7307-3.29-6.6226-0.7727-5.0681 3.2778 0.3459 0.9016 1.3218 1.6392 2.1685 1.6392s2.1513-0.7375 2.8996-1.6392zm74.686 14.708c20.988-14.381-1.8083-44.411-20.952-29.81-4.6201 3.5242-6.9172 8.8735-6.9836 16.264-0.0417 4.6143 0.5339 6.4792 2.9946 9.7053 4.4006 5.7695 7.6428 7.2595 14.893 6.8442 4.3264-0.2478 7.3413-1.1492 10.049-3.0046v5e-4zm-15.794-5.7308c-7.0742-4.7566-7.4314-13.215-0.7939-18.8 7.2507-6.1013 18.272-1.0532 18.353 8.4062 0.0469 5.4238-1.9358 9.4451-5.5869 11.333-4.2661 2.2064-7.6946 1.9371-11.972-0.9392zm7.137-9.1704c0.387-1.0081 0.0481-2.488-0.7524-3.2886-1.9792-1.9797-5.8596 0.6826-4.8459 3.3247 0.8988 2.3424 4.6949 2.3179 5.5983-0.0361zm1905.6-14.886c-0.8154-2.1252-4.0536-1.8562-29.434-1.8547 0.0198 1.4185 0.4185 30.882 0.4911 31.958 0.0621 0.9128 17.697 0.8193 28.216 0.8193 1.7248-11.498 1.3737-29.237 0.7267-30.923zm-25.975 24.24c-0.8773-3.2783-0.7214-19.718-0.7272-23.668l3.5511-0.6565c4.6562-0.8608 10.696 0.6587 8.4242 2.1191-2.6687 1.7161-5.7424 0.0242-6.3246 3.2109-0.3099 1.6946-0.1006 1.8977 0.9324 0.9048 1.6722-1.6077 4.394-0.6689 3.6538 1.2605-0.9436 2.4587 1.6294 2.9656 4.9866 0.9827 2.7057-1.5984 3.4846-1.666 4.9707-0.4326 1.3552 1.1248 1.4464 1.6577 0.3954 2.3076-2.6965 1.6665 2.777 4.8691 0.4612 8.5767-0.6842 1.0957-0.9934 2.9502-0.6871 4.1211 0.3396 1.2988-0.011 2.1626-0.8888 2.2151-0.795 0.0469-5.1816 0.4412-9.748 0.8748-8.1201 0.7712-8.3175 0.7314-8.9994-1.8162l-3e-4 2e-4zm22.686-10.502c-0.6484-3.1624-0.7544-6.1294-0.2374-6.6465 1.6561-1.656-0.3673-4.5476-3.8976-5.5706l-3.4346-0.9951c10.499-0.2502 9.5906-2.249 8.7412 18.925l-1.1716-5.7122v-2e-4zm-101.81 14.389c3.7722-0.6206 4.0857-0.9485 3.9486-4.1294-0.1107-2.5715-0.27-2.8264-0.6224-0.9966-0.5549 2.8806-0.9976 2.4585-21.705 2.4585-0.0748-6.9529-0.1392-12.927-0.214-19.88 1.1396 1.7285 4.1 5.8489 4.1089 7.925 0 0.9368 0.7291 2.6577 1.6116 3.8242 1.9833 2.6221 2.1185 4.6262 0.3077 4.5591-5.2789-0.1958-10.263 1.9536 4.3706 2.114l9.5607 0.1047-0.2037-10.25c-0.2046-10.3 1.3301-14.278 2.1635-5.6062 0.5023 5.2283 0.2936-5.9458 0.2256-10.653l-13.112-0.1201c-23.918-0.2188 7.527 1.3088-9.8339 2.1941-2.0437 0.1038-2.1931 0.9202-2.3073 12.591-0.0667 6.8638 0.0851 13.272 0.3387 14.242 0.3652 1.397 2.2017 1.8176 8.8632 2.0303 4.6213 0.1475 10.246-0.0352 12.5-0.406l-0.0012-0.0012zm-11.766-17.997c-0.9358-1.5139 0.2542-2.7397 3.6608-3.7708 2.2157-0.6707 2.5006-0.4373 2.1853 1.7893-0.3938 2.7813-4.493 4.1707-5.8461 1.9815zm948.71 17.242c-0.3242-0.9575-2.5563-1.2529-7.4663-0.988-10.296 0.5554-10.735 2.3538-0.5754 2.3538 6.3219-1e-4 8.3857-0.3506 8.0417-1.3658zm-646.47-11.769 7.5509-7.6716v-98.628c-6.2828-6.3679-23.771-24.795-26.774-24.795-9.6031 0-8.038-7.6531-8.1913-106.45-86.42-87.136-149.88-150.97-152.84-155.82-3.4274-5.6226-1.3955 2.8369-3.7556-187.35-11.916 0.3821-22.155 0.7104-34.072 1.0928 0 6.1843-0.2902 189.07 0.9062 193.39 1.6089 5.8022 155.9 157.05 157.96 162.5 1.5309 4.0488 1.2255 78.175 1.2426 90.321-18.868 14.392-32.786 29.259-34.309 33.252-0.9872 2.5886-1.2244 13.727-0.9171 43.099 0.4023 38.45 0.4771 39.608 2.553 39.608 1.1761 0 1.9974 0.6147 1.8248 1.366s0.1748 1.4951 0.7717 1.6528c1.3962 0.3694 1.556-1.2939 2.052-21.373 0.2269-9.1934 0.717-17.02 1.0889-17.391 0.4146-0.4141 0.676 6.6067 0.676 40.404l9.8185 9.8186c10.811-0.1755 57.695-0.5264 60.674-2.1511 2.3368-1.2747 7.8441-10.117 6.3364-10.173-2.4595-0.094 11.983-4.9363-8.8907-3.8223-15.26 0.8147-8.0297-1.4373 2.0179-1.5308l8.2209-0.0767c-0.5386-45.187-0.4978-49.795-1.9142-74.488-3.8164-3.6318-19.148-17.33-14.255-17.287 3.3815 0.0305 15.718 13.848 18.606 16.929 0.4114 15.278 1.2579 44.482 1.2997 59.822 0.0468 16.689 2.1871 16.087 2.3064 4.3706 0.0481-4.6575 0.3251-7.8811 0.6171-7.1636 0.2919 0.7173 1.1311 1.074 1.8647 0.7925 1.5176-0.5823 1.4778-0.8381 2.4237 15.57 0.6637 11.514 0.5734 12.315-1.5978 14.174-3.1885 2.7295-0.9341 2.6785-5.9608 8.3262-3.1241 3.51-4.2397 4.0679-7.6455 3.8242-5.5393-0.397-4.5991-2.2954-1.4757-1.6982 1.384 0.2646 3.0645-0.106 3.7346-0.8232 0.9362-1.0022-0.7465-1.3459-7.2671-1.4854-6.5167-0.1389-8.8135 0.2144-9.8999 1.5232-1.957 2.3579 0.1678 3.6292 0.7764 1.9248 0.2684-0.7512 1.7991-1.3508 3.4016-1.3325 8.0043 0.0903-12.663 3.8816 10.387 5.2463 2.5089 0.1487 4.5471-1.2842 10.653-7.488l9e-4 -6e-4zm-47.372-16.48c-9.9399-2.3013-19-9.1672-23.51-17.817-2.3336-4.4751-2.8994-7.0554-2.8976-13.21 0-6.6543 0.5211-8.656 3.9919-15.402 5.042-9.7996 8.515-13.918 14.9-17.672 4.244-2.4949 6.3271-2.9783 12.724-2.9526 10.024 0.0405 15.108 1.9255 21.622 8.019 8.2461 7.7134 9.9565 11.843 10.015 24.183 0.0414 8.8657-0.3409 11.173-2.6251 15.815-6.7039 13.623-21.66 21.944-34.22 19.037v6e-4zm19.62-14.674c3.4705-1.7295 6.7278-4.4612 8.6825-7.282 2.7778-4.0083 3.1284-5.4524 3.1284-12.888 0-7.4761-0.326-8.801-3.0419-12.361-3.7449-4.9102-11.388-9.5183-17.045-10.277-11.871-1.5923-24.075 9.646-24.141 22.232-0.0284 5.3672 4.6537 15.016 8.7803 18.094 3.6299 2.7073 10.529 5.1409 14.746 5.2014 1.835 0.0261 5.8359-1.1975 8.8906-2.72l3e-4 3e-4zm-17.851-9.1057c-10.417-6.5486-4.684-23.091 8.0021-23.091 4.1639 0 5.5277 0.5852 8.6575 3.7148 3.2062 3.2061 3.7142 4.4407 3.7096 9.0144-0.011 7.9302-3.2687 11.51-11.007 12.084-4.5576 0.3379-6.7172-0.0591-9.3624-1.7224l-2e-4 6e-4zm-8.5809-32.898c1.9965-1.3269 9.7561-3.186 15.686-3.7578 6.326-0.6104 10.154-2.6111 7.6019-3.9731-5.4412-2.9033-19.948-1.7092-21.276 1.7512-0.3339 0.8699-1.1825 1.5815-1.8861 1.5815-1.4592 0-5.043 3.8669-5.043 5.4414 0 1.0117 2.6802 0.4431 4.9169-1.0435v3e-4zm-31.302 18.275c-0.6616-1.1167-1.2981-34.695-0.6576-34.694 0.4508 0 0.8304 3.5669 0.844 7.9238 0.0348 11.587 1.6165 27.043 0.6738 27.043-0.3838 0-0.7706-0.123-0.8597-0.2732h-5e-4zm43.026-37.33c8.8573-8.6912 12.103-10.048 15.257-6.3757 6.666 7.7612-2.6771 15.348-1.5764 9.5889 0.6912-3.6157-1.667-4.4939-3.1759-1.1824-0.7 1.5361-1.8083 2.8005-2.463 2.8101-0.6548 0.011-0.453 0.4932 0.4485 1.0757 2.661 1.7197-9.1486 0.5908-14.204 1.7471-2.1094 0.4823-0.8072-1.2641 5.7145-7.6637zm663.79 74.102c1.9518-0.2952 4.0381-1.47 4.6537-2.6201 1.4414-2.6931 0.7725-216.01 0.5498-354.76-2.161-2.3726-18.648-21.123-21.293-19.488-1.9327 1.1946-0.3872 352.91-2.0345 353.92-0.5067 0.3132-342.5 4.2446-348.27 0.9644-2.9629-1.6851-3.11 11.85-5.1669-352.98 6.562-2.083-16.275-1.0754 323.68 1.0999l3.3267-3.3269c5.3192-5.3191 3.7805-14.669-2.9745-18.075-4.6034-2.3213-339.73-3.6472-342.85-1.3567-2.0856 1.531-2.132 3.1973-1.9131 68.576 0.5297 158.22 1.6483 326.94 2.1765 328.32 0.9477 2.4686 387.59 0.1102 390.12-0.2731zm-58.456-383.05c-2.1185-2.1187-1.6006-4.1282 1.4188-5.5037 2.2878-1.0422 3.0958-0.9395 4.6254 0.5903 1.4265 1.4265 1.5802 2.2888 0.6675 3.7449-1.4792 2.3601-4.921 2.9592-6.7117 1.1687v-2e-4zm883.61 355.49c7.0078-4.2607 10.211-10.733 9.6814-19.56-0.4882-8.1326-4.1549-13.581-11.845-17.602-9.4768-4.9551-23.899-0.9302-29.616 8.2644-3.8444 6.1833-3.6377 16.833 0.4465 23.005 6.5573 9.9087 20.436 12.519 31.334 5.8933v3e-4zm-21.864-4.8828c-4.6465-3.1311-6.4237-6.6025-6.4442-12.587-0.0295-8.5647 3.9802-13.197 13.497-15.593 4.3997-1.1079 5.5161-0.9846 9.662 1.0674 12.549 6.21 11.728 20.67 2.0675 27.124-5.1259 3.4243-13.692 3.4194-18.782-0.011v-2e-4zm13.207-4.1382c0-0.6965 0.9471-0.8657 2.3512-0.4202 2.2423 0.7117 2.3181 0.5059 1.639-4.4495-1.7529-12.786 2.6422-10.916-12.731-11.357 0 8.5496-0.7631 15.298 4.9169 16.628 3.5865 0.8402 3.8242 0.815 3.8242-0.4008zm273.69-1.6831c-3.0966-3.0964-5.9366-2.8203-10.089 0.98-3.1811 2.9116-3.1124 5.6851 0.2234 9.0212 7.2972 7.2967 17.306-2.5607 9.8655-10.001zm-670.34 3.9517c4.7286-2.4126 7.5616-6.7825 8.861-13.668 2.7711-14.685-9.4543-28.205-23.551-26.046-18.04 2.7634-24.69 21.865-12.199 35.037 7.6503 8.0673 17.041 9.7004 26.889 4.6762zm-19.316-5.4248c-11.45-6.9812-10.427-24.308 3.8555-28.405 4.435-1.2717 11.784 2.3474 15.198 7.4849 2.923 4.3984 3.2833 11.754 0.8099 16.537-3.2748 6.3325-13.107 8.5019-19.863 4.3828zm12.189-3.0418c3.1609-3.4089 3.7146-9.9226 1.2252-14.417-2.8-5.0552-12.747-3.3413-10.754 1.8525 0.378 0.9851 0.1985 1.4287-0.4228 1.0444-0.594-0.3669-1.7134 1.0845-2.4877 3.2258-3.6283 10.034 7.2504 10.096 9.4347 11.175 0.126 0.062 1.4781-1.2341 3.0048-2.8809l-2e-4 3e-4zm131.69 9.2495c6.8077-3.6001 11.475-12.145 11.475-21.006-9e-4 -8.8875-3.0081-13.695-10.903-17.43-10.641-5.0339-22.206-2.8337-28.503 5.4231-5.3862 7.0615-4.9542 21.05 0.8792 28.466 5.4424 6.9189 18.438 9.1035 27.053 4.5479v-4e-4zm-14.737-4.8068c-4.359-1.1545-9.21-5.8445-10.324-9.9807-2.264-8.4077 3.6522-17.597 12.384-19.235 5.5455-1.0403 13.037 2.3936 15.465 7.0886 3.0839 5.9634 0.6511 15.622-4.9849 19.789-2.9378 2.1725-8.9399 3.2914-12.54 2.3381zm9.0553-3.3609c-0.1276-0.4509 0.4522-2.0488 1.2888-3.551 1.7986-3.2307 1.6054-9.8035-0.3461-11.768-1.908-1.9204-6.1699-2.6147-6.1905-1.0083-0.012 0.8989-0.3014 0.8542-0.9339-0.1433-1.261-1.989-4.5064 1.2563-4.5294 4.5293-0.0352 5.196-2.1207-4.2302-2.1519 2.957-0.024 5.5791 2.6553 8.9377 6.6313 8.311 1.7466-0.2751 3.4529-0.0525 3.7916 0.4963 0.7388 1.1953 2.7703 1.3428 2.44 0.177v-2e-4zm135.43 7.7261c8.8042-4.1777 14.448-13.581 12.94-21.558-1.5628-8.2666-9.7536-15.598-20.236-18.113-13.283-3.1865-24.424 6.1326-24.255 20.287 0.1166 9.7546 6.2969 18.451 15.106 21.256 4.0545 1.2908 11.587 0.4333 16.445-1.8723v2e-4zm-16.997-5.4045c-5.2454-2.6741-9.4341-8.6326-9.4341-13.419 0-9.6501 9.9919-17.156 19.176-14.404 5.6002 1.678 12.651 8.0049 13.567 12.174 2.5106 11.43-12.205 21.31-23.308 15.65zm9.0089-3.2288c3.0557 0.5732 3.717 0.2803 4.817-2.1338 0.7013-1.5393 1.275-4.7065 1.275-7.0383 0-5.1924-3.8482-8.7688-9.4349-8.7688h-3.6769c0 9.3723-0.337 19.37 1.3658 19.955 0.7512 0.2581 1.5338-0.2388 1.739-1.1045 0.2723-1.1489 1.33-1.3945 3.9151-0.9097v-2e-4zm-4295.4-17.75c-1.1514-95.93-1.2515-74.889-2.5342-577.66 14.005-14.373 35.051-35.838 35.051-36.834 0-0.2651 8.418-0.8623 525.3-0.8623 13.121 4.9387 16.23 6.6304 24.373 4.3684 5.0933-1.415 13.506-9.5459 15.206-14.697 4.7314-14.336-15.151-26.176-9.6768-19.54 2.9272 3.5488-1.7402-1.3835-6.376-0.2197-2.6406 0.6626-2.5562 0.792 2.0137 3.0979 11.49 5.7966 8.6772 22.345-4.395 25.865-4.0103 1.0798-5.2617 0.9575-9.2109-0.9041-5.4443-2.5657-6.854-2.1604-537.87-3.6941-3.5444 3.6543-38.622 39.347-40.011 42.874-1.3965 3.5457-0.2295 74.241 1.5234 577.05l-23.082 23.359c-216.25 0-229.82-0.3262-230.14 1.8479-0.6968 4.707 74.478 0.9541 231.46 4.311 17.061-17.062 10.682-10.683 28.367-28.368zm137.57 24.419c13.228-8.7539 10.453-29.664-4.7822-36.03-16.159-6.7517-33.719 7.929-29.266 24.467 1.4639 5.4373 7.8354 12.205 13.181 14.002 6.1099 2.0535 15.789 0.9221 20.868-2.439h-6e-4zm-22.386-6.0293c-5.4492-4.7847-6.7876-8.6909-5.0742-14.811 2.8711-10.255 14.805-14.168 23.09-7.5725 3.9561 3.1499 5.3032 6.2114 5.3032 12.055 0 4.4873-0.5225 5.6392-4.2422 9.3591-3.8145 3.8149-4.8013 4.2422-9.7959 4.2422-4.6108 0-6.1865-0.5557-9.2817-3.2729h5e-4zm402.72 8.2774c-0.3354-0.553 0.2085-0.6912 1.2085-0.3076 1.0005 0.3835 1.8184 0.2778 1.8184-0.2351s1.3521-1.8125 3.0049-2.8882c2.9419-1.9143 2.9712-1.9114 1.3989 0.1475-2.54 3.3254 7.6514-4.9978 7.5986-11.228-0.0386-4.4778-2.1206 4.4475-2.1519-2.3862-0.0991-21.677-25.385-33.159-37.942-14.18-2.5552 3.8611-3.0356 5.7139-2.9702 11.441 0.1182 10.283 5.9082 18.048 14.973 20.079 4.8545 1.0879 13.808 0.7844 13.062-0.4429v2e-4zm-15.319-11.086c-1.3481-0.9443-2.1211-2.2507-1.7173-2.9033 0.437-0.7073 0.2256-0.8726-0.5234-0.4099-1.7485 1.0806-3.8984-4.0464-3.0137-7.1877 1.0591-3.762 6.7231-7.6692 11.976-8.2615 3.8633-0.4353 5.1978-0.0371 8.1235 2.4246 3.563 2.9978 4.666 7.3657 2.2393 8.8655-0.6934 0.4287-0.9912 0.3347-0.6611-0.2085 1.145-1.885-2.7314-3.8513-5.1797-2.6274-1.2788 0.6394-2.4448-0.0176-3.5913 1.7468-1.292 1.9897-4.6035 1.3604-4.6035-0.8748 0-1.7073-0.3604-1.8489-2.1992-0.8645-1.7881 0.9568-1.9824 1.5825-1.0381 3.3469 0.6387 1.1936 1.6284 1.8816 2.1992 1.5286 0.5708-0.3528 1.0381 0.1167 1.0381 1.0432 0 1.4753 0.4414 1.4495 3.5508-0.2085 6.6064-3.5229 10.793-1.6636 6.0303 2.6782-3.4648 3.1597-9.5376 4.0789-12.63 1.9124h4e-4zm154.72 10.857c28.91-9.3362 22.191-50.668-12.758-50.668-18.53 0-30.449 16.192-25.089 34.083 1.6807 5.6104 8.9568 13.786 14.516 16.311 5.5747 2.5322 15.959 2.6538 23.331 0.2729l-4e-4 3e-4zm-15.217-10.842c-2.1714-0.9333-4.4011-2.7771-4.9543-4.0979-1.6492-3.9343-0.1108-13.408 2.6543-16.352 1.344-1.4309 2.1353-2.9104 1.7573-3.2878-1.2122-1.2119 2.6042-4.0684 5.4351-4.0684 3.7449 0 12.421 8.0535 13.711 12.728 3.0828 11.165-7.5872 19.812-18.604 15.078h4e-4zm3340.1 10.931c8.3264-3.479 12.282-9.3518 12.254-18.195-0.0219-7.2336-3.2301-13.255-9.3531-17.559-5.523-3.8816-14.943-5.4336-20.787-3.4243-5.3566 1.8416-11.142 7.6492-12.657 12.704-2.6003 8.6794 3.2543 22.352 11.26 26.296 4.6603 2.2959 14.008 2.3821 19.283 0.178v-2e-4zm-15.044-4.5437c-5.2424-1.9165-9.8359-9.062-9.8298-15.291 0.011-7.6521 6.7343-14.532 14.209-14.532 6.3238 0 13.997 6.979 15.854 14.42 2.47 9.8979-9.7805 19.224-20.233 15.403zm10.094-4.8743c2.8325-1.4512 3.5148-6.0076 1.7505-11.689-1.7762-5.7195-5.2887-7.7278-5.2887-3.0234 0 3.9292-1.6371 4.4016-3.2206 0.9297l-1.3547-2.9705-2.0371 3.8245c-2.073 3.8914-2.7466 10.498-1.2925 12.675 1.7277 2.5867 6.6758 2.6965 11.443 0.2542h-1e-4zm134.49 9.6189c14.577-6.0908 18.772-35.512-7.3134-41.106-14.253-3.0564-28.715 10.152-26.362 24.076 1.0481 6.2034 6.3947 13.576 11.778 16.24 5.4424 2.6938 16.396 3.0891 21.898 0.7898l-2e-4 -3e-4zm-19.108-6.731c-4.1481-2.2529-7.4752-8.1907-7.4752-13.34 0-10.795 13.536-16.99 24.123-11.039 13.309 7.48 6.8145 26.149-9.0448 26.001-2.584-0.0238-6.0053-0.7536-7.603-1.6215zm4.0497-3.5246c-0.5836-1.533-0.4552-1.6414 0.648-0.5464 2.0857 2.0706 7.2253 1.6353 9.68-0.8193 2.7916-2.7915 2.8905-8.8572 0.1845-11.306-1.1004-0.9958-2.3297-1.4819-2.7316-1.0798s-0.7308 0.2332-0.7308-0.3752c0-2.1353-9.085-0.8269-7.9348 4.5337 0.3914 1.8242 0.2682 1.9268-0.6948 0.5786-1.6727-2.3416-1.6194 4.4492 0.0634 8.1433 1.4255 3.1287 2.6412 3.8274 1.5157 0.8711h4e-4zm143.67 9.2876c13.247-6.6802 13.102-27.852-0.2476-36.121-5.8693-3.6353-15.019-4.9485-20.918-3.0017-5.567 1.8372-12.239 9.7698-13.843 16.46-2.3647 9.8569 0.6215 17.878 8.4113 22.594 5.9156 3.5811 19.562 3.6163 26.597 0.0687zm-19.392-5.1516c-5.5257-3.3691-9.4785-10.136-8.7051-14.902 1.6842-10.378 12.127-16.527 21.183-12.473 12.126 5.429 14.746 20.316 4.7605 27.046-4.7041 3.1699-12.34 3.3159-17.238 0.3291zm14.002-5.0935c0.7033-0.8474 1.6432-3.5339 2.0887-5.97 0.7163-3.9175 0.4794-4.7358-2.0513-7.0823-3.3085-3.0674-5.7183-2.6528-13.364-2.6528 0.6421 14.656 0.0772 14.467 4.245 16.548 3.86 1.928 7.0257 1.6343 9.0813-0.8425v-5e-4zm-4034.5 10.449c3.7681-1.4236 8.7524-6.0215 10.822-9.9832 1.9541-3.7405 1.9883-12.986 0.0654-17.589-1.6616-3.9775-8.6548-10.601-11.191-10.601-0.916 0-1.4238-0.3906-1.1284-0.8684 0.7642-1.2366-12.586 0.292-15.317 1.7537-3.9438 2.1106-8.9897 8.7458-10.272 13.506-3.311 12.296 6.2061 24.944 18.768 24.944 2.8481 0 6.5625-0.5229 8.2544-1.1624l-5e-4 4e-4zm-9.4897-8.7539c2.4941-0.8738 2.4238-0.9285-0.8086-0.6284-2.4932 0.2314-4.1841-0.3572-5.7192-1.9915-7.7515-8.2512 1.7563-20.995 12.359-16.564 7.7339 3.2314 9.8623 11.536 4.4141 17.223-2.4966 2.6055-3.8501 3.1182-7.9912 3.0276-4.2687-0.0928-4.5929-0.2463-2.254-1.0659zm0.167-7.4212c-2.9473-2.5562-2.9365-3.1321 0.106-5.6702 2.4336-2.03 2.4351-2.0513 0.1694-2.0874-3.5-0.0557-6.3594 3.6306-4.9131 6.3335 1.2021 2.2463 2.7871 3.2275 5.457 3.3777 0.9849 0.0557 0.6919-0.6428-0.8193-1.9541v5e-4zm9.4551-0.9409c0.2852-1.9282-0.2412-2.2637-3.5513-2.2637-5.3096 0-4.3413 2.3748-2.0923 1.5125 1.4995-0.5754 1.5669-0.4155 0.4121 0.9758-1.6543 1.9934 0.0483 2.2461 2.0107 0.2981 1.104-1.0955 1.2207-0.9578 0.5908 0.6956-0.5713 1.4998-0.3652 1.9231 0.7549 1.5532 0.8467-0.2793 1.6909-1.5264 1.875-2.7712v-3e-4zm63.893 16.806c4.915-2.0576 11.441-9.6382 12.317-14.306 1.5752-8.3936-2.4868-18.557-9.0405-22.621-5.6924-3.5303-15.596-3.5837-21.188-0.1147-8.3989 5.2095-12.641 15.984-9.7466 24.754 1.6968 5.1411 6.1421 10.386 10.359 12.223 4.3433 1.8918 12.858 1.9238 17.298 0.0647l1e-3 4e-4zm-13.575-9.9468c-5.7065-3.8777-6.9556-8.689-3.5269-13.584 4.5767-6.5337 16.73-6.3054 19.946 0.3745 2.436 5.0601 0.5342 10.373-4.7915 13.382-5.5381 3.1294-6.7969 3.1106-11.627-0.1719v-2e-4zm5.3452-7.7302c-0.3447-1.8037 0.0845-3.1326 1.2383-3.8374 1.3164-0.804 0.6523-1.0056-2.6045-0.7922-3.9775 0.2607-4.3359 0.5325-3.9849 3.0183 0.4043 2.8638 1.877 4.3257 4.3853 4.3538 1.0103 0.011 1.3228-0.8765 0.9658-2.7427v2e-4zm75.406 15.626c16.376-10.837 8.0669-37.326-11.709-37.326-20.018 0-27.466 27.688-10.311 38.327 5.8677 3.6394 15.681 3.1929 22.02-1.002l5e-4 6e-4zm-17.102-6.7431c-4.8691-2.699-7.0659-10.054-4.4585-14.926 4.3188-8.0693 19.307-5.675 21.117 3.3728 1.9003 9.5029-7.9864 16.359-16.659 11.553zm4.2504-6.9981c0-2.2576-3.1738-1.7925-1.1558-5.5642 1.0078-1.8835 0.9224-2.3027-0.4683-2.3027-2.0703 0-4.3765 4.6733-3.4712 7.0325 0.6622 1.7243 5.0953 2.4533 5.0953 0.8344zm75.836 14.787c6.5-3.7168 8.6831-7.3804 9.1104-15.291 0.4473-8.2761-2.144-13.546-9.3716-19.059-6.1802-4.7141-4.8823-4.0603 2.5493-1.3992-1.6992-1.5188-5.7266-5.4619-7.9829-5.5693-3.147-0.1519-7.8608-0.7795-7.8608 0.3257 0 2.3501-3.0054-2.3467-10.914 4.7986-2.4004 2.1689-4.1265 4.3293-3.8345 4.801 0.2915 0.4717-0.2041 2.615-1.1016 4.7627-1.9062 4.562-2.125 12.362-0.4697 16.743 1.5356 4.0642 6.2388 8.9973 10.311 10.815 5.2588 2.3472 14.614 1.9036 19.564-0.9277v2e-4zm-19.614-10.039c-3.7764-3.7766-3.0845-5.5251-0.8184-3.2595 1.2925 1.2925 1.9971 1.4624 2.2993 0.5552 0.4897-1.4702-3.1357-4.5361-4.4238-3.74-1.2378 0.7651-1.0049-2.4089 0.4028-5.4995 1.562-3.429 6.6709-5.5972 12.886-5.4695 3.8267 0.0789 5.3613 0.7148 7.3755 3.0559 3.7266 4.3323 3.3315 8.8201-1.1724 13.324-3.1582 3.1587-4.4751 3.7148-8.791 3.7148-3.9321 0-5.6802-0.604-7.7578-2.6819v5e-4zm13.76-4.2593c-0.7285-0.7283-0.7056-1.5588 0.0674-2.491 2.1777-2.624-2.3052-6.3701-2.3052-0.9482 0 3.2732-3.001 3.6794-7.1406 0.967-2.4868-1.6294-2.6934-1.6267-2.6934 0.0339 0 1.9712 0.7124 2.3164 6.9092 3.3486 3.7207 0.6199 4.022 0.8979 2.7505 2.5435-1.0347 1.3396-0.749 1.2686 1.0381-0.2573 1.6431-1.4028 2.1011-2.469 1.3735-3.1973l5e-4 8e-4zm64.496 15.107c6.0811-2.1455 8.4888-4.344 11.065-10.102 1.481-3.3091 1.9907-6.5396 1.7539-11.103-0.1841-3.5396-0.5195-6.2532-0.7466-6.0298-0.2261 0.2231-1.4702-1.1648-2.7642-3.0845-7.4048-10.988-23.65-11.021-31.998-0.0647-2.6528 3.4807-3.0679 5.0112-3.0654 11.294 0 6.1362 0.4819 7.991 3.0776 11.913 3.2393 4.895 9.8779 8.7771 15.084 8.8206 1.5771 0.0129 4.9941-0.7266 7.5942-1.6438l-4e-4 3e-4zm-15.486-11.56c-4.8169-5.1562-4.3667-9.4158 1.4731-13.943 3.9722-3.0786 5.2764-3.5173 9.0132-3.033 14.205 1.842 11.176 20.369-3.3301 20.369-3.0503 1e-4 -4.7305-0.7966-7.1562-3.3935zm144.96 11.159c5.4717-2.4851 11.049-9.041 12.65-14.868 2.6909-9.7991-4.042-20.448-14.84-23.472-5.1807-1.4504-12.039-0.781-13.325 1.3005-0.5015 0.8115-0.1401 0.9963 1.0542 0.5381 3.3789-1.2966 1.8477 0.2849-1.7329 1.7893-4.9443 2.0774-10.496 8.0894-11.723 12.695-3.9614 14.872 11.883 29.299 27.916 22.016zm-15.431-6.1453c-6.6074-3.3357-8.8047-11.243-5.2212-18.794 4.9863-10.508 19.297-10.392 25.002 0.2009 1.9019 3.532 1.9385 4.2048 0.459 8.3936-3.041 8.6074-13.227 13.74-20.24 10.199v3e-4zm221.95 4.3574c22.994-14.157 14.293-46.973-14.298-48.416-36.582-1.8469-40.725 53.436 0.0935 52.03 7.6177-0.2624 9.5662-0.758 14.205-3.614zm-24.689-6.9084c-11.71-6.2229-11.701-22.495 0.0176-28.752 3.8557-2.0588 7.2178-1.9849 13.16 0.2891 2.3875 0.9136 5.3984 5.5652 5.9417 9.1797 0.7107 4.7085 2.533 7.2432 0.1001 10.957-2.1296 3.25-9.3081 7.072-13.283 7.072-2.4619 0-2.7 0.2517-1.5488 1.6389 1.8306 2.2056 0.2205 2.0645-4.3877-0.3843h-6e-4zm1840.9-43.595c-0.4275-23.851-0.4275 60.455 0 36.604 0.1802-10.066 0.1802-26.538 0-36.604zm-1746.5 49.248c8.6255-5.5439 10.908-18.879 4.6394-27.098-4.5315-5.9407-7.8335-7.6357-14.876-7.6357-5.0928 0-6.9038 0.5413-10.184 3.0432-9.7085 7.405-10.628 19.845-2.1604 29.218 6.2979 6.9709 14.231 7.8396 22.581 2.4727h-5e-4zm-15.43-5.3347c-5.991-4.1965-7.5842-13.992-3.0181-18.559 3.875-3.875 12.208-3.8025 16.902 0.147 2.8394 2.3889 3.3618 3.5952 3.3618 7.7581 0 9.3142-10.179 15.603-17.246 10.654v-3e-4zm7.7376-8.8186c1.2266-1.2266-1.4319-4.7732-3.5779-4.7732-2.5388 0-3.5352 1.4041-2.6443 3.7258 0.6541 1.7044 4.8604 2.4092 6.2222 1.0474zm73.756 15.545c10.077-5.2429 13.56-17.398 7.5723-26.426-7.2397-10.916-22.949-11.628-30.583-1.3855-2.7322 3.6658-4.1182 11.113-2.8931 15.543 1.1433 4.134 6.981 11.449 10.163 12.735 3.6501 1.4751 12.515 1.2126 15.742-0.4663l-3e-4 2e-4zm-17.869-19.838c0.866-4.6152 4.3191-7.0815 10.247-7.3179 8.2722-0.3298 13.213 4.9812 11.774 12.655-2.7573 14.699-24.933 10.186-22.021-5.3369zm10.325 4.5759c1.4368-1.731 0.5012-5.0554-1.4224-5.0554-2.4543 0-3.896 2.3845-2.7437 4.5381 1.2865 2.4036 2.4779 2.5517 4.1661 0.5173zm2668.7 4.9136c0.4827-0.4829 0-1.856-1.078-3.0513-1.9268-2.1414-2.942-2.1616-68.607-1.3733-156.39 1.8777-251.86-0.2961-251.86 4.5837 0 2.104 1.8977 2.1206 160.33 1.4236 88.182-0.3876 160.73-1.1 161.21-1.5827zm-244.17-17.646c7.6281-4.6506 8.5143-14.829 1.8694-21.474-2.9441-2.9441-4.4845-3.6287-8.163-3.6287-10.478 0-16.919 8.1736-14.033 17.807 2.6286 8.7732 12.243 12.224 20.327 7.2954zm-11.118-6.6074c-5.3431-4.2026-2.5587-11.94 4.297-11.94 5.2974 0 8.0522 8.6724 3.9376 12.396-2.6488 2.3969-4.7558 2.2802-8.2346-0.4563zm-2892.8-1.3655c5.4194-2.4902 12.613-2.3223 17.718 0.4143 2.4766 1.3274 4.0117 1.7029 3.75 0.918-1.3374-4.0137-18.286-10.366-29.282 1.8394l-2.7314 3.032c2.8789-1.9194 5.9131-4.0757 10.545-6.2036h-6e-4zm63.956-1.3425c6.1147-2.1809 10.007-1.8955 16.736 1.2273 6.6572 3.0896 6.2954 1.9949-0.5308-1.606-2.3945-1.2634-6.3286-2.2861-8.7407-2.2729-5.0601 0.0271-12.392 3.053-14.748 6.0854-3.1406 4.042 0.4077-0.9819 7.2842-3.4341v3e-4zm2942.5-7.3194c1.37-1.8169 0.222-48.589 0.0859-56.545h-57.666c0 43.847 0.1718 56.625 0.7285 57.182 0.7497 0.75 55.255 1.4798 56.852-0.6372zm-50.296-3.7334c-0.2372-0.2373-0.7285-0.4177-0.7285-48.484l46.438 0.5896c0.1869 15.004 0.4011 32.203 0.5879 47.206-23.751 2.0078-45.507 1.4785-46.297 0.6887l2e-4 -2e-4zm29.402-8.9909c7.6849-3.4902 10.152-12.451 5.9662-21.672-6.6234-14.591-31.707-11.262-31.722 7.4644-0.011 12.565 13.257 19.884 25.756 14.207l1e-4 2e-4zm-14.918-7.6792c-8.1859-8.1858 1.1212-16.838 6.6403-16.838 2.1671 0 4.4574 1.0854 6.5791 3.1182 2.7179 2.6038 3.2548 3.9753 3.2548 8.3152 0 6.2126-2.5164 8.5989-9.0684 8.5989-3.198 0-4.9802-0.7688-7.4054-3.1941l-4e-4 -3e-4zm6.2456-1.7254c1.0962-2.8567-0.5458-6.6794-3.4346-7.9956-2.5325-1.1541-2.8884-1.0073-3.8795 1.5989-2.3273 6.1213 5.7106 10.575 7.3141 6.3967zm94.927-34.401c-1.9232-1.5959-15.217-0.9517-53.012 0.2295 0 37.66 0.0944 55.211 0.7473 55.864 0.2551 0.2551 0.9584 0.7451 53.339 0.1633 0.506-47.626 0.8107-54.692-1.0742-56.257zm-45.728 51.703c-0.2231-0.2231-0.7285-0.4097-0.7285-47.394 26.478 0.3635 16.703 0.2295 43.16 0.5923-0.0288 3.1282-0.235 44.05-0.99 46.018-0.9713 2.5312-40.86 1.365-41.441 0.7839zm28.706-8.9814c5.2103-3.7117 7.1737-7.5381 7.1121-13.862-0.0645-6.6438-2.1423-10.325-8.1261-14.397-6.6172-4.5037-17.061-2.2178-22.314 4.8838-3.2675 4.418-3.595 12.466-0.6984 17.153 2.547 4.1211 6.8439 7.6619 10.435 8.5994 3.5406 0.9241 10.719-0.3313 13.591-2.3767h-1e-4zm-11.538-4.972c-7.3835-3.2134-9.1355-10.636-3.7754-15.996 6.5566-6.5566 15.072-2.8555 16.187 7.0354 0.4751 4.2151 0.1581 5.2961-2.2622 7.7166-3.1554 3.1553-5.1866 3.4043-10.149 1.2446v-3e-4zm1.1363-3.4638c2.3983-0.9204 2.163-5.1606-0.4163-7.4949-2.8622-2.5903-5.5039-1.4185-5.5039 2.4419 0 4.5549 2.2387 6.4658 5.9202 5.053zm100.95 20.051c1.299-1.0781 1.4863-5.7539 1.1116-27.781-0.2478-14.566-0.7758-26.809-1.1732-27.207-0.8284-0.8284-57.581-0.6228-58.934 0.2134-0.4899 0.3027-0.8907 12.83-0.8907 27.838 0 25.978 0.1017 27.325 2.1132 28.071 3.6565 1.3575 56.01 0.329 57.773-1.1344zm-53.695-3.7263c-0.2045-0.2046-0.7285 1.0813-0.7285-45.982 7.2386-1.4478 9.3973-1.366 49.169-1.366v48.077c-39.656 0-47.94-0.2278-48.441-0.7285zm33.106-7.4563c5.8715-3.0559 8.108-6.7271 8.5157-13.977 0.304-5.4065-0.0743-7.521-1.8527-10.355-3.6566-5.8271-8.3187-8.0989-15.654-7.6282-10.514 0.675-16.097 6.9216-16.1 18.015 0 5.0547 0.4663 6.2512 3.9517 10.109 5.8397 6.4639 13.441 7.8428 21.14 3.8352v-2e-4zm-13.832-7.7949c-1.6862-1.5774-2.2115-2.26-1.1675-1.5168 3.2328 2.3013 5.3799 0.5505 4.9972-4.0745-0.2941-3.5562-0.704-4.1062-3.0605-4.1062-3.1398 0-3.0671 1.6194-4.1227 6.5559l-0.1293-3.5129c-0.1722-4.6809 5.4142-11.238 9.5747-11.238 8.7524 0 12.399 11.658 5.894 18.846-2.6225 2.8979-8.3565 2.4416-11.986-0.9539zm949.03-233.17c-0.5735-426.64 2.0157-431.57-2.9368-431.57-0.9124 0-0.4652 670.37 0.451 676.15 0.3161 1.9915 1.0795 3.4529 1.6963 3.2471 0.7641-0.2546 1.0157-79.265 0.7892-247.83h3e-4zm-1573.8 232.84c5.0574-4.4236 9.578-9.8457 12.586-13.321-0.0455-46.982 0.203-78.593-1.4042-81.412-1.9045-3.3413-161.24-162.75-162.61-166.28-1.3624-3.5312-0.2123-70.026-2.4241-198.03-11.531 0.2102-21.439 0.3909-32.97 0.6013 0.2283 189.32-0.0874 195.54 2.2195 199.09 2.5734 3.9573 85.897 87.295 182.92 185.9 0.213 23.174 0.3962 43.102 0.6093 66.275-6.7638 8.2329-10.388 12.226-6.2827 10.688 1.7382-0.6514 1.7629-0.5242 0.2731 1.4001-1.5525 2.0054-1.5237 2.032 0.5464 0.5063 1.202-0.8857 4.1428-3.3225 6.535-5.4155h-5e-4zm1807.8 1.8721c4.0828-2.5496 4.2878-4.405 4.4002-39.817 0.0612-19.136 0.0852-35.616 0.0546-36.621-0.0684-2.2485-4.2522-6.8147-5.7139-8.5518h-91.29c-1.9594 1.9595-5.6998 5.3823-6.3771 8.0928-0.7531 3.0127 0.0399 68.412 0.0696 71.624 3.7159 3.7156 2.344 2.3438 6.0569 6.0564 83.784 1.2083 89.029 1.5728 92.801-0.7825l-6e-4 -5e-4zm-71.48-6.0882c-5.9759-0.1733-11.508-0.8484-12.292-1.4995-1.9804-1.6436-2.09-65.376-0.1158-67.35 0.9011-0.9011 6.3448-1.3113 17.406-1.3113 18.01 0 16.04 0.2893 17.042-4.9167 0.3236 5.3457-1.8757 4.9167 19.2 4.9167 13.245 0 19.295 0.3926 20.214 1.3113 0.961 0.9607 1.3112 9.9863 1.3112 33.794 0 28.752-0.2074 32.69-1.806 34.289-1.5937 1.5938-4.6437 1.7634-25.95 1.4438-13.279-0.1992-29.034-0.5039-35.01-0.6775v-2e-4zm14.69-66.882h-25.938c-0.719 4.3491-1.3529 4.7393-1.3666 34.614-0.0109 20.541 0.3114 26.742 1.4415 27.872 1.8451 1.8452 14.932 1.7622 25.863 2.0129 1e-4 -7.8317 1e-4 -56.638 1e-4 -64.499zm15.843-0.5464c-12.32 0-12.898-0.4138-13.773 2.7317-0.6816 2.4504-1.7615 44.124 0.4193 62.281h13.933c-0.0699-7.8633-0.5083-57.097-0.5788-65.013zm31.14 63.672c0-51.033 0.2223-61.714-1.5396-62.39-1.9743-0.7576-23.914-0.7004-27.962-0.7202 0 2.5571-0.2189 60.424 0.6862 62.782 0.5775 1.5049 2.3522 1.7561 11.2 1.5862 12.115-0.2333 14.574-0.806 17.616-1.2584zm-96.761 8.7463c1.459-2.0833 1.7009-7.7471 1.7009-39.83 0-39.486-0.3386-42.463-4.9626-43.623-3.0475-0.7654-29.294-0.0142-34.919 0.1091v-37.15c36.021 0 35.382 0.3921 37.791-2.5796 1.9666-2.4258 2.0911-4.7549 2.0911-39.116 0-39.955-0.256-37.032-3.5132-43.331-55.394 1.2773-61.551 1.439-94.825 1.439v80.796c19.089 0.3713 12.055 0.2344 31.14 0.6062 0.3541 24.403 0.2281 15.72 0.5945 40.974h-30.642c0 39.385 0.1198 43.19-1.4332 84.134h95.28l1.7009-2.4282h-0.0033zm-90.371-2.5957c-1.06-1.0601-0.8035-71.537-0.8035-74.74h21.998c-0.784 6.8137 0.4354 5.9373-11.072 6.6755 0 36.206 0.2188 37.41 1.4254 61.069 10.182 0 10.589-0.384 10.589 2.7314 0 2.4436 0.4323 2.7227 4.0974 2.6455 2.2536-0.0479 3.4724-0.3376 2.7087-0.645-0.7639-0.3074-2.116-1.9648-3.0048-3.6836-1.3034-2.5205-1.6114-8.4731-1.5919-30.769 0.0219-24.941 0.23-28.097 2.1319-32.288 2.4466-5.3899 2.1602-4.6436 12.207-4.6436-0.1107 11.322-0.5943 60.794-0.705 72.116 40.487-0.0056-36.73 2.7866-37.986 1.5305h0.0042zm56.797-2.3176c-0.2644-0.4695-0.8293-2.3284-1.2554-4.1313-0.6249-2.644-0.5062-3.0137 0.6137-1.9121 1.7002 1.6724 15.492 1.8474 18.506 0.2349 2.4367-1.3042 2.1135-2.6025 2.1135-55.528-5.4409-4.3174-5.1403-4.8481-13.033-4.1255-3.863 0.3538-7.4576 1.2681-7.9881 2.032-0.9506 1.3687 0-5.3862 1.0001-7.0793 0.5332-0.906 15.692-0.8193 26.607-0.8193-0.0903 11.223-0.4856 60.32-0.5762 71.568-11.757 0.2832-25.45 0.7124-25.987-0.2393v-4e-4zm-2.5437-46.745c0-19.095 0.8978-1.6887 0.3868 7.4209-0.2127 3.7307-0.3851 0.3916-0.3833-7.4209h-0.0035zm-26.648-26.77c0-0.6011 0.7375-1.0928 1.639-1.0928 1.8656 0 1.639-5.821 1.639-44.799l-3.5511-0.1782c-5.9606-0.2988 10.522-1.5422 5.1074-1.8289-3.9089-0.2085-6.2586-3.2607-8.6585-5.8135-0.5423-48.171-0.9042-59.527 0.909-63.162 1.3903-2.7869 1.3862-3.2515-0.0339-3.7966-2.339-0.8975-3.6064 0.2322-3.6064 3.2151 0 2.9868-0.8585 2.6624-10.38 3.2732-0.185 18.58-0.397 39.876-0.5821 58.457h6.0275c8.5746 0 5.7289 2.1853 5.0862 2.1853-0.5177 0-0.7027 1.2478-0.4111 2.7727l0.53 2.7727-21.577-0.6289c-0.1657-20.86-0.3046-38.331-0.5755-72.418 5.3414-0.1821 45.944-1.7385 48.69-1.0413 2.6104 0.6624-7.9576 0.7495-10.362 0.7983-0.0947 11.667-0.508 62.634-0.6026 74.301 3.0496 0.0552 16.93 0.1926 13.931 0.77-2.8698 0.553-2.4528-0.2131-2.8197 44.574-0.7279-15.464-1.3551-28.788-2.0829-44.252h-8.4824v44.799l13.658 0.3333c-2.8592 0.3213-23.492 3.0723-23.492 0.759l-1e-4 8e-4zm7.8557-23.192c-0.3172-20.676-0.5634-23.8-1.7802-22.583-0.2642 0.2642-0.6329 10.426-0.8195 22.583-0.2926 19.069-0.1142 22.102 1.2998 22.102s1.5924-3.0337 1.2999-22.102zm5.2561 0.2466c0-27.085 2.1853-28.275 2.1853 0 0 27.086-2.1853 28.276-2.1853 0zm16.584-32.676c2.3638 1.2649 16.068 0.7793 18.383-0.6514 0.6765-0.418 1.0909-10.519 1.0909-26.59 0-31.922 0.4539-30.773-12.154-30.773h-8.7518l0.6914-6.0095c23.761-0.6943 22.67-0.4348 26.77 0.5879 0 61.71 0.2486 68.466-1.7283 69.225-2.1852 0.8389-20.251 0.6633-24.281 0.6633-2.8408-8.1487-3.1712-8.1387-0.0198-6.4522zm-3949.6 82.938c-8.1575 0-12.827 1.6558-17.246 6.1155-13.044 13.166-9.3931 35.142 7.2458 43.608 5.1387 2.615 6.5552 2.8481 14.328 2.3586 40.35-2.5402 36.385-52.082-4.3278-52.082zm0.0625 40.41c-0.3779-0.6108-1.0212-0.9072-1.4304-0.6589s-1.6204-0.7178-2.6917-2.1467c-1.7234-2.2991-1.7397-2.5188-0.1462-1.9072 1.5479 0.5942 1.6226 0.3567 0.5288-1.6865-1.7622-3.2925-1.1472-13.033 0.989-15.671 1.1001-1.3584 3.5913-2.3735 6.6782-2.7214 4.2046-0.4736 5.4343-0.1255 8.4172 2.3845 9.207 7.7471 4.2644 23.518-7.3706 23.518-2.3586 0-4.5979-0.4998-4.9751-1.1106h8e-4zm3342.7 6.9102c6.2335-3.885 8.9778-8.9258 8.9778-16.49 0-6.6733-1.5948-10.273-6.7358-15.205-4.7093-4.5173-10.496-6.8845-16.829-6.8845-13.964 0-23.502 13.829-18.526 26.859 5.5893 14.636 20.161 19.793 33.113 11.72v2e-4zm-18.885-3.6262c-11.298-5.7512-11.678-18.66-3.6066-26.18 3.7798-3.5215 11.358-3.0305 16.974 1.0999 5.142 3.7815 8.677 11.206 7.3431 15.424-2.9615 9.3639-12.524 13.822-20.71 9.6557zm11.473-2.5408c1.5024 0.0503 2.1208-0.1326 1.3746-0.4055-1.0038-0.3669-1.0561-1.0586-0.2003-2.6575 1.1882-2.2202 0.6645-6.8425-1.375-12.14-1.4999-3.8955-2.9113-3.8066-4.333 0.2717-1.2148 3.4849-2.7416 3.3855-4.0925-0.2661-0.7293-1.9719-1.1086-1.6841-3.2861 2.4934-4.3333 8.3135-1.0169 15.148 6.4492 13.292 1.5024-0.3735 3.9609-0.6384 5.4633-0.5886h-2e-4zm72.203 6.4482c12.49-8.2654 10.611-28.895-3.3326-36.592-8.9007-4.9138-22.528-2.1125-27.634 5.6802-7.2648 11.088-2.1917 26.641 10.664 32.695 5.9099 2.7827 14.55 2.0244 20.302-1.782v-3e-4zm-20.516-4.9401c-9.9366-6.0588-10.431-20.368-0.9067-26.255 4.6611-2.8806 9.2168-2.7876 13.772 0.282 5.7654 3.8855 8.6556 8.9836 8.6556 15.269 0 4.697-0.4904 5.9014-3.715 9.126-3.2056 3.2053-4.4418 3.7144-9.0144 3.7109-3.3234 0-6.6012-0.7979-8.7911-2.1333v2e-4zm11.678-2.2195c0.4855-0.7856 1.6913-1.114 2.6866-0.7319 1.1163 0.4285 1.5353 0.2554 1.0975-0.4534-2.3002-3.7231 2.0704-16.364-7.8264-16.83-3.9001-0.1836-4.9771 0.9407-7.2264 7.5427-2.3304 6.8403-2.3316 6.8245 0.7629 9.6924 3.2551 3.0165 9.4788 2.8339 10.506 0.78zm70.996 7.5229c10.036-5.6409 14.236-19.187 8.9885-28.993-1.7491-3.2681-8.7272-9.155-12.937-10.914-8.2331-3.4399-18.861-0.7227-25.139 6.4272-9.9192 11.298-6.6344 26.587 7.2878 33.921 5.0798 2.6763 6.8602 3.0693 11.708 2.5869 3.1443-0.3132 7.6856-1.6758 10.092-3.0283v3e-4zm-17.033-4.9001c-4.8983-1.6641-9.7283-6.8657-10.649-11.468-1.8315-9.1577 8.703-18.743 18.566-16.892 4.7681 0.8945 12.058 7.3428 12.964 11.467 1.5607 7.1064-7.8363 21.326-20.881 16.893zm7.2507-2.9099c0.011-0.9104 0.3699-0.8193 1.0759 0.2732 0.5826 0.9014 1.0668 1.2703 1.0759 0.8196 0.0351-1.446-0.4373-1.458 2.2017-4.0974 3.5401-3.5403 2.0775-13.05-1.7795-11.57-0.8865 0.3401-1.3434 0.1841-1.0151-0.3469 0.7823-1.2659-2.6629-2.679-2.6852-0.887-0.011 0.842-0.406 0.729-1.0759-0.3076-0.7697-1.1912-1.0638-1.248-1.0759-0.2087-0.0109 0.7869-0.5084 1.1267-1.1094 0.7551s-1.0927-0.1257-1.0927 0.5461c0 0.6721-0.4458 0.9463-0.9907 0.6094-0.5449-0.3367-0.7134 0.4487-0.3743 1.7454 0.4224 1.6155 0.2184 2.1118-0.6483 1.5762-3.0331-1.8752 0.0795 9.1809 2.1887 9.1809 0.5044 0 0.9172 0.7375 0.9172 1.6392 0 2.1431 4.365 2.0964 4.3873 0.2729h3e-4zm66.874 10.059c14.088-3.9126 20.638-23.954 11.589-35.457-5.2816-6.7146-19.883-10.328-26.907-6.6592-15.597 8.1482-17.642 34.808 1.5701 41.657 5.1341 1.8303 8.4174 1.9399 13.747 0.46v-2e-4zm-17.731-11.603c-3.2241-3.6719-3.4698-4.4783-3.0194-9.9097 0.4128-4.9785 1.1006-6.5225 4.3553-9.7769 3.0233-3.0232 5.0011-3.9932 9.0813-4.4531 12.424-1.4004 19.611 9.8638 13.694 21.463-4.6901 9.1934-16.095 11.806-24.111 2.6771zm7.6582 0.6052c-1.5024-1.2405-2.032-1.8855-1.1769-1.4333 2.4817 1.3125 9.9172 2.4348 9.2778 1.4004-0.3197-0.5173-0.1395-0.9407 0.4005-0.9407 1.3718 0 3.5178-5.0303 3.5178-8.2463 0-1.4741-0.4586-2.6802-1.019-2.6802-0.5605 0-1.3517-1.0483-1.7584-2.3296-0.5809-1.8298-0.9446-2.0056-1.6959-0.8193-0.7936 1.2529-0.9622 1.231-0.99-0.1289-0.0295-1.4568-0.1511-1.4568-1.0927 0-1.2448 1.9263-1.0958 0.7783-1.2467-2.7317-0.6127 1.426-1.8664 4.5938-1.9548 2.9138-0.1032-1.9399-2.8942-0.8406-2.5353 0.7739 0.1503 0.6763-0.3414 1.1062-1.0927 0.9561-2.4565-0.4912 0.0898 9.4702-1.8569 5.1902-0.9619-2.1145-0.9967-2.1074-1.071 0.2085-0.0426 1.3167 0.4484 2.7185 1.0904 3.1152 0.6419 0.3967 0.9086 1.3948 0.5927 2.218-0.6382 1.6631 2.0477 4.8516 4.0545 4.8137 0.7083-0.0129 0.059-1.0396-1.4438-2.2803l4e-4 5e-4zm274.02 10.441c8.8459-3.6953 13.359-10.407 13.332-19.829-0.0349-12.347-8.5136-21.19-21.038-21.942-8.9417-0.5366-15.276 2.6448-19.796 9.9434-11.128 17.966 7.9183 40.008 27.502 31.827zm-15.059-4.9329c-4.1342-1.7314-8.5485-6.4114-9.8946-10.49-2.2999-6.9688 1.6548-15.703 8.3829-18.514 11.536-4.8201 24.457 2.2456 24.457 13.374 0 6.2021-2.224 10.505-6.934 13.416-4.4179 2.7302-12.208 3.8083-16.012 2.2156v-3e-4zm9.0473-6.9128c3.4109-0.1667 3.5286-0.3354 3.8595-5.5347 0.5705-8.9648 0.0164-9.8503-6.3031-10.066-4.8283-0.1646-5.511 0.0798-5.511 1.9768 0 1.3745-0.4667 1.8765-1.2783 1.3745-1.8717-1.1565 0.1071 1.4326 0.3294 5.9407 0.1246 2.5254 0.2516 2.4036 0.9489-0.9089 0.7806-3.7083 0.8133-3.6587 1.0782 1.6389 0.4867 9.7336-1.6683 5.9971 6.8763 5.5789v-3e-4zm-4167.6 11.352c25.326-4.8027 22.86-43.088-4.9839-41.315-5.269 0.3357-7.6655 1.0933-10.644 3.3647-13.223 10.085-10.077 31.94 5.3896 37.455 2.3105 0.8237 4.2568 1.5195 4.3252 1.5459 0.0674 0.0261 2.729-0.446 5.9136-1.05h-9e-4zm-10.068-12.604c-2.3022-1.2498-3.1035-2.7012-3.7046-6.7087-0.7188-4.7925-0.5503-5.3074 2.6816-8.1951 4.9458-4.4192 12.127-4.3706 16.61 0.1125 1.9087 1.9087 3.1938 4.3486 3.1938 6.0637 0 3.6367-2.6582 8.8457-4.9663 9.731-3.1206 1.1978-10.787 0.6406-13.815-1.0037l5e-4 3e-4zm6.2324-6.0183c0.9585-3.0193-1.3965-5.8933-3.4395-4.1978-1.8687 1.5513-1.9458 4.9785-0.1279 5.7119 2.3907 0.9646 2.8413 0.7732 3.5674-1.5141zm534.35 15.867c17.809-11.014 15.86-36.518-3.5154-45.998-14.061-6.8799-31.286-1.4976-38.24 11.948-2.363 4.5698-3.1619 15.82-1.4846 20.902 2.3638 7.1624 9.072 13.309 17.497 16.032 1.5061 0.4868 6.7114 0.781 11.567 0.6538 7.6967-0.2016 9.5138-0.655 14.176-3.538zm-24.79-9.8174c-6.1323-3.332-10.176-16.208-6.4873-20.654 0.7476-0.9004 1.0662-2.1113 0.7083-2.6904-0.8149-1.3188 4.5134-5.6135 6.8928-5.5559 0.9705 0.0242 0.0928 0.7688-1.9517 1.6558-4.3259 1.8774-4.0159 3.2729 0.3579 1.6101 4.1602-1.5818 9.4409-1.3313 12.646 0.6001l2.7314 1.6458c-4.9424-1.2241-5.9421-1.6575-1.9817 0.8584 13.882 8.8181 1.5242 30.376-12.916 22.53v1e-4zm3475.5 11.154c6.3237-3.3247 8.5541-7.8435 8.5541-17.331 0-7.5649-0.3211-8.8306-3.3235-13.102-5.8863-8.3752-16.793-12.436-26.014-9.6843-12.98 3.873-20.393 24.224-12.739 34.973 4.1074 5.7681 9.8765 7.8113 20.769 7.3555 5.8827-0.2464 10.558-1.0567 12.753-2.2108zm-18.785-4.4712c-8.5114-3.7085-12.498-15.45-7.5251-22.161 3.3245-4.4866 9.0082-8.0044 12.9-7.9839 8.0473 0.0427 16.99 9.1245 17.03 17.296 0.0513 10.366-12.104 17.337-22.404 12.849zm11.58-6.0407c4.5016-4.5017 4.4166-9.7874-0.2203-13.689-2.5439-2.1404-4.2523-2.7405-6.7022-2.3545-4.7992 0.7561-5.4795 1.9675-4.7617 8.4783 1.4978 13.585 0.4325 7.0532 4.7625 9.5745 2.843 1.6554 3.4266 1.486 6.9217-2.0091zm69.309 10.99c5.0063-2.2742 11.102-8.7063 12.129-12.798 0.3833-1.5273 0.4498-4.969 0.1477-7.6487-1.8779-16.661-25.129-26.401-37.369-15.654-10.442 9.1677-8.6508 28.898 3.2335 35.628 5.5514 3.144 15.504 3.3589 21.859 0.4717l1e-4 3e-4zm-15.176-4.4993c-4.1483-1.3167-8.25-5.1909-10.105-9.5447-1.9644-4.6101-1.89-7.3472 0.3266-12.018 5.5565-11.71 23.759-10.186 29.901 2.5034 2.1397 4.4202 2.2805 5.5425 1.1623 9.2742-2.3773 7.9351-12.481 12.58-21.285 9.7852zm12.26-7.1726c3.0031-6.5908-0.1198-13.688-6.6712-15.162-2.5476-0.573-3.191-0.2358-4.0974 2.1479-1.213 3.1904-1.4607 13.955-0.3467 15.069 0.4005 0.4006 2.7801 0.7285 5.2879 0.7285 3.8254 1e-4 4.7634-0.4479 5.8274-2.7831zm-4155.1 0.0515c2.5449-5.5142 2.5522-9.748 0.0273-15.306-9.207-20.266-41.788-16.136-42.105 7.1736-0.2982 22.156 32.437 29.026 42.078 8.1328zm-29.243 3.7654c-7.6045-4.8716-8.6191-14.761-2.209-21.532 7.8838-8.3264 19.951-6.2661 24.106 4.1162 2.1992 5.4966 2.2002 6.9355 0.0107 11.555-3.6167 7.6221-14.577 10.554-21.905 5.8599l-0.0024 2e-4zm88.551 5.1423c9.7095-7.4058 11.775-21.359 4.4507-30.064-5.5713-6.6213-12.02-8.3679-23.997-6.5005-3.0586 0.4768-10.101 8.2041-11.591 12.718-2.9653 8.9846 1.7368 21.054 9.9517 25.546 5.7466 3.1418 15.908 2.3274 21.186-1.6985zm-16.391-6.1543c-6.374-2.5752-8.9146-11.472-4.7778-16.731 9.1333-11.611 29.161 1.9551 17.028 14.087-3.8188 3.8188-7.4194 4.5959-12.25 2.644v-2e-4zm143.27 6.0418c11.126-6.5208 12.339-22.673 2.4434-32.568-2.2866-2.2869-5.6172-4.4497-7.4014-4.8064-1.7842-0.3569-3.2437-1.0269-3.2437-1.4888 0-1.248-8.3179 0.8525-13.162 3.3237-7.8052 3.9819-12.394 15.41-9.9033 24.662 1.3984 5.1938 7.7852 12.048 12.616 13.539 5.1334 1.5844 13.426 0.4011 18.651-2.6616zm-18.769-8.6792c-4.2207-3.6306-4.2886-10.341-0.1465-14.483 4.6929-4.6931 15.183-4.1458 16.776 0.8752 0.3525 1.1108 1.0688 2.0193 1.5918 2.0193 1.2598 0 1.1099 4.1594-0.2871 7.9731-2.292 6.259-12.475 8.312-17.935 3.6155v3e-4zm81.203 10.187c14.804-7.166 13.985-33.413-7.5396-39.403-3.4189-0.9517-5.9922-1.3679-5.7183-0.925 0.2734 0.4424-0.9292 1.0901-2.6733 1.4387-4.479 0.8958-10.989 6.9814-13.472 12.594-3.2847 7.4265-1.23 17.101 4.8359 22.764 6.3462 5.925 16.584 7.3975 24.567 3.5325l-4e-4 -4e-4zm-18.742-10.031c-1.9253-1.6558-3.0615-3.9604-3.4761-7.0493-0.5464-4.075-0.2393-4.9658 2.7451-7.9495 3.0122-3.012 3.9854-3.3398 9.3906-3.1633 4.7793 0.1565 6.5371 0.7356 8.4683 2.7913 2.9175 3.1055 3.2656 9.3853 0.6641 11.987-2.7559 2.7561-5.3169 1.1379-4.5181-2.855 1.4956-7.48-4.8965-0.2295-3.1538 1.5132 0.4126 0.4121 0.0513 1.1807-0.8008 1.7075-1.1851 0.7324-0.8496 1.134 1.4268 1.7053 2.3833 0.5984 2.7266 1.0493 1.7212 2.2605-2.0083 2.4197-9.188 1.874-12.468-0.947l1e-3 -5e-4zm80.642 10.818c2.9731-1.2424 5.6821-3.8398 11.5-11.028 1.3354-1.6492-0.4189-12.914-2.6533-17.043-1.9644-3.6289-2.2104-4.3481-2.4912-7.2842-0.1621-1.7-8.4165-6.4536-12.781-7.3608-4.0923-0.8506-11.512 0.6956-15.324 3.1936-4.1572 2.7239-2.4111 3.2173 2.207 0.6238 4.6704-2.623 8.8965-2.1091 14.3-1.9663l-5.5054 0.8088c-11.212 1.6472-16.945 7.136-17.764 17.006-0.8262 9.9661 3.5454 19.003 11.25 23.254 3.0503 1.6829 13.028 1.5647 17.262-0.2041h-5e-4zm-17.371-12.073c-4.8228-4.8228-5.1406-10.365-0.8237-14.366 1.5898-1.4739 3.9258-2.7317 5.1899-2.7954 8.4019-0.4231 12.734 1.5291 14.878 6.7036 2.4702 5.9631-1.1025 13.195-6.0503 12.25-1.5713-0.3005-2.7041-0.011-2.7041 0.7031 0 0.6709-1.5244 1.2202-3.3877 1.2202-2.395 0-4.4751-1.0879-7.1021-3.7148v-5e-4zm83.448 10.448c1.9399-1.3813 3.5269-2.2146 3.5269-1.8521 0 0.53 3.7026 0.1843 6.7642-6.7366 2.4976-5.646 1.8105-7.1274 0.4302-15.08l-1.3877 10.926c-0.2036-5.5525 0.3037-13.385-8.7471-21.352-2.3721-2.0881-3.2217-3.3118-1.9766-2.8455 1.9932 0.7461 1.9663 0.5969-0.3037-1.6963-2.0679-2.0891-3.6387-2.5137-9.2876-2.5105-4.4248 0-8.229 0.7136-10.896 2.0366-5.6616 2.8088-5.1802 4.354 0.5464 1.7546 5.3784-2.4414 10.113-1.9771 13.385-1.8987l-5.0229 0.8499c-11.003 1.8613-17.426 8.1904-18.238 17.971-0.7793 9.3972 2.7412 16.939 10.052 21.532 4.7998 3.0156 16.21 2.4238 21.155-1.0969v-4e-4zm-12.626-12.834c-1.0796-0.7896-2.3477-0.9695-3.0015-0.4268-0.6436 0.5344-1.8232 0.4509-2.7344-0.1934-1.3276-0.9387-1.2803-1.0298 0.2744-0.5315 1.0327 0.3311 2.1729 0.1235 2.5342-0.4614 0.3613-0.5845 1.0688-0.8081 1.5723-0.4968 0.5039 0.311 0.6582-0.4187 0.3433-1.6211-0.6709-2.564-3.3857-2.9106-4.292-0.5479-0.8213 2.1394-2.5811 2.113-2.5811-0.0383 0-2.665 3.4224-7.1726 6.2666-8.2542 1.4985-0.5696 2.2881-1.5061 1.8574-2.2026-0.8154-1.3198 5.1494-0.3989 8.3892 1.2952 2.5024 1.3088 4.6191 7.0239 3.8042 10.272-2.0273 8.0774-4.7202-5.2178-5.7964-1.6179-0.791 2.6462-1.7974 4.688-1.6431 5.5542 0.2032 1.1477-3.0825 0.6679-4.9931-0.729zm75.905 12.002c6.6455-3.8237 11.294-11.364 11.247-18.244-0.0771-11.336-11.609-20.733-23.172-18.884-3.8296 0.6125-10.599 3.9109-8.0259 3.9109 0.5229 0-0.6694 1.1064-2.6504 2.4585-6.9028 4.7119-9.4927 13.956-6.1509 21.954 1.6929 4.051 9.5869 11.281 13.108 12.006 4.2061 0.8649 10.99-0.5235 15.645-3.2017zm-20.493-6.9024c-3.2798-3.2798-3.4277-3.7932-3.0063-10.411 0.3809-5.9805 0.9146-7.4431 3.7876-10.382 4.2275-4.324 9.6123-5.3389 14.932-2.8149 5.2393 2.4863 7.6924 6.5322 7.7822 12.837 0.0659 4.5559-0.4087 5.6614-3.9448 9.199-3.4419 3.4436-4.8862 4.0925-10.06 4.5215-5.6284 0.4668-6.2754 0.2656-9.4902-2.949h-5e-4zm-640.8 7.5923c1.6064-1.333 1.7593-5.0574 1.4644-35.673-0.2529-26.232-0.6602-34.515-1.75-35.604-2.2793-2.2781-59.87-1.3774-61.695-0.6279-2.2373 0.9182-1.8989 4.3149-1.3511 72.416 40.412 1.0923 60.5 1.8391 63.333-0.5117l-1e-3 -3e-4zm-37.655-9.854-16.936-0.5603v-52.447c35.366-0.7283 34.619-0.4871 46.438 0.7202v53.189c-5.5361-0.1501-10.214-0.2629-29.502-0.9016v-2e-4zm21.451-7.1941 3.6807-3.9023v-28.707c-5.1665-5.2903-2.9956-3.0674-8.0928-8.2869h-20.771c-2.8979 2.8301-5.3882 5.2617-8.2866 8.0918 0 28.732-0.3901 29.404 2.459 32.08 5.1494 4.8374 9.2471 4.4978 27.331 4.6262l3.6802-3.9023v7e-4zm1302.8 15.514c4.7512-3.1443 8.7661-10.527 8.7307-16.054-0.0283-4.4067-3.1504-11.706-6.1443-14.364-3.1831-2.8267-9.6738-5.2317-14.119-5.2317-12.17 0-21.867 13.825-17.974 25.623 1.6694 5.0583 6.1091 10.313 10.344 12.242 4.8535 2.2113 14.085 1.1442 19.162-2.2152zm-16.735-7.2886c-5.6284-4.4272-4.7383-14.78 1.5508-18.033 3.8989-2.0161 5.8096-1.9966 10.237 0.1038 10.174 4.8281 6.6438 20.162-4.6423 20.162-2.6833 0-5.3772-0.842-7.1458-2.2327v3e-4zm5.3645-6.6523c0.4204-0.6799-0.1018-1.7209-1.1594-2.3127-1.5757-0.8821-1.6528-1.2617-0.4265-2.1003 1.146-0.7837 1.012-0.9458-0.5713-0.6919-3.0676 0.4924-4.9312 3.9355-2.8486 5.2632 2.2 1.4023 4.0779 1.3428 5.0059-0.1584v1e-4zm163.17 15.489c15.117-7.7122 15.117-26.256 0-33.968-10.22-5.2141-24.327-0.106-28.242 10.226-6.2951 16.615 12.024 32.016 28.242 23.742zm-14.871-6.5556c-10.58-6.4507-7.8992-19.131 4.3354-20.51 8.3987-0.9468 13.907 3.3547 13.907 10.86 0 4.6582-2.5784 8.3289-7.21 10.264-4.8607 2.031-6.879 1.9186-11.033-0.6138zm3.492-8.1326c0-2.6692-4.5125-4.5349-4.6433-1.9199-0.3232 6.4666 4.6431 4.6719 4.6431 1.9199h2e-4zm-356.16 13.679c8.6113-3.9116 12.317-11.153 11.124-21.739-1.0955-9.7178-12.839-17.09-22.905-14.379-9.7024 2.6125-15.034 9.5662-15.034 19.608 0 14.421 13.337 22.633 26.815 16.51v-2e-4zm-11.181-6.6977c-4.125-1.6614-6.1492-5.9709-5.502-11.714 0.7368-6.5349 3.5908-9.0361 10.312-9.0361 4.1545 0 5.4939 0.5886 8.752 3.8469 3.3018 3.3018 3.7515 4.3472 3.1716 7.3755-0.8931 4.665-7.3103 10.653-11.319 10.561-1.6614-0.0383-4.0986-0.5034-5.4155-1.0342l2e-4 5e-4zm3.5974-11.203c0.1145-3.103-1.863-3.9238-4.8667-2.0205-1.1689 0.7407-1.2107 1.4375-0.1995 3.3271 1.763 3.2945 4.9268 2.4786 5.0662-1.3066zm80.218 16.502c8.5398-4.7266 11.879-15.058 7.8279-24.217-6.2795-14.196-26.991-14.616-34.095-0.6909-3.8037 7.4561-2.2583 18.411 3.3076 23.448 5.5879 5.0566 15.34 5.677 22.96 1.4597zm-13.763-5.7464c-6.3259-2.7544-7.6294-12.266-2.4382-17.792 1.7432-1.8552 3.5713-2.511 7.0015-2.511 10.139 0 15.223 11.609 8.1724 18.659-3.5411 3.5413-7.2719 4.023-12.736 1.6436zm4.3789-8.6528c0.8748-1.4033 0.7942-2.113-0.3188-2.8074-1.2573-0.7847-1.2573-1.0305 0-1.5793 0.8193-0.3574 0.3105-0.5398-1.1304-0.4053-3.5537 0.3315-5.3701 3.321-3.4353 5.6526 1.7031 2.0525 3.2373 1.7822 4.8845-0.8606zm78.511 16.347c10.053-4.3015 14.213-15.28 9.6204-25.393-7.8108-17.2-33.584-13.639-36.573 5.052-1.3267 8.2971 2.8083 16.174 10.801 20.575 3.0635 1.6868 11.963 1.5576 16.152-0.2344h2e-4zm-12.6-7.3244c-6.1243-3.5671-6.3625-14.953-0.3887-18.596 3.8582-2.3528 7.3728-2.6304 10.841-0.8569 10.238 5.2358 6.969 20.689-4.3584 20.599-2.2998-0.0186-5.042-0.5344-6.0935-1.147v3e-4zm4.2539-9.2139c0.3486-0.9092 0.011-2.4089-0.76-3.333-1.2278-1.4795-1.5864-1.488-3.0032-0.071-1.9011 1.9014-1.0142 5.0566 1.4214 5.0566 0.9392 0 1.9929-0.7439 2.3418-1.6528v2e-4zm-269.48 14.491c5.8228-3.9634 7.9917-7.7437 8.5037-14.822 0.7534-10.416-3.3606-16.577-13.23-19.812-5.604-1.8372-10.903-0.6682-15.578 3.4365-5.2644 4.6221-7.0264 8.4705-7.0049 15.3 0.0217 7.2031 3.3765 13.494 8.7063 16.33 5.4419 2.8958 14.006 2.6965 18.603-0.4326l-3e-4 3e-4zm-14.475-5.7487c-6.0369-3.395-8.1121-12.136-4.0942-17.244 7.0342-8.9426 21.836-4.1934 21.836 7.0059 0 8.657-10.144 14.51-17.742 10.238zm6.3269-9.1819c-0.3396-0.5496 0-1.207 0.7549-1.4612 1.0752-0.3621 1.0479-0.8557-0.127-2.2788-1.8613-2.2546-3.8271-2.3169-5.6028-0.1777-3.4634 4.1736 6.4668 6.3323 4.9746 3.9177h3e-4zm77.392 14.046c5.9897-4.1042 8.6628-9.803 8.1196-17.312-0.562-7.7712-3.479-12.16-10.266-15.446-6.1079-2.957-13.1-2.3723-19.097 1.5967-11.824 7.8247-9.231 30.071 3.936 33.764 4.7634 1.3364 13.47 0.0273 17.308-2.603h-2e-4zm-13.069-4.7719c-3.6396-1.5752-7.0159-7.3159-7.0159-11.93 0-1.5283 1.1865-4.1584 2.637-5.8445 2.2568-2.6235 3.4514-3.0659 8.2844-3.0659 4.998 0 6.0144 0.4104 8.8359 3.5684 1.7537 1.9626 3.1882 4.8142 3.1882 6.3369 0 8.1748-8.6255 14.096-15.93 10.935v2e-4zm4.457-10.991c0-2.4109-3.397-3.6108-5.1782-1.8301-1.8367 1.8367-0.0249 4.739 2.7148 4.3501 1.6118-0.229 2.4634-1.0998 2.4634-2.52zm1712.5-57.579c-0.4165-28.92-0.4175 71.72-7e-4 43.706 0.1763-11.829 0.1768-31.497 7e-4 -43.706zm742.1 35.209c2.2408-1.199 1.9232-3.4995 1.0961-59.593-1.6276-0.0386-53.743-1.4131-54.827-0.8462-0.4507 0.2358-0.8195 12.938-0.8195 28.227v27.798c-12.008 0-12.984 0.3586-13.665-2.4585-0.7844-3.2432-0.0193-181.25 0.0067-189.3 12.629-0.6584 12.554-1.2134 12.629 2.4041 0.0819 3.9446 0.4387 48.049 0.4827 53.321 54.993-0.4043 51.887-0.5801 56.271-1.6807 0-43.939 0.2189-56.327-1.4962-57.75-1.9368-1.6072-38.47-0.9402-72.258-0.6648-0.597 210.21-1.0901 195.68 2.782 201.59 10.01 0 67.249 0.3147 69.797-1.0486h-2e-4zm-48.541-55.223c27.42-0.5845 30.41-0.8062 45.345 0.7207v50.088h-45.932c0.1866-16.171 0.3999-34.637 0.5865-50.809zm27.504 42.632c4.6649-3.2676 9.0999-11.518 9.0999-16.928 0-5.543-4.5367-14.166-8.5959-16.339-3.7236-1.9927-10.445-1.3743-14.461 1.3303-8.0222 5.4036-11.796 19.275-7.1654 26.341 4.269 6.5154 15.545 9.5024 21.123 5.5955l-2e-4 2e-4zm-13.973-7.2481c-1.9148-1.9148-2.2227-3.2429-1.7916-7.73 0.7322-7.6199 3.6519-11.175 9.5321-11.607 7.9121-0.5808 12.17 5.7063 9.7649 14.417-1.8938 6.8589-12.567 9.8582-17.506 4.9194l1e-4 3e-4zm3.9511-6.4441c0-3.0808-0.4178-3.8093-2.1853-3.8093-1.4548 0-2.3054 0.8481-2.5449 2.5378-0.5205 3.6741 0.6155 5.8733 2.8148 5.4497 1.3885-0.2673 1.9154-1.4165 1.9154-4.1782zm-17.3-118.72c-0.2261-0.2261-0.7285-0.4863-0.7285-51.719h44.46c1.0753 22.418 2.8232 50.587-0.2968 51.784-2.3596 0.9055-42.524 0.8452-43.434-0.0654l-1e-4 3e-4zm26.369-9.554c8.0115-4.1855 11.442-12.02 9.5881-21.898-0.9452-5.0383-7.0441-11.195-12.014-12.127-14.288-2.6804-25.884 16.953-16.818 28.477 5.1505 6.5481 12.999 8.811 19.244 5.5486h3e-4zm-6.0639-5.1023c1.3132-0.7646 1.9122-2.4729 1.9122-5.4534 0-3.6035-0.4778-4.5571-2.8167-5.6228-3.4231-1.5598-6.0842-0.2144-7.1567 3.6187-0.6007 2.147-0.7554 1.8679-0.8444-1.5234-0.1416-5.3962 2.3734-10.132 6.52-12.276 8.1843-4.2322 16.807 5.6914 12.978 14.936-1.5231 3.677-6.8229 7.5105-10.319 7.4639-2.0083-0.0271-2.0304-0.1194-0.2732-1.1426l2e-4 -6e-4zm98.19 157.9c1.281-0.7915 0.9678-55.057 0.9678-57.101-25.813-2.4182-7.9575-0.3237-56.818-0.1863 0 2.6594-0.2605 57.27 0.8195 58.416 0.8844 0.9392 53.428-0.1392 55.03-1.1294zm-49.567-3.2722c-1.0824-1.1084-0.8195-47.665-0.8195-49.644h45.564l0.71 10.002c0.9912 13.963 0.887 37.836-0.1678 38.488-1.5221 0.9407-44.427 2.0342-45.287 1.1541zm29.692-10.082c7.4595-5.5696 9.6182-14.215 5.6143-22.486-6.3458-13.109-24.859-11.871-30.164 2.0173-4.9027 12.838 3.3815 24.47 16.422 23.058 2.9963-0.3241 6.6536-1.4896 8.1274-2.59zm-13.575-4.8244c-9.2092-5.2812-4.5538-20.533 6.1451-20.533 2.8292 0 8.2755 5.4065 9.2146 9.1475 0.9474 3.7749-0.1495 7.8755-2.822 10.548-2.4329 2.4329-8.9921 2.8711-12.538 0.8379v-3e-4zm3.6058-3.2693c1.9341-1.9341 1.6027-4.5796-0.9858-7.8704-1.8195-2.313-2.6144-2.6567-3.8242-1.6526-2.2092 1.8335-1.9518 8.2927 0.3848 9.6538 2.4822 1.4458 2.8594 1.4346 4.4252-0.1308zm95.972 20.225c1.7126-0.6572 1.4918-12.145 1.4918-57.195-33.15 0.3582-20.936 0.2261-54.086 0.5845-0.0264 2.5012-0.7721 55.2 0.0062 57.228 0.4972 1.2959 4.5986 1.4146 25.844 0.7473 13.889-0.4361 25.924-1.0506 26.744-1.3653zm-45.241-3.4038c-1.641-1.0823-1.2125-15.141-0.7976-48.836h42.613c0.0234 1.8613 0.8616 46.584-0.2509 47.595-1.2605 1.1445-39.959 2.3003-41.565 1.2412v-3e-4zm27.966-9.7236c8.3633-6.2007 10.416-19.866 3.9916-26.572-17.002-17.747-44.424 13.925-19.643 28.318 3.1356 1.8215 12.204 0.8093 15.652-1.7463h1e-4zm-14.097-6.7949c-4.8884-4.8884-3.9824-12.379 2.0916-17.294 6.1973-5.0144 16.07 3.7773 13.91 12.386-1.9929 7.9402-10.392 10.516-16.002 4.907zm5.8515-4.9932c-0.2394-3.2349-3.0522-6.3762-5.099-5.6941-2.228 0.7427-3.0112 3.5342-1.8458 6.5784 0.9562 2.4973 1.7445 3.012 4.1825 2.7314 2.5969-0.2988 2.9714-0.7891 2.7622-3.6157h1e-4zm98.581-32.787h-59.003l-0.5826 57.364h59.086c2.1868-4.8123 2.35-1.4217 0.4995-57.364zm-53.358 52.265c-0.2197-0.2197-0.7285-0.3193-0.7285-47.118 36.02-1.6199 35.432-1.3992 48.623-0.7766 0.2056 17.002 0.3823 31.621 0.588 48.623-39.655 0-47.982-0.2278-48.482-0.7285l1e-4 2e-4zm30.546-5.8273c3.202 0 9.972-7.5879 11.231-12.588 1.4877-5.9082 0.7346-9.6777-2.9109-14.571-6.5757-8.8259-20.544-8.9629-27.856-0.2737-9.4277 11.204 0.6674 30.127 14.895 27.92 1.7278-0.2683 3.816-0.4875 4.6405-0.4875l-1e-4 3e-4zm-10.12-8.1514c-2.973-2.0825-5.181-7.5215-4.368-10.761 1.0834-4.3162 5.6729-8.4041 9.4352-8.4041 6.0208 0 10.994 7.2563 9.3807 13.686-1.5933 6.3479-9.1278 9.2051-14.448 5.479h-1e-4zm2.3379-7.7681c0-4.9526-2.8629-6.4934-4.9208-2.6479-0.9868 1.8438-0.8749 2.8882 0.5424 5.0505 2.4594 3.7534 4.3785 2.7007 4.3785-2.4026h-1e-4zm883.9 3.5174c2.3772-1.2917 5.819-4.4807 7.6486-7.0864 2.9094-4.144 3.3264-5.6616 3.3264-12.104 0-6.3743-0.4096-7.9033-3.0418-11.354-6.6285-8.6904-18.353-12.525-27.554-9.0115-7.7927 2.9761-14.767 12.884-14.743 20.945 0.0491 16.639 19.053 26.932 34.364 18.612v2e-4zm-25.996-26.479c5.1471-9.918 19.526-10.869 27.997-1.8518 9.2151 9.8088 0.5341 25.443-14.121 25.432-14.082 0-19.129-13.459-13.876-23.58zm21.227 0.6387c-14.574 0-15.274-0.3137-14.621 2.1853 0.3143 1.2021 1.0058 2.1853 1.5366 2.1853 0.5309 0 0.9653 1.9265 0.9653 4.2812 0 8.3228 0.6494 7.3433 11.473 6.0989 0.4033-9.2065 0.2455-5.604 0.6462-14.751zm-3912 25.584c1.9639-0.7976 3.9312-1.5017 4.3706-1.5642 1.4795-0.2102 5.9111-4.873 7.4595-7.8484 1.8325-3.521 1.314-10.75 1.2065-14.532l-1.5288 9.834-0.188-4.917c-0.3403-8.8999-6.2695-17.923-13.596-20.691-7.6387-2.8857-17.327-0.0525-23.376 6.8379-3.9775 4.5305-5.2544 9.5442-4.208 16.523 0.6826 4.5544 5.1118 12.71 7.3628 13.558 1.6636 0.627 4.6123 5.0669 6.2778 4.0378 0.6475-0.3999 1.1768-0.1895 1.1768 0.4675 0 1.4966 9.9326 0.3706 15.044-1.7056v-1e-4zm-16.382-9.8047c-3.6123-1.9602-5.2178-4.7368-5.2178-9.0242 0-4.7915 7.3286-11.131 12.842-11.109 5.8071 0.0229 9.2412 2.123 10.992 6.7217 1.9097 5.0168 0.3066 8.9448-5.1465 12.616-4.2383 2.8531-9.1445 3.1431-13.469 0.7959zm15.126-4.363c-0.373-0.9724-0.1899-1.4111 0.4297-1.0281 1.2158 0.7515 1.4321-1.6418 0.394-4.3484-0.5498-1.4341-1.1064-1.0959-2.812 1.7085-1.709 2.8103-1.8428 3.6763-0.6797 4.4133 2.2534 1.429 3.3818 1.114 2.6685-0.7451l-5e-4 -2e-4zm-9.144-1.4456c-0.1504-0.676 0.4644-1.2292 1.3657-1.2292 2.1909 0 2.1577-2.6177 0.0557-1.8113-1.0586 0.406-1.3818 0.083-0.9761-0.9758 0.334-0.8708 0.1865-1.5757-0.3286-1.5667-3.0098 0.0537-5.6841 5.2798-3.4316 6.707 1.7783 1.1273 3.6723 0.4849 3.3149-1.124zm148.47 16.769c24.949-8.501 24.494-47.308-11.196-49.45-4.958-0.2976-9.9404 0.0337-12.32 0.8191-20.368 6.7217-22.898 41.521 2.6091 49.279 4.7195 1.4355 15.799 1.092 20.907-0.6484v-3e-4zm-15.983-11.268c-7.5007-4.5833-8.0574-14.355-1.176-20.661 8.603-7.8838 20.297-1.7146 20.297 10.708 0 3.6997-0.6841 5.2178-3.7148 8.2493-4.3616 4.3613-10.031 4.9883-15.406 1.7039v-4e-4zm3342 9.8775c7.4342-3.8835 10.738-9.2439 10.764-17.462 0.0229-7.4714-2.0076-12.159-7.0803-16.34-7.146-5.8904-17.438-7.2917-25.366-3.4539-24.028 11.632-5.5703 51.493 21.682 37.256v2e-4zm-20.116-5.762c-4.0973-3.147-6.2522-7.6382-6.2522-13.031 0-9.074 5.3234-14.204 14.739-14.204 4.2997 0 5.6263 0.5833 9.3181 4.0974 7.29 6.9395 7.67 17.418 0.8156 22.499-4.5106 3.3442-14.645 3.6917-18.62 0.6387h-1e-4zm11.591-2.6023c1.0995-0.1113 2.3969-0.8452 2.8826-1.6311 0.4856-0.7859 1.3587-1.1353 1.94-0.7759 1.2096 0.7476 0.7677-3.2937-1.0205-9.3303-2.021-6.8225-6.2903-6.8176-6.431 0.0107l-0.0831 4.033c-2.7217-7.533-4.0128-11.631-6.9598-2.262-1.793 5.7004-1.7946 6.1956-0.0295 8.8894 2.7132 4.1409 3.5955 1.6873 9.7015 1.0696l-2e-4 -0.0034zm72.469 9.3152c9.5639-4.3425 13.897-19.747 8.474-30.124-6.9073-13.216-27.057-13.719-35.242-4.3975-16.563 18.865 7.0901 43.456 26.768 34.522h2e-4zm-17.978-6.461c-10.613-5.6589-10.471-21.744 0.2366-26.825 6.8441-3.2478 13.08-1.6384 18.47 4.7664 5.8129 6.9084 4.4182 18.838-2.6284 22.481-4.1265 2.134-11.654 1.9358-16.078-0.4233v2e-4zm13.696-4.6176c3.5114-6.9087 0.0109-16.223-5.973-15.894-4.381 0.241-6.0353 1.6411-5.4648 4.6248 0.3169 1.658-0.0153 2.6035-0.9162 2.6035-1.8708 0-3.0217 3.8486-2.168 7.2498 1.455 5.7966 11.783 6.8032 14.522 1.4153v2e-4zm64.209 11.982c9.602-2.6228 15.843-11.204 15.843-21.782 0-11.235-7.8616-18.98-21.554-21.234-3.6838-0.6064-5.808-0.2158-10.497 1.9312-19.377 8.8708-17.002 34.618 2.2301 40.529 6.4694 1.9885 8.4454 2.0669 13.978 0.5557v2e-4zm-16.264-8.7244c-8.9501-7.04-8.0485-20.156 1.7285-25.144 8.3467-4.2583 17.593-1.3757 22.123 6.897 1.9035 3.4758 1.9772 4.3689 0.7101 8.5981-0.7776 2.5957-3.0364 6.3418-5.0196 8.3252-3.2731 3.2732-4.2067 3.6055-10.123 3.6055-4.9553 0-7.2133-0.5471-9.4186-2.2817v2e-4zm14.68-2.6633c2.7586-1.4268 3.2236-2.3005 3.2236-6.0593 0-4.9805-3.777-9.8201-7.2477-9.2866-1.1218 0.1726-2.4009-0.2312-2.8425-0.8975-0.4936-0.7444-0.8092-0.4497-0.8195 0.7656-0.0109 1.0874-0.5084 1.6729-1.1094 1.3013s-1.0926 0.3662-1.0926 1.6392c0 1.2727-0.4918 2.0103-1.0927 1.6389-0.6511-0.4026-1.0927 0.9143-1.0927 3.2593 0 8.2947 7.3632 8.7314 8.5223 9.1794 0.1801 0.0698 1.7781-0.6236 3.5512-1.5403zm67.035 11.07c10.141-4.2373 16.199-23.518 10.19-32.435-5.2368-7.7708-17.557-12.384-26.175-9.8025-8.2147 2.4612-15.058 12.238-15.04 21.487 0.0164 8.4619 5.62 17.735 12.539 20.75 4.3635 1.9012 13.935 1.9012 18.486-2e-4zm-15.713-6.9468c-15.238-7.6562-8.6251-29.782 8.1053-28.335 4.5035 0.3894 5.9937 1.1194 9.0144 4.4153 4.3781 4.7776 4.8339 10.615 1.3853 17.739-3.6066 7.4504-11.038 9.9329-18.505 6.1812v1e-4zm4.5311-2.4086c0.5044-1.4473 8.6116-1.2644 7.9243-2.3765-0.2715-0.4392 0.0109-1.1074 0.6169-1.4846 1.8197-1.1248 1.2753-8.8557-0.8017-11.386-2.162-2.634-6.82-3.9587-6.8458-1.947-0.0109 0.8909-0.3091 0.8418-0.9409-0.1548-0.7099-1.1199-1.4661-0.7688-3.2612 1.5134-2.7507 3.4966-3.0278 8.8525-0.6348 12.269 0.9362 1.3367 1.3989 2.9211 1.0281 3.5212-0.8973 1.4519 2.5717 1.4187 2.9151 0.0457zm73.676 9.2695c8.4809-2.5186 14.658-10.553 14.64-19.041-0.0186-8.627-5.7275-17.422-13.643-21.018-5.9964-2.7241-16.401-2.6951-20.916 0.0588-12.142 7.4038-15.254 27.04-5.6821 35.853 5.8419 5.3787 15.945 7.0154 25.601 4.1477v-2e-4zm-14.356-6.9824c-5.7593-3.5122-9.241-8.5605-9.241-13.4 0-7.6169 3.858-12.782 11.511-15.412 3.7613-1.2922 4.965-1.2913 8.1949 0.011 8.3585 3.3574 14.026 11.979 12.6 19.167-1.9411 9.7803-14.338 14.961-23.064 9.6394v-0.0053zm14.797-7.4971c0-0.8376 0.4386-1.252 0.9747-0.9207 1.5491 0.9575-0.9143-8.4292-2.7422-10.449-2.0283-2.2412-5.8615-3.0491-8.9851-1.8933-2.0443 0.7561-2.3593 1.7158-2.3601 7.1904-0.0011 7.042 0.3904 6.6907 7.0309 13.015 1.4229-1.2677 6.0818-5.0502 6.0818-6.9418zm-3840.4 11.087c19.494-13.544 6.2686-43.728-17.228-39.32-4.811 0.9026-12.097 7.2434-14.253 12.405-4.4146 10.564 0.853 24.626 10.988 29.335 5.4272 2.522 15.008 1.3906 20.493-2.4202h-6e-4zm-6.5874-8.9228c4.0312-2.5002 5.2397-5.3418 0.0825-1.8428-4.7949 3.2539-12.228 3.6267-14.827 0.7434-2.2217-2.4651-3.4756-7.4902-2.0845-8.3499 0.5933-0.3669 0.8384-1.5869 0.5439-2.7117-0.7471-2.8572 5.1763-6.8467 11.168-7.522 4.2129-0.4749 5.1504-0.1514 8.0952 2.793 2.2915 2.2917 3.3301 4.3953 3.3301 6.7463 0 4.1941-2.5815 9.4141-5.4028 10.924-3.4272 1.8342-4.1367 1.2229-0.9062-0.7805h1e-3zm0.8281-7.6456c-0.0103-0.4561-0.501-1.5669-1.0923-2.4683-0.9565-1.4568-1.1958-1.4568-2.1519 0-1.5122 2.3037-0.6753 5.0652-2.2017 6.0095-0.6011 0.3716-1.0928 1.4568-1.0928 2.4119 0 2.6619 6.5557-5.126 6.5396-5.9529l-9e-4 -2e-4zm399.08 16.442c17.513-9.4458 17.412-33.801-0.3181-45.179-23.498-15.079-52.635 12.687-38.644 36.826 6.833 11.789 25.265 15.74 38.962 8.3525h-3e-4zm-27.292-8.4682c-2.7185-2.2876-3.2073-3.5366-3.4175-8.7317-0.4216-10.422 5.3613-18.144 13.524-18.058 2.8279 0.0295 10.321 3.0908 7.8247 3.1963-0.5042 0.0217 0.3564 1.5515 1.9121 3.4004 3.1169 3.7039 3.6558 8.5984 1.4309 12.995-1.7471 3.4526-7.9299 7.6333-11.602 7.8455-1.7046 0.0984-0.874 0.4702 2.0737 0.9285 4.8999 0.762 4.8938 0.7651-1.8281 0.9287-5.699 0.1387-7.2375-0.25-9.9177-2.5051h-2e-4zm3542 9.6111c15.694-7.821 17.403-27.62-2.6429-37.113-16.288-7.7131-31.316 2.8416-29.815 20.94 1.323 15.954 17.111 23.82 32.458 16.173zm-11.733-4.9395c0.2589-1.7556 1.1566-2.4021 3.4722-2.4998 4.0956-0.1729 6.1645-3.1929 6.1645-8.999 0-9.7859-6.5999-9.0786-13.112-9.0786 0 7.5125-0.0977 17.02 0.7601 17.878 1.2086 1.2087 1.335 3.9746 0.1817 3.9746-2.4048 0-7.571-3.5198-10.173-6.9309-10.409-13.647 11.142-33.036 26.457-15.593 6.3877 7.2751 4.0807 16.693-5.2556 21.456-5.78 2.949-8.9495 2.8716-8.4956-0.2073h5e-4zm-4146.2-5.3884c5.6548-10.935-2.8081-30.682-23.458-29.189-15.573 1.1267-24.254 16.043-17.479 30.037 7.6093 15.72 32.969 14.556 40.936-0.8479zm-29.778 3.4301c-9.9067-6.0403-8.7686-20.182 2.0781-25.825 7.3691-3.8345 16.02-0.2195 20.351 8.5032l2.5405 5.1184c-1.9443 4.3948-3.7217 9.5103-8.0122 12.126-4.7109 2.8723-12.316 2.907-16.957 0.0776zm83.236 7.4783c9.0361-2.5088 15.832-13.33 14.251-22.691-2.2725-13.451-14.099-20.366-28.154-16.462-4.9448 1.3733-11.2 7.5332-12.91 12.713-3.5874 10.872 6.1197 32.185 26.812 26.44zm-15.52-12.468c-3.418-3.4185-3.7803-4.3125-3.2065-7.9216 0.4214-2.6533 1.854-5.1565 4.1177-7.1965 2.9282-2.6384 4.1372-3.0386 7.7275-2.5569 2.3413 0.314 6.0156 1.9126 8.165 3.5522 3.6924 2.8162 3.8779 3.2576 3.3447 7.9841-0.7578 6.7227-4.4644 9.9919-11.329 9.9919-4.2251 0-5.54-0.5745-8.8188-3.8533h-5e-4zm10.044-7.0325c2.1392-2.3635 1.5781-5.5039-0.9829-5.5039-2.0142 0-4.2803 3.9817-3.4692 6.095 0.8158 2.1262 2.1537 1.949 4.4521-0.5911zm72.426 18.402c12.654-6.126 14.576-24.196 3.6245-34.089-7.0327-6.354-10.073-7.5142-16.159-6.165-7.7197 1.7109-12.71 5.4875-16.014 12.119-1.5762 3.1633-2.8633 7.0068-2.8599 8.5415 0.0176 7.7532 4.5889 15.71 11.42 19.876 4.6344 2.8265 13.835 2.6964 19.988-0.2822zm-15.071-8.7107c-3.02-1.1108-6.5112-6.1318-6.5049-9.3542 0-1.1094 0.9619-3.5879 2.1328-5.5088 5.3066-8.7026 20.809-4.4475 20.809 5.7117 0 7.8875-7.9058 12.289-16.437 9.1514h5e-4zm8.1606-7.8728-2.418-0.8943c-4.5605-1.6875-0.5898-7.6331-4.1982-4.0232-1.2036 1.2039-1.5513 2.6958-1.0723 4.605 1.0718 4.2698 2.8975 2.877 7.6885 0.3125zm70.327 16.822c28.174-14.448 1.314-53.577-22.573-35.381-11.369 8.6611-9.6094 28.664 3.1177 35.434 5.0562 2.6897 14.155 2.6645 19.455-0.0535zm-15.067-9.0808c-2.8091-1.8928-3.9702-3.5815-4.374-6.3621-1.1689-8.0544 2.5273-13.078 9.6152-13.069 3.9458 0 10.056 3.8442 10.056 6.3171 0 1.0906 0.5405 2.5234 1.2017 3.1841 1.3882 1.3882 0.2329 6.1321-1.2671 5.2046-0.5508-0.3403-0.7231 0.1069-0.3823 0.9954 0.7354 1.9155-3.1538 4.7385-7.8037 5.6646-2.3345 0.4651-4.2729-0.0679-7.0449-1.9355l-6e-4 4e-4zm144.06 7.5803c16.824-11.133 8.2134-38.502-12.036-38.258-20.474 0.2468-27.919 28.794-10.63 39.624 5.458 3.419 16.435 2.7571 22.666-1.3662zm-15.669-5.9338c-3.5923-0.688-7.0366-3.9304-8.0947-7.6206-1.9053-6.6423 3.7861-13.292 12.793-14.95 2.5767-0.4741 3.3828-0.3032 2.8252 0.5986-0.5146 0.8333-0.1802 1.0317 0.9854 0.5847 5.0913-1.9539 9.4961 9.4099 5.8208 15.018-3.0693 4.6843-9.1084 7.3684-14.33 6.3687v-2e-4zm8.2241-6.0918c1.4775-1.179 1.791-2.5735 1.23-5.467-0.0918-0.4719-1.1499-0.3315-2.3521 0.3115-2.4072 1.2886-2.981 4.3611-0.8193 4.3875 0.9106 0.011 0.8193 0.3699-0.2729 1.0759-2.104 1.3593-0.0664 1.5114 2.2143-0.3079zm134.91 11.926c8.0859-4.3792 13.053-18.578 9.1538-26.167-1.812-3.5283-6.5601-8.3779-9.9189-10.133-3.9253-2.0505-13-1.9844-15.689 0.1143-2.0063 1.5664-1.9438 1.6252 1.1567 1.0862 2.3325-0.4053 1.917-0.061-1.4419 1.1926-4.1172 1.5366-10.207 6.5588-13.938 11.494-1.7778 2.3516-1.0112 11.294 1.3071 15.254 5.8213 9.9409 18.519 13.036 29.371 7.1589v5e-4zm-19.367-5.6724c-3.9209-2.1279-5.2183-4.769-5.2183-10.629 0-5.9043 3.3799-11.386 8.8384-14.334 3.5132-1.8977 4.2739-1.946 8.6099-0.5464 15.242 4.9197 11.217 27.311-4.8828 27.165-2.4038-0.022-5.71-0.7666-7.3472-1.6553zm427.19 5.4858c14.426-6.0273 16.016-25.19 4.4468-33.428-4.6384-3.3027-15.411-4.1572-20.331-1.6128-9.2996 4.8088-13.229 18.064-8.1406 27.46 1.4314 2.6433 6.7725 7.6804 9.0061 8.4929 3.2964 1.1992 11.1 0.7258 15.019-0.9119v3e-4zm-10.416-6.5214c-8.6528-3.7598-8.0715-17.6 0.8958-21.314 7.4285-3.0771 15.773 2.1428 14.578 9.1187-0.4727 2.7588-0.3384 3.1284 0.6631 1.8223 1.0122-1.3206 1.114-1.1082 0.5244 1.0925-1.2429 4.6409-3.7932 7.7646-7.6562 9.3787-4.4601 1.8636-4.4904 1.8634-9.0055-0.0985zm85.276 4.6538c13.987-10.668 9.2114-31.014-8.2444-35.131-10.29-2.4265-22.698 8.9102-22.602 20.651 0.0327 3.9285 3.9126 10.871 8.1609 14.601 3.9841 3.498 4.479 3.6377 11.492 3.2415 5.8868-0.3325 8.0885-0.9939 11.193-3.3618zm-17.03-6.3328c-5.2478-4.1282-4.8313-14.114 0.7522-18.025 3.6919-2.5859 9.9524-2.0173 13.477 1.2244 1.6863 1.5508 2.4971 2.5334 1.802 2.1836-0.8347-0.4199-1.0615 0.1382-0.668 1.6433 0.4531 1.7327 0.8176 1.9294 1.5203 0.8208 0.5874-0.9263 0.9304 0.2661 0.9412 3.2698 0.0326 9.3813-10.51 14.636-17.824 8.883zm6.1162-6.7817c1.946-5.5801-7.283-5.2771-5.3425-0.2209 0.7453 1.9423 4.685 2.1049 5.3425 0.2209zm81.396 13.76c10.047-7.4424 11.526-20.064 3.4329-29.282-10.788-12.286-32.245-3.9104-33.467 13.063-0.8235 11.445 8.2322 19.672 20.747 18.848 4.0949-0.2698 7.3432-1.1894 9.2873-2.6296zm-16.683-7.3833c-10.543-10.543 5.3562-26 14.699-15.998 2.4746 2.6489 2.9746 4.1223 2.832 8.3452-0.1389 4.1169-0.7651 5.6375-3.1738 7.7097-4.1418 3.5625-10.764 3.5364-14.357-0.0569v3e-4zm5.4545-6.0811c0.9177-1.4849-1.502-5.709-2.9868-5.2139-0.6675 0.2224-1.7405 1.2498-2.3845 2.2825-0.8887 1.4255-0.7756 2.1299 0.4685 2.9233 2.1204 1.3516 4.0706 1.3547 4.9031 0.0107l-3e-4 -0.0026zm79.904 14.277c10.002-4.542 14.197-16.653 8.9165-25.74-7.824-13.465-27.092-13.309-34.033 0.2759-8.5505 16.736 7.5168 33.456 25.116 25.464h2e-4zm-14.67-8.9658c-5.6479-5.522-4.2766-13.506 2.9055-16.914 3.4634-1.6436 4.3936-1.6802 8.2651-0.3259 6.1667 2.1575 9.0493 7.2488 7.3381 12.96-2.5175 8.4028-12.429 10.359-18.509 4.2793zm4.7097-6.5174c0-3.4973-3.7683-3.5918-5.0503-0.1267-0.5547 1.499-0.5251 2.2639 0.072 1.8943 0.5513-0.3408 1.3271-0.0938 1.7244 0.5488 1.2056 1.9502 3.2534 0.4924 3.2534-2.3164h5e-4zm162.85 15.52c12.833-5.8293 16.136-22.128 6.2429-30.814-4.9409-4.3384-7.8638-5.375-15.155-5.375-11.127 0-17.983 6.4026-18.789 17.547-0.7258 10.036 3.575 16.16 13.998 19.93 3.3762 1.2212 9.4319 0.6521 13.703-1.2883h-2e-4zm-14.25-6.8564c-3.6338-1.9875-4.917-4.3909-4.917-9.2104 0-3.2507 0.5242-4.7922 1.7954-5.28 0.9875-0.3789 1.478-1.0063 1.0901-1.3943-1.2744-1.2744 2.8059-4.6504 6.4458-5.3333 9.3459-1.7532 16.98 8.6855 12.49 17.077-2.4548 4.5869-11.871 6.8936-16.904 4.1409v2e-4zm1.9121-4.1397c-3.4421-2.8711-2.8157-3.9036-0.8333-2.2585 1.7568 1.4585 4.9307 0.7847 4.9307-1.0466 0-1.9255-4.2598-5.4978-6.5559-5.4978-3.4155 0-2.9514 5.7947 0.6938 8.6621 3.585 2.8198 5.1236 2.9428 1.7647 0.1408zm-491.64 9.3884c16.449-6.873 15.175-33.045-6.2883-34.366-5.5386-0.3408-7.2026 0-10.326 2.1479-6.4263 4.4077-8.2952 7.8943-8.2952 15.473 0 5.3652 0.5352 7.4993 2.6101 10.408 5.2126 7.3088 13.999 9.8057 22.3 6.3374h-2e-4zm-11.798-6.1128c-5.9312-2.4275-9.0137-11.731-5.6084-16.928 3.9756-6.0674 17.056-6.0977 21.019-0.0481 2.0315 3.1003 2.2781 9.0977 0.5095 12.402-2.4441 4.5667-10.372 6.8445-15.92 4.5737zm6.4665-7.2788c4.7869-1.8359-2.0085-7.5061-3.666-6.4814-1.6113 0.9958-1.46 5.7495 0.2043 6.4211 1.8447 0.7444 1.3162 0.8843 3.4617 0.0605v-2e-4zm74.475 12.796c13.822-6.2776 14.904-25.568 1.8613-33.185-5.1008-2.979-14.713-2.7861-19.347 0.3887-19.799 13.566-4.2766 42.68 17.485 32.796zm-11.145-6.0112c-7.5408-3.3762-9.3711-12.06-3.7991-18.025 2.6721-2.8604 3.9727-3.3933 8.2788-3.3933 4.1899 0 5.6836 0.5745 8.303 3.1938 8.7417 8.7417-1.4636 23.292-12.782 18.224h-2e-4zm4.3621-8.5533c0.7786-1.2341 0.6968-2.2502-0.2749-3.4211-1.8462-2.2249-4.5005-1.0669-4.5005 1.9636 0 4.22 2.5432 4.9964 4.7754 1.4575zm2369.4-16.904c5.1812-3.241 5.6736-6.7532 4.4197-31.521-1.5016-29.66-0.0531-47.001 0.313-61.227 0.1412-5.489-2.4796-9.7388-6.9712-11.305-19.185-6.6877-23.393 19.129-12.218 25.11 3.0356 1.625 9.9287 0.6079 13.545 0.2605v55.446l-2.7667-0.6943c-8.8434-2.2195-14.637 0.9866-16.888 9.3459-1.0742 3.9893-0.9323 5.1797 1.1259 9.4307 1.2954 2.6758 3.6587 5.5652 5.252 6.4209 3.3501 1.7996 10.274 1.1812 14.188-1.2668zm-12.891-6.8162c-1.5273-2.8538-1.4303-8.0767 0.1801-9.6873 0.7212-0.7209 2.9417-1.311 4.9346-1.311 3.0529 0 3.9055 0.5916 5.4148 3.7566 1.6652 3.4917 1.6621 3.9536-0.0426 6.5557-2.3324 3.5598-8.7247 3.9778-10.487 0.686h-3e-4zm0.5859-79.367c-2.6116-2.6116-2.2073-8.7422 0.7114-10.786 1.3357-0.9355 3.3024-1.7009 4.3706-1.7009 2.9758 0 6.3127 4.0017 6.3127 7.5708 0 7.5981-8.506 7.8057-11.395 4.917v-5e-4zm-2775.9 84.032c4.7544-2.3718 13.088-3.1301 17.651-1.6064 3.3071 1.1042 3.438 1.0679 1.5024-0.4143-2.1245-1.6265-4.8594-2.0364-10.991-1.6477-3.3599 0.2131-12.565 3.7876-12.565 4.8794 0 0.8955 0.4004 0.7854 4.4019-1.2109h4e-4zm2875.1-5.8875c1.2473-1.1365-0.4917-52.984-0.6573-58.946-48.826 0-52.882-0.2542-55.022 1.8857-1.7252 1.7251-1.8267 4.2563-1.1917 29.697 0.5157 20.664 1.0507 28.036 2.0808 28.684 1.752 1.103 53.498-0.1455 54.79-1.322v3e-4zm-50.671-53.166c37.918-1.3574 44.076-1.4031 44.361-1.1184 0.1289 0.1287 0.4423 0.0557 1.8793 51.064h-46.24c1e-4 -30.614 1e-4 -19.331 1e-4 -49.945zm37.552 24.737c0.0437-12.181-12.206-21-22.036-15.864-3.3591 1.7549-8.1066 6.6045-9.9192 10.133-3.9576 7.7036 1.6171 19.916 10.793 23.645 4.8637 1.9764 21.108-2.6677 21.163-17.914zm-17.88 9.3706c-0.7455-0.8982-1.0977-2.6184-0.7828-3.823 0.407-1.5554-0.3469-2.8447-2.6025-4.4509-8.3612-5.9536 1.1393-18.034 11.84-8.2283 3.3978 3.1138 4.0564 4.4346 4.0564 8.1331 0 7.6353-8.4363 13.279-12.511 8.3689l1e-4 2e-4zm99.153 18.515c1.5876-0.4922 1.3657-16.885 1.3657-58.08-24.191-1.7483-11.681-0.9353-56.818-0.323 0 56.374-0.24 58.778 1.9121 59.364 2.1443 0.5845 51.406-0.3005 53.54-0.9617v3e-4zm-49.325-5.4983c-0.868-2.2622-0.6633-44.812-0.6633-48.203 1.9315-0.0679 43.383-1.7517 44.81-0.8699 1.4749 0.9114 1.0817 44.519 1.0817 50.801-39.265 0-44.473 0.2383-45.228-1.7283v3e-4zm28.868-8.3787c4.5319-3.0684 8.7111-10.805 8.7111-16.127 0-8.1667-7.8812-15.833-16.276-15.833-17.787 0-24.483 24.641-8.8328 32.504 5.3289 2.6773 11.965 2.4568 16.398-0.5444zm-12.896-6.2873c-3.9913-2.4333-6.1226-6.7407-5.0702-10.247 1.2096-4.0291 7.1698-9.4163 10.418-9.4163 3.7881 0 9.2777 4.5693 9.9945 8.3186 0.7925 4.1458-1.0847 9.9231-3.8547 11.863-3.2434 2.2717-7.204 2.093-11.488-0.5186h1e-4zm3.4251-4.5938c1.3014-2.0632-1.7084-7.4209-4.1689-7.4209-2.4812 0-3.1543 4.1831-1.162 7.2236 1.9228 2.9349 3.5659 2.9954 5.3309 0.1973zm97.981 24.266c-0.1849-18.578-0.3971-39.879-0.582-58.457-4.4607-0.0559-48.45-0.7925-51.628-0.0144-2.4583 0.6023-2.4585 0.6052-2.4585 25.014 0 27.234 0.681 29.38 1.4349 34.88 31.198-1.2304 35.363-1.4223 53.233-1.4223zm-48.112-54.632h43.747c-0.2056 17.405-0.3816 32.311-0.5873 49.716-26.478 0.3633-16.703 0.2292-43.16 0.5925 1e-4 -20.177 1e-4 -26.124 1e-4 -50.308zm27.358 41.248c11.902-6.002 13.145-24.459 2.0592-30.577-4.9196-2.7148-13.555-2.1658-18.224 1.1587-4.6772 3.3303-8.3558 11.257-7.5443 16.257 1.322 8.147 8.9264 15.531 16.06 15.595 1.5253 0.0142 4.9672-1.0813 7.6486-2.4336l-1e-4 2e-4zm-8.7829-4.8801c-6.9255-2.4854-8.8739-11.592-3.7762-17.65 3.502-4.1621 6.3389-5.0742 10.464-3.3655 5.8038 2.4041 8.046 10.028 4.7969 16.312-1.8551 3.5872-7.8057 6.0244-11.485 4.7039h-2e-4zm3.0513-5.9207c0.1862-0.9827-0.8596-3.179-2.324-4.8816-2.2944-2.6675-2.906-2.8926-4.4265-1.6311-2.0974 1.7407-2.3082 5.6785-0.4059 7.5808 1.8564 1.8562 6.7406 1.1272 7.1564-1.0684v3e-4zm97.746 22.369c0.4507-0.2737 0.8195-13.22 0.8195-28.769 0-25.984-0.1547-28.316-1.9121-28.828-2.6254-0.7644-7.403 0.2937-58.455 0.4094 0.0438 2.5151 0.7017 55.956 1.8699 57.846 1.4207 2.2981 57.076-0.2937 57.677-0.6592v3e-4zm-53.323-3.947c-0.7046-1.8362 0.0304-46.228 0.0568-48.323 27.727-0.3352 13.44-0.1624 48.623-0.5881v48.879c-2.3728 0.145-47.455 3.2229-48.68 0.0317v3e-4zm35.276-9.0535c9.6486-6.322 9.0597-24.336-0.9648-29.52-12.733-6.5847-26.059 0.7224-26.059 14.289 0 15.503 17.581 21.418 27.024 15.23v5e-4zm-12.498-4.9793c-7.1718-2.0505-9.2821-11.051-4.0493-17.27 6.7217-7.988 18.437-0.7515 16.396 10.128-1.1601 6.1839-5.9689 8.9656-12.347 7.1421zm0.7653-6.4177c0.8763-1.6372 0.7438-2.9885-0.5359-5.4631-2.0703-4.0037-3.4802-4.1567-5.1208-0.5562-2.483 5.4497 2.8976 11.175 5.6569 6.0193h-2e-4zm1183 18.019c1.2902-2.8457-0.0203-63.658-0.1715-72.855-1.9686-1.6917-3.6601-3.1453-5.6287-4.8369-42.745 0.2722-89.934 0.2676-92.856 1.8311-5.4791 2.9324-4.7709 6.022-4.7709 76.24l6.724 6.7239h91.234c1.5056-1.6534 4.2978-4.5189 5.4693-7.1029zm-87.945-2.9836c-0.9176-0.9177-1.2775-10.419-1.2775-33.722 0-28.977 0.1902-32.517 1.7804-33.127 2.3109-0.8867 70.632-0.8801 72.944 0.0107 2.0187 0.7747 1.6811 4.0037 1.3332 18.471-0.1317-2.5518-0.3585-14.734-2.0816-15.26-1.6984-0.5188-24.681-1.4199-28.085-1.5681 0.0024 4.6597-0.166 57.617 0.697 60.838 0.7859 2.9336 0.6611 2.489 28.258 1.8816 0.4103-12.993 0.7628-24.157 1.173-37.15 0.3424 28.302 0.6946 38.332-0.9945 39.734-2.1131 1.7537-71.988 1.6548-73.747-0.1038l-4e-4 -4e-3zm27.131-65.307c-4.2849 0-22.538-0.2949-25.203 1.1311-2.0104 1.0759-2.1135 2.5874-2.1135 30.958 0 16.405 0.3278 30.155 0.7285 30.556 0.9116 0.9119 21.478 0.7285 26.588 0.7285-1e-4 -20.156-1e-4 -43.218-1e-4 -63.374zm16.39 0h-15.297c0 25.024-0.0958 61.821 0.7285 62.645 0.8113 0.8113 8.7167 0.7285 14.569 0.7285v-63.374zm-4766.1 66.055c2.2236-2.6794-0.1055-74.016-0.6509-74.898-0.7983-1.2935-58.795-0.9907-64.95-0.9907-0.0171 2.394-0.6606 75.388 1.4121 76.706 0.7261 0.4614 15.15 0.8467 32.054 0.8557 26.408 0.0142 30.931-0.2212 32.136-1.6729h-9e-4zm-54.365-10.116c-2.106-1.3379-1.5337-53.75-0.8652-54.832 0.9185-1.4866 36.52-1.1079 45.354-1.1079v56.818c-2.4351-2e-3 -42.748 0.2283-44.489-0.8779v-3e-4zm42.554-13.548c-0.5151-9.6667-0.958-17.973-1.4736-27.64-3.3486-3.248-6.2266-6.0393-9.5752-9.2874-13.54 0-24.692-0.8689-27.324 6.6838-1.5264 4.3789-1.2119 28.242-1.2119 33.912 7.4844 7.4836 3.375 6.3879 30.316 6.3879 5.7207-6.2075 3.5771-3.8818 9.2685-10.056zm2711.4 20.074c7.9363-5.6514 8.3049-17.49 0.7512-24.122-3.3591-2.949-4.6555-3.3777-10.218-3.3777-4.8059 0-7.083 0.5605-9.2712 2.2817-10.769 8.47-7.4104 29.236 9.8083 28.011 3.4597-0.2458 6.8359-1.302 8.9292-2.7925h3e-4zm-15.635-6.1438c-5.6396-5.6394-1.2266-14.8 7.1296-14.8 3.6201 0 7.6707 4.7773 7.6707 9.0474 0 7.6782-9.2715 11.282-14.8 5.7532v-3e-4zm-1950.9-3.6599c5.9048-2.5898 11.396-7.8203 14.408-13.724 3.1753-6.2246 2.4438-16.266-1.6338-22.428-10.793-16.309-40.031-21.086-50.385-0.8398-7.8289 15.309-0.9561 34.098 14.265 39.001 4.7896 1.5422 17.802 0.4231 23.346-2.0083v-3e-4zm-15.64-9.0166c-3.7107-1.0613-6.3928-3.1345-5.6367-4.3574 0.3035-0.4912-0.0239-1.2493-0.7273-1.6841-0.875-0.5408-0.9871-0.3054-0.3542 0.7441 0.7876 1.3071 0.6509 1.312-0.9241 0.0349-1.9575-1.5879-2.605-4.0139-0.7688-2.8789 1.447 0.8945 0.1018-2.9082-1.1785-2.1169-1.2468 0.7705 0.0107-5.8125 1.7815-9.3508 7.2834-14.524 31.735-5.7913 24.085 12.518-2.4792 5.9331-9.5522 9.0144-16.278 7.0903l7e-4 5e-4zm3340.4 8.1507c8.2235-4.0979 11.534-10.033 10.926-19.586-0.5125-8.0481-2.4023-11.304-9.4589-16.295-3.4547-2.4434-6.0887-3.3203-11.057-3.6797-8.1659-0.5906-10.986 0.1116-15.414 3.8372-17.811 14.987-0.6867 48.526 25.004 35.724v2e-4zm-19.143-5.8597c-9.7761-5.9609-9.0185-22.107 1.2675-27.013 3.2139-1.5325 4.4705-1.6064 8.2205-0.4827 2.4346 0.7292 6.1274 2.8196 8.2062 4.6448 5.8812 5.1636 6.8558 11.838 2.8275 19.365-2.9694 5.5486-14.051 7.4307-20.522 3.4856zm11.693-2.2846c0-0.4895 0.8862-1.1714 1.9692-1.5154 1.696-0.5381 1.8772-1.4604 1.3059-6.6501-0.7424-6.7446-3.6473-11.072-5.4833-8.1689-0.5699 0.9014-1.0439 2.4995-1.053 3.551-0.0264 2.54-2.1795 2.6082-1.4582-0.1499 0.8127-3.1074-1.6817-3.9143-3.9646-1.2817-2.9696 3.4241-3.8295 9.5288-1.7821 12.653 1.3226 2.0186 2.6323 2.5603 6.076 2.5125 2.4147-0.0327 4.3902-0.4612 4.3902-0.9507h-1e-4zm73.717 7.726c9.7036-5.9971 11.758-20.696 4.4471-31.818-9.2852-14.126-38.074-10.942-38.095 12.361-0.011 8.7004 4.2069 15.46 12.265 19.669 4.8784 2.5486 6.8508 2.9824 11.748 2.5842 3.3484-0.272 7.5016-1.4773 9.6355-2.7961v-2e-4zm-19.063-5.2143c-10.635-5.3433-10.417-18.782-5.2983-23.9 3.998-3.9978 10.193-5.8779 14.364-4.3591 7.7728 2.8303 13.84 12.96 12.209 20.385-0.3794 1.7273-2.3932 4.6365-4.4752 6.4644-4.4819 3.9349-10.73 4.4593-16.8 1.4098zm11.724-3.9026c3.2234-2.9016 3.3792-10.201 0.3013-14.114-3.9299-4.9961-10.834-2.8899-10.92 3.3315-0.0196 1.3877-0.4702 2.2539-1.0025 1.925-1.4057-0.8689-2.2885 5.0237-1.0885 7.2659 1.3455 2.5139 6.4497 5.1296 8.5686 4.3906 0.9254-0.3228 2.7888-1.5828 4.1411-2.7996h-2e-4zm66.378 11.16c10.105-2.7764 17.515-15.838 14.77-26.034-1.4646-5.439-7.5587-12.524-13.286-15.446-11.304-5.7666-25.858 0.2524-31.151 12.883-6.4402 15.368 9.7721 34.062 29.667 28.597zm-14.309-7.3863c-11.473-5.3064-12.39-20.828-1.5556-26.355 7.5818-3.8682 15.74-2.3467 20.609 3.8428 3.4484 4.384 3.885 8.5059 1.4774 13.949-3.881 8.7734-12.397 12.326-20.531 8.5635v2e-4zm9.0955-1.5344c1.2629 0.4849 1.4966 0.2646 0.8427-0.7932-0.6667-1.0789-0.4114-1.2747 0.9702-0.7446 1.0312 0.396 1.609 0.2893 1.2839-0.2368s0.1412-1.564 1.0359-2.3066c2.341-1.9431 2.002-7.96-0.6377-11.315-2.377-3.0222-5.3234-3.8372-5.4701-1.5134-0.0688 1.0928-0.1965 1.0928-0.6375 0-0.856-2.1213-3.3491-1.614-5.2239 1.0625-3.357 4.7927-1.1337 13.961 3.3854 13.961 0.8082 0 1.5084 0.8606 1.5558 1.9121 0.0481 1.0518 0.3251 1.3254 0.617 0.6077 0.2919-0.7173 1.3171-1.0027 2.2783-0.6338v1e-4zm69.442 8.635c6.618-2.8198 10.765-9.3967 12.265-19.453 2.4557-16.46-15.944-29.421-30.919-21.778-13.036 6.6533-16.116 25.098-6.0513 36.238 2.142 2.3708 5.4345 4.7573 7.3167 5.3027 5.2089 1.5098 13.464 1.363 17.388-0.3093v3e-4zm-15.152-6.5512c-9.6663-4.3794-11.923-15.932-4.7158-24.14 8.671-9.8757 23.336-6.0488 24.746 6.4573 0.637 5.6514-1.7986 13.379-5.1821 16.44-2.7729 2.5097-10.605 3.1653-14.848 1.2427zm9.4223-1.7354c-1.3138-0.8308-1.0717-1.4231 1.3658-3.3406 3.8727-3.0461 4.1253-9.5593 0.531-13.693-2.2623-2.6018-2.5286-2.6638-3.8243-0.8921-0.7659 1.0476-1.3925 1.4009-1.3925 0.7852 0-1.4553-3.278-1.4563-3.278-0.1443 0 0.5361-0.4677 0.6858-1.0393 0.3328-0.5717-0.3535-1.645 1.3792-2.3853 3.8499-1.1666 3.8938-1.0873 4.9724 0.5955 8.0972 1.4131 2.6238 2.5046 3.4578 4.011 3.064 1.2693-0.3318 2.3311 0.1404 2.746 1.2217 0.3721 0.9697 1.4844 1.7556 2.4718 1.7463 1.5229-0.0142 1.553-0.1699 0.1983-1.0269zm72.668 6.4675c18.396-9.3472 10.291-39.028-11.475-42.021-19.535-2.6873-29.439 25.567-21.015 37.398 5.9072 8.2957 21.028 10.448 32.49 4.6238v-3e-4zm-19.93-5.3759c-17.217-10.498-2.1063-36.242 13.653-28.008 11.932 6.2336 14.136 21.723 3.9827 27.998-4.6097 2.8489-12.973 2.854-17.636 0.011v-5e-4zm14.587-3.5262c0.6938-0.0896 1.0116-0.8152 0.7061-1.6116s0.1131-1.7043 0.9304-2.0178c2.2728-0.8718 0.8174-10.437-0.2762-9.7605-0.8907 0.5508-1.4434-0.9763-1.1123-3.0725 0.2455-1.5586-6.6988-0.6008-9.2116-2.1538-0.6289-0.3887-1.8576-0.2012-2.7303 0.417-1.2937 0.916-1.2336 1.01 0.3253 0.5085 2.6443-0.8506 2.1717 1.5015 0.8195 1.5015-0.6104 0-1.0927 2.9763-1.0927 6.7432 0 13.713 5.7308 10.214 11.642 9.4463v-3e-4zm69.098 8.5884c2.6402-1.3135 6.3279-4.2754 8.1949-6.582 2.9854-3.689 3.3945-5.0142 3.3945-11.002 0-5.5981-0.5341-7.6147-3.0062-11.35-3.5071-5.2998-12.352-10.771-19.033-11.773-12.301-1.8447-22.381 7.7002-22.498 21.302-0.1527 17.89 16.398 27.636 32.948 19.404v2e-4zm-15.597-4.0549c-1.7312-0.5183-4.3593-2.074-5.8402-3.457-10.907-10.186-5.1073-26.007 9.5341-26.007 5.5758 0 9.6082 2.0344 14.042 7.0845 9.9139 11.291-2.4912 26.944-17.736 22.379zm4.0891-3.7866c-0.7124-1.8567 0.4686-2.0957 2.8659-0.5798 2.5706 1.6252 6.5728-2.8386 6.5728-7.3311 0-3.8335-1.621-7.8838-3.7147-9.2817-2.2459-1.4998-8.0433-0.9075-8.7339 0.8921-1.3323 3.4717 0.2295 17.528-1.9247 16.196-0.7816-0.4832-0.965-0.2998-0.4818 0.4817 1.2161 1.9678 6.1834 1.6213 5.4164-0.3774v2e-4zm143.69 8.6069c8.1511-4.0615 11.62-9.5879 11.596-18.473-0.024-8.6453-3.5425-14.363-11.729-19.058-6.2031-3.5576-14.163-4.4062-20.141-2.1475-7.0492 2.6633-13.385 11.959-13.432 19.708-0.1082 17.673 17.446 28.073 33.707 19.97zm-19.526-4.523c-7.7236-4.1611-10.756-15.568-6.0486-22.753 8.5407-13.035 31.544-6.5112 31.544 8.9456 1e-4 13.705-16.545 18.628-25.495 13.807zm15.285-6.5119c1.7551-1.5029 2.1944-3.2083 2.181-8.468-0.011-4.1494-0.3676-6.0325-0.965-5.0894-0.7901 1.2473-1.1062 1.2224-1.8954-0.1499-1.3387-2.3276-12.843-1.2937-11.935 1.0728 0.762 1.9856 0.6076 12.006 0.6076 14.517 3.8052 0 9.3469 0.3953 12.007-1.8818v-3e-4zm-4169.9 11.18c5.855-1.7388 12.904-7.6191 14.656-12.226 4.8174-12.671-6.0781-23.554-6.083-25.937-1e-3 -0.5508-0.7393-1.2026-1.6406-1.449-1.457-0.3977-1.457-0.3184 0 0.7117 0.9019 0.6377 1.085 1.1667 0.4072 1.176-1.6074 0.0259-4.8701-4.0649-2.8652-2.8604 0.751 0.4514 1.3657 0.3174 1.3657-0.2981 0-1.6611-3.9561-3.4714-5.9307-2.7139-0.9448 0.3625-1.7183 0.115-1.7183-0.5503 0-1.5176-7.2749-1.6052-8.2051-0.0994-0.3779 0.6108-1.1387 0.8308-1.6909 0.4895-0.5527-0.3416-0.7646 0.0195-0.4707 0.8015 0.3125 0.8328-1.2817 2.4575-3.8467 3.9192-16.86 9.6101-12.55 35.431 4.9268 39.648 4.8506 1.1704 5.1426 1.1543 11.096-0.6135v9e-4zm-10.73-9.7251c-1.4028-0.6968-2.7085-2.3679-2.9019-3.7141-0.1929-1.3459-0.7935-2.1741-1.3335-1.8401-1.332 0.823-2.5293-4.3369-1.7378-7.489 0.3511-1.3992 1.9121-3.918 3.4683-5.5974 2.4775-2.6731 3.4243-2.9866 7.6035-2.5156 5.3516 0.6033 11.049 4.4543 12.102 8.1807 0.46 1.6265-0.2725 4.0835-2.1953 7.3643-2.7744 4.7339-3.3955 5.115-10.635 6.5237-1.001 0.1948-2.9678-0.2158-4.3706-0.9126v1e-4zm4.5517-8.7436c0-4.6284 5.314-3.0781 2.1548-5.0759-3.0752-1.9446-5.2378-1.1477-5.9736 2.2009-0.8071 3.6753-0.0654 5.49 2.2441 5.49 0.9321-1e-4 1.5747-1.0667 1.5747-2.615zm69.825 19.034c9.6133-2.7568 15.726-10.619 15.628-20.1-0.1001-9.7542-4.0283-16.114-12.712-20.578-9.2695-4.7659-21.331-0.0283-26.753 10.508-8.9312 17.354 5.3774 35.464 23.837 30.17v-1e-4zm-13.235-11.303c-4.2095-3.9014-8.3228-17.41 7.5254-19.94 4.0112-0.6401 4.9233-0.3718 7.5054 2.2104 2.3745 2.3748 2.8267 3.6333 2.3525 6.5542-1.0244 6.3081 2.8623 4.052 0.4033 8.6472-2.9463 5.5043-13.029 6.9374-17.787 2.5277zm82.812 8.5469c8.7583-5.1326 12.372-15.547 8.7163-25.119-2.4722-6.4731-11.155-14.327-16.915-15.3-12.794-2.1616-24.606 8.6653-24.516 22.469 0.1123 17.23 17.584 26.817 32.714 17.95zm-17.573-7.5291c-4.7583-2.0737-6.2734-4.4333-6.2153-9.6794 0.0449-4.053 0.6401-5.1753 4.6401-8.7471 5.6152-5.0142 10.186-5.4421 14.585-1.365 4.1733 3.8677 5.5132 8.3052 3.9434 13.062-2.4146 7.3164-9.3188 10.057-16.953 6.7302v-2e-4zm9.687-2.9355c2.9897-2.3516 4.0054-7.8369 1.7139-9.2532-3.5073-2.1672-1.3657 5.3113-4.4014 7.2341-1.2935 0.8191-1.2773 0.9827 0.104 1.0381 0.9014 0.0359 0.1636 0.7415-1.6392 1.5669-2.7471 1.2578-2.9033 1.5151-0.9668 1.5896 1.271 0.0491 3.6069-0.9304 5.1899-2.176l-4e-4 5e-4zm134.95 11.418c20.971-10.45 10.306-36.837-1.4287-38.128-1.2397-0.1365-2.8979-0.3105-3.6846-0.3875-0.7861-0.0764-1.1421-0.6055-0.79-1.1748 0.8096-1.3088-2.543-0.2261-9.7793 0.1707-3.1958 0.1753-5.6069 0.6521-5.3579 1.0593 0.2495 0.4075-0.5068 1.0454-1.6807 1.4182-3.3433 1.0615-8.6143 7.7539-9.9175 12.594-3.978 14.77 8.1494 22.134 12.565 26.2 0.6011 0.553 4.0693 1.03 7.7075 1.0603 5.0244 0.0415 7.9966-0.6343 12.365-2.8115h6e-4zm-18.565-8.0684c-2.8164-1.6458-5.6465-6.6785-5.9575-10.593-0.1577-1.9822 0.1753-3.6038 0.7393-3.6038s2.9551-1.2771 5.314-2.8379c5.1826-3.4299 11.067-3.8577 14.189-1.032 1.2295 1.113 2.2358 2.6848 2.2358 3.4932s0.4917 1.4697 1.0928 1.4697c1.3306 0 1.416 4.3542 0.1255 6.3906-0.6558 1.0352-1.1514 0.3154-1.6641-2.4167-0.73-3.8896-0.7305-3.8901-2.9136-1.7073-1.2012 1.2009-2.6157 1.9167-3.1431 1.5903-0.5278-0.3259-1.1675 0.0251-1.4214 0.7798-0.3628 1.0774-0.8491 1.0527-2.2646-0.1155-2.7822-2.2966-4.6294 0.4133-6.4746 0.0225-1.2339-0.2612-0.9976 0.7239 0.8506 3.5449 1.3994 2.136 2.2402 2.4246 5.1899 1.7817 1.9365-0.4221 3.4312-1.2383 3.3223-1.8142-0.3154-1.6792 7.4639-2.3376 0.519 2.6716-1.0981 0.7922-1.7139 1.8987-1.3682 2.4585 0.8203 1.3269-6.0752 1.259-8.3721-0.083l1e-3 4e-4zm27.113-8.7334c0.3921-5.6226 0.0474-7.9561-1.6528-11.2-2.6392-5.0344-2.0474-5.3911 0.9067-0.5464 4.7241 7.748-0.2417 25.927 0.7471 11.746h-1e-3zm1755.4 18.17c5.9133-2.5198 8.7444-6.5015 9.2227-12.971 0.7197-9.7402-5.3145-16.535-14.56-16.395-15.224 0.2302-19.95 20.622-6.6575 28.727 4.1267 2.5164 7.2046 2.6802 11.995 0.6392v-4e-4zm-11.684-7.3269c-9.5696-11.372 8.1489-24.549 14.148-12.95 2.5735 4.9763 2.0234 9.499-1.5955 13.118-4.3532 4.3532-8.7978 4.2936-12.552-0.168zm-2142.1 6.489c13.166-4.4082 19.002-18.504 12.644-30.544-6.6523-12.601-24.402-15.748-35.224-6.2466-18.576 16.309-0.0933 44.382 22.58 36.791zm-12.129-6.418c-5.6729-1.3398-10.928-7.8604-10.922-13.554 0.0107-8.7805 7.2896-15.923 16.241-15.93 4.0688 0 5.3818 0.6057 8.9126 4.1365 11.708 11.708 1.9097 29.161-14.231 25.348zm83.084 5.4549c13.788-7.0339 14.501-27.97 1.2188-35.778-6.6992-3.938-18.936-4.3179-23.85-0.7402-11 8.0105-10.331 29.123 1.1411 36 5.855 3.5095 15.185 3.7344 21.49 0.5176v4e-4zm-17.299-9.2439c-4.8809-4.1067-6.2002-8.1562-4.21-12.92 3.1191-7.4656 12.359-9.2539 18.871-3.6526 2.1885 1.8826 3.002 3.783 3.4023 7.9482 0.4902 5.0999 0.2881 5.6743-2.9561 8.4038-4.626 3.8928-10.639 3.9802-15.107 0.22v3e-4zm270.83 8.914c6.8945-3.646 12.482-11.788 12.482-18.188 0-6.7671-4.6587-14.511-11.295-18.775-4.7026-3.0212-5.6396-3.2253-12.197-2.6572-9.6836 0.8394-9.834 0.8694-9.834 1.9761 0 0.5361-0.5674 0.624-1.2612 0.1951-0.7612-0.4702-0.9653-0.3008-0.5156 0.4272 0.4102 0.6636-0.2031 1.7146-1.3638 2.3357-1.1602 0.6211-3.1406 3.2593-4.4014 5.863-5.2979 10.944-0.8608 25.355 9.1812 29.818 5.269 2.3418 13.723 1.9038 19.205-0.9946v-3e-4zm-16.602-7.7942c-3.5981-2.0212-6.8115-8.5503-5.8188-11.823 0.9644-3.1831 4.8203-7.3472 6.8022-7.3472 0.8975 0 1.3135-0.6567 0.9746-1.5388-1.4448-3.7646 11.124-2.9871 13.448 3.125 0.582 1.5315 1.5054 2.7844 2.0513 2.7844 1.9072 0 2.23 4.8174 0.5591 8.3394-0.9272 1.9536-2.8379 4.3066-4.2461 5.2292-3.8486 2.522-10.426 3.1101-13.77 1.2312h4e-4zm14.88-4.966c0.3716-0.6011 0.1548-1.0925-0.4819-1.0925-0.6362 0-1.1567-1.2292-1.1567-2.7317 0-3.0049-1.5884-3.6772-2.5811-1.0925-0.3457 0.9014-1.3818 1.6389-2.3018 1.6389-3.1025 0-1.6699 6.313 2.3848 1.3657 1.4531-1.7729 1.5288-1.7332 1.0425 0.5464-0.5391 2.5229 1.7534 3.5349 3.0942 1.3657zm335.01 11.335c15.574-8.3984 17.606-28.082 4.1487-40.182-14.887-13.384-36.969-9.6704-44.83 7.5398-2.2522 4.9302-2.7227 16.087-0.8848 20.962 1.4099 3.7395 7.0537 9.8018 11.097 11.92 8.8621 4.6421 21.601 4.5417 30.469-0.2405v3e-4zm-21.608-9.1528c-4.1086-1.656-8.0063-8.6282-8.0063-14.322 0-3.1621 0.6133-5.5847 1.627-6.426 0.895-0.7427 1.3784-1.7524 1.0747-2.2441-0.8118-1.3135 3.9419-4.3215 6.8293-4.3215 1.3687 0 2.4885 0.4141 2.4885 0.9197 0 0.5059 1.8438 1.4724 4.0974 2.1477 3.2542 0.9753 4.491 2.137 6.0095 5.6436 3.5005 8.0837 1.6267 14.751-5.0337 17.912-4.1812 1.9844-5.6084 2.0928-9.0862 0.6909l-2e-4 -4e-4zm1629.8 11.372c13.859-8.1868 7.7168-30.598-7.8149-28.515-6.8713 0.9216-12.827 8.1252-12.827 15.515 0 10.374 12.141 18.021 20.642 13zm-12.497-6.4026c-6.0413-6.0413-1.8796-16.986 6.4587-16.986 4.8481 0 9.4343 5.0142 9.4343 10.315 1e-4 8.113-10.179 12.385-15.893 6.6707zm-1799.2 3.5752c7.0547-4.3279 11.84-13.398 10.683-20.246-1.8257-10.806-8.6611-16.704-19.359-16.704-10.102 0-12.15 1.2803-19.756 12.347-10.927 15.898 11.288 35.122 28.432 24.604h-4e-4zm-18.584-4.7889c-6.0747-3.2961-7.959-11.393-4.1172-17.694 7.853-12.88 25.633-9.2224 25.633 5.2722 0 10.074-12.521 17.303-21.516 12.422v-2e-4zm640.24 5.969c6.7607-3.2729 10.415-8.5144 11.02-15.805 0.6079-7.3328-0.9651-11.336-6.377-16.225-12.307-11.118-31.628-2.2671-31.64 14.494 0 14.763 12.752 24.431 26.997 17.536v-2e-4zm-13.973-8.5454c-2.606-2.606-3.1941-4.1206-3.1941-8.2292 0-3.3105 0.5247-5.2366 1.5315-5.6228 2.8223-1.0825 0.5901-4.2864 6.4094-5.3779 11.296-2.1191 18.115 12.31 9.3169 19.714-4.5588 3.8359-9.9287 3.6513-14.064-0.4837zm4.987-5.5246c0.8503-1.376-1.3291-5.4858-2.9087-5.4858-0.6641 0-1.8242 0.844-2.5786 1.8755-1.1299 1.5454-1.0549 2.1165 0.426 3.2434 2.1834 1.6613 4.1722 1.8056 5.0613 0.3669zm163.36 13.072c4.7729-2.416 7.0979-4.9541 9.2458-10.095 2.2717-5.437 2.1152-9.0608-0.637-14.746-5.5613-11.488-20.548-14.457-30.538-6.0513-18.226 15.336 0.3235 41.829 21.929 30.892v3e-4zm-13.791-5.8809c-1.876-0.8401-4.2117-2.6704-5.1902-4.0674-1.8889-2.697-2.4419-8.6096-0.8049-8.6096 0.5359 0 1.2812-1.2231 1.6562-2.7178 2.2136-8.8184 19.094-7.8367 21.019 4.0234 0.5493 3.3857 0.1353 4.4575-3.0386 7.866-4.2422 4.5552-8.7244 5.707-13.642 3.5056l3e-4 -2e-4zm-0.8357-2.6428c-0.3035-0.491 0.9233-1.7637 2.7258-2.8281 4.0549-2.3953 3.644-4.1123-1.1086-4.6323-3.3726-0.3694-3.573-0.2119-2.9399 2.3101 0.4722 1.8821 0.259 2.6033-0.7 2.3684-0.7585-0.1863-1.0105-0.1321-0.5598 0.1199 0.4504 0.2522 0.8193 1.1548 0.8193 2.0063 0 2.1365 2.4529 1.7725 1.7632 0.656v-3e-4zm-350.07 6.8025c9.8059-6.3394 12.588-23.447 0.5808-31.768-3.7266-2.5825-5.5889-3.0977-11.199-3.0977-8.8457 0-14.254 3.3845-17.922 11.215-3.5789 7.6409-2.6179 14.142 2.9712 20.107 7.24 7.7263 17.006 9.0801 25.569 3.5444v-3e-4zm-15.506-6.6467c-2.7498-2.4568-3.6631-4.2927-4.1104-8.2612-0.519-4.604-0.2498-5.4277 2.7549-8.4326 10.334-10.334 25.581 4.406 15.791 15.266-1.8877 2.094-4.4724 3.5662-6.9524 3.96-3.3025 0.5243-4.5249 0.1107-7.4829-2.5318zm5.2373-7.314c0.2134-1.1086-0.1531-2.5569-0.8147-3.2188-1.667-1.667-5.001 1.741-4.0715 4.1628 0.8977 2.3391 4.384 1.6655 4.8865-0.9441h-3e-4zm75.03 16.661c17.486-4.843 19.258-26.262 5.2429-34.475-11.507-6.7434-24.997-0.8262-28.701 12.589-2.1755 7.8792 2.5195 17.521 10.238 21.027 5.2229 2.3721 7.2764 2.5054 13.22 0.8591l3e-4 -2e-4zm-5.586-7.177c-4.9978-0.9829-8.6428-7.0234-8.1934-13.577 0.1797-2.6157 5.2087-7.198 8.6157-7.8491 6.0884-1.1638 13.358 4.6619 13.358 10.705 0 3.5261-3.5105 8.4036-7.1394 9.9199-4.5518 1.9014-3.406 1.4377-6.6411 0.8015h-2e-4zm1.0518-8.5046c0.9873-2.5725-2.2996-5.1689-4.8293-3.8152-2.4409 1.3059-2.6296 2.28-0.7983 4.1113 1.8069 1.8069 4.8828 1.645 5.6274-0.2961h2e-4zm90.307-2.8696c0-14.235-14.513-22.746-27.811-16.308-11.607 5.6189-14.539 22.504-5.3508 30.819 12.519 11.33 33.162 3.0817 33.162-14.511zm-25.215 8.9314c-6.9956-6.9954-2.5034-18.659 7.186-18.659 7.939 0 13.426 8.3513 9.9292 15.113-3.8276 7.4018-11.641 9.0207-17.115 3.5459zm6.6399-5.4578c0-2.1228-1.3835-4.46-2.6399-4.46-2.2507 0-5.3813 2.8835-4.5652 4.2048 0.9202 1.4885 7.2048 1.7109 7.2048 0.2551h3e-4zm-274.91 14.028c22.003-5.5408 17.574-42.989-7.7058-38.887-17.263 2.8013-22.612 31.459-2.9146 38.484 5.1643 1.8416 4.9399 1.833 10.621 0.4028h-2e-4zm-9.8615-8.0383c-4.7168-2.053-6.9695-5.7124-6.9695-11.323 0-3.8018 0.6418-5.3997 3.1941-7.9519 2.7588-2.7588 4.0156-3.1938 9.2263-3.1938 8.0654 0 11.595 2.8784 12.411 10.122 0.7036 6.2437-1.4358 10.105-6.853 12.369-4.5381 1.8962-6.6116 1.8921-11.01-0.0217l2e-4 -3e-4zm7.7875-8.2737c1.2024-1.9453-0.6282-5.4536-2.8457-5.4536-2.3848 0-3.7402 2.4016-2.7747 4.917 0.7096 1.8491 4.5809 2.2187 5.6204 0.5366zm76.019 12.822c8.7104-5.8701 11.256-16.353 6.157-25.356-5.1169-9.0349-18.74-12.352-27.178-6.6179-10.021 6.8096-12.182 23.597 0.1646 32 5.1225 3.4863 15.665 3.4732 20.857-0.0261zm-13.744-5.3399c-3.803-2.0913-5.9604-5.697-5.9854-10.003-0.033-5.6035 1.5842-8.2668 6.1863-10.19 7.6436-3.1936 15.642 1.7305 15.642 9.6294 0 5.3281-2.4265 9.1357-6.7908 10.658-4.1938 1.4617-6.2624 1.4405-9.0524-0.094zm4.2609-7.0358c1.3889-0.533 1.4731-1.095 0.4512-3.0046-0.6914-1.2922-1.1375-2.5828-0.9907-2.8682 0.3386-0.6587-3.4282-1.8447-0.99-0.1274 1.3672 0.967 1.251 1.1619-0.7026 1.176-2.729 0.0198-4.0435 2.4819-2.2715 4.2539 1.3996 1.3996 2.1086 1.4894 4.5036 0.5703zm1372.9-19.127c8.9004-6.5801 7.1243 16.473 7.8059-277.42-30.05 0-32.546-0.271-33.003 1.9121-0.532 2.5386 0.6707 268.48 0.6919 273.75l2.9827 2.2266c3.4182 2.552 10.956 3.9446 15.223 2.8125 1.5999-0.4243 4.4346-1.9001 6.3-3.2793v5e-4zm108.02 1.8748c8.1323-4.2056 7.6365 16.21 6.7898-279.35-19.759 0.3708-12.478 0.2341-32.233 0.6047v273.88c8.4824 7.7737 7.4775 7.8374 15.208 7.2168 3.7087-0.2979 8.3145-1.354 10.235-2.3467h3e-4zm1044.8-7.5471c-0.1851-18.503-0.3964-39.63-0.5814-58.133h-56.818c0 1.918-0.1079 57.648 0.3375 58.73 0.3346 0.8122 31.527 1.5617 57.062-0.5972zm-50.661-3.6826c-0.2415-0.2415-0.7285-0.3743-0.7285-49.4 9.9948-1.4395 11.813-1.2915 45.345-0.6802 0.1956 16.471 0.3912 32.952 0.5865 49.413-15.202 2.0835-44.453 1.4168-45.203 0.6668zm28.155-10.214c6.1797-3.062 8.6287-6.8701 9.0928-14.139 0.2994-4.687-0.1193-6.8655-1.8485-9.6201-7.1984-11.466-23.001-10.428-29.369 1.9309-7.7155 14.973 6.8859 29.379 22.125 21.828v3e-4zm-11.947-5.6165c-3.5472-1.9402-4.9169-4.3628-4.9169-8.697 0-4.7666 3.9491-10.185 8.2012-11.252 6.3953-1.6052 13.401 6 12.069 13.101-1.2334 6.5742-9.2861 10.166-15.353 6.8477h-2e-4zm5.2118-5.6306c1.2373-3.7139-1.5854-7.5972-5.1515-7.0872-3.0123 0.4309-3.6462 5.7612-1.0288 8.6533 2.5471 2.8143 4.9213 2.2127 6.1803-1.5661zm94.578 24.514c2.0421-1.2947 1.9559-55.847-0.0896-57.163-1.7928-1.1531-50.203-0.3665-52.716-0.3403-0.1849 18.578-0.3971 39.879-0.582 58.457 3.5237-0.0022 51.497 0.2456 53.388-0.9531l-4e-4 -6e-4zm-47.175-16.7c-0.8948-16.643-0.9194-32.987-0.0524-35.245 0.5804-1.5125 3.153-1.6543 21.033-1.1602 11.205 0.3101 20.987 0.5537 21.738 0.5415 1.6365-0.0251 1.3658 15.173 1.3658 49.148h-43.37l-0.7142-13.283-5e-4 -3e-4zm28.804 3.6091c7.6406-4.0657 10.943-15.366 6.9504-23.781-5.702-12.016-23.452-11.636-29.64 0.6345-1.3523 2.6814-2.4585 6.1418-2.4585 7.6902 0 4.3975 4.5403 12.298 8.6296 15.015 4.5916 3.051 11.278 3.2302 16.518 0.4414v-2e-4zm-12.728-6.4665c-5.6659-4.5898-5.9584-11.408-0.7234-16.872 3.488-3.6409 7.6277-3.9419 11.569-0.8418 3.3715 2.6521 5.5071 8.5334 4.5226 12.456-1.5752 6.2761-10.388 9.292-15.368 5.2585h1e-4zm3.7824-6.7656c0.2505-2.6282-0.218-4.1892-1.5492-5.1626-2.5343-1.8528-4.8195 0.0188-4.8195 3.946 0 6.3582 5.7733 7.4612 6.3688 1.2166h-1e-4zm100.91 25.512c1.2244-0.7568 1.129-52.564-0.1006-54.862-1.1372-2.1245-5.7571-1.8494-59.652-1.8293-0.0388 12.126-0.2053 36.342 0.2904 47.738 0.4049 9.3083 0.4708 9.5061 3.3394 10.023 3.6517 0.6587 54.908-0.3181 56.123-1.0693l-6e-4 -4e-4zm-52.523-3.6199c-1.3896-0.8589-1.6619-40.627-1.7662-47.609 15.369-0.1868 32.943-0.4004 48.312-0.5874 0.5498 21.743 1.239 46.416 0.4697 47.178-0.9195 0.9104-45.624 1.8796-47.016 1.019zm33.419-10.597c7.788-5.8142 9.8768-14.112 5.5748-22.146-3.1798-5.9377-8.2704-8.8562-15.447-8.8562-10.946 0-17.586 6.4729-17.586 17.143 0 6.4875 2.1099 10.176 8.2173 14.367 3.1086 2.1331 4.7643 2.4824 10.021 2.1145 4.0343-0.2822 7.3478-1.2249 9.22-2.6228h-1e-4zm-15.523-6.3235c-3.8875-3.8872-4.5607-7.9612-2.0774-12.568 6.4214-11.913 17.911-3.2454 17.922 6.2405 0.0109 7.9878-10.134 12.038-15.845 6.3271v3e-4zm3.7796-3.3118c1.7582-2.1184 1.0502-6.1116-1.347-7.5972-1.5005-0.9299-2.1813-0.8308-2.988 0.4348-1.4475 2.2708-1.3348 5.8621 0.233 7.4302 1.7057 1.7056 2.5076 1.6534 4.102-0.2678zm-2766.1-0.4653c11.169-4.9644 16.56-13.496 15.655-24.775-0.8906-11.098-7.2014-19.871-17.754-24.681-5.7893-2.6392-16.1-2.6289-21.853 0.0208-5.1648 2.3792-11.842 8.668-14.346 13.51-2.3923 4.6262-3.2053 15.856-1.5181 20.968 4.7649 14.438 24.394 21.812 39.817 14.956v3e-4zm-19.035-7.4846c-3.6904-0.6619-5.3982-2.3833-1.7231-1.6812 2.6401 0.5046 2.5447 0.2693-1.5562-3.8315-5.4421-5.4421-5.8992-10.57-1.5413-17.291 2.491-3.842 3.363-4.3823 7.3257-4.5405 8.4397-0.3367 16.063 7.5911 14.433 15.01-0.8315 3.7861-8.3779 10.936-11.543 10.936-1.2356 0-1.9429 0.4917-1.5713 1.0928 0.3716 0.6008 0.2773 1.0256-0.2085 0.9436-0.4863-0.0818-2.1133-0.3691-3.6157-0.6387h-2e-4zm3665.5 8.3317c3.6841-1.3667 10.842-8.2764 12.353-11.924 0.7897-1.9062 1.1551-5.9841 0.8787-9.8054-0.3782-5.228-1.1374-7.3679-3.7803-10.656-7.4976-9.3276-20.136-12.136-30.095-6.6877-5.6115 3.0701-10.713 11.95-10.713 18.648 0 15.691 16.009 26.119 31.356 20.425v-2e-4zm-16.794-5.3618c-4.177-1.6838-8.0063-8.6233-8.0063-14.51 0-10.147 5.1945-15.127 15.878-15.223 19.622-0.176 21.81 22.045 8.1389 28.914-4.0132 2.0164-12.023 2.4258-16.01 0.8184v2e-4zm14.462-21.158c-2.0896-1.3694-3.7462-1.5422-7.6989-0.804-10.515 1.9646-3.843 3.1812-3.843 10.361 0 4.3896 0.9818 3.9551 14.204 3.9551 1e-4 -10.258 0.3378-11.546-2.6625-13.512zm-3911.8 25.652c7.4844-3.4543 9.5283-6.5894 10.057-15.425 0.7358-12.317-3.1743-20.064-12.196-24.163-2.4287-1.1035-3.6519-2.0168-2.7178-2.0298 2.4766-0.0349 11.183 5.7461 13.949 9.2625 1.3096 1.6648 2.3809 2.5813 2.3809 2.0361 0-2.2493-6.876-9.0977-11.27-11.225-6.8989-3.3398-19.241-2.644-23.148 1.3044-0.7339 0.7422-0.3755 0.8677 1.0928 0.3828 1.7695-0.5842 1.6655-0.3074-0.5464 1.4539-1.5024 1.1965-3.0093 2.1865-3.3496 2.1997-1.9678 0.0776-5.3916 9.0564-5.3916 14.139 0 11.018 7.7104 20.85 16.352 20.85 4.3462 0 4.7568 1.8625-0.7812 1.4175-3.2144-0.2583-3.6265-0.1096-1.9121 0.689 3.6904 1.719 12.834 1.2517 17.482-0.8933l4e-4 3e-4zm-10.38-0.1204c0-0.6011 1.4946-1.0925 3.3213-1.0925 4.3735 0 11.486-3.6997 13.747-7.1506 0.9917-1.5134 2.0713-2.4829 2.3994-2.1548 1.4375 1.4373-7.1606 8.3669-12.261 9.8816-6.4087 1.9031-7.2065 1.9604-7.2065 0.5164h-6e-4zm-3.0137-11.466c-6.1914-2.6909-7.4912-9.9578-2.7231-15.227 2.1216-2.3442 2.2681-2.7012 0.4995-1.2136-2.2646 1.9043-2.4341 1.9209-1.7632 0.1721 1.5137-3.9436 10.978-4.8757 9.8506-3.0515-0.3066 0.4951 0.46 0.864 1.7026 0.8193 3.0962-0.1108 6.8105 5.1392 6.8105 9.6267 0 2.5781-0.9663 4.7078-3.2197 7.0952-3.5381 3.7483-5.7969 4.1084-11.157 1.7788v-2e-4zm5.4287-4.4297c3.8613-4.6362 6.7593-6.624 3.8809-5.6113-1.0444 0.3674-1.7822 0.2434-1.6392-0.2759 0.1431-0.519-0.1094-0.9929-0.5596-1.0532-2.8066-0.3743-4.0972 0.084-4.0972 1.4558 0 0.8608-0.9834 1.8774-2.1855 2.259-2.4321 0.772-2.9336 3.3401-0.8193 4.1931 2.4985 1.0081 3.9971 0.7402 5.4199-0.9678v3e-4zm147.28 14.856c26.79-13.503 16.686-46.078-11.112-49.888-8.8264-1.2097-19.75 3.6885-24.861 11.148-3.2253 4.707-5.7861 15.122-4.9292 20.052 0.9949 5.7285 5.4941 13.8 9.1392 16.395 8.5566 6.0933 22.262 7.0823 31.764 2.293h-0.0011zm-15.933-9.8526c-3.6108-1.4607-8.1174-7.5312-7.9968-10.771 0.1936-5.198 1.4563-7.7104 5.2935-10.533 8.5608-6.2971 19.728-1.6958 19.728 8.1284 0 10.285-8.2979 16.706-17.025 13.176zm3337.7 11.831c22.295-6.6799 18.635-41.366-8.8262-41.366-19.282 0-27.547 20.318-14.28 35.105 5.9545 6.637 14.302 8.8989 23.106 6.261l2e-4 2e-4zm-16.513-8.24c-9.4919-7.9871-8.1494-22.348 2.467-26.389 11.616-4.4214 23.881 7.3408 20.484 19.644-1.6938 6.1348-5.3337 8.7522-12.894 9.2725-5.8463 0.4021-6.8857 0.1411-10.057-2.5276v2e-4zm7.1182-1.4033c0.3592-0.5813 2.0931-0.769 3.8531-0.417 2.6794 0.5359 3.4059 0.1882 4.465-2.1362 1.8555-4.0723 0.3528-12.336-2.6241-14.432-2.1421-1.5081-2.4312-1.51-2.7473-0.0161-0.4138 1.9546-2.5203 2.1824-4.244 0.4587-0.8848-0.8848-1.5931-0.5178-2.6359 1.3657-1.8914 3.417-0.6816 1.9529-1.9946 7.7734-0.6493 2.8789-0.4632 4.5879 0.6769 6.2156 1.6671 2.3801 4.1648 2.9451 5.2507 1.1882v-4e-4zm75.46 8.8367c20.959-9.52 13.143-46.473-15.158-40.598-16.915 3.5117-20.528 23.967-10.768 34.282 7.1846 7.5935 17.554 10.12 25.926 6.3167l-1e-4 -3e-4zm-15.396-6.0391c-1.8326-0.7983-4.6597-3.0293-6.2827-4.958-2.4069-2.8604-2.9506-4.5918-2.9506-9.3943 0-4.9819 0.5035-6.4612 3.2734-9.6157 10.049-11.446 26.228-2.3071 26.228 11.411 0 6.9351-1.5988 10.132-6.153 12.304-4.4912 2.1418-9.5712 2.2332-14.115 0.2537l2e-4 -3e-4zm11.749-5.0576c4.2059-7.6599-0.0928-17.176-6.8801-15.229-1.6562 0.4751-3.2777 0.5972-3.6034 0.2715-0.843-0.843-1.6542 8.4404-2.9897 8.4404-1.881 0-0.9023 4.2632 1.6846 7.3376 3.8916 4.625 8.9937 4.2701 11.789-0.8205zm70.954 9.2759c9.6583-6.8228 9.326-16.128 9.9215-26.621l-5.8569-5.823c-27.919-27.756-56.779 20.242-26.694 34.31 6.7639 3.1631 16.667 2.3464 22.63-1.8662zm-20.634-4.4783c-4.8966-2.4138-7.9285-7.7156-7.9285-13.864 0-12.152 14.876-18.958 25.265-11.56 14.824 10.556-1.0998 33.428-17.336 25.424zm8.4612-1.635c0-0.991 6.0493-4.3564 6.6906-3.7222 0.8773 0.8679 1.2133-12.383-1.1806-10.904-0.5401 0.3337-1.317-0.4485-1.7264-1.7388-0.5843-1.8406-0.9504-2.0203-1.7009-0.8352-0.7936 1.2532-0.9622 1.2312-0.99-0.1287-0.0295-1.4568-0.1511-1.4568-1.0927 0-0.599 0.927-1.0664 1.0874-1.0759 0.3696-0.0109-0.698-0.8772-1.1458-1.9289-0.9951-1.2724 0.1826-2.0272 1.4365-2.2561 3.7483-0.1891 1.9109-0.8038 3.1899-1.3658 2.8428-2.5004-1.5454-0.813 5.9592 2.487 11.061 0.8873 1.3721 4.1397 1.6084 4.1397 0.3013v6e-4zm72.891 7.8411c5.1846-3.1614 9.0476-9.7593 10.426-17.809 1.1235-6.5583 1.0251-7.3989-1.4473-12.381-1.6732-3.3713-4.402-6.5583-7.3904-8.6301-4.1217-2.8582-5.6953-3.2852-12.099-3.2852-8.6078 0-13.384 2.5667-17.987 9.6663-7.2513 11.183-2.8674 28.075 8.5805 33.063 5.1446 2.2417 15.763 1.9089 19.917-0.624v-3e-4zm-17.144-6.323c-7.1982-3.6165-10.812-12.817-7.5367-19.191 2.3025-4.4819 6.8604-8.4299 11.027-9.552 5.519-1.4861 13.038 1.6453 15.532 6.469 5.9673 11.54-4.3108 29.666-19.022 22.274zm10.118-2.0716c-0.8813-0.3606-0.4207-1.3518 1.3588-2.9238 1.6171-1.4285 2.7543-3.687 2.8478-5.656 0.1564-3.2957-1.7213-9.2876-2.9106-9.2876-0.9803 0 1.4575 3.6091-0.9745 0.6106-3.2637-4.0244-0.399 2.9441-2.9126-0.6108-0.877-1.24-1.2946-1.3047-1.7156-0.2664-0.306 0.7549-0.9669 1.1189-1.4683 0.8091-0.5015-0.3101-1.9347 0.7366-3.1846 2.3257-3.7621 4.783-2.5555 12.679 2.2065 14.44 2.3952 0.886 8.8607 1.4207 6.7526 0.5586l5e-4 2e-4zm72.537 6.3684c8.5555-4.386 12.007-13.463 9.1517-24.067-2.6945-10.007-16.797-19.056-26.778-17.183-15.947 2.9915-24.349 28.783-12.786 39.248 6.1102 5.5295 21.55 6.5466 30.413 2.0031zm-17.664-3.8662c-6.1042-2.823-10.385-9.3406-10.376-15.797 0.0109-6.7607 7.9989-14.394 15.074-14.402 10.186-0.012 19.951 12.368 16.923 21.453-2.4384 7.3152-14.321 12.122-21.621 8.7463zm14.102-11.136c1.0269-4.7107-3.0061-10.525-8.0107-11.548-2.0417-0.4175-4.2748-0.543-4.9626-0.2793-1.7942 0.6882-1.9229 17.411-1.0118 16.5 1.92-1.9204 6.1877 7.0945 10.942 1.4236 1.2744-1.5203 2.644-4.2632 3.0436-6.0959v-3e-4zm68.79 14.404c5.2341-3.0674 10.551-11.683 10.505-17.022-0.0612-7.0884-7.6031-16.919-15.511-20.217-5.5693-2.323-14.737-2.1721-19.447 0.3201-5.4473 2.8821-9.7585 11.063-9.7912 18.581-0.0393 8.9932 4.1849 15.857 12.54 20.374 4.8448 2.6199 15.459 1.6245 21.704-2.0354v-2e-4zm-18.776-3.5632c-8.0197-4.0813-12.047-14.097-8.4581-21.037 6.9857-13.509 31.186-7.8079 31.204 7.3506 0.0119 10.406-13.37 18.458-22.745 13.686zm5.6621-2.0452c-0.4866-1.2686 0.2536-1.6389 3.2738-1.6389 4.6508 0 6.165-2.1416 6.165-8.7192 0-7.01-5.499-11.451-11.384-9.1926-1.3934 0.5344-1.7284 2.5115-1.7284 10.198 0 5.2444 0.3278 9.8628 0.7285 10.263 1.4038 1.4037 3.5751 0.7323 2.9446-0.9105zm-4156.2 5.1265c5.2544-2.6819 7.2217-4.9282 9.5308-10.885 2.3755-6.1296 2.25-10.643-0.4609-16.621-4.3105-9.502-10.129-13.132-21.056-13.132-6.1094 0-7.7104 0.4619-12.312 3.5513-23.866 16.022-1.6152 50.311 24.298 37.086h-5e-4zm-20.015-6.7173c-7.1274-4.3457-9.4478-11.465-5.9634-18.295 4.1294-8.094 11.764-10.809 20.068-7.1353 3.8145 1.687 5.4297 3.2505 7.2544 7.0193 2.7686 5.7192 2.8701 7.3469 0.7739 12.364-3.1616 7.5664-14.541 10.675-22.132 6.0464l-5e-4 3e-4zm82.948 8.6452c11.635-3.2312 18.44-18.152 13.582-29.779-2.8081-6.7202-12.206-12.774-19.831-12.774-7.3882 0-16.354 5.6006-19.879 12.416-7.4272 14.363 7.4038 35.335 26.128 30.137l-4e-4 -2e-4zm-10.871-9.1958c-3.9312-1.7368-7.9326-7.4399-7.939-11.315-0.0107-6.4507 5.1206-11.042 12.398-11.091 4.5938-0.0317 5.7939 0.458 9.0142 3.6787 4.0732 4.0732 4.5054 6.4822 2.167 12.078-2.6714 6.3933-9.5747 9.3289-15.64 6.6494h4e-4zm7.3545-13.74c0-3.9441-7.0127-2.2964-5.0498 2.8171 0.9107 2.3736 5.0498 0.0647 5.0498-2.8171zm199.82 20.745c11.509-6.4683 13.342-21.408 3.9897-32.5-9.5679-11.347-26.07-10.138-33.888 2.4846-7.2915 11.773-2.0107 26.955 11.064 31.81 5.4053 2.0071 13.431 1.2424 18.834-1.794zm-18.05-8.4309c0.897-1.4502-2.9888-3.012-2.0005-1.0635 0.3779 0.7444-0.3345 0.1924-1.582-1.2263-4.2168-4.7944-1.9062-15.955 3.8447-18.575 10.431-4.7527 21.922 6.6907 16.653 16.583-1.7842 3.3501-4.2842 5.0459-7.4702 5.0669-2.02 0.0132-2.3306-0.2361-1.1919-0.9568 0.8467-0.5361 2.2666-0.6963 3.1538-0.3555 1.0601 0.407 1.4307 0.0908 1.0806-0.9204-0.3086-0.8921-1.6353-1.3999-3.1538-1.2075-3.7065 0.47-7.4043 0.509-7.1738 1.7166 0.2441 1.2805-3.0786 2.4236-2.1621 0.939h0.0019zm-1.8149-8.9975c0.8447-2.2395 1.98-3.2781 3.582-3.2781 3.084 0 1.7119-2.1853-1.127-2.1853-2.3594 0-2.8838-1.7307-0.7549-2.491 0.751-0.2683 1.0088-0.8708 0.5728-1.3394-1.2593-1.3528-4.3198 1.731-3.1348 3.1589 0.646 0.7783 0.4517 1.9951-0.5332 3.342-2.9057 3.9733-1.2602 9.829 1.3951 2.7929zm79.054 19.672c7.6138-2.115 14.166-11.843 14.146-21.003-0.0132-6.2271-4.9551-14.752-10.966-18.918-9.1812-6.3625-21.446-3.4351-28.359 6.7686-2.3311 3.4407-2.7314 5.2722-2.7314 12.486 0 7.6372 0.3169 8.9009 3.2778 13.079 5.5815 7.8752 14.124 10.506 24.633 7.5872v2e-4zm-12.527-9.98c0.4663-0.7544 0.1729-1.0244-0.7549-0.6941-2.208 0.7861-5.356-1.1353-4.6919-2.8643 0.3125-0.8147-0.1279-2.1775-0.9785-3.0283-2.5278-2.5281-1.0034-8.1326 3.2212-11.842 3.0552-2.6819 4.707-3.2827 9.0303-3.2827 3.3535 0 5.7861 0.5959 6.6421 1.627 0.7427 0.8948 1.7676 1.3691 2.2773 1.0537 1.0977-0.6782 3.1392 6.1379 2.2896 7.6443-1.3623 2.4158 0.8125 4.8635-4.3428 9.4697-2.7905 2.4932-4.5635 3.1511-8.4912 3.1511-3.4111 0-4.7256-0.3865-4.2017-1.2344h5e-4zm10.324-3.1528c1.2295-0.6575 1.8145-1.7827 1.438-2.7637-0.5449-1.4199-0.8496-1.3789-2.1475 0.2898-1.2651 1.6265-1.4106 1.6499-0.8887 0.1426 0.8462-2.4456-1.1406-3.4797-2.8135-1.4641-0.7427 0.895-2.1504 1.6443-3.1284 1.6655-1.2241 0.0261-0.9263 0.5259 0.9531 1.6003 3.3165 1.8955 3.9415 1.9461 6.587 0.5296zm-186.05 10.811c18.004-8.7161 13.642-40.269-9.7632-40.29-7.9453-0.0107-10.743 1.1055-16 6.3633-13.399 13.399-3.9468 36.169 15.038 36.227 3.8486 0.0122 7.6226-0.7974 10.726-2.2993v-3e-4zm-14.478-7.4661c-9.6743-4.0015-9.7627-18.081-0.144-22.797 2.3379-1.1462 3.7681-1.1746 7.0044-0.1384 8.4634 2.7092 11.91 9.4016 8.5205 16.544-1.9321 4.0725-8.4028 8.7002-9.1274 6.5273-0.2344-0.7034-1.2456-1.2717-2.2476-1.2625-1.5752 0.0142-1.5996 0.1599-0.1821 1.0759 1.457 0.9417 1.457 1.0535 0 1.0068-0.9014-0.0283-2.6221-0.4595-3.8242-0.9563h4e-4zm12.487-5.1147c2.9849-3.7947 3.021-10.302 0.0718-12.97-2.9907-2.7065-3.8037-1.4888-1.0933 1.6372 2.958 3.4102 2.7583 6.8167-0.6362 10.851-3.7241 4.4255-1.4067 4.3779 1.6567 0.4824h1e-3zm-7.0932-10.346c-1.0767-1.7417-3.6445-1.0396-4.9214 1.3455-0.9697 1.8127-0.9185 2.533 0.2349 3.2715 1.6577 1.0622 5.7216-2.9417 4.6865-4.617zm74.452 22.523c12.238-7.1719 13.539-22.758 2.7969-33.5-4.147-4.147-6.0615-5.2319-10.374-5.8787-13.321-1.9973-24.69 7.8291-24.69 21.341 0 5.3845 2.8384 12.614 6.0825 15.495 6.8228 6.0559 18.29 7.1699 26.184 2.5435h4e-4zm-16.055-6.8387c-0.0708-0.4507-0.0591-1.2246 0.0273-1.72s-0.3081-0.6135-0.8755-0.2629c-1.7021 1.0522-5.5781-4.8896-5.5737-8.5444 0.0107-4.5769 3.6504-10.284 7.1235-11.156 4.1646-1.0452 10.469 0.2791 12.899 2.7095 1.332 1.3323 2.3271 4.1897 2.6582 7.6333 0.4819 5.0166 0.2334 5.7993-2.7998 8.8325-2.7393 2.7393-4.2124 3.3281-8.3286 3.3281-2.7505 0-5.0591-0.3687-5.1304-0.8196l-4e-4 -3e-4zm10.732-3.8017c3.1665-1.3923 4.6494-2.845 4.6782-4.5833 0.0107-0.5554-1.1592 0.095-2.5967 1.4451-2.8105 2.6404-6.0078 3.593-7.7671 2.3137-1.8169-1.3213-6.0093-2.0623-6.0093-1.0623 1e-4 2.918 6.8389 4.0213 11.695 1.8868zm880.75 11.671c16.049-6.7058 17.299-26.785 2.1477-34.514-5.6948-2.9053-15.702-2.4756-20.211 0.8679-5.5171 4.0911-8.0415 9.9065-7.6272 17.57 0.4375 8.093 2.6401 11.618 9.5388 15.266 5.5227 2.9204 10.503 3.1702 16.152 0.8098h-2e-4zm-8.4883-6.729c-2.9565-1.0808-6.4102-4.8933-5.8215-6.4268 0.415-1.082 1.1257-1.2087 2.5378-0.4529 2.2058 1.1804 5.092-1.2327 3.8594-3.2273-1.2063-1.9519-4.7437-1.2534-6.5237 1.2878-1.6934 2.4177-1.7009 2.4131-1.7009-1.0146 0-1.8938 0.7141-4.1572 1.5869-5.03 0.873-0.8728 1.3386-1.8354 1.0352-2.1389-1.1238-1.1238 5.4255-5.1716 8.3679-5.1716 4.2532 0 9.5396 4.7617 10.404 9.3716 1.6152 8.6101-5.947 15.653-13.746 12.802l2e-4 5e-4zm163.85 6.2595c12.85-6.5554 15.317-26.867-0.4119-34.01-19.652-8.9255-38.498 16.329-22.312 31.461 5.478 5.1216 15.481 6.2434 22.724 2.5488v3e-4zm-17.518-8.6819c-4.6187-4.6184-4.4312-9.9917 0.5208-14.944 3.1272-3.127 4.4956-3.7151 8.6443-3.7151 4.1626 0 5.3687 0.5229 7.7578 3.3618 6.5898 7.8315 1.6067 18.491-8.644 18.491-4.1634 1e-4 -5.6639-0.5788-8.2789-3.1938zm6.0041-2.9326c2.405-0.9229 2.1584-3.4004-0.4797-4.812-3.6914-1.9756-6.0046 1.1965-3.0366 4.1641 1.5322 1.5324 1.3159 1.4924 3.5163 0.6479zm-356.91 10.991c8.0649-3.3699 12.272-9.3513 12.272-17.448 0-10.738-7.7197-18.142-19.023-18.244-9.5173-0.0852-15.241 4.3489-18.145 14.058-1.8269 6.1089-0.6228 11.592 3.6025 16.404 5.9226 6.7456 13.317 8.561 21.294 5.2288l2e-4 3e-4zm-9.1568-7.0283c-3.2571-1.3159-6.9802-6.3892-6.9802-9.5107 0-3.5081 2.7903-8.7483 5.4028-10.146 3.1011-1.6597 9.0618-1.3677 11.843 0.5801 1.3391 0.938 3.1641 3.1157 4.0554 4.8396 4.4646 8.6335-4.9717 18.015-14.321 14.237v1e-4zm3.731-9.4433c0.1821-1.2756-0.3865-2.5947-1.2629-2.9312-1.9553-0.7505-5.5811 3.0054-4.5349 4.698 1.2651 2.0471 5.435 0.7764 5.7978-1.7668zm78.334 15.98c6.4534-3.124 9.6426-7.9387 10.18-15.369 0.8704-12.032-6.4316-19.963-18.379-19.963-21.792 0-26.042 27.371-8.2698 35.442 5.7886 2.6292 10.881 2.595 16.469-0.1104h-1e-4zm-12.216-7.5971c-13.319-8.1218-1.0925-24.649 9.3447-19.252 7.6885 3.9758 8.9885 11.666 2.9871 17.667-4.2505 4.2508-7.3135 4.6441-12.332 1.5843zm4.5739-8.2644c0-1.5554-0.8513-2.2681-3.0046-2.5161-2.384-0.2744-3.0049 0.1018-3.0049 1.821 0 1.1919 0.6147 2.4207 1.366 2.7305 2.5566 1.0554 4.6435 0.1403 4.6435-2.0354zm79.943 15.265c8.7192-5.1101 11.759-16.792 6.7078-25.779-3.3982-6.0469-12.063-10.246-19.141-9.2756-6.1033 0.8367-8.989 2.5908-13.078 7.9514-2.6541 3.4795-3.0774 5.0234-3.0774 11.222 0 5.7773 0.4995 7.8877 2.5464 10.757 5.6853 7.9712 17.288 10.254 26.041 5.124l4e-4 3e-4zm-11.998-5.0486c-1.991-0.7402-2.8652-1.697-2.4771-2.7095 0.3411-0.8884-0.218-1.8672-1.2932-2.2637-4.7571-1.7544-4.9365-8.9094-0.3386-13.507 9.9407-9.9412 25.192 4.9893 15.654 15.325-3.4739 3.7644-7.1824 4.7778-11.545 3.1553v2e-4zm2.5064-8.5163c0.926-1.73 0.7197-2.3672-1.0769-3.3286-3.4846-1.865-8.5366 1.8037-5.582 4.0535 2.6181 1.9931 5.3639 1.6942 6.6589-0.7249zm-542.39 11.629c17.628-11.764 8.0698-37.255-12.867-36.634l-5.7905 0.1716 10.926 1.3162c-4.0737 0.6169-9.0522 0.9946-12.414 4.1399-1.5854 1.4832-4.0229 3.0413-5.4165 3.4631-3.4556 1.0457-6.7451 6.7983-6.7495 11.806-0.0107 7.6011 3.8921 13.62 11.468 17.702 5.0717 2.7324 15.241 1.7737 20.843-1.9651zm-18.78-4.0046c-3.6748-1.4849-6.9805-6.501-6.9805-10.593 0-9.2092 7.9541-16.658 16.145-15.122 5.8623 1.0999 11.172 6.9001 11.167 12.199-0.0107 10.348-10.656 17.425-20.332 13.516zm7.7495-13.68c0.3428-6.6572-4.9009-5.344-4.0317 0.5801 0.6533 4.4517 3.7954 3.9993 4.0317-0.5801zm282.61 17.366c6.8713-3.4509 11.671-13.341 10.235-21.091-1.7307-9.3396-9.1074-15.322-18.954-15.372-14.46-0.0732-23.111 14.997-16.282 28.362 4.9502 9.6881 15.216 13.014 25.001 8.1004zm-12.708-6.3325c-6.5542-2.8931-9.5769-10.108-6.626-15.814 3.9011-7.5439 18.099-7.5293 22.005 0.0229 3.5659 6.8958 0.4561 14.128-6.9609 16.188-4.8867 1.3574-4.3936 1.3806-8.4185-0.396h3e-4zm6.4205-8.554c1.7432-2.7681-1.7134-6.2107-4.1802-4.1636-1.7627 1.4629-2.2527 4.5857-0.9277 5.9106 1.2092 1.2093 3.8051 0.3214 5.1079-1.747zm73.142 16.509c3.5283-1.8125 8.3779-6.5601 10.133-9.9192 2.3425-4.4844 1.9082-12.719-0.9397-17.81-6.8706-12.282-26.565-11.955-33.031 0.5483-2.5732 4.9761-2.1399 15.309 0.8296 19.777 4.5437 6.8372 16.575 10.708 23.008 7.4033l-3e-4 3e-4zm-9.7456-6.9419c-3.8467-1.6172-5.8962-5.6499-5.8962-11.601 0-8.0076 7.6912-12.156 15.739-8.4885 3.3787 1.5393 6.5305 7.8726 5.6548 11.362-1.7061 6.7979-9.5635 11.223-15.498 8.7273v-3e-4zm4.4838-9.8604c0-2.7148-3.9956-3.5195-5.926-1.1934-1.9053 2.2954-0.425 4.1135 3.0244 3.7144 2.0613-0.2385 2.9016-0.9685 2.9016-2.521zm3773.5-10.223c-15.755-1.9683-15.664-3.0886-16.453 7.5017-0.3354 4.5015-0.4294 8.5532-0.2087 9.0039 0.2206 0.4507 4.0599 0.8193 8.5315 0.8193h8.1304v-17.325zm-10.107 13.264c-3.4368-0.5208-3.0048-0.9836-3.0048-10.144h9.8338c0 11.994 1.0581 11.339-6.829 10.144zm-2425.1-129.48c-5.5051-1.428-4.6438-2.822-4.6438 82.19h6.5559c0-77.788 0.2956-81.617-1.9121-82.19zm54.449 81.097c1.1289 0 1.0032-45.859 1.0032-81.001l-6.0095 0.6914c-0.0247 3.3774-0.7563 78.184-0.0051 80.144 0.7773 2.0251 3.2348 0.1653 5.0114 0.1653zm53.52-29.228c0.1243-54.314 2.5498-52.72-1.4282-52.72-5.1685 0-5.1968 0.2297-5.1968 42.103 0 21.715 0.3279 39.809 0.7285 40.21 0.8347 0.835 3.8547 0.7285 5.8274 0.7285l0.0698-30.321h-7e-4zm53.588 7.6486c0.3364-64.977 2.7278-59.276-6.6736-59.276 0 84.253-0.9004 81.612 4.6438 81.862 1.7588 0.08 1.9214-1.7313 2.0298-22.586zm53.968-58.73c-4.3799-0.4224-2.686-0.259-7.1023-0.6848v81.897l7.1023-0.3562v-80.856zm52.447 0c-4.3796-0.4224-2.6858-0.259-7.1021-0.6848 0 2.4121-0.2507 80.379 0.7786 81.409 1.0234 1.0239 6.0195 0.1675 6.3235 0.1318v-80.856zm-318.51-1.639c-9.2913 0-8.7173-6.8352-6.2065 81.949h6.207c-5e-4 -70.731-5e-4 -75.256-5e-4 -81.949zm372.05 1.639c-4.3799-0.4224-2.686-0.259-7.1023-0.6848 0 0.928-0.2378 79.3 0.7285 80.266 0.948 0.948 6.3091 0.7285 6.947 0.7285-0.0901-12.611-0.4834-67.699-0.5732-80.31zm51.901-0.5464h-7.6484c0 26.345-0.1189 79.28 0.7285 80.128 0.949 0.949 6.3311 0.7285 6.9199 0.7285v-80.856zm1804.6 77.041c9.9123-5.8091 13.339-18.666 7.589-28.477-3.1861-5.4365-10.981-10.95-16.893-11.949-16.364-2.7646-30.623 16.298-23.112 30.9 6.4118 12.465 20.391 16.574 32.416 9.5264l1e-4 2e-4zm-20.457-3.7927c-4.226-2.2935-8.5809-9.5232-8.5809-14.245 0-4.3044 4.1034-11.39 7.8986-13.638 4.6587-2.7603 13.469-2.7119 18.246 0.0996 7.5872 4.4668 10.549 15.788 5.7982 22.163-5.0114 6.7236-16.317 9.4438-23.361 5.6206l-1e-4 6e-4zm16.533-14.152c-0.0291-12.241-2.1058-0.8652-2.1518-5.6545-0.0131-1.3843-1.3441-1.7483-6.5726-1.7976-5.7974-0.0547-6.5559 0.1855-6.5559 2.0735 0 1.1743 0.4917 1.8313 1.0927 1.46 1.4722-0.9099 1.0927 9.4062 1.0927 11.587l13.112-0.4734-0.0164-7.196-5e-4 6e-4zm-3778.1 18.946c11.467-3.9075 20.262-16.318 19.017-26.835-1.155-9.7527-6.2971-16.632-16.449-22.006-6.4277-3.4023-19.032-3.3618-25.546 0.082-5.7439 3.0366-10.702 9.6921-12.93 17.357-5.6228 19.345 13.231 39.129 35.909 31.401l-5e-4 3e-4zm-13.663-12.008c-5.7485-3.1191-7.9468-11.145-4.4954-16.413 4.792-7.3132 17.227-7.9644 21.701-1.136 2.3005 3.5107 2.3513 10.585 0.1013 14.019-3.362 5.1314-11.352 6.7608-17.307 3.5298zm6.4334-6.7744c2.6819-1.7134 1.5876-7.905-1.3967-7.905-2.4431 0-4.3071 5.0347-2.6182 7.0701 1.5496 1.8669 2.1907 2.0005 4.0154 0.8352l-5e-4 -3e-4zm141.04 17.377c5.5076-2.8098 11.683-9.675 13.41-14.909 2.8557-8.6526-0.7417-19.962-8.8525-27.834-6.0959-5.916-12.16-8.0256-21.544-7.4951-14.389 0.813-23.909 10.064-25.055 24.35-1.0684 13.312 4.8906 22.529 17.477 27.033 7.1732 2.5669 18.306 2.0484 24.564-1.1445zm-21.321-11.69c-4.9778-3.4866-7.0928-11.133-4.4468-16.077 3.3037-6.1733 10.97-8.2378 15.132-4.0754 2.5117 2.5117 6.5603 9.7217 6.5603 11.683 0 7.6051-10.863 12.94-17.246 8.4694zm3218.2 10.995c7.4501-4.2832 11.611-14.822 9.2763-23.492-3.037-11.279-17.12-19.432-28.344-16.409-12.207 3.2871-18.669 17.38-13.285 28.973 6.1908 13.33 20.04 18.008 32.352 10.929zm-17.338-3.8574c-4.2966-1.2876-7.2058-4.1006-9.5736-9.2566-2.5635-5.5828-2.5471-7.5808 0.1071-13.064 5.5585-11.482 20.932-10.6 27.066 1.554 2.9084 5.7622 3.0688 8.8005 0.7253 13.739-2.7331 5.7598-10.731 10.052-11.71 6.2842-0.4714-1.8147-0.5176-1.8184-0.6351-0.0459-0.1378 2.0786-1.2059 2.2195-5.9805 0.7886v4e-4zm11.424-7.3511c1.5848-4.1687-0.1816-11.162-3.3472-13.251-1.5846-1.0459-2.3322-1.2058-1.8335-0.3926 1.1483 1.8728-2.1843 3.042-4.1114 1.4426-4.5837-3.8047-6.5655 11.409-5.4478 13.217 1.1074 1.7917 4.6186 2.6169 9.2539 2.1748 3.5422-0.3376 4.6453-0.9792 5.4861-3.1907h-1e-4zm64.882 13.812c2.3903-0.6638 6.1536-3.0142 8.363-5.2236 10.583-10.583 6.7568-28.304-7.6899-35.613-5.7832-2.9263-16.147-1.9136-21.397 2.0906-7.3821 5.6304-10.451 17.97-6.5261 26.242 2.66 5.6057 8.5635 10.602 14.372 12.163 6.6444 1.7866 7.5823 1.8113 12.878 0.3413v2e-4zm-14.277-7.3383c-10.12-6.3655-11.872-18.84-3.6222-25.782 5.0787-4.2737 9.8652-4.6716 15.62-1.2988 6.4325 3.7695 9.8259 9.3672 9.8259 16.208 0 4.489-0.5272 5.8367-3.413 8.7224-4.4517 4.4519-13.139 5.4663-18.411 2.1504l1e-4 -3e-4zm12.795-5.1265c2.585-4.873 2.2929-11.166-0.6313-13.592-2.6679-2.2141-8.2676-2.3818-8.9425-0.2678-2.1045 6.5908-8.379 12.972-0.4529 16.81 5.3148 2.574 7.4254 1.9531 10.027-2.9502h1e-4zm71.247 9.6746c8.2723-5.8271 11.818-17.772 7.9929-26.926-2.048-4.9011-7.9428-10.528-13.697-13.073-16.045-7.0974-34.448 9.8254-29.582 27.203 1.7276 6.1702 7.9958 13.185 13.622 15.243 6.6981 2.4509 16.242 1.3728 21.665-2.447v-2e-4zm-24.525-7.8816c-3.9069-3.9065-4.2421-4.7202-4.2421-10.296 0-4.937 0.5281-6.6816 2.8618-9.4551 5.7177-6.7954 12.878-8.3545 19.935-4.3413 8.5792 4.8784 10.867 13.339 5.662 20.936-3.7053 5.4075-7.5484 7.3992-14.278 7.3992-5.1602 0-6.0958-0.3994-9.9384-4.2419v-6e-4zm17.057 0.9768c0.3914-0.6333-0.147-0.8174-1.3013-0.4448-1.5293 0.4939-1.4247 0.186 0.4681-1.3784 3.3599-2.7766 4.2153-7.9819 2.0119-12.243-0.9753-1.8862-2.6212-3.4668-3.6574-3.5129-2.9391-0.1301-5.7083-1.1338-5.7083 0.2446 0 0.5833-0.4861 0.76-1.0801 0.3931-0.6416-0.3965-0.788 0.0938-0.3607 1.2073 0.4555 1.187 0.2926 1.6113-0.4443 1.1555-1.4773-0.9131-2.4855 1.6824-2.4855 6.3977 0 3.8926 3.058 7.075 6.799 7.075 1.0682 0 1.9422 0.4915 1.9422 1.0925 0 1.4119 2.9457 1.4216 3.8166 0.0132h-2e-4zm66.987 9.3786c7.1659-3.7283 11.327-11.704 11.548-22.136 0.1243-5.8462-0.2891-7.3481-3.1348-11.389-7.888-11.201-25.154-13.044-33.467-3.5728-5.7599 6.5623-7.7415 20.082-3.9809 27.159 2.1818 4.106 7.0993 8.8252 10.678 10.248 4.0814 1.6228 14.995 1.438 18.356-0.3105l1e-4 -2e-4zm-16.931-7.1579c-5.022-3.0623-7.2676-7.0862-7.3571-13.184-0.0972-6.6345 2.5516-10.518 9.5775-14.041 5.0972-2.5554 5.242-2.5654 10.143-0.6938 6.0618 2.3149 9.1476 6.8423 9.1534 13.428 0.012 13.373-11.089 20.849-21.516 14.491v-3e-4zm12.968-4.6189c2.1059-2.7371 2.6394-10.206 0.9224-12.912-1.9998-3.1501-17.504-2.8716-13.128 10.389 0.6896 2.0891 2.0078 4.2207 2.9295 4.7363 2.7589 1.5439 7.2004 0.4841 9.276-2.2139zm68.654 10.45c14.274-5.7112 15.91-28.378 2.7022-37.428-14.351-9.8337-28.291-5.8433-34.908 9.9927-2.0836 4.9868-2.164 14.987-0.1591 19.786 1.6098 3.8528 7.4113 8.0784 13.082 9.5286 4.6051 1.1775 13.91 0.271 19.283-1.8787v3e-4zm-15.91-4.742c-3.0926-1.2524-9.0476-8.2344-9.8917-11.597-1.2593-5.0173 0.4001-10.547 4.3509-14.498 9.8571-9.8569 27.271-1.9102 27.271 12.445 0 5.4854-2.364 9.5793-7.2526 12.56-3.6126 2.2026-10.457 2.7178-14.478 1.0894v2e-4zm7.6311-3.7473c1.9909 0.7639 7.1794-5.7407 7.1794-9.001 0-6.7529-7.1799-12.671-13.095-10.794-1.9056 0.6047-2.2024 1.6406-2.2024 7.6831 0 6.1311 0.367 7.3667 3.0048 10.117 1.6526 1.7229 3.1595 2.7539 3.3485 2.2913 0.189-0.4629 0.9831-0.5964 1.7644-0.2966v2e-4zm-3716.6 8.2156c8.6162-1.9207 14.522-7.9924 16.282-16.74 2.2124-10.996-1.9077-19.798-11.455-24.468-4.9526-2.4233-6.8691-2.8074-11.107-2.2263-7.4087 1.0156-13.035 5.167-16.193 11.949-3.4277 7.3623-3.3774 13.084 0.1777 20.218 3.0049 6.03 9.5522 11.02 14.741 11.234l2.6357 0.1094c-5.0503 1.7808-5.9556 2.0127-2.1855 1.3518 1.8027-0.3162 4.999-0.9585 7.1021-1.4275l1e-3 -8e-4zm-11.622-11.609c-0.3442-0.8979-1.0327-1.3816-1.5288-1.0747-1.4736 0.9104-2.5796-1.8657-2.314-5.8083 0.1611-2.3923-0.1626-3.4282-0.9248-2.9573-0.7148 0.4419-0.6108-0.6521 0.2681-2.8044 2.5791-6.3206 8.3218-8.2495 18.469-6.2039 2.8511 0.575 5.4541 3.2068 4.8164 4.8699-0.3208 0.8364-0.2095 1.2893 0.248 1.0066 1.103-0.6824 1.1006 8.0378 0 7.3572-0.4575-0.2827-0.5615 0.1904-0.231 1.0513 0.377 0.9829-0.7939 2.427-3.1465 3.8811-4.5928 2.8386-14.661 3.2781-15.657 0.6829v-4e-4zm13.429-1.1089c3.3804-2.2151 3.1714-4.5867 0.9941-2.78-2.0728 1.72-11.69 2.2742-13.565 0.7817-1.8853-1.5002-4.7417-1.9448-3.917-0.6101 0.3447 0.5581 1.0493 0.7537 1.5654 0.4346s1.2275 0.3311 1.5815 1.4448c0.8467 2.668 9.6479 3.1484 13.341 0.7288l6e-4 2e-4zm-7.8462-10.322c1.2148-1.9651 4.353 1.7253 3.6802-1.8003-0.5293-2.7729-5.7896-3.2183-4.8003-1.6172 0.4028 0.6514 0.2114 1.1843-0.4248 1.1843-0.6367 0-1.1572 0.7378-1.1572 1.6392 0 1.8303 1.706 2.2056 2.7021 0.594zm3794.8 23.045c11.885-5.3992 20.18-22.332 4.721-35.565-21.243-18.183-47 7.1255-32.29 28.953 5.4613 8.104 17.781 11.058 27.569 6.6118zm-13.121-4.1997c-3.8618-0.9563-9.2432-5.7817-11.6-10.402-1.9724-3.8662-2.1216-5.0635-1.0691-8.5767 1.5178-5.0662 7.5296-10.496 12.693-11.465 12.939-2.4272 24.621 12.464 18.13 23.11-3.003 4.9249-12.458 8.7442-18.154 7.3333zm12.226-12.03c0.642-4.7856-1.0179-9.0491-3.5229-9.0491-0.8802 0-1.6005-0.4121-1.6005-0.9155 0-0.5032-1.7209-0.9802-3.8243-1.0591l-3.8243-0.1438v17.29c8.6997 0.6396 11.742 1.5569 12.772-6.1226v-2e-4zm-3779.3 15.072c9.4014-4.7969 12.6-18.398 11.07-20.874-0.4839-0.7827-1.1504 0.9839-1.5972 4.2332-0.9346 6.7959-5.4512 13.438-11.203 16.474-5.459 2.8813-3.7749 2.9751 1.7305 0.1672l-5e-4 -3e-4zm-388.18-1.7134c9.2222-3.791 15.004-15.19 12.473-24.591-1.6943-6.2927-10.133-14.707-16.457-16.41-13.915-3.7471-28.323 6.6968-28.337 20.54-0.0107 7.6248 2.0039 12.094 7.5977 16.882 7.1885 6.1531 15.526 7.3599 24.724 3.5789v2e-4zm-17.859-7.105c-7.4204-4.5239-9.9697-13.554-5.7705-20.44 5.8203-9.5459 20.168-8.9836 26.273 1.0298 2.7544 4.5166 2.7422 7.4612-0.0498 12.935-4.123 8.0823-13.138 10.936-20.453 6.4753zm85.146 8.2708c14.896-6.2236 17.778-26.694 5.1938-36.879-10.428-8.4397-27.382-4.7324-32.787 7.1687-5.0674 11.158 0.2969 25.779 11.022 30.043 4.0435 1.6077 12.326 1.4414 16.572-0.3325zm-15.242-8.8894c-4.9307-3.4536-7.2314-11.967-4.5752-16.93 2.645-4.9412 13.414-7.124 18.292-3.7075 3.0122 2.1096 5.4409 6.199 3.1621 5.3247-1.0952-0.4204-1.478 0.3362-1.3911 2.7537 0.0669 1.8733 0.7178 3.3342 1.4849 3.3359 0.7515 0 1.3662 0.7722 1.3662 1.7134 0 7.0974-11.944 11.989-18.338 7.5105v-5e-4zm9.3964-12.782c0.2744-2.3816-0.1016-2.9954-1.8389-2.9954-2.2866 0-4.0923 3.4978-2.8462 5.5139 1.3331 2.1567 4.3316 0.5449 4.6851-2.5185zm72.558 20.005c15.155-10.384 11.248-34.87-6.2681-39.28-20.464-5.1531-36.107 18.994-22.659 34.976 6.5679 7.8052 20.741 9.9141 28.928 4.3042h-4e-4zm-18.193-9.3775c-0.9971-1.5215-2.2485-2.4968-2.7817-2.1672-0.5327 0.3293-1.3247 0.0229-1.7598-0.6804-0.5225-0.845-0.3145-0.9849 0.6123-0.4121 2.0405 1.2615 0.6597-2.2483-0.9292-1.8953-1.5859 0.3523-1.6157-6.4246-0.0439-9.875 1.7144-3.7617 7.0342-6.6121 10.628-5.6943 1.6152 0.4128 3.9209 0.9392 5.1226 1.1697 8.8457 1.6965 11.409 22.321-4.1606 22.321-4.0112 0-5.1968-0.4905-6.6885-2.7666h9e-4zm6.0229-7.8867c0.397-3.5669 1.084-5.925-1.0898-5.4441-0.9526 0.2112-1.6099 0.9692-1.4595 1.6846 0.1504 0.7156-0.2188 1.301-0.8198 1.301-0.6006 0-1.0923 0.7375-1.0923 1.6392 0 1.6218 4.2852 2.4087 4.4614 0.8193zm73.663 18.416c10.897-5.0449 15.409-16.323 10.874-27.177-6.9434-16.617-31.215-18.524-38.71-3.0403-4.2876 8.8569-2.4668 21.215 3.9868 27.05 5.8141 5.2571 16.32 6.6526 23.849 3.167zm-15.57-9.9355c-1.9536-1.1907-3.6064-2.541-3.6733-3.0007-1.7856-12.217 1.7349-17.772 11.264-17.772 5.25 0 10.711 6.396 10.711 12.546 0 3.9536-0.5586 5.2124-3.3618 7.5708-4.1304 3.4758-9.8989 3.7288-14.94 0.6553l9e-4 2e-4zm79.261 9.9282c13.721-7.0366 16.258-23.563 5.4087-35.238-10.145-10.918-26.864-8.1418-33.941 5.636-10.083 19.63 11.463 38.137 28.532 29.602zm-17.863-10.466c-1.4209-1.0842-1.7266-1.8958-0.9263-2.4585 1.7847-1.2551-1.1567-7.0591-2.2339-6.0562-1.4326 1.3337 0.4077-5.1121 2.271-7.9563 2.127-3.2458 9.8555-4.6409 14.668-2.6475 3.4585 1.4324 6.0781 4.9465 5.5625 7.4614-0.1665 0.8115 0.1201 1.2144 0.6367 0.895 0.5166-0.3191 1.0518 0.8962 1.189 2.7009 0.1758 2.303-0.1382 3.0413-1.0513 2.4768-0.875-0.5408-1.0825-0.2327-0.6328 0.9387 1.1694 3.0457-2.9165-0.0571-4.2676 2.1294-0.4863 0.7861-0.2139 0.8782 0.7964 0.2693 1.3071-0.7876 1.3125-0.6509 0.0352 0.9238-3.1338 3.864-3.6382 2.3687-1.7266-5.1228 0.6216-2.4363 0.46-3.0344-0.7168-2.6475-0.8359 0.2751-1.6758 1.8145-1.8657 3.4211-0.4224 3.5676-3.5283 5.4087-7.4604 4.4219-2.4321-0.6104-2.8149-0.428-2.2417 1.0664 0.8481 2.2112 0.645 2.2295-2.0356 0.1843l4e-4 -2e-4zm83.827 9.3906c13.66-8.6631 12.494-29.128-2.1699-38.088-4.4453-2.7163-13.074-3.3245-18.421-1.2986-7.4985 2.8408-12.301 10.971-12.339 20.89-0.0283 7.3982 1.2798 11.273 5.2354 15.502 4.1304 4.4148 8.4619 6.0574 16.106 6.1069 5.4595 0.0349 7.4839-0.5083 11.589-3.1113l-5e-4 -2e-4zm-18.326-7.3144c-4.4751-2.2078-8.4995-10.316-5.9136-11.914 0.6357-0.3928 0.895-1.1348 0.5771-1.6492-1.0972-1.7751 2.0215-6.6228 5.7383-8.9199 3.3105-2.0461 4.2134-2.1587 8.0649-1.0046 2.3853 0.7146 4.6094 2.0095 4.9424 2.8772 1.3511 3.5215 4.7422-1.8357 4.7422 9.7781 0 3.7925-0.644 5.3879-3.2119 7.9561-1.7666 1.7666-4.7783 3.5254-6.6929 3.9082-4.4961 0.8992-4.2773 0.9268-8.2466-1.0312v-4e-4zm8.8056-2.5501c0.3403-0.5496 0-1.2485-0.7549-1.5525-1.1392-0.4595 2.5356-1.1631 4.7485-0.9094 0.3618 0.0415 0.4272-1.1294 0.1455-2.6023-0.6055-3.1667-2.0361-3.4924-2.9331-0.6672-0.9307 2.9319-6.0649 4.4131-6.0649 5.823 0 1.2336 4.0879 1.157 4.8589-0.0918v2e-4zm134.49 8.6892c14.82-6.3696 16.118-27.41 2.1392-34.687-4.0586-2.1128-13.981-0.9719-19.458 2.2375-9.8652 5.7817-13.54 14.094-10.151 22.966 4.3188 11.309 14.802 14.928 27.469 9.4834h1e-3zm-15.524-4.9135c-5.3086-2.3091-7.2876-6.1313-6.6436-12.833 0.4565-4.7507 1.1724-6.2273 4.4917-9.2698 4.752-4.3552 10.167-4.8069 16-1.3345 5.3501 3.1843 6.5557 5.0986 6.5557 10.406 0 5.4548-3.8428 10.782-9.4746 13.135-4.4106 1.8428-6.5005 1.8232-10.93-0.1038h5e-4zm9.8174-12.524c-0.6665-2.5496-2.0249-2.9639-2.9697-0.906-0.8652 1.8828 0.9229-3.5576-0.3008-3.5342-1.9536 0.0369-3.4888 1.7798-3.2139 3.6487 0.3267 2.228 3.2202 4.4739 3.7573 2.9167 0.6553-1.9011 3.713 1.6482 2.7271-2.1252zm420.25 16.548c1.5488-1.1467 3.9653-3.7607 5.3691-5.8088 2.1897-3.1934 2.4958-4.7695 2.1514-11.064-0.5979-10.938-6.0415-17.116-15.915-18.065-12.217-1.1738-22.313 9.1689-20.533 21.036 2.1604 14.407 17.978 22.008 28.927 13.901v2e-4zm-10.98-4.2927c-6.979-1.075-10.898-11.333-6.4741-16.945 4.5342-5.7517 14.845-4.9417 18.137 1.4248 3.1284 6.0496 0.7668 13.034-5.0981 15.079-4.3516 1.5168-2.6636 1.0425-6.5649 0.4412l1e-4 2e-4zm1.7166-7.8728c1.0769-1.7424-0.6445-4.469-2.8218-4.469-1.1565 0-2.4045 0.7871-2.7742 1.749-1.0259 2.6738 4.0881 5.1597 5.596 2.72zm150.49 12.711c5.7615-4.363 8.5491-9.5833 8.5513-16.015 0.0107-17.527-19.456-25.67-31.814-13.312-12.201 12.201-3.762 32.908 13.412 32.908 4.0972 0 6.0686-0.7166 9.8511-3.5806h-3e-4zm-15.261-6.7783c-6.5708-5.5291-5.0164-15.762 2.748-18.088 5.5801-1.6716 11.798 0.7095 13.512 5.175 4.2183 10.986-7.4951 20.288-16.26 12.913v-2e-4zm3.5105-4.5091c0.9507-0.3645 1.7283-1.8398 1.7283-3.2778 0-2.0295-0.5852-2.6147-2.6147-2.6147-3.0139 0-4.5588 2.8564-2.7336 5.0554 1.4354 1.7295 1.3473 1.7092 3.62 0.8371zm81.219 12.55c17.981-8.7043 11.652-35.925-8.3528-35.925-14.342 0-23.469 13.102-18.092 25.971 4.6441 11.114 15.56 15.224 26.445 9.9543zm-10.654-6.0525c-6.1353-2.4302-8.8147-9.0564-6.0325-14.919 3.0801-6.4907 11.204-8.2378 16.625-3.575 2.6077 2.2429 3.0657 3.4626 3.0657 8.1643 0 4.1243-0.5713 6.0989-2.2505 7.7783-2.3162 2.3162-8.5066 3.701-11.408 2.5518zm0.9929-6.927c0.4478 0 0.5974-1.4751 0.3328-3.2778-0.5388-3.6721-0.6306-3.7271-3.5828-2.147-3.3679 1.8025-2.5183 7.3257 0.9236 6.0051 0.5725-0.2197 1.7551-0.5803 2.3264-0.5803zm-130.56 11.58c5.1199-3.0005 9.3718-9.7009 9.3718-14.769 0-6.9385-4.9204-14.983-11.145-18.222-4.7046-2.4478-14.109-1.9751-18.367 0.9233-6.4385 4.3821-8.1838 7.7778-8.1838 15.923 0 8.2131 2.4265 12.91 8.6196 16.687 4.9978 3.0476 14.002 2.7993 19.705-0.5432h-2e-4zm-13.237-4.9837c-3.5969-1.5254-6.0979-6.1201-6.0979-11.204 0-3.6208 0.6216-5.071 3.0803-7.1863 6.5303-5.6169 19.071-0.0176 19.071 8.5159 0 6.9261-9.3879 12.701-16.053 9.8743zm4.0337-8.7077c0-2.4221-4.0208-4.1387-5.7183-2.4409-1.8188 1.8191-0.0459 4.5525 2.9524 4.5525 2.0052-1e-4 2.7659-0.5806 2.7659-2.1116zm304.05 13.547c9.3867-6.3784 12.542-22.094 1.1626-30.774-3.3911-2.5864-5.0559-3.0613-10.735-3.0613-23.396 0-24.52 27.705-10.222 34.75 5.7661 2.8411 14.887 2.4192 19.794-0.915h2e-4zm-15.04-5.4353c-4.4712-2.3521-6.0095-4.6592-6.0095-9.0127 0-4.8328 1.5325-7.5205 5.4414-9.5417 6.4675-3.3447 12.354-1.5974 14.865 4.4124 2.2305 5.3386 1.9304 7.6858-1.4585 11.405-3.6904 4.05-8.4241 5.0595-12.839 2.7367zm4.2541-7.7297c0.9983-2.6018-0.354-4.0034-3.3167-3.437-2.2622 0.4324-2.5283 0.1799-1.8997-1.8005 0.6467-2.0378 0.5237-2.1316-1.0654-0.8127-1.6499 1.3694-2.4695 5.6499-1.3047 6.8145 1.3934 1.3932 6.9742 0.8309 7.5865-0.7643zm-488.47-0.2407c6.2654-5.9514 7.6614-12.049 4.4941-19.63-5.3008-12.686-19.418-17.049-30.336-9.3748-12.154 8.542-12.906 26.26-1.4128 33.269 4.489 2.7375 18.398 4.1499 27.255-4.2639zm-21.102-1.6426c-4.7393-1.6284-6.8313-5.418-6.1484-11.138 1.2935-10.836 15.991-15.299 22.99-6.9814 7.8022 9.2727-1.5002 23.391-16.842 18.119v7e-4zm2251.2-22.181c7.4026-2.5222 16.268-11.054 20.573-19.8 3.0232-6.1411 3.5947-8.616 3.9542-17.124 0.5707-13.504-2.028-20.555-10.814-29.341-15.387-15.387-33.466-17.019-50.091-4.5215-10.595 7.9641-15.46 18.184-15.547 32.659-0.0382 6.4253 0.5774 10.405 2.3256 15.02 3.9517 10.433 14.746 20.658 25.17 23.839 4.9731 1.5183 19.062 1.0955 24.429-0.7329h-2e-4zm-22.574-5.2192c-19.001-7.084-28.069-29.026-19.49-47.159 7.6151-16.096 27.778-23.302 42.611-15.229 12.44 6.7708 18.394 17.637 17.335 31.638-0.9795 12.952-7.7515 23.616-18.469 29.083-5.8616 2.9905-16.313 3.783-21.987 1.6672h2e-4zm21.279-7.1155c18.583-11.785 19.215-38.383 1.1957-50.318-18.007-11.928-40.72 4.3484-40.72 24.526 0 20.699 23.438 35.994 39.524 25.792v-2e-4zm-21.813-6.6914c-5.7694-3.5088-11.166-12.701-11.149-18.991 0.0121-4.6331 2.3844-10.648 5.679-14.4 19.084-21.736 45.532 6.6206 32.107 26.907-4.1234 6.231-7.1482 7.7883-15.826 8.1487-5.776 0.2397-8.3231-0.1526-10.81-1.6648l1e-4 -3e-4zm16.161-4.3501c0-2.96-2.1853-2.4451-2.1853-1.0674 0 0.6147-1.1836 0.3423-2.6304-0.6057-1.7457-1.1438-2.87-1.3362-3.3424-0.5715-1.3328 2.1562-4.7522 1.1604-7.5881-2.2097-2.4264-2.8838-2.8287-4.4016-2.8287-10.673 0-6.0193 0.488-8.0293 2.7622-11.376 3.144-4.6272 7.8077-6.4587 9.7347-3.8235 1.0953 1.4983 1.5704 1.5044 4.3312 0.0579 2.7649-1.4485 2.9224-1.8035 1.4521-3.2737-2.181-2.1809-6.7285-1.1475-13.305 3.0229-9.9906 6.3359-12.404 20.096-4.6459 26.49 5.5298 4.5583 9.1396 6.2065 13.602 6.2104 3.9167 0 4.6438-0.3381 4.6438-2.1814v-2e-4zm10.035-11.358c0.2003-2.4668-0.1719-4.438-0.8856-4.6897-4.6735-1.6494-0.2971 19.255 0.8856 4.6897zm-9.2152 2.3289c1.899-1.4915 1.7072-5.7708-0.3512-7.8291-3.3987-3.3984-2.1263-0.5813-9.4828 0.9695-3.7672 0.7937-4.1456 5.1318-0.6608 7.5728 2.4342 1.7048 7.8878 1.3345 10.495-0.7129l2e-4 -3e-4zm1341 21.594c0-2.3232-0.5038-2.7317-3.369-2.7317-2.2339 0-3.2003 0.4602-2.8682 1.366 0.2754 0.7512 1.1371 1.2151 1.915 1.031 1.156-0.2737 1.1565-0.0239 0 1.3657-1.2162 1.4656-1.0153 1.7007 1.4541 1.7007 2.328 0 2.8653-0.5125 2.8653-2.7317h0.0028zm-4505.9 0.2732c1.4824-1.1709 1.8188-6.0486 2.3545-34.162 0.6343-33.286 0.1118-39.798-3.48-43.396-1.6416-1.6436-21.696-1.615-61.402-2.0615 0.1572 21.716 0.4844 66.934 0.5742 79.346 4.3672 0.1912 58.562 2.9512 61.954 0.2732h-5e-4zm-53.031-10.289c-1.106-1.106-0.8716-56.965 0.2427-57.653 1.2803-0.7913 42.983 0.7559 44.92 0.8184v57.564c-15.383 0-44.305 0.1296-45.163-0.7285v-5e-4zm36.704-5.9011c2.5483-1.8433 4.9663-4.5693 5.3716-6.0574 0.4058-1.488 0.4517-9.1472 0.1016-17.02-0.6177-13.884-0.7334-14.425-3.8584-17.984-6.1636-7.0205-22.763-8.9719-29.726-3.4951-5.2573 4.1353-6.0444 7.2249-6.0444 23.732 0 14.948 0.0615 15.34 2.916 18.733 3.9355 4.6777 5.8892 5.2939 17.035 5.3745 8.9971 0.0657 9.8477-0.1313 14.205-3.2825v-2e-4zm4829.2 7.4031v-69.576l-3.0048-3.292c-4.0283-4.4136-0.3102-3.7012-50.535-3.2983v7.6487c31.668 0 37.842-0.2444 39.804 1.7168 2.3356 2.3354 2.2172 4.2119-0.1951 3.0938-2.4208-1.1226-24.822-1.5605-29.775-1.7063v60.384c29.356-0.6345 30.597-0.2209 30.596 0.1196 0 3.5312-15.157 3.0432-40.703 3.0432l0.6402 3.2012c0.3522 1.7605 0.1639 3.3584-0.4183 3.551s6.6895 0.2087 16.159 0.0361c25.658-0.4685 25.632 2.1216 28.507 1.2842 3.5606-1.0374 1.9395 1.3308 8.925-6.2063zm-60.642 4.8669c6.1392-0.813 5.5013-1.0547 6.1547-6.7332-26.488 0-32.522 0.2458-34.486-1.7168-1.4772-1.4773-1.717-5.8916-1.717-31.609s0.2397-30.132 1.717-31.609c1.8984-1.8982 6.8726-1.7168 33.248-1.7168v-7.446l-41.893-0.2546c-3.8161 3.656-2.3867 2.2866-6.1833 5.9241v70.315c6.064 6.0637 3.7207 5.7734 21.729 5.6655 8.7822-0.0525 18.426-0.4214 21.431-0.8196v2e-4zm15.024-9.9226c0.4766-0.0518 0.8195-7.0308 0.8195-60.284l-14.751 0.646-1.2382 17.482-0.4008-18.029c-19.443 0-24.66-0.2449-26.278 1.7043-1.9873 2.3945-1.935 54.356 0.0568 56.756 1.0658 1.2842 4.1449 1.6353 14.335 1.6353 11.583 0 12.992-0.2053 13.105-1.9121 0.1153-1.7393 0.1708-1.7451 0.6141-0.0645 0.5718 2.1682 5.6866 2.937 13.737 2.0649l3e-4 6e-4zm-3907.7-1.7893c6.6829-1.9849 13.512-7.6956 16.718-13.98 8.4961-16.654-6.9958-41.465-27.854-39.79-15.718 1.2617-25.804 12.266-25.857 28.213-0.0645 19.358 17.35 31.39 36.993 25.557l-3e-4 -2e-4zm-14.808-14.098c-4.5522-1.98-6.7971-5.5906-7.3867-11.881-0.4712-5.0259-0.3977-5.1677 3.7781-7.2981 17.843-9.1025 25.248 14.433 11.272 19.747-3.3555 1.2756-3.437 1.2698-7.6633-0.5688l2e-4 2e-4zm3663.5 14.658c11.688-3.2461 18.99-18.766 13.638-28.991-2.1414-4.0913-7.9198-9.5266-12.682-11.93-5.9593-3.0063-16.367-1.9045-21.641 2.292-19.959 15.878-3.535 45.355 20.686 38.628zm-20.801-11.971c-2.1554-3.1987-2.5044-4.8606-2.1335-10.159 0.373-5.3303 0.9867-6.8784 3.8684-9.7603 2.8968-2.8967 4.4024-3.4875 9.7603-3.8318 14.266-0.9155 23.116 10.985 16.865 22.676-4.6336 8.6659-20.372 12.93-28.36 1.0755zm5.6044-15.059c1.0712 2.9985 2.8348 7.4585 2.8906 10.962 0.0561 3.4966 0.0305 3.0049 12.955 3.0049 2.0797-15.121 2.3066-15.28-15.845-13.967zm-433.49 24.473c16.384-7.6287 15.535-28.398 2.2772-36.122-10.631-6.1934-20.026-5.9265-27.671 0.7861-17.782 15.613 1.5709 46.427 25.394 35.336zm-18.661-6.1221c-8.0886-5.3232-10.533-19.231-0.5305-26.028 12.007-8.1587 29.069 7.6223 22.33 20.653-3.6905 7.1367-14.917 9.9043-21.8 5.3745h1e-4zm12.162-2.8054c3.9799-0.7903 5.1046-10.506 1.7025-14.708-1.7736-2.1902-2.2313-2.2881-4.4039-0.9404-1.975 1.2249-2.5885 1.2407-3.3073 0.0864-1.4237-2.2869-3.8029 1.4751-5.1298 8.1104-1.741 8.708-0.2401 9.7119 11.138 7.4517v-3e-4zm69.549 10.028c4.252-1.8193 8.9673-6.6733 10.549-10.859 1.8928-5.0098 1.4086-14.557-0.9753-19.23-7.8743-15.435-30.862-15.986-38.158-0.9136-2.7308 5.6411-3.1193 15.784-0.7762 20.269 1.8937 3.6248 6.6519 8.1248 11.024 10.426 4.078 2.1462 13.665 2.3074 18.337 0.3081v-2e-4zm-15.059-5.5454c-11.125-4.0776-13.763-17.801-5.0295-26.168 4.8398-4.637 9.4503-5.2568 15.41-2.0725 6.7609 3.6128 9.0884 7.1501 9.6299 14.636 0.4206 5.8149 0.2133 6.4724-3.225 10.224-4.3509 4.7476-9.969 5.8792-16.785 3.3809zm10.976-4.3733c4.5997-4.5996 2.8369-15.08-3.0659-18.225-2.1493-1.1453-2.2787-1.0999-1.0643 0.373 1.196 1.4507 0.901 1.6592-2.1853 1.5449-3.2522-0.1208-3.6578 0.2305-4.5804 3.9651-0.5567 2.2534-1.4172 4.0974-1.9121 4.0974-0.495 0-0.9 1.4751-0.9 3.2778 1e-4 7.1176 8.4834 10.191 13.708 4.9667zm69.841 8.9336c8.9728-5.082 14.125-19.781 9.8768-28.177-4.4107-8.7158-11.875-13.444-21.326-13.508-23.299-0.1597-31.393 32.59-10.41 42.121 6.3725 2.8948 16.33 2.6964 21.86-0.4355zm-19.849-6.2075c-4.5168-2.7539-6.8821-7.4316-6.8821-13.61 0-12.427 16.868-20.567 27.215-8.782 10.781 12.278-6.2178 30.998-20.333 22.392zm12.331-1.8377c-0.5494-1.4316-0.3819-1.5393 0.8306-0.533 1.2384 1.0278 1.6443 0.5015 2.1983-2.8503 1.7362-10.505 0.1702-13.898-6.4615-13.998-8.8199-0.134-8.8603 16.679-0.0415 17.099 2.0181 0.0959 1.9657 0.2122-0.4426 0.9836-2.5526 0.8174-2.4911 0.8821 0.9364 0.9839 2.9744 0.0886 3.5379-0.2302 2.9797-1.6846h6e-4zm70.043 8.7249c4.892-2.3213 8.785-8.2437 10.362-15.764 1.7619-8.3997 0.5208-13.394-4.7499-19.111-8.46-9.1782-20.326-10.189-29.48-3.4583-6.4472 4.7412-9.7825 15.198-7.5233 23.588 1.4403 5.3494 7.8076 12.943 12.61 15.039 4.6068 2.0105 14.242 1.8601 18.781-0.2937l-1e-4 3e-4zm-18.235-7.2046c-7.1681-4.8931-9.5179-13.583-5.4686-20.224 8.1545-13.374 27.366-8.2419 27.589 6.5244 0.1905 12.606-12.347 20.371-22.121 13.7zm10.354-0.8633c-0.3864-0.625 0.5087-2.0894 1.9888-3.2534 1.4801-1.1643 2.9203-3.3154 3.2004-4.7808 0.6073-3.177-1.9498-9.8306-3.4272-8.9172-0.5706 0.3525-1.3347 0.1602-1.698-0.4277-1.0345-1.6741-5.4387 1.2766-6.3373 0.3779-0.2836-0.2834-1.355 1.2534-2.381 3.4153-1.463 3.083-1.6215 4.6306-0.7348 7.1738 1.3363 3.8333 4.4897 7.4421 4.5161 5.168 0.012-1.0664 0.2936-1.0154 1.0759 0.1953 0.9415 1.4568 1.0648 1.4568 1.1091 0 0.0393-1.2922 0.2855-1.2346 1.1636 0.2732 1.546 2.6538 2.3806 2.1606 1.5244 0.7756zm-3647.2 6.4761c8.436-3.9651 13.756-12.191 13.503-20.875l-0.1362-4.6787c-1.627 9.9844-2.4199 13.567-2.5356 3.3496-0.0903-8.0078-2.2104-12.361-8.4917-17.438-3.8408-3.1045-4.8804-3.3938-12.191-3.3938-7.2974 0-8.3535 0.2925-12.148 3.364-6.4043 5.1831-9.4697 11.752-8.7793 18.814 0.9932 10.153 6.5518 17.086 16.003 19.961 4.7256 1.4375-2.2695 1.9861-10.919-4.1255-2.6284-1.8574-2.6724-1.8557-1.1646 0.05 0.8618 1.0896 3.812 3.1504 6.5557 4.5801 6.3975 3.3335 13.746 3.4753 20.305 0.3921l-6e-4 3e-4zm-14.769-10.867c0-0.6365-0.4116-0.9028-0.9146-0.592-0.5034 0.3108-1.998-0.1936-3.3223-1.1208-1.7173-1.2029-2.2178-2.3643-1.7456-4.0518 0.458-1.6375 0.3506-1.917-0.3501-0.9084-0.8154 1.1738-1.1479 1.103-1.7104-0.3625-2.7651-7.2061 4.2334-14.753 13.682-14.753 3.7246 0 9.6582 3.0835 9.6582 5.019 0 0.698 0.7153 1.8633 1.5898 2.5891 2.0806 1.7271 0.5435 2.916-1.4521 7.9692-0.6548 1.6562-1.6416 2.8855-2.1938 2.7314-0.5522-0.1538-1.085 0.2119-1.1851 0.813-0.4824 2.9087-12.057 5.469-12.057 2.667h1e-3zm150.38 11.432c13.072-4.438 18.363-11.332 18.369-23.933 0-8.4863-1.5322-12.352-7.1353-17.955-10.02-10.02-26.736-11.493-37.981-3.3477-14.698 10.647-12.754 36.692 3.333 44.655 5.7603 2.8513 15.979 3.105 23.413 0.5808h8e-4zm-14.062-11.985c-8.1421-4.418-8.3594-17.06-0.3586-20.875 2.0916-0.9973 3.5486-2.2241 3.2385-2.7258-0.7183-1.1624 7.3018-1.1699 9.1306-0.011 3.6467 2.3152 6.8242 8.4041 6.8242 13.076 0 4.0176-0.6145 5.4282-3.7148 8.5288-2.9663 2.9666-4.5627 3.7061-7.9216 3.6714-2.314-0.0239-5.553-0.7742-7.1978-1.6667l-5e-4 0.0019zm7.1411-9.2515c0.8088-3.0925-2.0029-5-4.1721-2.8308-1.322 1.3225-1.4524 2.2253-0.5603 3.8921 1.3489 2.5203 3.948 1.937 4.7319-1.0615l5e-4 2e-4zm3588.4 21.769c12.258-3.4028 17.17-18.446 10.116-30.976-4.7723-8.4771-17.276-13.913-26.281-11.427-12.06 3.3298-20.219 23.992-13.663 34.599 4.6283 7.4886 18.187 11.036 29.828 7.8035zm-13.606-5.4795c-9.3232-3.7175-13.564-14.648-8.7477-22.547 4.7805-7.8406 13.328-9.9172 21.385-5.1953 4.8966 2.8696 9.2189 9.8323 9.2112 14.838-0.0142 8.9705-12.79 16.517-21.848 12.905l1e-4 -2e-4zm10.926-6.4209c4.7557-4.7556 2.0231-16.968-7.3249-16.182l-4.0161 0.3384c0.3779 9.1924-0.2095 18.029 6.5935 18.029 1.4091-1e-4 3.5456-0.9832 4.7475-2.1854zm71.392 9.449c6.831-4.0032 9.9744-9.4543 9.9744-17.298 0-8.311-4.0916-14.331-12.75-18.759-18.346-9.3826-34.85 3.3093-30.998 23.838 0.8031 4.2808 5.8677 10.699 11.006 13.948 4.7892 3.0281 16.12 2.1675 22.769-1.729v3e-4zm-19.678-3.9216c-4.7506-2.8967-9.1001-9.6025-9.1001-14.03 0-11.632 12.681-18.052 24.125-12.214 11.596 5.916 11.334 20.386-0.4726 26.102-5.8282 2.8215-10.089 2.8628-14.552 0.1416v2e-4zm14.1-4.252c1.6378-1.6377 2.2124-9.2229 0.9473-12.504-1.381-3.5823-5.3807-5.4895-7.694-3.6689-1.2339 0.9712-1.3835 0.9211-0.69-0.2307 0.6377-1.0593 0.3141-1.3618-1.1561-1.0813-1.7376 0.332-2.0898 1.5925-2.366 8.4707-0.1785 4.4446-0.1116 8.636 0.1487 9.3142 0.5549 1.4458 9.3073 1.2036 10.81-0.2993v-3e-4zm-3841.4 6.9287c11.746-6.8838 14.518-22.837 5.7109-32.867-9.9233-11.302-27.423-10.683-34.786 1.2297-5.1572 8.344-3.7612 23.856 2.6914 29.918 6.4473 6.0569 17.728 6.7922 26.383 1.7197h5e-4zm-18.241-7.6611c-5.7642-3.1323-7.9722-14.739-5.2451-13.054 1.6157 0.9983 0.6592-2.3313 0.8784-4.7146 0.2002-2.2002 6.8867-5.7119 10.884-5.7166 9.564-0.0107 17.103 11.495 11.095 16.932-3.145 2.8459-1.3965 3.9954-3.8623 6.041-1.3926 1.1558-2.0483 0.9932-3.8672-0.9587-4.7344-5.0823-5.2695-0.1653-3.0635-0.1653 0.8477 0 0.8062 0.5066-0.1338 1.6389-1.6655 2.0068-2.9878 2.0061-6.6855 0v-0.0033zm-172.11 6.343c12.982-9.1458 12.515-28.596-0.8887-36.897-14.342-8.8828-33.386 1.9426-33.386 18.978 0 16.027 19.678 28.201 34.275 17.919v3e-4zm-16.247-6.7859c-3.8438-1.699-8.2568-7.2874-8.9043-11.276-0.5435-3.3508-0.1509-4.324 2.9351-7.2727 4.5356-4.335 6.2153-3.2078 10.255-3.9653 2.7358-0.5127 7.6958 2.0886 9.8525 5.1682 2.5806 3.6841 2.1953 11.09-0.7549 14.52-2.6787 3.1138-9.481 4.5498-13.384 2.8252zm78.233 7.7854c20.142-10.522 11.642-40.538-11.509-40.641-18.136-0.0808-28.053 21.103-16.304 34.828 7.9332 9.2678 17.409 11.248 27.814 5.8125zm-16.919-9.0747c-9.9858-7.8547-6.5205-20.664 5.5898-20.664 8.1963 0 13.412 4.5913 13.402 11.798 0 3.4175-3.7236 10.055-5.6333 10.055-0.7144 0-0.23-1.1379 1.0767-2.5288s2.374-3.4805 2.3716-4.6438c0-3.6765-2.9404 3.9766-5.3887 5.49-0.6597 0.4075-0.916 1.1987-0.5703 1.7581 1.2949 2.0952-7.9464 1.0178-10.848-1.2647zm78.854 10.419c8.7783-3.6672 13.65-10.86 13.785-20.352 0.0742-5.2224-0.4355-6.95-3.2192-10.91-8.3521-11.884-22.237-14.892-32.482-7.0364-8.4229 6.458-11.789 18.216-7.564 26.418 2.5737 4.9958 8.3262 10.805 12.235 12.356 4.6058 1.8266 13.947 1.1738 17.245-0.4751zm-16.859-10.242c-3.2812-2.001-6.9204-9.2073-5.4116-10.716 0.3604-0.3604 0.6973 0.2874 0.749 1.439 0.1362 3.0273 2.2251-4.0735 1.5522-5.8843-0.291-0.7825-0.043-1.1223 0.5518-0.7549 0.5938 0.3669 1.1416 0.147 1.2163-0.4895 0.0752-0.6365 0.1978-1.6274 0.2729-2.2029 0.2661-2.0361 4.5562-4.3486 8.1313-4.3831 4.3428-0.0415 10.343 4.1772 12.152 8.5447 2.04 4.9258 0.793 11.151-2.812 14.035-3.9937 3.196-11.526 3.3848-16.403 0.4116h0.0011zm-241.42 7.9294c29.834-15.034 1.7212-53.244-23.397-36.148-6.6978 4.5586-8.1875 7.6697-8.1875 17.104 0 7.6545 0.3042 8.8721 3.1499 12.603 4.5366 5.9475 12.796 9.6375 19.693 8.7976 2.9487-0.3591 6.8818-1.4192 8.7412-2.356v3e-4zm-17.477-6.7981c-7.9141-4.8264-10.244-12.429-5.9604-19.454 8.8101-14.45 28.468-4.8057 28.453 7.7507-0.0123 10.33-13.358 17.274-22.492 11.704zm88.974 6.1353c11.586-7.6672 12.117-26.591 0.9839-35.083-8.458-6.4512-19.243-6.1677-27.605 0.7249-12.386 10.209-10.198 28.22 4.3955 36.182 5.2358 2.8561 16.557 1.9269 22.226-1.824zm-21.763-8.356c-2.6616-2.6614-3.1943-4.0867-3.1943-8.5505 0-4.1426 0.5576-5.8804 2.4585-7.6665 3.0776-2.8921 3.3574-2.2151 7.2017-3.1792 3.6509-0.9163 10.728 1.4746 12.7 4.2903 1.8521 2.644 2.3467 10.101 0.5981 9.0203-0.5981-0.3696-0.814 0.0249-0.4844 0.8845 0.9956 2.595-4.6289 1.6353-3.5347 4.489 0.8789 2.2893-2.4434 3.9062-8.0244 3.9062-3.5464 0-5.2188-0.6916-7.7207-3.1941zm12.66-10.049c-0.0752-1.0295-0.7842-2.6506-1.5737-3.6025-1.8379-2.2144-4.5894-2.2812-3.7485-0.0906 0.3457 0.9014 0.0845 1.6389-0.5806 1.6389-1.6597 0-1.5322 2.9702 0.1562 3.6284 2.8677 1.1179 5.8843 0.2922 5.7471-1.5735l-5e-4 -7e-4zm385.26 19.624c8.8989-3.0371 14.581-10.634 14.579-19.493 0-8.1348-2.7349-12.544-9.877-15.933-6.5308-3.0986-9.1924-3.251-16.04-0.9175-5.6406 1.9219-12.306 8.4519-13.505 13.232-0.6782 2.7012-0.833 2.7837-1.5898 0.8469-0.6304-1.6111-0.8579-1.116-0.9155 1.9883-0.147 7.9094 7.1992 17.943 15.22 20.789 2.8804 1.022 8.3027 0.7927 12.129-0.5134v2e-4zm-17.458-26.59c1.4287-2.0981 3.4873-3.8179 4.5747-3.8218 1.0874 0 1.7046-0.4478 1.3721-0.9858-0.8188-1.3247 2.0229-2.2996 6.7031-2.2996 3.0513 0 4.7837 0.9197 8.2402 4.3767 4.2393 4.2393 4.3608 4.5654 3.8779 10.389-0.5596 6.7495-3.3311 10.696-9.2964 13.238-13.978 5.9553-21.904-11.451-15.472-20.896zm13.359 8.935c0.3911 0.3914 0.7114-0.1919 0.7114-1.2966 0-2.5247-3.0742-6.0046-5.3047-6.0046-1.2754 0-1.3799 0.3086-0.4282 1.2603 0.8682 0.8679 0.9238 1.8892 0.1782 3.2812-1.4961 2.7952 1.0957 5.9822 2.9312 3.6045 0.6606-0.856 1.521-1.2358 1.9121-0.8445v-3e-4zm785.66 2.8259c12.268-8.7009 10.799-25.639-2.8103-32.421-6.7397-3.3586-10.743-3.5266-16.943-0.7119-10.822 4.9133-14.523 17.444-8.1296 27.525 6.2703 9.887 18.408 12.328 27.883 5.6077l2e-4 2e-4zm-16.547-7.3366c-3.2261-2.7148-3.6648-5.6731-2.176-14.684 1.6782-10.158 18.297-4.814 18.297 5.8838 0 3.1409-0.8289 4.8716-3.7148 7.7581-4.4534 4.453-7.9981 4.7509-12.406 1.0419zm6.0899-7.4229c-0.3672-2.5747-3.6953-3.9314-5.4177-2.2087-1.7166 1.7166 0.2256 4.6558 3.0762 4.6558 2.1623-1e-4 2.6222-0.4805 2.3415-2.4471zm-283.44 14.984c11.022-5.2305 14.198-21.399 5.8743-29.913-7.4158-7.585-15.914-9.5557-24.464-5.6729-6.4714 2.9392-9.5579 7.8367-10.077 15.99-1.073 16.848 13.485 26.799 28.667 19.595zm-13.743-7.3465c-13.086-10.588 0.8152-29.902 12.992-17.725 3.4739 3.4736 3.7959 4.2957 3.2563 8.3167-0.8289 6.1802-5.3501 10.774-10.603 10.774-2.1765 0-4.717-0.6145-5.6452-1.3658zm7.5598-8.1943c1.0889-3.3174-9.0046-2.9263-7.7502 0.3425 0.7771 2.0249 7.0642 1.7473 7.7505-0.3425h-3e-4zm147.76 14.617c7.7344-5.1184 11.48-14.835 8.823-22.886-2.6606-8.0615-14.062-14.96-22.203-13.433-5.2136 0.9778-13.432 6.6519-14.845 10.249-4.5374 11.55-0.927 23.019 8.8162 28.008 4.9773 2.5484 13.99 1.6485 19.408-1.9375zm-14.88-6.9936c-11.632-9.4226 0.4863-27.815 12.099-18.68 5.7549 4.5266 6.1584 12.587 0.8943 17.852-3.3091 3.3088-9.448 3.7004-12.993 0.8291v-3e-4zm5.9419-7.0515c0.2368-1.231-0.5698-2.0935-2.3838-2.5486-4.0503-1.0166-5.6016 0.377-3.2781 2.9441 2.2381 2.4729 5.1485 2.2695 5.6619-0.3955zm-342.55 15.16c7.866-3.2864 12.746-12.375 11.331-21.1-1.8857-11.621-16.617-19.376-26.596-14.002-4.313 2.3225-9.8616 10.221-10.838 15.428-1.4709 7.8398 2.5083 16.886 8.5911 19.53 4.5248 1.9672 12.983 2.037 17.513 0.1439zm-15.038-9.5635c-5.1077-4.4846-5.3872-10.165-0.7554-15.349 2.6609-2.9783 3.8474-3.4773 8.2649-3.4773 4.3333 0 5.7107 0.5525 8.6143 3.4561 2.7576 2.7576 3.4563 4.3635 3.4563 7.9426 0 3.6802-0.637 5.0552-3.5435 7.6523-4.9919 4.4603-10.793 4.3792-16.037-0.2248zm8.6138-4.9206c2.1885-0.8398 2.2415-3.2766 0.0896-4.1025-3.3113-1.2708-6.4607 1.7651-4.1885 4.0371 0.9023 0.9021 1.8772 0.918 4.0991 0.0657l-2e-4 -3e-4zm78.692 12.576c10.255-7.0266 12.002-19.114 4.1167-28.485-12.073-14.348-38.084-6.6533-33.631 17.074 0.8625 4.5977 6.304 11.205 10.987 13.34 4.6215 2.1075 14.072 1.1236 18.527-1.9286zm-17.524-7.979c-9.8823-9.8823 1.0986-24.143 13.609-17.674 3.3452 1.73 5.6912 5.8894 5.0676 8.9863-0.2239 1.1121-0.6958 3.3896-1.0483 5.0608-0.7583 3.592-6.262 7.3313-10.799 7.3374-2.0881 0-4.3379-1.22-6.8291-3.7109h-2e-4zm8.8205-6.8467c1.1855-0.8015 1.677-1.5088 1.0925-1.5713-8.8096-0.9451-11.161-0.0415-8.0315 3.0881 1.3079 1.3079 3.4559 0.8387 6.939-1.5168zm85.803-0.2722c0-7.9624-2.6499-12.875-9.1196-16.906-6.033-3.7595-14.472-4.365-20.022-1.4368-10.263 5.4143-12.329 21.11-3.9927 30.337 11.024 12.202 33.135 6.1252 33.135-11.994zm-21.301 9.5039c-4.499-2.6077-7.1963-6.0208-7.8264-9.9026-0.575-3.5422-0.2039-4.4524 3.2031-7.8596 4.4722-4.4719 8.2664-4.9514 13.573-1.7161 4.3433 2.6484 6.5552 8.8833 4.7893 13.499-0.7229 1.8896-1.6609 2.7703-2.4382 2.2896-0.7551-0.4668-0.9685-0.3032-0.53 0.4058 0.9246 1.4958-3.4299 4.625-6.3752 4.5808-1.2183-0.0188-3.1963-0.6018-4.3955-1.2971l-3e-4 2e-4zm152.15 6.6611c6.8872-3.3342 10.62-9.4053 10.603-17.243-0.0161-7.3386-2.4592-12.01-8.4519-16.164-8.739-6.0559-22.057-3.6538-27.82 5.0183-5.908 8.8904-0.9314 26.502 8.4592 29.934 3.9673 1.4504 12.627 0.6721 17.21-1.5459v-2e-4zm-15.811-8.8821c-1.2434-1.3523-2.6021-4.5532-3.02-7.1138-0.7039-4.3142-0.4807-4.9338 3.0535-8.468 2.9727-2.9727 4.6982-3.8127 7.8306-3.8127 5.7603 0 10.406 4.8003 10.406 10.753 0 5.8923-0.8083 7.6189-4.449 9.5015-4.752 2.457-11.136 2.06-13.821-0.8602zm156.63 2.8626c12.399-5.884 13.635-30.981-7.3567-30.994-5.0208 0-6.9033 0.5642-10.49 3.1624-8.2327 5.9636-9.918 16.005-3.8887 23.17 5.2788 6.2737 14.274 8.2029 21.736 4.6621h-2e-4zm-11.263-5.2764c-12.574-5.4695-4.4565-20.258 4.2463-20.258 4.4473 0 9.6023 5.2632 9.6023 9.804 0 5.0364-2.7278 9.458-6.6858 10.838-1.9109 0.666-3.5239 1.1919-3.5845 1.1685-0.0601-0.0242-1.6711-0.7219-3.5789-1.5515l6e-4 -4e-4zm4.7732-7.8513c0.4231-1.1025-0.0996-2.3738-1.3503-3.2886-1.731-1.2659-2.2771-1.2546-3.605 0.073-0.8608 0.8606-1.2673 2.3406-0.9036 3.2886 0.8704 2.2685 4.98 2.217 5.8589-0.073zm3155.7-14.263c0.2232-1.5066-0.4117-2.4246-1.957-2.8286-1.939-0.5071-2.1735-0.2388-1.5387 1.761 0.6475 2.0405 0.519 2.1689-0.9505 0.9492-1.1534-0.957-1.9286-1.0393-2.4131-0.2554-0.7291 1.1797 3.4596 3.4065 5.4362 2.8899 0.6009-0.1573 1.2413-1.2893 1.4231-2.5161zm-1500-31.905c-0.011-10.919-6.0259-16.833-17.03-16.734-26.445 0.2366-21.194 36.535 0.9993 34.818 10.256-0.7935 16.037-8.698 16.031-18.084zm-24.118 7.6211c-2.439-2.439-3.1938-4.2021-3.1938-7.458 0-6.0283 3.9043-9.562 10.565-9.562 6.162 0 9.103 3.0669 9.103 9.4927-1e-4 7.6681-8.9219 15.079-16.474 7.5273zm1138.7 8.49c9.9636-3.3796 14.579-10.425 13.892-21.207-0.8483-13.323-9.3448-21.848-21.651-21.725-12.413 0.124-19.77 7.1638-20.567 19.681-0.726 11.402 4.3569 19.208 14.979 23.004 4.9789 1.7793 8.632 1.8469 13.348 0.2476v-4e-4zm-9.6434-5.345c-16.235-3.4868-17.249-26.654-1.9261-31.357 3.5593-1.0925 4.4953-0.9089 9.0798 1.7815 6.7308 3.95 10.028 8.9119 10.028 15.089 0 10.202-7.5386 16.557-17.182 14.486l-1e-4 3e-4zm7.0614-4.8994c2.5663-1.7979 4.1985-7.7231 3.0898-11.217-1.1002-3.4661-4.783-7.0933-6.5239-6.4253-0.8807 0.3381-1.84 0.0273-2.1318-0.6899-0.292-0.7175-0.5696-0.3914-0.6171 0.7244-0.0547 1.2847-0.6544 1.811-1.6347 1.4346-1.7339-0.6653-2.822 1.4043-2.822 5.3667 0 1.4534-0.4916 2.6423-1.0927 2.6423-1.9723 0-1.1427 4.7229 1.2831 7.3049 2.738 2.9148 7.0125 3.2661 10.449 0.8586l-1e-4 5e-4zm68.587 9.4663c15.057-6.8401 18.123-26.367 5.7748-36.779-8.2443-6.9514-19.632-7.946-27.95-2.4409-5.4324 3.595-10.067 12.396-10.067 19.117 1e-4 15.573 17.794 26.668 32.243 20.103zm-16.813-6.3865c-4.197-2.0676-7.4448-6.7646-8.4852-12.272-1.6307-8.6326 8.1866-18.443 17.241-17.229 7.0842 0.9502 15.15 8.6719 15.15 14.504 0 4.1848-9.2414 22.22-23.906 14.997v2e-4zm9.0656-3.5947c2.7307 0 5.4547-2.5552 6.5438-6.1384 0.972-3.198-1.1182-8.1611-3.7238-8.8423-1.1879-0.3105-1.9307-0.9355-1.6506-1.3889 0.9586-1.5508-4.3557-0.5691-5.805 1.0728-1.2861 1.4568-1.3681 1.4568-0.7384 0 0.3896-0.9014-0.0656-0.6846-1.0115 0.4819-3.9481 4.8687 0.1606 14.79 1.831 14.807 0.4507 0 0.8765 0.8691 0.9463 1.9207 0.1207 1.8213 0.1506 1.8213 0.6264 0 0.291-1.1133 1.5367-1.9121 2.9819-1.9121v-6e-4zm68.902 10.8c11.04-3.0652 18.01-18.487 13.613-30.124-4.0689-10.769-19.414-16.758-30.775-12.011-6.7764 2.8313-11.783 12.002-11.739 21.5 0.0501 10.778 11.745 25.397 28.901 20.634v2e-4zm-10.788-6.4719c-4.2964-1.2856-9.0906-6.0857-10.577-10.59-4.2957-13.016 10.15-24.808 21.737-17.744 10.132 6.1775 9.2482 23.434-1.429 27.895-4.199 1.7544-5.1851 1.7991-9.731 0.4385h-1e-4zm8.8031-5.7549c3.0706-2.4155 3.5511-9.4417 0.8316-12.161-8.133-8.1333-5.9725 1.6934-8.245-1.8914-0.7478-1.1797-0.927-1.1851-0.9406-0.0273-0.0109 0.7869-0.494 1.1355-1.0773 0.7747-1.3831-0.8545-2.7145 5.1431-2.3432 10.555 0.1489 2.1677 3.0173 5.2754 4.8477 5.2515 0.7783-0.0107 0.6393-0.4834-0.3512-1.1956-2.796-2.0115 1.4851 0.1199 2.821 0.1199 0.2513 0 0.4957 0.8606 0.5432 1.9121 0.0677 1.5071 0.2209 1.5691 0.7221 0.292 0.3497-0.8909 1.7859-2.5247 3.1917-3.6304zm265.99 10.903c9.2415-4.8787 13.941-15.88 10.821-25.334-1.7052-5.1665-7.8892-12.075-13.262-14.817-14.128-7.2075-32.001 6.2222-30.149 22.654 1.7698 15.702 18.737 24.811 32.591 17.497zm-17.092-4.4577c-8.3676-3.6448-12.082-13.299-8.3573-21.72 5.4711-12.368 23.829-12.134 30.304 0.387 6.5978 12.759-8.326 27.265-21.946 21.333zm13.827-19.841c-0.5381 0.3323-1.2602-0.1301-1.6047-1.0281-0.3599-0.938-1.9981-1.6328-3.8494-1.6328-7.5129 0-6.6796 1.0222-6.6796 15.411l13.112-0.4731c0-2.0818 0.2412-13.031-0.9781-12.277zm-3643.1 22.528c11.114-5.7144 15.377-16.62 11.897-30.437-1.6553-6.5732-10.297-15.521-16.865-17.462-11.382-3.3628-21.59-0.9922-29.412 6.8291-7.9863 7.9863-9.8018 15.412-6.4919 26.557 2.554 8.6001 7.7803 13.787 16.902 16.776 5.1929 1.7012 18.749 0.4214 23.97-2.2632l-3e-4 3e-4zm-21.475-13.094c-5.1304-3.1958-3.5149-6.655-7.6748-9.9275-1.6338-1.2854-2.1399-2.1853-1.2432-2.2102 0.8323-0.0229 2.5078-1.6211 3.7239-3.551 2.0962-3.3276 2.5566-3.509 8.9006-3.509 5.0457 0 7.2551 0.5117 8.989 2.0815 2.3157 2.0964 3.2271 4.6304 1.2188 3.3894-1.4639-0.9045-0.0115 2.853 0.9414 2.2632 0.3989-0.2466 0.5457 1.4365 0.3257 3.7397-0.7485 7.8496-8.5818 11.835-15.181 7.7239zm3215 15.151c13.608-5.1414 17.389-24.406 6.8585-34.937-14.154-14.154-37.264-5.7166-37.264 13.605 0 12.898 9.3454 22.344 22.211 22.452 2.8154 0.0229 6.5031-0.4802 8.1948-1.1194v-3e-4zm-17.138-7.163c-9.1536-5.7336-11.237-20.819 1.4871-27.054 3.5411-1.7354 4.827-1.8623 8.3057-0.8201 13.023 3.9019 17.456 17.718 8.3597 26.054-3.4033 3.1191-4.6687 3.5847-9.6683 3.5598-3.2818-0.0164-6.9257-0.7642-8.4841-1.7402l-1e-4 -2e-4zm13.249-2.1004c1.7758 0.5027 2.1269 0.4102 1.1122-0.293-1.0357-0.7178-1.118-1.2527-0.2731-1.7751 0.6652-0.4109 1.2094-3.1992 1.2094-6.1956 0-4.4441-0.5364-5.9849-2.9103-8.3589-2.7755-2.7751-2.9492-2.811-3.7475-0.7698-0.5605 1.4336-0.868 1.5994-0.9305 0.5015-0.0634-1.1045-0.3552-1.2349-0.8964-0.3997-0.4415 0.6816-1.7849 1.4258-2.9852 1.6536-1.7703 0.3357-2.3347 1.6321-2.9881 6.8633-0.8524 6.8247 0.0819 9.365 3.4468 9.365 3.2912 0 4.4443-4.0139 4.4721-0.4917 0.0131 1.6123 0.2453 1.77 0.9564 0.6479 0.6069-0.9575 1.8583-1.2224 3.5344-0.7478l-2e-4 3e-4zm261.68 6.5855c9.2043-4.5032 12.087-12.539 8.6454-24.097-2.7804-9.3374-10.078-15.314-20.157-16.508-9.9196-1.1748-17.354 3.7656-22.22 14.765-3.2658 7.3833-2.3623 17.554 1.965 22.122 7.4453 7.8596 20.24 9.3569 31.766 3.7173zm-17.629-3.7476c-3.7942-1.5391-9.2159-7.9421-9.9249-11.72-1.8014-9.6023 5.9261-18.935 15.679-18.935 7.955 0 17.729 12.159 16.072 19.995-1.8395 8.7019-13.098 14.201-21.826 10.66zm10.494-4.292c0.3543-0.0767 1.2147-1.3918 1.9121-2.9226 3.9879-8.7524-1.8278-17.2-10.478-15.22-2.2286 0.51-2.4569 1.1992-2.4417 7.3711 0.0109 3.7446 0.3779 7.342 0.8195 7.9944 1.8105 2.6748 5.7284 3.7432 10.188 2.7776zm70.786 8.6721c5.224-2.665 9.8629-8.4009 11.049-13.662 3.3243-14.739-13.784-30.771-28.585-26.785-9.7127 2.6152-17.427 14.365-15.65 23.837 3.0288 16.145 18.711 23.994 33.186 16.61zm-17.584-4.4985c-9.1566-4.835-12.458-16.038-6.7322-22.844 7.4065-8.8022 17.707-8.8916 25.945-0.2251 6.8907 7.2493 4.2037 17.785-5.8285 22.853-5.8869 2.974-8.0938 3.0098-13.384 0.2159zm13.954-7.0095c3.5285-8.4448 0.9593-14.786-5.9907-14.786-3.7986 0-4.2332 0.3059-4.8549 3.4146-1.1012 5.5063-0.787 12.434 0.6283 13.849 0.7211 0.7212 2.9589 1.3113 4.9727 1.3113 3.1452-1e-4 3.8846-0.5345 5.2446-3.7894zm-3782.5 11.538c8.272-4.2551 13.405-12.416 13.268-21.099l-0.0742-4.6787c-3.4795 12.933-3.8198 14.706-3.353 2.918 0.3975-10.008-1.5723-14.124-8.4331-17.625-5.1436-2.624-14.086-2.9607-18.443-0.6941-16.984 8.8362-15.381 39.986 9.8687 39.986 6.9204 0 5.9185 1.3552-1.686 2.2805l-5.6689 0.6895c4.9883 0.1467 9.749 0.677 14.522-1.7773h3e-4zm-13.854-11.459c-3.5317-1.9578-5.4985-5.8142-5.5449-10.877-0.0303-3.3555 0.7129-4.9583 3.6758-7.9216 12.312-12.312 22.837 10.49 18.172 10.49-0.582 0-0.7881 0.7043-0.4575 1.5652 0.9453 2.4656-6.1323 4.3093-6.1323 5.9966 0 0.9304-4.96 0.0764-9.2876-1.6003-2.4297-0.9409-2.5444 0.1414 3.4697 2.2864 3.3892 1.2087 3.6626 1.4919 1.4473 1.4995-1.5024 0-3.9067-0.6421-5.3433-1.4382h4e-4zm6.4238-7.7488c1.7715-2.1343 0.6304-4.9309-2.0117-4.9309-1.9883 0-3.9482 4.5906-2.5547 5.9841 1.0708 1.0708 3.2148 0.5762 4.5674-1.0532h-1e-3zm143.34 20.165c11.361-3.1555 20.578-14.342 20.556-24.947-0.0208-10.074-7.4954-20.652-17.946-25.399-15.204-6.9058-34.356 2.8091-37.748 19.148-4.2927 20.677 14.13 37.034 35.139 31.198l-6e-4 3e-4zm-12.686-13.018c-7.321-4.8259-8.1304-14.401-1.7563-20.775 3.334-3.3337 1.1914-2.6907-2.355 0.707-1.6853 1.6147-3.0645 2.5393-3.0645 2.0542 0-2.0764 10.133-10.454 12.643-10.454 1.4597 0 2.6538 0.4761 2.6538 1.0581 0 0.5823 0.6875 0.7944 1.5283 0.4719 1.9224-0.7375 3.5679 1.717 1.8584 2.7734-0.8159 0.5039-0.2834 1.2273 1.5012 2.0408 3.6724 1.6731 7.1216 7.5232 7.1267 12.086 0.0127 6.478-10.2 16.587-20.136 10.037v3e-4zm8.0774-8.201c2.0947-2.5242 0.9331-5.5159-2.1414-5.5159-5.7056 0-2.269 7.1023 0 7.1023 0.4539 1e-4 1.4175-0.7138 2.1414-1.5864zm-387.85 17.976c-1.2798-0.8271-0.9888-1.0627 1.3281-1.0757 3.8701-0.022 10.456-5.8271 13.024-11.48 7.0127-15.437-6.7485-33.319-23.594-30.659-19.135 3.022-24.463 29.573-7.9121 39.428 3.1353 1.8667 12.876 4.5764 17.153 4.7717 1.457 0.0667 1.457-0.0427 0-0.9844v-2e-4zm-12.819-12.292c-6.7319-4.7278-7.2695-12.003-1.355-18.334 2.7974-2.9944 3.731-3.332 8.3877-3.0344 3.0723 0.1968 5.2402 0.8625 5.2402 1.6099 0 1.7002 2.2544 3.5576 1.2026 1.73-0.4321-0.7512-0.2983-1.3657 0.2969-1.3657 1.3477 0 5.0547 5.1697 6.0845 8.4851 1.0366 3.3379-1.2358 9.8318-3.9487 11.283-2.0747 1.1106-2.062 0.9917 0.2275-2.106 2.7871-3.7693 1.9761-4.9316 0.7349-9.4678l-0.8398 3.7698c-1.5801 7.0898-8.9502 7.2681-4.7329 8.9233 1.3984 0.5488 0.4717 0.8362-2.8643 0.8882-3.4419 0.0537-5.9902-0.666-8.4331-2.3816h-5e-4zm6.457-7.8023c0.5366-4.5964 0.061-6.1292-1.9028-6.1292-2.0947 0-3.1172 4.7551-1.6235 7.5471 1.7758 3.3175 3.0321 2.8121 3.5263-1.4179zm138.23 18.904c9.5752-4.6353 15.35-16.53 12.385-25.512-3.0127-9.1282-12.387-15.842-22.184-15.887-9.729-0.0447-18.151 5.8833-20.617 14.511-0.7207 2.5225-1.7593 5.1812-2.3086 5.9075-1.3159 1.7422 0.1143 8.2029 1.6113 7.2773 0.6475-0.3997 0.9287-0.0579 0.6479 0.7866-0.6553 1.9629 0.6714 2.9736 4.0234 7.1646 6.086 7.6087 17.484 10.088 26.441 5.7517zm-15.426-9.677c-1.7622-1.1619-3.8345-3.2485-4.6055-4.6367-1.5142-2.7285-1.998-9.7087-0.6587-9.4971 5.5791 0.8811-2.373-4.3545 1.9473-2.6965 1.5293 0.5869 1.8271 0.3552 1.3027-1.012-0.4443-1.1582-0.2036-1.5901 0.6938-1.2458 0.7554 0.29 2.5742-0.5159 4.042-1.7908 5.1211-4.4495 13.131-1.0403 15.205 6.4717 3.2607 11.809-8.063 20.909-17.927 14.407l6e-4 2e-4zm79.699 9.9227c21.73-9.8718 11.665-40.886-9.894-41.012-14.646-0.0852-24.464 14.52-20.164 30 2.9195 10.508 18.556 16.237 30.058 11.012zm-17.191-9.4375c-3.8232-2.1541-5.2183-4.8394-5.2134-10.032 0.0107-5.7405 3.3125-10.754 8.1445-12.349 3.4912-1.1521 4.5425-1.0076 9.0991 1.2532 4.2134 2.0903 5.4414 3.3943 6.7427 7.1587 1.9131 5.5347 0.8628 9.458-3.3784 12.615-3.8159 2.8411-11.548 3.5215-15.394 1.3547l-5e-4 -4e-4zm-108.92 7.8427c16.19-8.5393 15.02-30.902-2.0264-38.706-17.854-8.1741-35.995 6.8584-30.938 25.637 1.5063 5.5933 5.5796 10.622 10.87 13.417 5.8169 3.074 15.908 2.9148 22.095-0.3481v3e-4zm-18.52-8.9687c-8.7754-7.3838-5.6289-20.898 5.3062-22.789l3.8242-0.6611-4.3706 1.6448c-4.7559 1.79-8.2197 5.2029-8.1509 8.0308 0.0293 1.2168 0.5273 0.9014 1.5527-0.9829 2.6294-4.8325 10.111-7.2957 14.798-4.8718 8.1167 4.197 8.7822 16.093 1.1299 20.188-1.5762 0.8438-1.9766 0.7212-1.79-0.5488 0.3516-2.3999 2.8403-3.7085 2.8403-5.2771 0-1.2908-4.5479 3.5847-3.7368 4.8975 0.3232 0.5234 0.0386 0.9514-0.6333 0.9514s-0.9175 0.4917-0.5464 1.0928c1.5117 2.4453-6.98 1.0544-10.223-1.6748l-5e-4 -5e-4zm2.8228-9.2461c-0.2866-5.041-1.0308-5.4856-2.7749-1.6577-1.4155 3.1067-0.6768 6.0225 1.5259 6.0225 1.0591 0 1.4243-1.2769 1.249-4.365v2e-4zm271.04 17.641c5.4478-3.8794 9.4458-11.586 9.4116-18.142-0.0327-6.4194-1.9497-10.516-7.5112-16.059-4.624-4.6082-8.2544-6.0994-7.6885-3.1577 0.2773 1.4382-0.2222 1.7786-2.0864 1.4221-3.02-0.5774-11.825 1.6843-11.104 2.8521 0.2886 0.467-0.5459 0.813-1.8545 0.7686-1.6733-0.0569-3.4409 1.4961-5.9551 5.2324-2.8984 4.3062-3.5757 6.3892-3.5757 10.986 0 6.9541 4.3379 14.54 9.9473 17.395 5.2949 2.6945 15.743 2.0311 20.416-1.2965zm-17.688-3.9644c-6.0581-2.1589-6.563-3.1494-6.1426-12.044 0.2339-4.9475 2.4751-11.473 3.9404-11.473 0.3208 0 0.2324 0.5676-0.1968 1.2615-1.019 1.6494 1.8638 0.323 1.0312-1.8464-0.4351-1.1343 0.3833-1.8076 2.7793-2.2869 1.8677-0.3738 3.3965-1.1094 3.3965-1.6353 0-1.2827 4.6675-1.2271 3.9468-0.062-0.3042 0.4917 1.1274 1.5017 3.1802 2.2441 5.3765 1.9441 8.1699 6.0007 8.1699 11.864 0 6.3445-2.7026 10.748-8.2427 13.429-5.2197 2.5266-6.1836 2.5713-11.862 0.5476l-4e-4 3e-4zm6.6807-7.8029c-0.3721-0.3721 0.0645-1.4172 0.9697-2.3228 2.0845-2.0845 1.5684-6.7932-0.9155-8.3481-2.6733-1.6741-6.8369 2.4634-5.792 5.7559 0.4038 1.2725 1.3857 2.3135 2.1826 2.3135 2.0244 0 2.3584 3.2781 3.4688 3.2781 0.4194 0 0.4585-0.3044 0.0864-0.6763v-3e-4zm-438.15 9.7893c6.4966-5.2585 8.3188-8.4526 8.7759-15.381 0.5322-8.082-2.6748-14.733-9.3345-19.362-3.8271-2.6589-6.0581-3.3367-12.114-3.679-9.2744-0.5237-15.116 2.0994-19.525 8.7678-2.5161 3.8052-3.0044 5.7173-2.9995 11.724 0.0107 8.9678 2.3926 13.435 9.8696 18.492 5.1792 3.5032 5.7759 3.6443 13.379 3.1667 6.7764-0.4258 8.5498-0.9792 11.948-3.7297h6e-4zm-19.99-4.7637c-5.7671-2.8547-9.7134-9.4878-8.7373-14.688 1.9185-10.227 13.537-15.72 22.147-10.47 10.37 6.323 10.296 20.558-0.1309 25.294-5.7021 2.5896-7.8154 2.5679-13.278-0.136h-5e-4zm84.017 7.1794c5.2764-1.8818 8.0327-4.3799 10.913-9.8899 2.8008-5.3569 2.9971-14.854 0.4111-19.842-4.4238-8.5332-16.464-13.832-25.75-11.331-11.436 3.0793-18.044 15.85-15.002 28.988 0.2783 1.2019 0.5435 2.6987 0.5894 3.3264 0.1108 1.5056 9.856 8.8579 12.649 9.5422 4.2896 1.0518 12.087 0.6692 16.189-0.7937l-5e-4 3e-4zm-16.991-11.439c-3.0127-2.6919-3.5684-3.9421-3.5684-8.0295 0-8.2502 4.8545-13.913 11.927-13.913 2.9995 0 10.84 6.1704 9.8579 7.7583-0.334 0.5405-0.1382 0.9829 0.4355 0.9829 1.4268 0 2.0767 8.6919 1.019 8.0386-0.7998-0.4944-1.0298 0.0745-1.2769 3.1611-0.1187 1.4817-4.8921 5.1814-6.6655 5.166-0.6006 0-0.355-0.4861 0.5464-1.0686 1.3257-0.8567 1.1685-1.0625-0.8193-1.0759-1.3521-0.011-2.4585 0.4751-2.4585 1.0759 1e-4 2.2661-5.5668 0.9693-8.997-2.0957zm11.728-9.4531c0-2.1523-0.6143-3.2905-1.9121-3.5403-2.9897-0.5759-0.9268 2.6638-3.2778 5.197-0.9209 0.9924-0.9453 1.2356-0.0752 0.7468 0.7095-0.3984 1.6157-0.1987 2.0127 0.4438 1.2993 2.103 3.2534 0.3931 3.2534-2.8477l-1e-3 4e-4zm664.58 8.1187c14.09-8.708 13.365-28.286-1.2937-34.944-16.984-7.7146-35.672 11.456-26.71 27.4 5.6101 9.9819 18.459 13.443 28.004 7.544zm-12.005-4.9534c-1.0591-0.2876-1.5977-1.0535-1.197-1.7019 0.4634-0.7495 0.209-0.8577-0.6985-0.2966-0.8987 0.5554-1.9727 0.136-2.9006-1.1328-0.8103-1.1079-1.4731-1.5808-1.4731-1.0505 0 0.9324-3.1953-1.4871-3.2434-8.0295-0.0283-3.9045 0.5549-5.3027 3.2729-7.8416 4.3945-4.105 8.7129-4.9631 13.513-2.6853 12.722 6.0369 6.5688 19.927 3.2627 18.658-0.8918-0.3423-1.3557-0.1921-1.0308 0.334 1.3354 2.1606-5.469 4.843-9.5051 3.7468h-3e-4zm1.8772-8.4121c2.3655-2.1919 2.5559-2.7903 1.2373-3.8848-1.2354-1.0251-1.7969-0.8843-2.7065 0.679-0.6311 1.085-1.1626 1.3582-1.1809 0.6069-0.0537-2.2229-2.0107-1.5569-2.8083 0.9558-0.4622 1.4568-0.1843 2.6719 0.7458 3.261 1.9148 1.2136 1.5054 1.3542 4.7124-1.6182l2e-4 3e-4zm88.84-2.7437c0.9043-9.4102-6.0208-18.23-15.968-20.335-9.5771-2.0278-21.106 6.2903-22.609 16.313-1.4128 9.4231 4.2749 18.791 13.308 21.918 11.452 3.9644 24.069-5.4162 25.268-17.896zm-24.501 8.7408c-3.4514-2.1606-3.969-3.1025-5.2727-9.5964-0.5718-2.8464-0.1182-4.1042 2.5603-7.1021 2.8936-3.2383 3.8816-3.6431 8.8975-3.6431 4.9922 0 6.01 0.4114 8.8308 3.5686 3.3193 3.7148 3.9158 6.9414 2.1445 11.6-2.2937 6.0325-11.402 8.7779-17.16 5.1727zm9.4631-6.3052c0-1.6755-0.7422-2.1143-5.1902-3.0681-3.7859-0.812-4.8777 0.926-2.2393 3.5647 1.6688 1.6684 7.4295 1.2836 7.4295-0.4966zm212.81 15.413c14.429-6.0288 17.792-23.004 6.519-32.902-7.7288-6.7861-17.211-7.4702-25.182-1.8171-6.429 4.5593-8.6667 9.3235-8.0259 17.088 1.1976 14.51 13.968 22.946 26.689 17.631zm-10.41-8.498c-10.109-5.614-6.8833-21.498 4.3652-21.498 5.6792 0 11.761 5.6218 11.761 10.871 0 9.2617-8.499 14.862-16.126 10.626h-2e-4zm6.2923-7.3277c0-2.908-2.9966-3.9934-5.1309-1.8591-2.1443 2.1443-0.9756 4.0786 2.4636 4.0786 1.9524 0 2.6672-0.5947 2.6672-2.2197v2e-4zm76.256 15.438c7.7654-3.9824 11.156-9.5488 11.156-18.314 0-13.05-12.29-22.4-24.958-18.989-18.352 4.9417-18.988 29.941-2.9045 37.327 5.6453 2.5923 11.621 2.5835 16.706-0.0239zm-13.648-9.3972c-2.9446-2.0625-5.0212-8.1592-4.0703-11.949 0.9551-3.8052 6.9292-8.2617 11.075-8.2617 3.947 0 9.447 3.9678 8.5913 6.1978-0.3652 0.9521-0.1318 1.2747 0.5969 0.8242 0.8091-0.5 0.9443 0.0569 0.4167 1.719-0.5811 1.8306-0.4277 2.241 0.5999 1.606 2.6357-1.6289 0.0908 6.4639-2.845 9.0476-3.3207 2.9224-10.754 3.3446-14.364 0.8158zm-0.9365-6.8257-0.6514-3.0046 1.4753 2.7314c2.0061 3.7139 7.4343 4.4719 7.4343 1.0378 0-1.9551-0.4927-2.291-2.7317-1.863-1.5022 0.2869-2.7314 0.0776-2.7314-0.4648s-0.9199-1.9739-2.0437-3.1804c-2.0437-2.1936-2.0439-2.1936-2.6602 0.1628-1.2197 4.6643 3.4431 11.651 1.9082 4.5806l6e-4 2e-4zm86.162 16.826c7.8457-3.2783 13.418-14.111 11.129-21.635-1.1753-3.8616-5.8157-9.5935-9.6682-11.943-11.335-6.9114-28.009 2.8252-28.009 16.356 0 13.052 14.311 22.335 26.549 17.222zm-14.033-9.9471c-3.6838-3.6841-3.7722-11.21-0.1709-14.593 5.8625-5.5076 13.624-3.7773 16.051 3.5784 1.5308 4.6387-0.1006 10.91-3.281 12.612-3.7888 2.0278-9.7271 1.2747-12.6-1.5977l2e-4 -2e-4zm-257.49-8.6484c0.3735-6.0391 0.095-7.1367-2.8342-11.157-1.7869-2.4524-4.978-5.2798-7.0918-6.2827-4.6509-2.207-13.75-2.3696-18.623-0.3335-12.934 5.4041-16.224 26.366-0.7112 34.294 11.668 5.9622 28.232 0.1001 29.26-16.52zm-26.66 7.6157c-4.1753-4.175-4.6873-7.564-1.9995-13.228 2.063-4.3472 6.6772-6.5159 11.814-5.5522 11.082 2.0789 14.056 14.662 4.8 20.306-5.5178 3.3644-10.215 2.8739-14.614-1.525zm10.272-4.4443c1.2158-1.2158-1.0525-3.8584-3.2991-3.8433-3.6321 0.0242-5.6619 1.6375-4.8203 3.8306 0.5596 1.4585 1.5 1.7268 4.177 1.1914 1.9001-0.3801 3.6741-0.9104 3.9424-1.1787zm76.655 13.647c6.7678-3.4526 9.3362-7.9937 9.3362-16.508 0-6.1384-0.4595-7.8589-3.1267-11.708-8.2783-11.946-25.942-11.695-33.071 0.4692-5.6902 9.7097-1.7649 24.237 7.6567 28.337 5.1105 2.2244 14.237 1.9436 19.205-0.5908zm-16.22-8.2856c-11.624-9.7808 3.0776-29.936 15.25-16.072 3.0034 3.4207 3.3674 4.4946 2.8447 8.3914-1.2502 9.3232-11.15 13.525-18.096 7.6804l3e-4 2e-4zm9.1665-6.4751c0-2.4106-3.3967-3.6108-5.178-1.8298-1.8367 1.8367-0.0251 4.739 2.7148 4.3501 1.6119-0.2291 2.4632-1.0999 2.4632-2.5203zm-1138-90.191c-7.7676 0.0703-56.166 0.5088-63.962 0.5793-0.0381 4.3022-0.7939 68.091-0.0161 71.277 0.5938 2.436 0.6406 2.4407 28.714 2.751 14.681 0.1624 27.899 0.2986 37.407 0.8186 9e-4 -66.886 0.1249-69.46-2.1431-75.426zm-55.039 63.771c-0.4009-0.4006-0.728-12.166-0.728-26.146 0-21.788 0.2485-25.665 1.7393-27.156 1.9531-1.9531 6.8716-1.6704 45.79-1.1482l0.584 55.179c-38.725 0-46.885-0.228-47.386-0.7285v-3e-4zm37.936-5.969c4.3335-1.9746 5.3086-6.1479 5.3403-22.874 0.0264-13.696-0.2075-15.677-2.1621-18.298-2.1597-2.8958-2.3989-2.9431-16.457-3.2429-13.502-0.2878-14.419-0.1709-17.139 2.1853-3.314 2.8704-2.8662 2.26-3.9766 34.605l8.0034 8.8586c4.4585 0 22.983 0.3186 26.39-1.2344l6e-4 3e-4zm4826.1 12.204 3.0048-3.3555v-70.063c-6.4924-6.4927-5.9146-6.7695-12.353-5.9961-7.1016 0.8533-35.082 0.698-42.279 0.7024v6.5559c35.417 0 37.637-0.2949 39.781 2.074 2.2285 2.4626 1.7015 2.0679-29.905 0.8845-0.2534 20.084-0.3264 25.864-0.6314 50.035-0.3838-38.363-0.1211-12.113-0.5031-50.281-8.0879-0.2666-5.0609-0.167-13.112-0.4319l-0.4008 17.934c-1.1867-16.755-0.8516-17.494-3.6966-17.404-14.89 0.4702-23.571-0.1157-25.872 2.1853-1.4533 1.4534-1.717 5.2886-1.717 24.979 0 26.462 0.6118 33.066 3.1908 34.446 2.2694 1.2148 22.514 1.4678 26.857 1.5747l1.1772-34.854c0.1615 12.357 0.3003 22.976 0.4618 35.333 6.5363-0.3989 12.164-0.325 13.89-2.686 1.3389-1.8311 1.407-1.8289 1.407 0.0437 0 1.8198 1.1128 1.9365 14.751 1.5427 8.1129-0.2344 14.751-0.1409 14.751 0.2073 0 2.6838-3.6826 3.2551-20.979 3.2551-16.706 0-18.368 0.1721-18.483 1.9121-0.1207 1.8213-0.1506 1.8213-0.6264 0-0.4479-1.7139-2.1986-1.9121-16.881-1.9121-9.2026 0-17.308-0.4956-18.495-1.1309-2.0146-1.0784-2.1135-2.6067-2.1135-32.646 0-23.909 0.3296-31.774 1.3658-32.59 2.3914-1.8835 6.7122-2.4255 20.279-2.5442 12.25-0.1072 13.285-0.2795 13.932-2.3159 0.3841-1.21 0.2807-2.6003-0.2298-3.0894-0.5104-0.489-10.111-1.0542-21.334-1.2559-22.794-0.4097-20.337-0.4189-26.577 4.2417v73.707c6.812 5.8584-3.1963 4.7661 98.338 4.2998l3.0048-3.3552-3e-4 -2e-4zm-304.03-0.5893c0-2.1272-0.544-2.7146-2.4585-2.6548-5.9341 0.1848 5.8553 1.8403-1.9121 2.0664-3.6042 0.1047-3.7022 0.2036-1.7033 1.7156 3.3647 2.5449 6.0739 2.0422 6.0739-1.1272zm-444.91-16.022c11.46-5.5186 14.928-22.581 6.5333-32.142-4.9205-5.6042-11.177-8.5266-18.36-8.5759-7.1176-0.0491-11.825 2.3225-16.779 8.4521-2.8589 3.5371-3.4197 5.2524-3.7509 11.473-0.3236 6.0767 0.048 8.1311 2.1956 12.144 5.9714 11.159 17.866 14.57 30.162 8.6484zm-16.789-4.5786c-1.8326-0.8296-4.6597-3.0864-6.2827-5.0151-2.4694-2.9346-2.9506-4.5483-2.9506-9.895 0-5.2419 0.4964-6.9783 2.7673-9.677 7.0369-8.3628 20.198-6.4971 24.96 3.5378 2.079 4.3813 2.2515 11.159 0.3692 14.516-3.5786 6.3818-12.428 9.447-18.864 6.5334v3e-4zm10.708-5.2415c2.2388-1.1755 2.6213-8.009 0.6862-12.256-1.2109-2.658-5.33-4.7512-5.33-2.709 0 0.5801-0.4916 0.751-1.0927 0.3796s-1.0927-0.1548-1.0927 0.4817-0.9219 1.1572-2.0487 1.1572c-1.4205 0-2.2581 1.0471-2.7316 3.4146-0.9159 4.5791-0.8646 10.244 0.1017 11.21 0.918 0.9182 8.735-0.2217 11.508-1.6777l-2e-4 -5e-4zm68.144 10.094c7.14-3.2424 10.664-8.7844 11.159-17.552 0.3317-5.8704-0.047-8.2195-1.9147-11.881-7.8783-15.443-30.516-16.21-38.053-1.2893-9.2308 18.272 8.5122 39.938 28.809 30.722zm-12.562-4.7132c-8.388-2.2288-12.15-7.1348-12.15-15.845 0-7.689 3.0045-11.564 10.918-14.082 3.0531-0.9712 4.4995-0.8909 7.1106 0.3958 5.2816 2.6023 10.338 8.0825 11.525 12.492 2.6392 9.8013-7.4546 19.684-17.404 17.04v-6e-4zm7.1081-4.9621c0.7835-0.7832 1.8107-1.2839 2.283-1.1121 0.4722 0.1714 0.9922-1.9004 1.1557-4.605 0.3553-5.8784-3.2458-13.013-5.5875-11.07-0.7585 0.6294-2.46 0.8618-3.7808 0.5166-4.2086-1.1006-0.7921 2.5444-4.0058 6.7932-0.8823 1.1667-1.6199 3.1917-1.639 4.5-0.036 2.4668 4.6027 6.9084 7.215 6.9084 0.8204 0 1.5304 0.6145 1.5778 1.3657 0.1232 1.9346 0.7411-1.2566 2.7819-3.2976l-3e-4 6e-4zm68.482 9.9988c7.2261-3.6509 11.322-9.1602 12.904-17.355 2.1431-11.103-6.6998-22.509-19.308-24.905-20.936-3.9778-37.79 29.031-13.369 41.2 6.6422 3.3098 14.486 3.73 19.773 1.0588v3e-4zm-16.359-6.8492c-16.516-7.708-7.3643-28.534 7.3009-28.534 7.7822 0 15.289 7.1526 15.282 14.561-0.0109 11.846-11.675 19.064-22.583 13.973zm10.528-2.8569c0.1656 2.0315 0.2477 2.0125 1.1664-0.2732 0.5435-1.3523 1.2344-2.4585 1.5354-2.4585 0.9628 0-1.6362 4.1238 0.4302 2.8462 1.8328-1.1326 1.626-12.88-0.2726-15.476-1.7117-2.3408-4.022-2.8083-5.2614-1.0647-0.5013 0.7051-0.809 0.5659-0.8195-0.3704-0.024-2.137-2.9604 0.4153-4.9873 4.3347-1.3019 2.5178-1.8635 12.516-0.6358 11.32 0.5983-0.5828 2.8557 2.9297 5.0917 2.0713 0.9094-0.3489 1.6547 0.0273 1.7163 0.866 0.0601 0.8154 0.5025 0.2534 0.9838-1.249 0.7412-2.3151 0.9018-2.3986 1.0528-0.5461zm69.222 9.8896c7.1743-2.5586 11.214-7.7185 12.874-16.446 5.4056-28.416-38.485-37.074-43.237-7.4985-2.629 16.359 14.269 29.684 30.364 23.944zm-18.531-9.6843c-3.2881-3.0134-4.0372-4.5371-4.4762-9.1067-1.5067-15.679 14.966-22.526 25.94-10.782 2.2849 2.4456 2.7316 3.9949 2.7316 9.4753 0 6.1704-0.2375 6.7695-4.0814 10.292-3.618 3.3154-4.7675 3.7402-10.123 3.7402-5.3162 1e-4 -6.5159-0.4345-9.9905-3.6188zm7.66-1.0249c-0.5576-0.928-0.228-0.885 1.0281 0.1335 1.0168 0.825 1.8488 1.0317 1.8488 0.4597s1.0895-1.001 2.4211-0.9531c3.4799 0.1245 5.8283-5.0857 4.5557-10.108-0.5554-2.1921-1.7238-3.925-2.7443-4.0701-2.9848-0.4246-5.9966-2.0513-6.9476-0.5122-0.3926 0.635-1.1715 0.8721-1.731 0.5261-1.0139-0.6265-1.4579 0.907-1.0735 3.7075 0.1114 0.8115-0.322 1.1514-0.9631 0.7549-2.2146-1.3687-1.2998 6.9231 1.0195 9.2424 2.4545 2.4546 3.8306 2.8906 2.5865 0.8196h-2e-4zm71.842 10.089c9.2235-2.562 16.261-10.254 16.261-17.773 0-14.31-10.395-25.198-24.146-25.292-7.9678-0.0535-13.494 3.4541-17.745 11.264-7.5939 13.952-3.9646 25.355 9.7787 30.722 6.0818 2.3752 10.178 2.6536 15.85 1.0781v-3e-4zm-12.189-6.8115c-6.2989-3.1763-10.328-10.511-9.1684-16.691 1.0048-5.3562 6.2055-11.111 11.466-12.687 3.7873-1.1345 4.7938-0.9839 9.4594 1.417 6.8917 3.5466 10.138 8.429 10.138 15.246 0 4.3215-0.6027 5.9502-3.3678 9.0996-2.9043 3.3079-8.5541 6.0466-12.517 6.0679-0.6239 0-3.3282-1.1001-6.0096-2.4521v-5e-4zm12.089-6.0206c4.1304-5.2507 1.5569-13.686-4.6856-15.359-5.3844-1.4426-6.0556-0.7063-6.4525 7.0764-0.2805 5.5007 0.0514 7.5547 1.4647 9.0684 2.6445 2.832 7.1134 2.4692 9.6734-0.7857zm66.88 12.233c15.702-5.3503 19.352-22.493 7.344-34.5-11.05-11.05-27.322-10.606-35.338 5.2876-2.1959 4.3538-2.3275 15.742-0.2286 19.776 5.0063 9.6216 16.449 13.448 28.223 9.436v2e-4zm-13.368-4.5498c-2.752-1.0466-6.9497-4.6692-8.9833-7.7527-4.1522-6.2957-0.5788-17.458 6.8145-21.286 10.698-5.5396 25.249 4.2544 23.682 15.94-1.1977 8.928-13.224 16.251-21.513 13.099zm12.657-5.9085c0.4219-0.6824 0.7669-3.8853 0.7669-7.1169 0-11.55-5.7257-10.157-10.692-9.6709-0.3893 11.06-0.2456 6.9771-0.6348 18.029 1.8343 0 9.595 0.3213 10.56-1.241zm135.49 9.2581c16.489-8.5569 14.403-31.804-3.5256-39.294-9.798-4.0938-22.098 0.8677-27.427 11.063-2.1714 4.1548-2.1407 14.471 0.0558 18.678 5.7559 11.026 19.732 15.347 30.897 9.5534zm-18.096-4.4681c-8.1232-4.0811-11.352-15.134-6.6661-22.818 2.6597-4.3618 10.34-7.4792 16.418-6.6641 15.471 2.075 19.666 22.694 5.1648 29.279-5.7097 2.5923-10.045 2.6519-14.917 0.2039l1e-4 -5e-4zm3.4356-19.932c-3.4039 0.7729-5.5744 1.6206-4.8232 1.8828 1.963 0.6858 0.8545 5.3135 2.4584 6.3044 0.601 0.3713 1.0927 1.6296 1.0927 2.7964 0 2.4126 1.415 2.1206 10.926 2.1206 0-14.23 1.0248-15.53-9.6544-13.104zm-3637.7 24.495c7.4854-2.2229 15.742-10.151 17.545-16.848 3.1594-11.732-4.0942-26.427-15.947-32.308-5.5432-2.7502-16.882-2.7468-22.294 0.011-29.783 15.153-13.466 59.295 20.696 49.149v-0.0042zm-15.925-15.512c-9.5051-7.6997-3.0034-20.146 5.0923-20.096 5.6433 0.0352 7.292 0.5837 10.327 3.4346 6.1733 5.7998 2.2832 18.628-8.3604 18.573-2.8206-0.0141-5.6682-0.7861-7.0586-1.9121zm8.1309-9.737c0.7505-7.7451-8.2239-5.2898-6.8464-0.8606 0.948 3.0474 0.9497 5.1287 4.0461 4.689 1.8769-0.2667 2.5437-1.1778 2.8003-3.8284zm-118.15 21.536c10.526-4.6545 15.595-12.289 15.618-23.521 0.0295-14.459-9.9202-25.852-24.037-27.524-26.542-3.1433-42.939 32.123-19.214 49.117 7.9009 5.6592 17.656 6.3396 27.633 1.928h-6e-4zm-18.136-14.317c-2.6824-2.6821-3.3611-4.2839-3.3579-7.9216 0-5.1133 2.9829-10.845 6.6577-12.812 2.9756-1.5925 9.9438-1.5818 12.937 0.0198 3.1562 1.6892 5.532 6.8281 5.532 11.965 0 3.5662-0.7229 5.1116-3.8606 8.2493-3.3665 3.3662-4.5444 3.8606-9.2036 3.8606-4.5095 0-5.8672-0.5244-8.7051-3.3621l5e-4 2e-4zm10.431-6.6897c2.5566-4.137-0.5752-9.6362-4.6069-8.0891-2.3911 0.9177-4.0349 6.0676-2.5193 7.8936 1.5381 1.8533 6.0261 1.9763 7.1267 0.1956h-5e-4zm2114.9-12.431 295.8-0.7903c22.235-33.9 19.464-26.472 28.345-42.025 7.4341-13.019 15.114-24.042 98.447-147.57 2.0457-508.83 5.7324-103.94 2.5476-1365.5-11.14-27.788-83.137-166.71-92.098-186.3-24.312-53.142-25.802-50.273-24.696-60.046 0.8794-7.7725-0.8857-12.124-6.2433-15.39-3.4291-2.0908-6.5593-2.1301-158.65-1.989-178.59 0.1659-182.96 0.8561-207.6 1.4869-1.45 20.846-2.7268-2.5135-1.0927 39.335 310.01-0.8456 313.27-1.2291 315.33 1.2113 8.2214 9.7433 113.51 214.52 119.54 227.15 1.6029 880.94 1.0034 954.73-0.7889 1345.1-15.462 27.269-46.672 72.201-53.508 84.763-4.2849 7.8745-39.192 64.693-41.904 68.208-4.3644 5.6553-1678.8-1.5881-1678.8 5.2615 0 1.0627 16.272 32.425 25.154 46.633 377.07 0.5977 978.02 1.5452 1380.2 0.47h-2e-4zm1091.1-31.302c6.1982-4.1018 10.557-13.126 9.8573-20.408-1.6211-16.871-17.73-25.699-33.139-18.159-8.1607 3.9924-11.73 9.3669-12.314 18.542-0.6469 10.162 3.8671 17.802 12.918 21.865 6.0337 2.7088 17.17 1.805 22.678-1.8401zm-20.204-4.0866c-8.2311-3.7363-11.77-12.952-8.1321-21.176 6.1749-13.959 24.812-13.431 30.268 0.8567 3.2405 8.4849-0.6038 17.483-8.9611 20.975-4.7684 1.9923-7.6595 1.8485-13.175-0.6556zm12.17-7.9612c3.1632-4.8904 3.2559-8.1423 0.3162-11.082-2.2641-2.2639-3.5139-2.645-7.4045-2.2583-4.2709 0.425-6.41 1.7896-6.454 4.1172-0.0109 0.4863 0.3723 0.6438 0.8477 0.3501 0.4753-0.2937 0.6649 1.1741 0.4211 3.2622-0.5786 4.9561 2.1427 8.0693 7.0535 8.0693 2.5647 0 4.0966-0.7215 5.22-2.4585zm69.884 14.062c5.0563-2.1125 11.028-8.6062 12.532-13.627 2.8502-9.5129 0.5358-17.503-6.9818-24.103-5.0331-4.4189-8.0356-5.5659-14.492-5.5359-9.7303 0.0459-17.692 5.8464-20.811 15.163-5.8847 17.576 12.771 35.199 29.752 28.103v2e-4zm-16.781-7.075c-4.0782-2.1873-8.7513-9.6753-8.7513-14.023 0-6.7241 6.4263-14.715 12.994-16.157 4.9009-1.0764 11.261 1.1519 15.36 5.3813 4.8073 4.96 5.8276 13.313 2.3105 18.914-4.6973 7.4805-14.186 10.029-21.914 5.8845zm14.768-7.0852c2.0707-2.9565 2.0798-9.8989 0.0153-11.612-0.8777-0.7285-3.5251-1.5835-5.8827-1.8997-3.3997-0.4558-4.7649-0.0959-6.5987 1.7373-5.3589 5.3589-0.1813 15.695 7.3111 14.595 1.9492-0.2859 4.269-1.5552 5.1553-2.8206h-3e-4zm68.852 11.271c6.8206-4.2153 9.6909-9.1516 10.08-17.335 0.2832-5.9526-0.0983-7.9834-2.1674-11.548-5.9697-10.283-19.078-14.374-29.253-9.1306-8.63 4.4473-13.386 14.738-11.016 23.836 2.8019 10.755 12.54 18.064 22.773 17.091 3.1658-0.3008 7.4788-1.6118 9.584-2.9128v2e-4zm-18.901-5.4306c-13.616-8.3018-8.5408-28.415 7.1696-28.415 11.368 0 19.278 14.026 13.372 23.712-4.1169 6.7517-13.614 8.926-20.541 4.7029h-2e-4zm12.488-4.2627c2.6159-1.1919 2.7776-1.6833 2.2752-6.9116-0.6155-6.406-4.1848-10.696-6.9733-8.3818-1.0976 0.9106-1.4976 0.915-1.4976 0.0161 0-1.5901-2.1853-1.7817-2.1853 0.3743 0 0.8804-1.0241 2.1487-2.2759 2.8186-2.028 1.0854-2.1921 1.8333-1.5068 6.8674 1.6555 12.16 6.1935 3.8271 7.9146 8.1929 0.6476 1.6426 0.7564 1.6497 1.0767 0.0676 0.1961-0.9678 1.6235-2.3374 3.1724-3.043v-5e-4zm129.64 11.826c15.512-4.3076 21.066-26.859 9.314-37.823-3.7573-3.5056-11.793-6.8452-16.537-6.8728-5.4135-0.0317-11.439 3.127-16.362 8.5762-10.297 11.397-6.8313 28.104 7.183 34.629 6.2264 2.8991 10.071 3.2482 16.402 1.4904zm-12.028-6.5894c-4.278-1.2378-9.7479-7.6467-10.656-12.485-1.4163-7.5496 4.5426-16.023 12.369-17.588 11.197-2.2395 21.84 8.4062 18.485 18.49-1.6352 4.9148-7.1725 10.429-11.75 11.701-4.3787 1.2163-3.8135 1.2241-8.4482-0.1167v-2e-4zm9.8874-4.8049c-0.3856-1.0051 1e-3 -1.6389 0.9996-1.6389 1.6561 0 2.9341-3.095 2.9609-7.1711 0.011-1.2395-1.3629-3.574-3.0469-5.1875-2.4785-2.3745-3.3418-2.6738-4.5309-1.5703-1.1799 1.0952-1.3083 1.0803-0.6528-0.0754 1.3719-2.4182-3.0628-1.0171-4.5544 1.439-1.4315 2.3572-1.7121 8.751-0.5082 11.577 0.4104 0.9636 1.8425 1.6562 3.2011 1.5483 1.3521-0.1072 2.466 0.3372 2.4752 0.988 0.0109 0.6509 0.4324 0.5273 0.9405-0.2742 0.7439-1.1736 1.0533-1.1206 1.5881 0.2729 0.9009 2.3481 1.9457 2.2212 1.1273 0.0916l5e-4 2e-4zm66.193 11.491c4.6378-1.3301 10.623-6.9587 12.8-12.037 1.8679-4.3572 2.1812-14.484 0.5767-18.637-4.8674-12.597-20.876-18.084-32.063-10.989-9.0773 5.7568-12.497 19.446-7.5686 30.299 4.267 9.3965 15.764 14.373 26.255 11.364l1e-4 -3e-4zm-14.907-8.6502c-4.6746-2.937-6.8821-7.552-6.8821-14.388 0-5.0806 0.4159-6.062 4.1514-9.7976 7.3937-7.3936 17.146-6.4934 22.877 2.1116 4.1166 6.1807 2.7578 16.327-2.8566 21.33-3.5336 3.1489-12.826 3.5488-17.29 0.7441v2e-4zm14.424-5.8821c-1.5002 1.8279-2.7892 3.3984-4.2895 5.2263 2.8848-2.6548 4.9914-3.9158 5.625-9.5359 0.4877-4.3274 0.2172-5.124-2.4531-7.2246-3.3994-2.6738-5.9639-2.9885-8.1116-0.9951-1.1772 1.0928-1.3174 1.0928-0.7004 0 1.0656-1.8872 0.0502-1.7102-2.0115 0.3511-3.7841 3.7844-1.1605 16.858 3.383 16.858 1.3884 0 1.3179-0.3486-0.3866-1.9121-1.1466-1.0515-1.4685-1.501-0.7153-0.9983 0.7532 0.5022 1.8827 0.5964 2.5099 0.2085 0.6567-0.406 1.1943 0.3655 1.2673 1.8179 0.071 1.4209 0.3247 1.7932 0.5798 0.853 0.53-1.9534 3.5699-3.5845 5.303-4.649zm-124.09 12.6c2.0606-1.0508 5.2344-3.7725 7.0531-6.0486 4.426-5.5391 5.3304-15.662 1.9814-22.175-9.7858-19.033-34.196-17.352-39.539 2.7224-3.677 13.814 6.8741 27.394 21.295 27.407 3.0539 0 7.1156-0.8376 9.2099-1.9055h-1e-4zm-12.511-4.5918c-10.087-2.3362-15.47-13.073-10.943-21.827 6.2055-12 20.24-11.48 26.536 0.9839 3.0137 5.9656 3.0922 9.3604 0.3212 13.904-3.5703 5.8555-9.4752 8.4299-15.914 6.9387l2e-4 3e-4zm8.806-6.6872c0.8785-1.6985 1.597-4.3665 1.597-5.9285 0-2.9656-2.7563-9.2266-4.1256-9.3711-0.4353-0.0459-1.6573-0.249-2.7159-0.4514-1.0593-0.2024-2.4274 0.572-3.0432 1.7227-2.4777 4.6299-4.3198-1.749-4.3198 8.6111 0 5.9233 0.2621 6.6584 2.859 8.0193 3.9862 2.0886 7.8572 1.0552 9.7484-2.6021h1e-4zm196.24 9.0723c4.5207-2.3354 6.4235-4.1377 8.3196-7.8801 2.8968-5.7173 3.038-8.5969 0.7925-16.158-6.978-23.497-37.851-21.547-43.218 2.4353-1.8423 8.2322-0.5939 13.397 4.3826 18.131 7.5832 7.2135 19.733 8.6327 29.723 3.4721zm-18.46-4.6148c-4.9153-2.9968-7.9027-8.3018-7.9077-14.042-0.0132-15.849 20.092-21.194 28.412-7.5537 5.2358 8.584 3.1492 16.724-5.4533 21.273-5.8095 3.072-10.38 3.1699-15.051 0.3225v-3e-4zm12.352-4.8733c5.6602-5.6602 1.8483-15.857-6.0753-16.25l-3.8083-0.1892c-0.1834 3.5378-1.0844 12.227 0.7622 14.506 1.0613 1.3101 1.0758 1.5481 0.0568 0.936-0.7512-0.4514-1.3658-0.324-1.3658 0.2822 0 1.4226 3.2654 3.321 5.7861 3.3635 1.079 0.0188 3.1687-1.1736 4.6438-2.6484l5e-4 -4e-4zm67.499 11.344c5.6312-1.5637 12.453-7.9258 13.986-13.044 4.623-15.43-11.456-32.172-27.112-28.231-5.5676 1.4019-13.193 7.6958-15.23 12.57-1.9428 4.6499-1.9173 13.885 0.0492 17.638 2.0132 3.8428 8.1019 9.6418 11.566 11.016 3.6595 1.4517 11.609 1.4756 16.74 0.05l-3e-4 5e-4zm-11.967-4.4795c-4.4914-1.1819-11.015-8.4998-11.931-13.385-1.5467-8.2454 6.4806-17.022 15.569-17.022 14.156 0 21.568 14.832 13.87 23.979-4.73 5.6216-11.344 8.0493-17.508 6.4275h3e-4zm10.525-5.8225c2.3145-2.7886 2.7-11.069 0.6603-14.182-2.0704-3.1599-3.8382-2.7529-10.495-2.7529v18.575c2.8056-1e-4 8.1833 0.3495 9.8345-1.6397zm136.03 7.3654c11.351-5.6057 14.868-19.051 7.7832-29.757-4.0299-6.0894-11.835-10.934-17.616-10.934-6.4249 0-14.921 4.5598-18.725 10.05-2.6775 3.8633-3.1284 5.5627-3.1284 11.79 0 5.8965 0.4991 8.0039 2.6331 11.118 6.5962 9.6264 18.697 12.847 29.054 7.7326zm-16.623-3.7331c-2.0455-0.5488-4.7823-2.6084-6.5559-4.9338-2.5146-3.2969-3.0443-5.084-3.0443-10.271 0-5.1904 0.4739-6.7869 2.7316-9.2031 8.5005-9.0977 21.594-7.7317 27.111 2.8281 4.0487 7.7493 1.8584 16.501-4.9953 19.96-4.0319 2.0349-10.959 2.7708-15.247 1.6199v2e-4zm12.05-16.744c1.8298 13.341 1.4651 12.463 1.842-4.7761-13.282 0.4287-13.388 0.8635-13.588 1.064-0.3555 0.3555-0.2651 3.303 0.2008 6.5498 0.8907 6.2073 1.2761 6.4973 9.8364 7.3987 1.776 0.1872 1.5892-6.6102 1.7091-10.236zm-3774 15.803c15.395-5.7598 21.186-22.345 13.032-37.325-10.316-18.954-38.108-18.633-48.108 0.5566-5.4851 10.525-3.5986 24.786 4.2456 32.098 7.3152 6.8181 19.969 8.7353 30.831 4.6711zm-15.778-11.953c-2.1462-1.1345-4.584-2.8848-5.4177-3.8892-3.3655-4.0552 0.3701-17.432 5.6589-20.262 3.1526-1.6873 10.942-0.6875 14.422 1.8506 3.2112 2.3428 6.1755 7.7898 6.1755 11.349 0 4.2668-3.3169 9.6033-7.0789 11.388-4.7329 2.2458-8.9385 2.1125-13.76-0.436v3e-4zm10.79-9.4365c1.2083-2.1594-0.729-6.762-3.063-7.2769-4.5532-1.0046-7.4539 2.3035-6.0095 6.854 0.8823 2.7805 7.5786 3.093 9.0725 0.4233v-4e-4zm144.2 18.007c12.578-6.0891 15.928-22.96 6.4783-32.626-4.9326-5.0449-9.0449-6.7827-16.052-6.7827-12.625 0-21.322 8.0977-21.243 19.779 0.123 18.406 16.903 26.365 30.816 19.63v-5e-4zm-16.972-5.3122c-13.533-8.251-8.3323-29.507 7.2195-29.507 8.8562 0 17.649 9.7043 16.121 17.792-2.1496 11.376-14.078 17.363-23.34 11.716zm11.092-10.475c1.5068-3.9263 0.6824-7.0596-2.1394-8.1326-4.4902-1.7073-7.0251-1.2678-8.0295 1.3928-0.9473 2.5088 0.2449 6.1074 2.5281 7.6318 2.168 1.4478 6.9578 0.8884 7.6414-0.8921h-6e-4zm88.683 14.965c5.9849-2.7183 12.126-10.104 13.411-16.129 1.9639-9.2083-2.2695-18.8-10.42-23.609l-3.7463-2.2104 3.3638-1.6294c9.3452-4.5259 14.232-16.532 10.822-26.586-4.9932-14.721-22.555-18.888-35.305-8.3782-5.437 4.4814-7.4949 8.9805-7.429 16.24 0.0977 10.629 4.397 13.55 12.4 20.4-4.136 3.2761-8.1289 5.8003-11.004 12.484-8.058 18.732 9.8587 37.617 27.908 29.419zm-16.664-6.6323c-7.5354-4.5947-9.728-12.757-5.5906-20.808 3.3147-6.4504 8.2295-9.0798 15.503-8.2944 6.3083 0.6814 9.8442 2.7712 12.748 7.5342 4.061 6.6604 2.2915 13.91-4.947 20.266-3.2122 2.8201-4.8467 3.4392-9.0701 3.436-3.1775 0-6.4905-0.8201-8.644-2.1333h-2e-4zm14.254-11.184c1.5803-2.5049-0.1318-7.3718-3.0627-8.707-5.9871-2.728-12.085 2.7903-8.5935 7.7756 3.0986 4.4238 9.1487 4.9072 11.656 0.9314h-3e-4zm-12.105-31.438c-8.957-4.0659-12.132-15.861-6.1753-22.941 8.1855-9.7278 21.869-8.6233 27.521 2.2217 6.9638 13.362-5.9761 27.697-21.346 20.719zm12.571-11.217c1.8149-2.187 0.9329-5.4175-2.0974-7.6799-2.1682-1.6187-3.2742-1.7908-5.6667-0.8811-3.6763 1.3977-4.6719 3.7576-3.0693 7.2742 2.1519 4.7229 7.459 5.3533 10.834 1.2866l-3e-4 2e-4zm76.428 58.622c13.334-7.8137 14.119-28.774 1.3926-37.196l-4.3301-2.8655 4.2065-3.0474c7.9919-5.7891 11.34-19.008 7.0857-27.974-4.1108-8.6624-15.846-13.936-25.329-11.382-10.32 2.7788-17.662 14.106-16.175 24.954 0.8 5.8364 5.1301 13.727 8.8813 16.186l2.6443 1.7322-3.1562 2.656c-4.304 3.6213-8.7893 12.969-8.7893 18.317 0 5.7451 3.6921 13.16 8.3044 16.678 8.3687 6.3831 16.607 7.0164 25.265 1.9424zm-17.724-4.3059c-5.0752-2.7422-6.8748-4.7686-8.8665-9.9832-2.2979-6.0171-0.9675-11.512 3.9216-16.196 4.3472-4.165 13.852-5.0952 19.609-1.9189 9.6025 5.2976 10.171 20.097 1.0288 26.795-3.9617 2.9026-11.564 3.5334-15.693 1.3027h4e-4zm10.924-10.103c1.7148-1.2603 3.9514-5.7195 2.8682-5.7195-0.5359 0-1.2302-0.9775-1.5425-2.1724-0.7419-2.8369-5.4609-4.627-8.8252-3.3479-2.7244 1.0359-4.4756 3.8716-4.0837 6.6128 0.5676 3.9722 8.281 7.0533 11.583 4.627zm-10.664-32.377c-5.3677-1.9619-7.3848-3.7209-9.1733-7.9995-2.043-4.8872-1.8401-8.4106 0.7798-13.546 6.5913-12.92 28.81-10.71 30.208 5.28 1.0449 11.961-10.349 20.456-21.814 16.265v3e-4zm11.025-18.675c-2.7876-3.5439-7.7637-3.6992-10.133-0.3162-2.2974 3.28-2.1421 5.1562 0.6748 8.1543 6.1282 6.5232 14.634-1.2592 9.4583-7.8381zm75.456 65.29c12.162-7.5193 15.366-28.192 0.6655-37.713-2.0874-1.3521-3.7996-2.7041-3.8054-3.0046-0.011-0.3003 1.4736-1.5295 3.2881-2.7314 1.8142-1.2021 4.6399-4.1101 6.2793-6.4626 2.5198-3.6152 2.9812-5.4036 2.9812-11.552 0-6.1531-0.4756-7.9946-3.0842-11.936-7.7563-11.721-27.537-12.228-36.087-0.9265-7.4871 9.897-5.5662 24.59 4.1877 32.03l3.8254 2.9177-2.7234 2.1423c-5.105 4.0156-8.7126 11.706-8.6145 18.364 0.2709 18.377 17.758 28.351 33.088 18.873zm-18.158-4.5838c-5.7808-2.6707-9.0276-7.7576-9.0332-14.152-0.0107-12.256 12.49-19.13 24.055-13.23 16.565 8.4507 3.1411 35.775-15.022 27.382h2e-4zm9.4624-9.3254c4.1492-2.1455 5.2568-7.9246 2.0493-10.692-6.9495-5.9966-15.835 3.1868-9.5798 9.9006 2.6306 2.824 3.4363 2.9087 7.5303 0.7915h2e-4zm-12.71-34.413c-5.0383-3.072-7.24-7.9553-6.5981-14.635 0.4365-4.5408 1.1929-6.0979 4.3857-9.0237 8.7791-8.0452 22.927-5.2183 26.945 5.3838 5.4169 14.298-12.768 25.57-24.732 18.275zm15.867-11.892c0.4346-4.5339-2.2764-7.8196-6.4509-7.8196-4.8877 0-8.0681 4.6836-5.6284 8.2883 1.5054 2.2239 5.1677 3.72 8.4514 3.4517 2.8535-0.2327 3.3232-0.7402 3.6279-3.9207v3e-4zm70.75 61.134c11.521-5.2327 20.651-24.317 4.3325-37.958l-4.8784-4.0774 3.7473-2.5461c7.9351-5.3921 11.351-16.225 7.7974-24.729-2.1672-5.1865-10.716-12.267-16.599-13.748-13.691-3.4473-27.012 9.2749-25.254 24.119 0.7664 6.4717 4.6072 12.965 9.3127 15.744l3.2043 1.8931-3.1843 2.6792c-7.3174 6.1575-11.109 17.235-8.5605 25.009 4.2625 13.001 17.871 19.16 30.081 13.614l3e-4 -5e-4zm-18.928-8.1978c-11.554-10.438-5.2861-26.892 10.238-26.88 20.38 0 21.369 28.58-0.1619 30.365-5.3088 0.4402-5.9943 0.2029-10.077-3.4849zm12.403-7.8874c6.499-3.084 4.4326-10.256-2.9551-10.256-5.7998 0-8.5703 7.1255-4.0122 10.318 2.9563 2.0706 2.4626 2.0747 6.9673-0.0623v-5e-4zm-8.303-31.148c-12.214-4.8564-13.908-21.37-2.8896-28.179 10.146-6.2708 23.635 1.5286 23.646 13.672 0.0109 10.428-11.24 18.291-20.756 14.507zm9.2876-11.056c1.4436-0.136 1.7144-5.2046 0.4084-7.645-1.5706-2.9341-9.3098-2.6804-10.267 0.3367-1.6975 5.3477 1.4617 9.1562 6.5808 7.9333 1.2021-0.2871 2.677-0.5684 3.2781-0.625h-2e-4zm1944.8 30.309c4.0271-5.3184 16.298-27.2 37.883-59.635 20.666-31.055 21.08-35.067 32.096-52.362 5.3973-8.4746 11.97-20.321 15.603-26.77 1.651-447.24 5.5481-955.24-3.6627-1329.9-17.43-33.892-36.33-80.429-105.24-217.67-19.863-1.386-18.838-1.42-303.3-0.7571 0.0745 11.92 0.5374 86.101 0.6119 98.051 4.691 5.725 2.9749 3.6306 7.8459 9.5753h24.464c10.041-10.288 6.3678-6.524 16.794-17.206v-58.186h53.031c8.347 8.373 15.519 15.568 23.866 23.941 0.3379 11.233 0.6283 20.885 0.9662 32.118-9.1849 8.5521-6.0371 5.6212-15.582 14.509v18.781c6.918 6.5834 12.862 12.24 19.78 18.823h69.382c12.399 12.508 26.605 26.839 39.004 39.346-0.0574 11.945-0.4152 86.437-0.4727 98.423 10.081 10.888 22.701 23.039 17.174 44.72-7.8243 30.69-45.112 39.11-66.232 16.778-7.9261-8.3807-10.157-14.056-10.259-26.102-0.0765-8.9873 0.2267-10.484 3.4508-17.037 4.1866-8.5083 9.3263-13.763 12.309-17.152v-79.38c-5.9053-5.9402-10.98-11.044-16.885-16.984h-135.87l-11.359 13.112h-42.153c-5.9502-6.1144-11.063-11.368-17.013-17.482h-54.215c-2e-4 0.1282-0.2808 304.44-2.8867 307.04-1.573 1.5712-138.22 1.1653-266.69 1.1251-1.2354 40.908-1.4368 39.374-1.4368 148.26 3.842 2.6624 8.0652 5.16 12.477 11.605 6.2361 9.1095 7.5825 13.938 7.6646 27.481 0.0657 10.8-0.2183 12.629-2.7937 18.029-6.521 13.672-16.194 22.004-29.827 25.695-45.885 12.42-76.215-47.068-36.791-80.98l2.8079-2.4154c0.8799-155.3 2.0059-142.99-3.7275-149.15-44.269 1.2078-57.432 1.6139-57.561 1.7697-0.3608 0.4357-1.9419 32.21-3.5183 33.786-3.8484 3.8485-3.4585-4.8699-3.4585-41.806 11.758 0.0905 63.099 0.4849 74.846 0.5751-0.0144 8.8269-0.2468 150.18-0.2615 159.01-12.297 11.268-20.407 17.448-20.312 35.482 0.2266 43.286 54.012 51.188 71.031 16.019 2.5657-5.3019 2.9993-7.5895 3.0381-16.019 0.0391-8.6064-0.3362-10.61-3.0083-16.051-2.905-5.9156-13.639-17.275-16.325-17.275-1.2661 0-0.5337-158.46 0.7419-160.52 0.9165-1.4825 196.69-0.1031 268.31 0.2562 0.6318-227.74 0.7864-40.182 1.0901-309.57h63.92c9.9757 11.56 6.1278 7.1012 16.024 18.57h36.486l14.078-14.204h138.59l21.547 21.169v86.54c-4.0212 3.3615-8.7881 6.7524-12.577 14.23-2.8759 5.6764-3.2635 7.5577-3.2393 15.735 0.0328 11.177 2.7367 17.587 10.182 24.14 16.421 14.454 41.294 9.9629 51.252-9.2549 2.4531-4.734 2.9087-7.0311 2.9531-14.886 0.048-8.5521-0.2437-9.8336-3.6868-16.184-4.3102-7.9493-8.063-10.002-13.197-13.688v-100.61l-34.419-35.05-70.442-1.0927c-8.4191-8.3942-15.653-15.607-24.072-24.001v-20.377l16.39-15.471c-0.0236-3.5663 0.0435-22.728-0.8961-24.944-0.9419-2.2222-16.671-16.468-20.012-19.555h-45.743v54.576c-5.2347 2.76-5.0276 2.1687-19.053 16.446-3.1669-0.0027-37.953 0.1992-39.548-0.8359-2.2941-1.4893-5.1948-259.02-3.0389-269.8 0.3831-1.9147 1.4888-3.7853 2.4572-4.1569 0.4509-0.1731 471.29-4.3928 563.99 2.6443 0.1129 0.0086 238.67 15.374 240.86 15.374 0.9208 0 2.8735 2.3668 4.3395 5.2594 3.1912 6.2974 10.068 12.771 16.666 15.69 4.3152 1.9087 6.9188 2.0931 25.265 1.789 17.74-0.294 21.034-0.6257 24.824-2.4997 6.3185-3.1236 13.049-10.537 17.17-18.914 3.2533-6.6116 3.5897-8.2195 3.5897-17.149 0-8.6909-0.3788-10.625-3.2119-16.395-6.1-12.424-17.369-20.84-29.596-22.102l-6.1353-0.6332c6.8092-6.895 4.4701-4.5264 11.552-11.698 108.74-0.3942 100.65-2.3143 102.08-1.4523 0.2163 0.1296 0.4479 2.7308 0.5148 5.7806 0.1038 4.7358 0.6378 6.0456 3.6595 8.9741 3.021 2.9282 3.791 3.2189 5.2714 1.9904 0.9572-0.7944 1.4375-2.2165 1.0728-3.1757-0.5327-1.4-0.3915-1.4697 0.7273-0.3591 1.6051 1.5935 0.3463 2.4196-3.4149 6.1809-4.6943-4.5498-2.8574-2.7694-7.5211-7.2897l0.1508 28.945 3.8545 4.1921c2.1198 2.3057 4.1816 3.9899 4.5815 3.7426 0.8932-0.552 1.252 2.3682-0.6815 2.3682-0.7749 0-1.2065-0.3273-0.9595-0.7272 0.6564-1.0622-8.1941-8.1041-8.1941-9.9377 0-0.832-1.1654-1.0301-3.4144-0.5803-4.2985 0.8597-22.725 0.6829-27.18 0.6829 0 10.15-0.2574 14.204 1.5791 14.204 1.9572 0 1.9001-5.0031 2.2451-10.38h27.316c1.302 13.731-0.2893 29.331 2.5326 32.553 1.5262 1.7431 1.5293 1.8877 0.0262 1.3112-1.4081-0.5403-1.7085 0.5162-1.8081 6.3585-0.1038 6.0583 0.2336 7.3382 2.4886 9.4567 1.4343 1.3475 3.1305 2.1272 3.7689 1.7325 0.7183-0.4439 0.9042-0.0483 0.4875 1.0374-0.5925 1.5439-0.9608 1.485-3.0627-0.4896-1.3141-1.2345-2.7263-2.2446-3.1383-2.2446-1.4851 0-0.7079 4.7902 1.1019 6.79 1.7394 1.922 1.7394 2.0024 0 1.3349-1.2004-0.4606-1.8508-0.1685-1.8508 0.8313 0 2.1938-7.8059 8.4801-6.9952 9.7919 0.3126 0.5057-0.1119 0.9195-0.9432 0.9195-0.8314 0-4.4252 3.3125-7.9862 7.3611-9.7361 11.069-42.645 43.83-42.259 45.206 0.1501 0.535-0.3319 0.9728-1.0714 0.9728-0.7396 0-17.146 16.103-36.458 35.784-33.464 34.104-35.209 35.701-37.171 33.999-5.8711-5.0907-11.662-6.9407-21.726-6.9407-11.401 0-15.517 1.6674-23.331 9.4513-9.0438 9.0092-9.2905 15.46-10.292 22.766h-25.643l-1.3816-4.9348c-4.3073-15.384-18.913-25.832-33.733-24.129-34.269 3.9368-39.864 47.524-13.792 61.019 6.1063 3.1608 18.22 3.8475 25.458 1.4435 10.638-3.5336 19.93-13.033 21.635-22.119l0.6813-3.6312h28.129c4.4811 8.8428 8.4642 17.215 19.232 22.484 5.1761 2.5325 6.9153 2.829 14.38 2.4518 5.2369-0.2646 10.166-1.218 12.862-2.4873 6.1406-2.892 59.786-57.441 110.85-107.26 35.94-35.062 54.646-54.241 54.667-56.049 0.0109-0.8513 0.3466-1.219 0.7485-0.8171 1.0669 1.0668 4.8057-2.642 3.9915-3.9594-0.3792-0.6135-0.1774-0.799 0.4483-0.4124 1.5232 0.9413 3.9672-2.1265 3.2281-4.0522-0.3929-1.0238 0.0175-1.3715 1.2435-1.0519 2.3074 0.6016 6.0667-5.0389 8.5959-8.3323-0.6504-31.716-0.4948-36.455-2.6016-38.01-1.7361-1.2819-1.7364-1.3658 0-1.3658 1.3747 0 1.8477-0.9557 1.8477-3.7333 0-2.0532-0.6146-3.9586-1.3658-4.234-1.0927-0.4006-1.0927-0.7903 0-1.9485 0.8211-0.8704 1.3658-4.4577 1.3658-8.9947 0-6.7128-0.2113-7.4733-1.9122-6.881-1.7457 0.6079-1.7565 0.5442-0.1231-0.733 2.2572-1.7651 2.7985-16.021 0.6597-17.38-1.0767-0.6838-1.0748-0.8646 0.0109-0.878 2.0801-0.0253 1.5861-25.148 0.2731-25.148-1.4623 0-1.4512-2.5358 0-1.639 1.4384 0.8889 1.6045-7.0698-0.2731-7.1885-1.0695-0.0676-1.0646-0.2075 0.0219-0.6447 1.9426-0.7816 1.8576-50.581-0.0863-50.71-0.9386-0.0621-0.9206-0.2399 0.0645-0.6373 1.7484-0.7055 1.8811-8.0113 0-8.0343-1.0464-0.0128-1.0325-0.2281 0.059-0.9205 1.9385-1.2296 2.9441-41.676 1.0361-41.676-0.9215 0-0.9077-0.3516 0.0524-1.3112 1.6936-1.6936 1.3111-17.453 1.3111-27.098h-42.613c-0.2109 37.931-2.3781 38.834 0.8356 37.994 2.8633-0.7488 2.5704 2.1655 0.3485 2.0096-2.641-0.1853-2.8906 17.545-0.2903 20.616 1.735 2.049 1.7308 2.0877-0.0742 0.69-1.729-1.3389-1.9122-1.154-1.9122 1.931 0 1.955 0.5831 3.4485 1.3658 3.498 1.0927 0.069 1.0927 0.1965 0 0.6374-2.2772 0.9188-1.562 6.3596 1.1737 8.9297 1.3969 1.3121 2.9507 2.0125 3.4531 1.5563s0.5842-0.2543 0.1816 0.4488c-0.4025 0.7031 0.4021 2.1782 1.7883 3.278 3.3895 2.6892 4.2998 4.3671 2.3694 4.3671-0.875 0-1.5909-0.5794-1.5909-1.2875 0-1.8612-3.8379-5.0574-4.9076-4.087-0.4983 0.452-0.5929 0.273-0.2102-0.3979 0.3827-0.671-0.2761-2.0993-1.4639-3.1741-2.0822-1.8844-2.1595-1.8765-2.1595 0.2205 0 1.9484 12.404 3.624-339.77 3.6271-0.6249-2.4898-1.4637-5.498-0.8768-6.0851 1.0096-1.0095 503.31-0.4452 149.44-2.066-159.1-0.7287-109.03-0.8342-149.7-1.6774v-9.8339c6.2948 0 8.3811 0.4996 11.64-3.0048 5.562-5.9813-0.5085-7.3472-0.6482-38.172-0.1082-23.972 0.9484-23.094-29.153-24.211-13.148-0.4877-25.135-0.56-26.637-0.1607-5.233 1.3906 0.4651 3.4054-4.9104 13.282-2.6469 4.8631-2.8359 5.993-2.1205 12.674 0.681 6.3596 1.3499 8.004 5.0309 12.369 8.6342 10.24 8.7991 8.6473-60.1 8.6473-2.7717-12.925-3.3557-14.481 0.0693-14 1.9354 0.2716 2.582-0.3313 3.1487-2.9361 0.5729-2.6343 0.7383-2.159 0.8422 2.42 0.1455 6.415 1.7083 7.9711 7.9792 7.9453 7.5353-0.031 8.5398-0.8109 8.5398-6.6304 0-4.3284 0.5997-5.981 3.2778-9.0312 3.8192-4.3499 4.3093-9.2751 1.2025-12.087-2.8514-2.5805-8.7859-2.6147-10.653-0.0615-2.2164 3.031-1.8306 8.5902 0.7588 10.934 1.7952 1.6246 2.1714 3.1093 1.9121 7.5447-0.3706 6.3381-0.1981 5.5101-7.6726 6.2254 0.2776-10.656 0.5162-19.812 0.7938-30.468-138.53-141.99-125.28-127.57-136.88-140.6-72.517 0.4384-81.732 0.3807-106.27 1.854-119.78 123.3-172.35 168.35-191.73 193.46-0.1321 11.248-0.9597 81.738-1.0927 93.06-7.834 0.2178-14.565 0.405-22.399 0.6228v-135.79c174.98-177.76 150.47-153.63 187.83-188.81 4.2051-0.0174 10.825 0.2975 15.954-2.0385 5.8732-2.6749 12.292-10.018 13.851-15.846l1.2706-4.7512c31.135-1.905 160.84-3.0018-0.3706-3.5873v-5.4632c71.845-0.0112 80.834 0.1298 121.83-1.39 164.19 165.66 163.12 164.97 167.72 165.44 2.1034 0.2154 81.61 0.3917 176.68 0.3917 173.95 0 178.16-0.0851 174.72-3.5329-1.5768-1.577-348.33-3.0583-352.54-4.2084-2.3519-0.6423-141.14-141.23-140.7-142.53 0.5369-1.6073 99.259-1.8479 100.7-3.2239 0.5072-0.4827 0.7463-1.7903 0.5316-2.9059-0.3728-1.9369-2.7144-2.041-52.003-2.3121-29.776-0.1638-51.613 0.1291-51.613 0.6921 0 0.5367-1.1 1.2635-2.4445 1.6152-2.7911 0.7299-5.2277-2.3499-16.927-14.915-15.367 0.1401-111.02 1.0118-126.42 1.1522-8.8091-7.3154-13.61-12.054-23.568-12.17-10.806-0.1256-20.881 8.5657-22.59 19.487-1.3401 8.5621-101.87 104.48-200.31 205.77v148.85h-52.222c-2.0889 74.229-6.1913-71.106-1.1986 318.34l-18.099 18.194h-117.38l-18.661-19.121-0.0457-26.272 18.575-18.478v-31.776c-7.3826-7.3547-13.726-13.674-21.307-21.227l-34.767-0.3248-18.125 19.407-0.1006 32.528c11.713 11.944 7.5454 7.6942 19.668 20.055v29.032l-20.76 21.427v27.861l19.668 20.33v144.33c-149.38 0.0737-269.79 2.37-303.5-0.1854-18.382-63.238-29.547-99.898-46.69-156.61l-51.901-0.5859v-61.787c8.802-4.0402 19.068-7.9795 26.254-21.411 3.2454-6.0658 3.7468-8.1036 4.1216-16.74 0.3528-8.1443 0.0176-10.92-1.9556-16.154-2.8887-7.6664-11.875-17.801-18.892-21.305-20.422-10.199-44.384-1.6829-54.134 19.239-2.4546 5.2677-2.8882 7.6808-2.8799 16.035 0.011 8.4795 0.439 10.77 3.1233 16.633 3.5884 7.8362 11.955 16.402 19.691 20.16l5.0369 2.4471c-0.1929 20.798-0.3857 41.578-0.5789 62.376l-325.11 0.5536c-3.4692 8.1737-7.478 27.248-10.248 39.896-27.357 124.9-81.488 332.96-81.515 333.1-1.1716 5.9067-1.0994 6.5936 0.9036 8.5964 2.0991 2.0994 2.1987 2.1041 2.7925 0.1364 17.936-59.446 90.191-366.49 92.589-375.17 18.147-0.0306 308.95-0.5226 327.15-0.5533-0.1284-28.293-0.1348-29.104-0.5469-74.37l-4.6997-1.3877c-6.8835-2.0325-14.785-8.5554-18.6-15.354-2.6611-4.7428-3.397-7.5261-3.7917-14.343-0.6333-10.94 1.5618-17.759 8.0354-24.959 7.0374-7.8275 13.06-10.399 24.52-10.468 8.0129-0.048 10.037 0.3419 14.751 2.8438 17.081 9.0659 23.004 28.562 14.948 44.928-6.4919 13.187-15.223 16.766-27.542 19.405 0.1562 20.042 0.4836 62.007 0.575 73.705l52.42 1.0927c4.5911 9.6313 26.337 85.982 47.663 155.71l312.94-0.5537 0.561-153.05-18.59-18.673v-23.605c11.713-11.944 7.5454-7.6942 19.668-20.055v-37.126l-18.575-18.097 0.022-26.59c9.4839-10.126 6.0144-6.4215 15.862-16.936h27.232c11.93 11.875 7.3284 7.2944 19.165 19.076v24.129l-19.668 19.577v33.831l21.307 20.264c77.019-0.1125 48.636-0.0708 125.65-0.1847l21.853-23.665 37.696-0.153v3.6506c0 26.887 34.725 38.842 49.229 15.374l2.3287-3.7678c12.449 10.784 12.712 11.015 33.443 30.634h68.177c15.979 15.004 10.49 9.8497 27.11 25.455v99.107h5.4633v-102c-9.7446-9.7831-18.118-18.189-27.862-27.972-20.457-0.4261-37.592-0.783-71.022-1.4791-8.9949-7.9716-9.9608-8.8458-33.872-30.435-1.5463-16.358-0.8875-15.903-6.2483-21.459-9.1586-9.491-16.335-8.9352-20.233-8.9626-0.038-1.6704-1.2261-47.27-0.6194-48.35 0.1895-0.3376 1.9124-0.8195 36.207-0.8195l17.664 16.617v18.949l-16.39 16.28c0 3.9957-0.254 21.644 0.9785 24.885 1.2401 3.262 23.633 23.646 28.448 28.125h67.652c10.85 10.743 21.565 21.352 32.4 32.081 0.083 12.434 0.5997 89.87 0.6829 102.34 9.9976 9.9977 15.379 14.146 15.379 26.334 0 22.425-27.469 33.756-43.215 17.826-10.388-10.51-9.7078-27.836 1.5183-38.655l5.1387-4.9523c0.1895-11.368 1.3756-82.525 1.5664-93.968-8.2833-8.0925-15.401-15.046-23.684-23.138-17.795-0.1815-128.57-1.3113-146.42-1.4933l-13.412 14.793c-15.592 0.2014-16.959 0.3651-31.766-1.0883l-14.641-18.029h-72.937c-0.3518 111.23-0.5039 129.74-1.6389 309.77h-267.66c-1.3108 7.3821-1.5486-4.1744-1.5889 169.36 12.854 9.4965 18.605 12.576 19.406 29.292 0.3735 7.7937 0.1118 9.1355-3.0259 15.509-13.897 28.229-56.388 22.351-58.835-11.602-1.2039-16.701 7.9783-25.022 19.966-33.434 0.1052-26.674 0.5645-143.07 0.6694-169.67-92.094 0-94.091 0.6675-94.091-4.0428 0-1.6219 20.98-1.4204 103.07-1.4204-1.2261 106.81-1.4485 121.32-1.4507 184.69-10.41 4.646-13.594 5.4615-16.894 13.362-8.1641 19.54 13.665 38.159 31.162 26.58 14.107-9.3357 12.171-30.526-3.4182-37.404l-4.3054-1.8995 0.5586-184.78 268.79-0.293v-5.1703l-379.11-1.0927c-2.3787-8.5762-78.446-267.49-81.948-270.4-2.4128-2.0024-371.53-2.597-374.5-1.8538-4.5774 1.1488-0.0437-8.5857-74.756 295.19-56.211 228.55-116.18 441.94-118.5 451.26-2.6868 10.797-3.8147 13.089-7.197 14.63-3.8994 1.7766-5.2983 1.5264-9.0322-1.6155-4.4795-3.7693-4.3799-6.26 1.0896-27.264 2.448-9.4017 4.2522-17.293 4.009-17.536-0.9929-0.993-209.78-0.6091-210.78 0.3875-0.9946 0.9945-3.2522 124.82-1.4595 182.18 29.497 0.1772 181.54 0.8904 182.48 1.8259 3.657 3.6584-83.358 293.38-106.29 376.39l5.6138-1.5061c11.676-3.1331 28.139-1.2168 34.842 4.0559 3.3655 2.6472 2.8794 2.2046 259.53 2.2046 7.8794-28.504 47.215-189.88 47.223-191.51 0.011-1.8506 9.2566-1.9353 202.21-1.8518 155.77 0.0676 202.29 0.3872 202.6 1.3931 0.0337 0.1106 55.903 186.94 55.938 187.06 90.444 1.2649 95.332 1.6606 281.89 1.0925-32.746-106.03-58.656-176.21-58.59-177.47 0.1875-3.5906 18.734 48.344 28.044 70.824 7.8438 18.938 37.895 111.1 36.802 112.87-0.6738 1.0906-235.96 0.6804-292.7-1.8545-59.297-202.4-41.422-142.38-53.108-182.2-2.0996-7.1538-3.2422-8.3323-6.2358-6.4338-1.6897 1.0718-0.1394 7.7961 9.1013 39.487 4.8093 16.494 43.855 155.25 45.113 156.38 1.4011 1.2615 306.7 2.9622 307.94 1.7153 0.2361-0.2363-32.586-105.88-40.319-125.32-16.887-42.442-41.137-122.75-72.197-204.87-1.3928-105.18-1.6018-115.82-1.8176-190.12l-4.9734-2.6384c-6.0464-3.2078-14.958-12.73-18.553-19.826-6.1831-12.202-5.9448-29.763 0.5864-43.189 8.3245-17.113 30.232-28.555 48.901-25.542 40.168 6.484 57.248 60.362 19.708 87.997l-6.7803 4.9912c0.0249 5.4075 0.4133 127.48 1.1616 130.6 0.5444 2.27 0.9739 2.3411 10.68 1.762 12.613-0.7527 19.304 0.7573 27.858 6.2864 7.7332 4.9983 13.416 12.835 16.498 22.754 8.0149 25.79-8.011 53.696-32.502 56.597l-5.3269 0.6309c11.456 33.341 77.004 229.39 83.212 252 3.0293 11.032 3.0562 11.364 1.0398 12.839-4.9009 3.5835-3.863 5.8782-19.079-42.193-73.929-233.56-83.513-234.92-74.963-231.66 1.614 0.6135 6.2214 1.1106 10.239 1.1047 26.907-0.0383 38.745-31.555 29.989-50.611-5.7891-12.599-14.889-19.237-27.62-20.148-13.589-0.9722-25.146 5.6516-32.256 18.488-2.9822 5.384-3.2368 6.7031-3.2358 16.77 7e-4 9.9153 0.2917 11.482 3.1448 16.936 9.2971 17.771 0.1284-10.088 43.48 117.46 73.184 215.32 56.3 181.5 76.381 234.67l-352.06-0.9958c0.2615 1.041 1.2991 5.5054 1.8347 6.0403 1.9985 1.9988 373.12 2.2583 375.81 2.2595-4.4482-1.8291-11.964-4.6997-17.224-8.332-9.8345-6.7915-18.287-23.065-18.287-35.208 0-7.0696 2.7729-17.191 6.3179-23.06l2.9695-4.917c0.0234-17.737 0.8015-611.08 0.8247-628.82-98.849 0-300.76-0.1836-300.76 0.9424 0 0.5182 4.8743 16.621 10.832 35.784 34.104 109.71 51.96 173.57 149.86 462.61 31.363 92.598 22.81 69.355 30.952 92.708 4.5159 12.953 4.8228 16.008 1.7722 17.641-2.7327 1.4629-99.615 0.8408-186.31 0.5645-15.483-8.2803-9.0452-2.0098-33.874-78.671-17.194-53.085-32.155-105.47-34.315-107.88-0.332-0.3696-32.517-0.8667-461.01-1.7502-42.371 160-44.81 189.3-50.663 193.99-1.7041 1.3662-46.345 1.9102-132.7 1.6167-65.112-0.2212-59.954 0.033-65.345-4.332 19.826-77.115 119.62-390.68 318.07-1177.6h279.27c6.5325 18.699 133.06 435.15 144.37 470.13 8.0886 25.021 3.8945 33.219 18.039 51.067 322.19-0.2678 301.14 1.4214 305.37-7.4923 2.7219-5.7362 1.9915-32.69 0.3433-115.27l-8.2927-4.0865c-14.965-7.3744-26.332-22.051-26.313-33.975 0.0188-11.803 2.0554-23.313 5.1394-29.042 4.573-8.4954 14.045-17.389 23.494-22.059 37.666-18.616 81.243 19.625 62.764 62.449-2.6846 6.2212-2.7488 7.032-3.4438 43.489-0.6868 36.008-1.3577 524.25 0.8811 749.6 5.5469 3.1626 22.754 11.448 31.267 29.286 2.2815 4.7803 4.1318 7.2236 5.8115 7.6738 3.2429 0.8694 86.424 0.689 90.629 0.6904l7.6421-8.1831c34.737-37.197 87.828-9.5684 84.717 35.829-0.5048 7.3652-1.3152 10.206-5.0748 17.794-7.2292 14.589-19.274 23.205-35.676 25.522-7.8014 1.1016-19.358 0.0415-23.457-2.1519-3.2128-1.7192-339.21 0.219-469.24-2.4641l5.6912 5.1304c14.212 12.812 20.453 37.966 9.9795 57.616-4.2896 8.0479-14.354 17.664-22.465 21.465-5.668 2.6562-7.551 2.96-18.336 2.96-11.401 0-12.356-0.1787-18.575-3.4729-10.505-5.5652-17.377-12.386-22.095-21.932-4.0239-8.1414-4.1289-8.6614-4.1289-20.43 0-11.378 0.2078-12.518 3.5964-19.724 4.2332-9.0027 8.6223-12.392 19.226-22.399-39.979 0-42.811 0.2778-43.999-1.9424-1.9951-3.729-29.778-105.92-34.208-114.25-0.959-1.8027-1.6589-1.3928-6.7148 3.9294-3.1042 3.2678-6.7046 6.646-8.0005 7.5066-2.3516 1.5623-2.3574 1.6836-3.0774 62.722-0.3965 33.636-0.3198 61.665 0.1709 62.286 2.6135 3.3071 27.606 13.46 29.54 41.759 2.2004 32.19-22.122 55.469-52.98 50.709-40.457-6.2407-56.162-61.851-17.06-88.766l4.4988-3.0967c1.3162-98.461 2.4634-130.16-1.8132-132.8-1.0508-0.6494-312.14-0.9849-319.67-0.9968-18.315 78.4-10.311 45.681-32.55 138.71 3.5762 3.8513 7.4438 7.4714 12.057 16.721 3.6338 7.2859 4.0664 9.0952 4.4417 18.575 0.3425 8.6482 0 11.757-1.9644 17.605-14.907 44.474-73.283 44.903-91.878 7.125-3.6731-7.4617-3.7537-7.9202-3.7537-21.363 0-13.712 0.011-13.754 4.1646-22.164 9.0149-18.24 25.035-28.282 45.551-28.551l8.1948-0.1072c14.308-53.295 31.454-136.81 38.047-151.28h329.63v-7.6487c-169.03-0.502-340.33 0.2227-340.7 0.5581-0.1223 0.1096-27.592 109.52-30.955 126.19-10.486 0.0325 1.0955 0.0308-247.77-0.0283 1.1343 16.075 3.1165 29.582-12.007 46.13-9.9329 10.868-23.002 15.807-39.159 14.799-17.274-1.0776-31.216-10.746-38.975-27.029-3.2263-6.7703-3.384-7.7402-3.3787-20.76 0.0159-19.392-1.0823-7.0542 25.505-99.431 18.057-62.74 28.911-98.384 28.414-98.808-0.3513-0.3008-40.812-0.8005-104.83-1.5461 0.0356 18.67 0.6082 318.17 0.644 336.91l21.853 39.335c13.139 0.0896 84.377 0.8743 83-0.4009-0.5784-0.5356-3.0183-1.5913-5.4219-2.3459-27.527-8.6409-41.331-46.676-17.536-70.528 22.055-22.107 59.679-16.567 74.662 10.993 2.6963 4.9597 2.9702 6.5212 2.9702 16.936 0 10.191-0.3308 12.179-2.9604 17.791-1.6284 3.4749-4.8245 8.6003-7.1023 11.39-4.8413 5.9285-15.359 13.081-20.713 14.085-2.0593 0.3862-3.4348 1.0125-3.0564 1.3906 1.0454 1.0452 1005.1 0.6755 1081.1 2.1172 7.0706 0.1343 472.47 2.927 475.77-1.4287l-1e-4 -9e-4zm-158.08-49.715c-4.823-1.4514-17.16-8.7017-21.54-12.659l-4.0348-3.645c-11.747-0.0767-85.253-0.5562-97.077-0.6333l-5.7756-3.043c-6.6685-3.5134-14.438-10.176-14.438-12.381 0-0.8315-0.4916-1.5117-1.0927-1.5117-0.601 0-1.0927-0.7375-1.0927-1.6389 0-0.9016-1.1062-2.7454-2.4584-4.0977-2.0887-2.0886-2.4366-3.5366-2.3134-9.6265 0.1704-8.4202 2.5636-13.825 8.7766-19.822 8.4871-8.1914 6.4786-7.9473 67.474-8.2126 29.998-0.1306 54.92-0.6223 55.382-1.0925 1.1116-1.1321 54.972-111.17 56.705-114.7 0-401.82 0.1393-448.37-1.448-565.2l-4.4656-2.3052c-7.4058-3.8231-15.625-10.538-19.124-15.625-6.2795-9.1268-8.1616-15.411-8.2208-27.45-0.048-9.7328 0.2797-11.643 2.9987-17.482 4.7158-10.127 7.9882-14.198 18.958-23.58 5.5822-4.7745 10.686-9.6843 11.342-10.91 1.0312-1.9268 2.0975-43.3-0.327-67.542 4.6836-4.9106 39.617-41.377 42.51-45.15 2.6437-3.4485 2.2708-2.1777 1.2904-107.4-15.562-14.879-20.462-18.913-23.948-30.112-7.7683-24.96 8.1646-54.476 33.307-61.703 4.698-1.3503 9.2644-1.7334 16.936-1.4204 13.532 0.552 22.349 4.3711 31.659 13.714 23.7 23.784 18.975 60.502-10.025 77.896l-6.3521 3.8102 0.177 108.98c-5.2556 5.3439-46.062 46.602-49.231 50.889-2.9276 3.9596-2.4814 2.89-2.014 65.202 8.9341 9.2139 14.336 13.927 19.244 24.205 4.0029 8.3839 4.1002 8.8854 4.1002 21.153 0 11.323-0.2875 13.179-2.9069 18.766-3.2921 7.0227-10.115 14.904-17.009 19.647l-4.6688 3.2123c0.1316 74.714-0.0438 87.296 1.5743 82.905 4.9139-13.332 12.023-21.938 22.284-26.978 5.5153-2.7084 7.377-3.0389 17.115-3.0389 9.8281 0 11.571 0.3164 17.337 3.1477 7.4867 3.6759 13.519 10.412 17.493 14.474l13.793-13.391v-78.647l-6.6183-4.6672c-15.717-11.084-24.147-30.818-20.809-48.716 6.7466-36.172 45.604-51.466 75.272-29.626 12.384 9.1165 18.306 22.745 17.517 40.308-0.3953 8.793-0.9425 11.055-4.4124 18.233-4.7059 9.736-12.045 17.117-16.092 21.585 2.4176 39.785 2.0853 41.192 0.8815 74.685 14.395 17.749 25.128 29.817 22.001 52.32-2.0876 15.023-11.208 28.989-22.79 34.898l-4.5222 2.3071v200.82l5.5416 4.0679c11.561 8.4866 19.673 23.003 20.461 36.617 1.7314 29.908-24.327 53.988-53.16 49.125-10.757-1.8145-19.902-6.4836-27.416-13.998-12.11-12.11-16.355-25.974-13.155-42.971 2.9401-15.618 12.035-22.968 23.915-34.635-0.0679-11.445-1.1549-194.73-1.2228-206.17-7.7516-7.4341-8.6486-8.1355-13.874-14.928-3.6768 2.9429-7.4263 6.2449-13.751 9.0994-10.2 4.604-29.005 2.4153-38.727-4.5073-1.7222-1.2266-3.4928-2.2297-3.9346-2.2297-0.3628 0-0.6978 29.27 0.8242 455.47-6.2389 12.719-45.335 92.426-51.616 105.23l4.5006 5.1028c12.415 14.077 16.11 33.093 9.6956 49.893-6.7271 17.618-32.2 30.862-49.4 25.686l-6e-4 -1e-4zm26.843-11.229c12.657-6.9226 18.912-18.942 18.006-34.598-1.0284-17.763-11.661-25.325-19.319-31.581 6.5105-13.19 46.94-95.101 53.45-108.29-0.0299-458.25-0.3972-465.09-3.4526-471.18-7.1381-14.237-3.1879-28.653-3.0746 468.79-52.205 107.29-51.897 107.72-55.757 108.12-7.3783 0.762-6.0104 5.1274 49.44-110.7-0.4581-178.18-1.4141-568.01-1.7024-568.29-0.1698-0.1661-1.4111-0.0118-6.604 0.9854 1.552 568.37 1.9624 567.3-0.594 571.47-3.1617 5.1487-49.851 102.23-52.404 104.66-1.0054 0.9553-4.0292 2.3604-6.7197 3.123-13.404 3.7988-23.853 17.152-24.907 31.826-2.1973 30.61 29.505 48.873 53.638 35.674h6e-4zm-29.303-6.0574c-3.6058-1.76-7.879-4.614-9.4961-6.342-9.303-9.9409-10.023-26.738-1.6208-37.806 20.429-26.912 63.572-1.3479 48.646 30.406-4.7755 10.159-13.212 15.878-24.417 16.55-5.5142 0.3306-7.5977-0.1155-13.112-2.8071l-3e-4 2e-4zm22.651-9.5334c10.459-6.8896 11.451-22.6 2.0082-31.793-11.172-10.876-31.761-4.6182-31.761 14.98 0 16.502 16.269 25.696 29.753 16.814h-3e-4zm-16.901-5.4856c-3.8987-2.1155-6.2966-6.894-6.2966-12.549 0-3.6997 0.6837-5.218 3.715-8.2493 3.1443-3.1443 4.4843-3.7151 8.7239-3.7151 7.0344 0 11.592 4.1072 12.387 11.163 1.2504 11.092-9.0349 18.502-18.529 13.351h1e-4zm10.488-8.3389c2.9357-4.6895-3.374-10.854-7.5565-7.3831-1.9364 1.6069-2.0676 6.6726-0.2206 8.5198 1.8222 1.8223 6.3382 1.1621 7.7771-1.1367zm-41.915 18.19c0-0.7585-2.7316-5.8828-3.334-7.0476h-90.466c-5.182-4.3601-6.7238-5.0496-6.7238-9.8098 0-4.7063 2.1512-6.8101 4.1759-9.3115l91.342-1.0928c1.1498-5.625 1.2782-7.1875 0.8536-7.6121-0.3207-0.3206-20.791-0.5828-45.49-0.5828-41.405 0-45.197 0.1558-48.63 1.9966-5.2512 2.8162-7.7161 7.9927-7.7161 16.204 0 5.6936 0.4503 7.2976 2.8496 10.149 3.196 3.7983 5.9944 5.5312 10.809 6.6931 3.7976 0.9165 92.329 1.3135 92.329 0.4138h3e-4zm-5.6638-16.608-0.3457-3.0046c-78.516-0.5098-87.93-0.801-88.651 1.0801-0.3486 0.9082-0.3508 2.3887 0 3.2903 0.7155 1.8647 10.956 1.6392 89.347 1.6392l-0.3457-3.0049h-0.0048zm-103.83-15.179c1.9807-3.6387 7.5378-7.8418 12.011-9.0842 2.5015-0.6946 21.991-1.1309 50.701-1.1345 46.239-0.011 46.643-0.0251 47.357-2.2739 0.3959-1.2471 0.4598-2.5271 0.1427-2.8447-0.3175-0.3174-22.911-0.5715-50.208-0.5647-47.852 0.012-49.788 0.0928-54.018 2.2507-5.035 2.5686-9.7474 7.7437-12.045 13.228-1.9905 4.751-1.2374 12.442 1.5171 15.498 2.0194 2.2405 2.0482 2.1838 2.6548-5.2344 0.3375-4.1248 1.1869-8.5527 1.8873-9.8401v-2e-4zm135.18-30.988c3.9485-1.5015 7.92-12.313 55.084-107.25-0.0385-15.919-1.3252-548.8-1.3636-564.72h-7.6038c1.6183 237.25 1.5116 261.29 1.7307 564.35-0.9739 1.9912-52.771 107.76-52.771 108.31 0 0.7168 1.951 0.4451 4.9247-0.6853h-5e-4zm201.61-256.9c8.4874-4.6501 15.124-12.292 18.536-21.346 3.3954-9.0071 2.7634-22.31-1.4813-31.18-3.8414-8.0278-11.559-16.574-16.896-18.71l-4.2013-1.6812c-0.0348-4.8054-1.8169-212.24-0.6725-213.22 0.4746-0.4055 3.3022-1.6362 6.2836-2.7351 16.066-5.9216 25.026-27.387 19.3-46.237-4.6422-15.283-12.788-19.087-20.57-23.694-2.8943-69.405 0.1227-81.416-3.332-81.386-5.877 0.0518-4.9419-1.618-3.255 79.747h-6.5121c-1.5935-34.835-1.4285-38.769-1.4285-77.275-3.5736 0.6831-2.2345 0.4271-5.7891 1.1067 0.3228 20.581 1.0027 63.947 1.1915 75.988-2.2012 0.5524-5.4177 1.4554-6.0626 0.8105-0.3125-0.3126-0.813-17.915-1.1121-39.116-0.5524-39.172-0.665-40.13-4.7186-40.169-2.0001-0.0195-1.6647 6.3038-0.7721 81.386l-5.22 3.8243c-4.7467 3.4774-12.482 13.031-12.482 15.416 0 0.5354 1.3522 0.9719 3.0048 0.9702 2.1564 0 3.6218-0.9565 5.1901-3.3796 4.9946-7.7173 17.112-14.1 26.77-14.1 11.614 0 23.771 8.036 28.386 18.764 4.5967 10.685 1.8961 27.204-5.8368 35.704-2.7887 3.0652-10.716 7.23-15.895 8.3503l-3.7256 0.8062c1.614 84.528 1.4418 100.41 1.4418 224.56l4.2004 0.6716c5.77 0.9229 13.474 7.9346 17.318 15.763 2.584 5.2617 3.0662 7.6187 3.0662 14.985 0 7.3665-0.4822 9.7231-3.0662 14.985-6.2792 12.787-17.369 19.002-32.307 18.106-10.235-0.614-17.312-3.9167-24.045-11.221-6.6971-7.2659-9.2271-13.602-9.2328-23.125-0.0203-23.998 20.839-29.588 23.08-31.523 0.3051-0.2637 0.2625-93.705 0.1804-226.06-4.813-4.2896-11.335-9.4707-13.771-15.395-2.3639-5.7478-3.9661-6.207-5.8433-1.675-1.2324 2.9753-1.0415 3.7419 2.1843 8.7688 4.189 6.5276 8.9896 10.178 11.783 12.569 0.0414 11.976 0.7037 203.75 0.745 215.73-6.1302 3.9053-15.138 9.002-21.128 21.778-2.4915 5.313-2.874 7.5398-2.8401 16.521 0.0339 9.0032 0.4313 11.188 2.9937 16.472 3.4631 7.1404 11.327 15.506 17.568 18.69 8.9521 4.5669 11.969 5.2432 22.039 4.9385 8.9486-0.2708 10.514-0.6567 16.936-4.175l-0.0039-3e-4zm-5.0477-18.096c15.37-10.674 11.395-35.124-6.7227-41.346l-4.0996-1.4077c-1.4576-81.089-1.3737-96.377-1.6389-230.76h-6.6549c0.0858 12.804 1.4565 217.52 1.5424 230.33l-4.2728 2.2009c-24.827 12.79-15.444 46.514 10.92 44.567 4.796-0.3542 7.5999-1.2742 10.926-3.5845l-2e-4 2e-4zm-18.056-2.7473c-5.0618-1.3147-10.712-7.1357-11.858-12.217-2.7279-12.095 8.6234-23.4 20.268-20.185 5.1348 1.418 10.978 6.7537 12.523 11.436 3.9375 11.931-8.3475 24.234-20.934 20.966h1e-4zm9.4688-10.115c5.4576-5.458 2.1396-13.708-5.5131-13.708-4.7954 0-8.1948 3.1934-8.1948 7.698 0 5.1136 7.0757 12.643 13.708 6.0098zm-7.4252-2.8689c-2.5977-1.5129-2.4122-5.031 0.3429-6.5056 4.0305-2.157 7.3813 3.0757 4.0823 6.3748-1.5656 1.5657-1.943 1.5767-4.4253 0.1309h1e-4zm-51.628-265.85c11.319-5.3604 17.316-15.437 17.306-29.078-0.0109-9.7993-3.1006-16.945-10.053-23.227-6.6367-5.9958-10.71-7.6826-19.866-8.2258-10.382-0.6161-17.478 2.114-24.063 9.2581-11.91 12.92-12.075 30.146-0.4224 43.928 7.9046 9.3481 25.509 12.834 37.098 7.3452zm-22.946-5.4649c-9.4154-4.1133-16.377-14.184-16.312-23.598 0.1331-19.394 22.01-31.316 38.621-21.046 16.676 10.31 15.792 36.252-1.5033 44.108-5.2192 2.3706-15.972 2.6477-20.806 0.5364h3e-4zm25.721-19.99c3.8135-16.974-19.886-29.634-31.325-12.348-2.4546 3.7092-2.7919 5.1904-2.3619 10.374 0.3958 4.7727 1.1729 6.7607 3.6874 9.4338 10.625 11.295 26.825 6.6709 30-7.4597zm-21.765 6.5264c-7.2874-3.5901-8.4005-13.059-2.1531-18.316 6.4299-5.4104 17.191-2.0601 18.939 5.8965 1.075 4.8945-1.9302 10.794-6.4631 12.688-4.7952 2.0034-5.7605 1.9783-10.323-0.2693l3e-4 2e-4zm7.5052-7.405c1.9158-2.3081 0.5493-4.9307-2.5688-4.9307-3.2646 0-4.4591 2.6382-2.212 4.8853 2.0909 2.0911 3.0756 2.1003 4.7809 0.0459v-5e-4zm81.712 23.898c6.8868-4.0212 10.443-10.048 10.989-18.623 0.5668-8.9001-1.7493-15.294-7.3829-20.384-5.2319-4.7268-10.951-6.6653-17.155-5.8149-22.948 3.1453-31.205 31.755-12.803 44.365 7.4097 5.0771 18.122 5.2632 26.352 0.4575zm-20.02-4.1418c-3.946-1.719-8.9585-7.3674-9.9133-11.172-0.3738-1.4885-0.437-5.229-0.1407-8.3123 0.462-4.8074 1.1636-6.1887 4.9274-9.6995 8.3024-7.7444 18.996-7.8589 26.144-0.2798 5.9271 6.2847 6.2998 16.902 0.8441 24.055-4.9398 6.4766-14.168 8.7595-21.862 5.4084l1e-4 4e-4zm14.308-9.8863c3.448-3.448 3.7178-10.487 0.5243-13.68-6.5292-6.5293-17.51-1.6531-17.51 7.7759 0 1.209 1.4373 3.6353 3.194 5.3921 4.1741 4.1743 9.9162 4.3874 13.792 0.5119zm-10.211-4.0925c-2.9391-2.939-0.6506-7.4299 3.7858-7.4299 3.2379 0 5.2325 3.5884 3.6443 6.5559-1.2968 2.4231-5.3986 2.9055-7.4301 0.874zm-26.933-5.7776c0.8209-5.4744 0.1711-8.2083-1.951-8.2083-1.005 0-1.4182 1.9102-1.4182 6.5559 0 7.9106 2.2643 9.0212 3.3694 1.6523h-2e-4zm-85.826-100.09c7.3038-3.4117 15.273-11.143 18.738-18.179 2.1996-4.467 2.5664-6.8516 2.5664-16.685 0-10.443-0.2767-12.01-3.0808-17.45-1.6943-3.2876-5.1443-8.2045-7.6664-10.926-5.8601-6.3243-10.982-13.171-10.142-10.629 0.3577 1.083 0.2209 1.7036-0.3038 1.3793-2.3907-1.4775-2.292-18.402-2.7782-72.674 14.319-14.867 44.858-46.576 53.199-55.236-1.2815-36.749-1.3647-36.286-1.3647-102.95-3.3726 0.6447-2.1088 0.4031-5.4633 1.0444v99.4c-31.379 32.572-43.98 45.467-52.993 55.867 0.0961 7.9828 0.6953 57.804 0.7917 65.826l-2.89 3.4347c-2.9427 3.4972-9.5201 6.4801-11.538 5.2328-4.1716-2.5782 4.173-7.1477 7.9486-9.5311l-1.1689-68.325c13.489-13.945 28.957-29.937 42.446-43.882-1e-4 -0.1127-0.0175-108.58-0.4377-109-0.1581-0.1583-0.7113-0.3651-5.6498-0.9152v105.69c-9.34 10.272-15.147 16.243-43.082 45.417 0.1654 7.9702 1.196 57.627 1.3621 65.626-1.8844 2.0353-14.551 15.305-14.551 17.222 0 1.3445-1.3094 1.9675-3.485 1.6573-1.4354-0.2045-8.2999 8.7212-11.896 15.469-11.281 21.163 0.9133 47.6 20.845 54.732 7.7294 2.7657 22.935 1.9625 30.597-1.6163l-2e-4 2e-4zm-45.654-21.066c-2.5215-4.8044-2.9408-6.9274-2.9427-14.891 0-7.5283 0.4624-10.162 2.45-13.901 6.322-11.894 14.969-17.065 28.662-17.14 13.895-0.0754 24.165 6.4171 29.875 18.888 3.219 7.03 3.2114 19.477-0.0164 26.528-9.6425 21.063-43.677 27.863-58.028 0.5154zm42.578 5.2908c7.051-4.8997 9.8535-11.136 9.4062-20.932-0.3035-6.6478-0.8657-8.5746-3.6641-12.556-12.314-17.521-39.066-10.957-42.968 7.6073-2.3064 10.974 2.9127 22.801 12.125 27.477 3.7965 1.9265 6.1704 2.3107 12.536 2.028 6.6237-0.2939 8.5905-0.8611 12.565-3.6233v-1e-4zm-23.202-5.1614c-11.152-7.5153-10.636-23.565 0.9668-30.086 8.9047-5.0048 19.435-1.6344 24.066 7.703 3.7783 7.618 2.6479 13.894-3.6335 20.176-4.4565 4.4565-4.9666 4.6689-11.207 4.6689-4.9738 1e-4 -7.4122-0.5889-10.192-2.4621zm15.748-8.5437c3.7634-2.9603 3.8467-7.7933 0.1971-11.443-5.5073-5.5072-14.8-1.926-14.8 5.7034 1e-4 7.3208 8.3976 10.621 14.603 5.7397zm-8.4117-2.8343c-1.3453-1.3451-0.7449-5.5875 0.8789-6.2104 1.5331-0.5884 4.9484 1.8416 4.9484 3.5204 0 2.3367-4.2287 4.2887-5.8273 2.69zm148.42 8.6689c31.926-16.476 20.341-52.739 16.781-52.739-0.5868 0-0.7573-0.5007-0.3793-1.1125 1.7921-2.8997-9.621-15.352-17.978-19.616-13.113-6.6896-30.414-4.5635-42.13 5.1771-8.246 6.8557-14.751 20.941-14.751 31.941 0 12.074 7.2488 26.158 17.043 33.114 8.1915 5.818 13.852 7.3975 25.024 6.9834 8.4405-0.3131 10.763-0.8441 16.39-3.7481zm-24.209-2.5224c-9.9664-1.9718-20.163-10.216-24.271-19.622-7.8796-18.043 1.0453-39.633 19.426-46.994 10.908-4.3684 26.344 0.1179 36.177 10.515 7.3096 7.7289 9.1136 12.126 9.1387 22.275 0.0393 16.094-9.4703 28.45-25.58 33.234-6.3369 1.8818-8.0353 1.9495-14.891 0.5931v4e-4zm20.589-12.545c8.9415-6.1985 13.195-19.804 9.1895-29.392-0.8431-2.0176-3.4246-5.7664-5.7365-8.3306-15.618-17.322-41.9-7.0106-41.9 16.439 0 10.936 4.6683 18.838 13.658 23.118 3.3214 1.5814 6.2559 2.0031 12.224 1.7565 6.6396-0.2743 8.5809-0.8291 12.565-3.5913v-1e-4zm-21.556-3.6035c-16.614-7.7903-12.874-28.314-1.6801-34.024 16.441-8.3875 34.382 8.9597 26.374 25.501-4.3239 8.9318-15.555 12.808-24.694 8.5231h-1e-4zm14.88-9.9461c7.1549-7.1549 1.1318-17.566-7.1863-17.566-5.5515 0-10.38 4.8286-10.38 10.38 0 8.2045 10.341 14.412 17.566 7.1862zm-10.792-3.5804c-1.7095-1.7096-1.7092-5.502 0-7.2115 1.7064-1.7067 5.499-1.7123 7.2117 0 1.7067 1.7064 1.7123 5.499 0 7.2115-1.7064 1.7068-5.499 1.7123-7.2117 0zm-70.719-150.35c0.7446-1.9412-0.8204-92.629-0.8773-96.371h-5.1072c0 19.512-0.1371 46.286 0.7177 75.665 0.684 23.504 0.8115 24.605 2.7106 23.419 1.0958-0.6845 2.2464-1.9053 2.5562-2.713zm18.374-108.12c8.9072-4.1685 16.427-11.532 20.987-20.552 2.9551-5.8458 3.2679-7.4525 3.1771-16.318-0.0645-6.3323-0.7546-11.561-1.9363-14.684-4.4742-11.822-17.218-23.27-30.058-27.003-18.67-5.4276-39.296 4.3712-48.757 23.164-3.0154 5.9895-3.2745 7.4108-3.278 17.976 0 13.066 1.67 17.861 9.2377 26.458 9.5654 10.867 19.76 15.302 33.937 14.766 7.7072-0.2916 10.575-0.9459 16.69-3.8076h3e-4zm-26.782-5.0194c-11.46-3.2178-22.159-13.536-25.028-24.138-1.6768-6.1949-0.616-16.707 2.2537-22.332 3.6108-7.0779 10.491-13.93 17.363-17.292 15.856-7.7576 36.341-0.0372 44.579 16.802 4.2931 8.7749 4.2778 20.382-0.0383 29.204-3.2095 6.5599-10.643 13.213-18.372 16.442-5.7786 2.4144-14.803 2.9855-20.757 1.3135h-6e-4zm19.597-11.479c18.289-9.3304 17.558-34.688-1.2524-43.448-11.242-5.2352-23.41-1.931-30.506 8.2839-3.1709 4.5648-3.444 5.6589-3.444 13.793 0 7.8535 0.3317 9.3094 2.9869 13.112 3.24 4.6393 8.632 8.7421 13.565 10.321 4.595 1.4712 13.697 0.4648 18.65-2.0623l2e-4 2e-4zm-20.576-7.8045c-12.101-6.3953-8.7672-25.551 5.1146-29.384 5.7472-1.5869 11.382 0.2549 16.044 5.2445 3.6675 3.925 4.097 4.9918 4.0935 10.164 0 7.0791-2.6285 11.807-7.9539 14.334-5.0443 2.3938-12.377 2.2418-17.298-0.3589zm10.558-17.441c-2.328-1.932-6.062-0.3654-6.062 2.5433 0 2.3749 1.8145 5.0618 3.4183 5.0618 0.7907 0 6.8934-4.0781 2.6437-7.6051zm-1394.1 1115c-33.311-9.1575-45.239-45.353-30.857-73.661 18.246-35.915 81.904-38.07 95.124 12.685 6.7705 25.994-10.863 55.493-36.738 61.458-6.5881 1.5188-21.18 1.2634-27.528-0.4819l3e-4 -3e-4zm33.391-8.4995c30.317-14.984 34.239-54.711 11.384-74.778-23.116-20.297-66.416-13.135-74.64 26.305-5.4373 26.076 14.553 54.082 45.675 52.858 8.2841-0.3259 10.474-0.8723 17.581-4.3848zm-33.141-5.4663c-15.868-6.6995-23.114-17.815-23.306-35.749-0.0864-8.0779 0.2996-10.099 2.9607-15.519 3.5359-7.2002 12.064-15.445 19.34-18.696 7.0315-3.1421 18.943-3.7124 26.356-1.2612 11.002 3.6382 17.268 8.9617 22.462 19.086 2.7761 5.4114 3.0833 7.0972 3.0833 16.936 0 12.642-1.6121 16.774-10.072 25.819-7.1594 7.6536-14.861 11.1-25.867 11.575-7.4099 0.3196-9.8572-0.0393-14.956-2.1917h-3e-4zm27.165-9.0649c19.47-9.7021 19.631-35.547 6.2273-47.316-18.059-15.856-47.526-3.5742-47.504 21.119 0.011 9.1792 1.6567 14.223 6.3491 19.429 8.6851 9.6343 23.438 12.493 34.927 6.7673l3e-4 2e-4zm-16.698-3.1255c-0.6008-0.2319-2.457-0.7229-4.1248-1.0913-4.5007-0.9941-11.335-7.7327-13.445-13.257-7.959-20.841 17.443-39.519 35.336-25.983 10.124 7.6589 11.065 26.216 1.7451 34.396-4.6724 4.1013-15.627 7.4333-19.511 5.9348v2e-4zm10.347-8.5667c10.902-5.5164 11.433-28.67-6.7346-28.427-10.864 0.1455-17.831 8.7039-15.159 18.624 1.0938 4.0613 5.439 9.2036 8.8152 10.432 3.0271 1.1014 10.356 0.7491 13.079-0.6291zm-13.018-9.1538c-2.6943-3.425-2.1799-6.3828 1.728-9.9355 7.5-6.8186 14.52 3.418 9.6226 10.41-2.4971 3.5652-8.366 3.3196-11.351-0.4749zm1091.8-182.6c-22.629-0.2876-23.223-0.353-24.478-2.6982-1.7874-3.3398-0.2092-11.982 1.8892-151.07 0.0408 6.6157-0.4495 108.72 4.7881 108.72 4.4283 0 1.2103-1109.3 3.3756-1113.5 1.0046-1.9554-0.4789-1.6877-6.286-1.5603-2.0164 612.36-0.1167 908.54-1.4014 908.54-1.1147 0-3.1621-225.58-4.5774-917.06 33.568 3.2128 72.619-0.4292 76.925 1.6626 1.2378 0.6012 1.9121 0.4957 1.9121-0.299 0-1.9604 59.52 0.249 60.212 0.6769 0.4535 0.2803 1.1228 0.0273 1.4873-0.5621 0.5566-0.9009 34.988-0.7699 41.009 0.1561 1.426 0.2192 1.5363 3.2388 0.8485 23.238-1.1503 33.45-1.8086 833.59-0.8 972.5 1.2347 170.01 3.6117 166.91 2.6754 169.91-0.8499 2.7185-157.46 1.3457-157.58 1.3442l-4e-4 4e-4zm13.411-1162.9c0.7042-1.1396-26.438-0.6635-27.585 0.4839-0.9329 0.9331 26.749 0.8688 27.585-0.484l-2e-4 1e-4zm36.039 0.1422c-0.7598-1.229-33-1.5239-33.751-0.3086-0.7638 1.2362 34.512 1.5389 33.751 0.3086zm-72.696 958.86c0-33.072 0.3433-46.472 1.177-45.956 1.7231 1.0644-1.177 172.1-1.177 45.956zm-192.85-33.349c-5.3169-1.3325-9.8279-4.0935-13.476-8.2483-5.2097-5.9338-7.0188-10.263-7.583-18.148-0.8525-11.916 4.7102-21.414 15.687-26.784 5.0134-2.4529 6.96-2.8372 11.83-2.3345 23.782 2.4548 32.83 29.543 17.516 47.665-5.1101 6.0469-16.408 9.7461-23.974 7.8499h2e-4zm13.582-9.3428c14.206-7.3459 14.187-28.8-0.0317-36.153-8.3757-4.3313-20.727-0.0786-24.918 8.5803-6.5427 13.515 2.6523 29.144 17.158 29.165 2.5837 0 6.0901-0.7131 7.7915-1.593l-2e-4 3e-4zm-14.061-5.8601c-9.2915-4.9832-10.106-17.424-1.5808-24.131 5.6313-4.4294 16.076-2.054 19.703 4.4814 3.6523 6.5813 0.3162 16.596-6.6257 19.89-4.7557 2.2569-6.9232 2.2112-11.496-0.2409zm11.471-9.4226c2.2578-3.4458 1.7356-5.8499-1.8518-8.5259-2.571-1.9175-3.2146-1.9875-6.0095-0.6543-3.7607 1.7939-4.8528 7.2478-2.0186 10.082 2.7263 2.7263 7.8066 2.2627 9.8799-0.9018zm-1003.3-90.666c-21.328-5.1704-37.154-28.077-34.861-50.458 2.384-23.269 17.876-40.332 40.083-44.15 30.423-5.2305 60.342 24.842 54.731 55.012-4.3953 23.635-28.314 47.267-59.954 39.597zm31.22-10.475c7.9302-4.2266 14.15-10.816 18.424-19.518 2.6826-5.4626 3.0161-7.3503 3.0161-17.068 0-9.9707-0.2866-11.494-3.2778-17.414-6.5435-12.949-17.008-20.562-31.321-22.788-36.15-5.6206-62.287 39.832-35.666 68.712 8.9487 9.7083 16.534 12.616 31.539 12.09 9.3708-0.3283 11.145-0.7404 17.287-4.0138zm-29.501-3.9222c-8.2585-2.8662-15.219-8.897-19.246-16.677-3.1287-6.0435-3.5671-7.9326-3.5671-15.362 0-7.2551 0.4778-9.4275 3.3291-15.133 5.7749-11.556 15.073-17.738 27.944-18.579 10.286-0.6719 17.196 1.6396 24.48 8.1885 8.3816 7.5359 11.403 14.132 11.403 24.898 0 7.3301-0.4661 9.6304-2.8857 14.248-3.531 6.738-11.363 14.143-18.12 17.132-6.7092 2.9678-16.874 3.5271-23.337 1.2839l-4e-4 3e-4zm18.62-8.0544c14.203-4.0735 21.484-20.57 15.361-34.804-10.396-24.168-45.7-18.734-48.808 7.5117-2.1839 18.44 15.11 32.551 33.448 27.292zm-19.056-5.958c-11.448-6.8633-13.457-24.004-3.9299-33.531 12.918-12.918 36.174-3.3518 36.174 14.879 0 15.761-18.864 26.674-32.244 18.652zm15.114-8.272c4.0972 0 6.6047-2.0967 6.0322-5.0437-0.2822-1.4521-1.5862-1.8918-5.8267-1.9646-6.2039-0.1072-5.4775-0.2185-6.1545-6.1033 12.948 0 13.859 0.4229 16.441-2.8601 1.2371-1.5732 1.967-3.3176 1.6213-3.8767-0.572-0.9255-6.019-0.5769-13.82 0.8843-2.6467 0.4958-3.0049 0.2271-3.0049-2.2556 0-2.2441-0.5327-2.8184-2.6147-2.8184-3.4749 0-3.9409 1.6206-3.9409 13.693 0 8.5547 0.3093 10.41 1.8838 11.291 2.7556 1.5422 3.7148-0.9453 9.3831-0.9453l2e-4 -5e-4zm827.78-324.66c-5.1599-2.9926-7.5396-7.2291-7.5396-13.424 0-4.1865 0.6157-5.7094 3.6443-9.0142 3.1672-3.4558 4.4189-4.0341 9.5605-4.4154 7.2344-0.5365 12.356 2.1997 14.724 7.8666 3.1479 7.5342 0.7324 14.827-6.3384 19.138-4.551 2.7748-9.0886 2.7257-14.05-0.1521l-1e-4 2e-4zm8.6646-9.5498c0.8254-0.5233 1.2976-2.2864 1.0925-4.0808-0.3083-2.7019-0.8354-3.1594-3.6384-3.1594-2.51 0-3.3557 0.5441-3.6094 2.3223-0.1821 1.2773 0.4678 3.1211 1.4438 4.0975 2.0101 2.0099 2.6568 2.1226 4.7115 0.8204zm416.7-556.74c1.1842-14.279 16.032-23.193 28.543-17.137 7.1107 3.4423 10.786 9.282 10.861 17.257 0.0776 8.2314-1.6794 13.33-6.0444 17.54-13.179 12.712-35.086 3.1531-33.36-17.66zm26.598 8.8713c2.1112-1.8159 3.0555-3.8741 3.4717-7.5654 0.4965-4.4055 0.2021-5.4403-2.2432-7.8857-2.1072-2.1071-3.9385-2.8147-7.2847-2.8147-6.02 0-9.8339 3.7002-9.8339 9.541 0 9.3365 9.2648 14.424 15.89 8.7249h3e-4zm798.09-94.255c-0.7709-0.9287-2.0352-1.4456-2.8098-1.1483-0.8469 0.325-1.1835-0.0459-0.8442-0.9296 0.3103-0.8085-0.4468-2.178-1.6823-3.0433-2.245-1.5725-2.2446-1.5752 0.4392-4.0966 1.4772-1.3877 2.3789-3.0192 2.0043-3.6259-0.4021-0.6506-0.1306-0.7621 0.6621-0.2722 0.9873 0.6102 0.6863 1.5302-1.1355 3.4692-2.2998 2.4481-2.3491 2.7688-0.6832 4.4347 1.4827 1.4825 2.0912 1.5505 3.4896 0.3901 0.9315-0.7733 1.7209-1.9602 1.7542-2.6378 0.0751-1.5507 5.7374-5.5745 7.0419-6.5723-6.0745 6.7504-5.9275 5.0951-1.0927 10.804-4.6101-3.8822-4.2998-4.1318-6.548-1.6477-1.9163 2.1176-1.9166 2.2705-0.0109 4.3794 2.6412 2.9185 1.2766 2.7428-0.5876 0.4966l0.0029 2e-4zm90.39-118.01c-1.12-1.5383-2.5439-2.3992-3.278-1.9819-0.7139 0.4058 0.0535-0.7161 1.7045-2.4932 2.4473-2.6337 2.7502-3.5135 1.639-4.7601-1.1476-1.2871-1.0785-1.3148 0.4371-0.1749 1.5001 1.1284 2.1437 0.9373 3.8578-1.1453 3.9952-4.8543 6.6111-6.6036 7.5203-5.0292 0.4565 0.7903 0.4222 1.0672-0.0764 0.6152-1.215-1.1021-5.0425 2.4514-4.1667 3.8683 0.3793 0.6135 0.1874 0.8052-0.426 0.4261-1.3868-0.8571-4.9974 2.9535-3.8684 4.0826 0.452 0.452 0.1615 0.658-0.6456 0.4576-0.8071-0.2003-2.0237 0.48-2.7032 1.5118-0.995 1.5104-0.7622 2.3171 1.1945 4.14 2.5331 2.3601 2.9985 3.2954 1.6105 3.2372-0.4507-0.0188-1.7106-1.2582-2.7996-2.754l2e-4 -2e-4zm28.833-2.473c1.8566-1.1595 2.0231-1.712 0.9177-3.0443-0.743-0.8951-1.9844-1.3844-2.7592-1.0872-0.8248 0.3165-1.1842-0.0431-0.8679-0.8679 0.2974-0.7745-0.244-2.0594-1.203-2.8552-1.4624-1.2137-2.0312-1.1594-3.5278 0.3372-1.9916 1.9914-1.6816 1.908 2.3591 6.7692l-5.2675-4.863c1.7574-1.8707 3.2675-3.4781 5.0249-5.3488 1.3712 1.4913 7.4834 8.6511 8.975 7.8025 0.6504-0.37 0.8181-0.2703 0.3726 0.2215-0.4456 0.4918-0.2234 1.6769 0.4935 2.6337 1.0893 1.4534 1.053 1.5161-0.2204 0.3813-1.2341-1.0998-2.0036-0.9077-4.0447 1.0099-3.4295 3.2223-3.2272 0.7688-0.2523-1.0889zm-160.16-51.422c-8.1499-5.0789-12.565-12.844-12.565-22.099 0-7.5474 1.803-13.132 5.8092-17.992 5.2262-6.34 8.3152-7.1142 27.801-6.9674 18.951 0.1428 20.689 0.6066 26.326 7.0265 9.1508 10.422 8.979 24.243-0.4396 35.402-4.9607 5.8773-8.2054 6.681-26.955 6.6764-14.408-0.0033-17.148-0.2842-19.976-2.0469h-1e-4zm42.661-6.0177c7.7429-8.0809 8.9171-18.793 3.1493-28.728-4.9965-8.6066-6.2955-9.0942-24.23-9.0942-14.359 0-16.222 0.226-20.174 2.4467-10.018 5.6307-13.322 19.997-7.0537 30.674 6.2191 10.594 7.8669 9.4832 43.717 9.4925l4.5905-4.7908v-3e-4zm-47.574-16.486c0-7.3177 2.2832-12.273 7.0929-15.424 2.295-1.5038 4.3419-1.727 10.818-1.1796 9.1057 0.7698 11.587 1.4956 11.587 3.3895 0 0.8426-1.141 1.1654-3.1018 0.8776-3.8492-0.5649-6.7321 2.0716-6.7321 6.1564 0 3.9148 1.8369 5.6037 6.0944 5.6037 4.4585 0 6.184-2.1552 5.8704-7.3324-0.5334-8.8029-0.4006-9.0573 4.7283-9.0573 7.1063 0 13.84 5.717 6.2097 4.5974-3.8123-0.5596-7.6055 2.1726-7.6055 5.4777 0 4.0461 2.0942 6.3147 5.8295 6.3147 4.5781 0 6.181-1.6744 6.2245-6.5012 0.0327-3.7134 0.1071-3.7856 1.72-1.6936 2.1759 2.8213 1.7554 18.289-0.5557 20.438-1.2659 1.1776-1.4072 1.0927-0.8441-0.5071 0.3719-1.0569 0.2107-3.1465-0.3585-4.6437-0.8652-2.2758-1.7526-2.7222-5.4117-2.7222-3.7194 0-4.4767 0.3974-5.0408 2.6452-1.1509 4.5855-0.1698 6.6164 3.3634 6.9625 5.8274 0.5707 6.8354 1.2622 4.4255 3.0358-2.4868 1.8301-12.082 1.561-35.167 1.561-7.3561-7.9826-9.1516-9.5319-9.1465-17.999zm16.18 7.8682c-0.3275-3.3911-0.5273-3.5276-5.1666-3.5276-4.3075 0-4.9348 0.3267-5.8396 3.0416-1.8894 5.6678 5.041 9.0328 7.8007 3.7875 0.7891-1.4999 1.0659-1.6745 0.7098-0.4478-0.321 1.1059-0.2682 2.5212 0.1174 3.1451 1.1573 1.8724 2.7504-2.1459 2.3784-5.9989l-1e-4 1e-4zm15.292 1.6595c0.3005-4.1527 0.0306-4.7629-2.5343-5.7382-6.4714-2.4605-11.115 2.1985-8.3156 8.3429 1.0769 2.3636 1.8348 2.6703 5.8751 2.3779 4.6156-0.334 4.6403-0.3587 4.9746-4.9826h2e-4zm-20.109-9.8169c0.4431-0.443 1.6315-0.8118 2.6407-0.8195 2.2037-0.0167 3.189-6.4654 1.3297-8.7055-1.5802-1.9042-5.9414-2.6888-8.1318-1.4629-2.0872 1.1681-2.3904 8.5239-0.4319 10.482 1.4856 1.4857 3.4024 1.6967 4.5933 0.5057zm-57.805-21.618c-33.26-2.2933-68.695-3.0217-97.792-6.6015-35.062-4.3137-97.992-5.7112-150.24-10.496-17.716-1.6226-302.35-1.8621-424.85-2.1421 1.266-80.552 1.1763-90.509 3.235-93.731 2.0679-3.2354 41.28-42.255 44.626-44.405 3.6364-2.3381 259.78-1.6263 264.07-1.5806 64.514 62.889 45.452 60.096 60.813 60.096-1.1199 16.339-1.5835 16.581 1.7507 23.396 5.1172 10.459 14.268 15.94 26.616 15.94 6.3397 0 8.2146-0.4723 12.392-3.1218 13.022-8.2581 14.283-19.992 16.25-22.305 0.944-1.1102 33.432 0.5684 34.98 0.6351v11.715l59.549-0.5815c0.2311-4.0125 0.4296-7.4603 0.6605-11.473 340.68-0.2414 314.67-0.5199 341.35-1.639-0.828 8.6387-1.1276 7.6798 5.019 14.204 2.3453-2.8419 4.2944-5.2456 4.7393-4.7985 0.2344 0.2354-0.712 1.7502-2.1033 3.3665-2.4897 2.8928-2.559 2.9055-4.447 0.8195-2.7875-3.0803-3.7642-2.6211-3.7642 1.7697 0 2.7938 0.3846 3.6716 1.3657 3.1176 1.0927-0.6169 1.0927-0.4768 0 0.7004-1.7434 1.8782-1.7844 7.5903-0.0547 7.5903 1.0199 0 1.0199 0.2914 0 1.3112-1.8719 1.8719-1.6195 5.2783 0.5703 7.698 1.4858 1.6419 1.5433 2.0046 0.2731 1.725-2.1423-0.4716-1.7001 2.7653-2.1653 12.758l-103.19 0.7324-20.033 18.389c-15.405 0-16.479-0.4426-24.107 3.3693-4.3358 2.1666-8.5909 5.477-11.92 9.2737-5.9766 6.8151-2.6976 6.3984-33.587 4.2686l3e-4 1e-4zm-722.24-91.485v-72.388l194.95-195.58c2.2589 2.7106 4.1816 5.7198 11.018 8.115 8.0735 2.8286 3.4174 2.8107-1.9473 0.5635l-4.0624-1.7017c-80.513 81.079-86.21 86.744-190.63 192.74 0.6604 181.73-1.1278 193.51-1.1278-0.5853 179.87-182.26 189.52-191.99 189.88-193.01 0.1703-0.4802-0.4993-1.5446-1.4879-2.3649-2.0458-1.6978-18.588 15.353-194.95 192.3 0 192.4-1.639 166.67-1.639 71.922l1e-4 -1e-4zm928.89 10.432c-0.3713-0.3713 0.3383-1.3848 1.5767-2.2522 1.2386-0.8674 2.0288-2.1584 1.7562-2.8687-0.6624-1.726 3.532-1.6922 2.9067-0.0616-0.2596 0.6763 0.2972 1.8681 1.2372 2.6483 1.4221 1.1801 2.0685 1.0933 3.8483-0.5173 1.1764-1.0647 1.9263-2.2798 1.6664-2.7003s0.1615-0.7645 0.9363-0.7645c1.928 0 1.6135 2.944 0.5858 2.3089-1.007-0.6223-4.2782 3.8837-5.3478 5.2434-1.5359-1.8134-2.8557-3.3715-4.3917-5.1849l-2.0496 2.412c-1.1273 1.3266-2.3534 2.1082-2.7247 1.7369h2e-4zm-451.69-13.67c5.5909 0.5666 10.687 1.2419 24.599 1.2866 11.551 0.037 12.292 0.1712 12.292 2.2247 0 2.5667-0.7908 2.1853-35.803 2.1853-0.6725-3.5167-0.4205-2.1988-1.0891-5.6966zm-6.5153-11.24c28.04-1.1832 16.516 1.639 43.407 1.639v6.5559h-38.211c-3.0673-4.838-2.004-3.1609-5.1958-8.1949zm-53.571 1.3659c0.2644-0.8026 2.8376-1.504 6.2406-1.7009 5.241-0.3033 5.6292-0.1737 4.0897 1.3658-2.1037 2.1037-11.008 2.3926-10.33 0.3351zm-5.3192-9.8339c-8.4923-8.9351-6.7672-8.7931-46.427-50.742-183.98-0.3293-258.29-0.5232-258.64-0.8699-0.8507-0.8512 26.645-24.702 131.36-133.52 12.119-0.1675 87.409-1.2079 99.535-1.3755 3.2206 3.2528 133.04 134.18 134.12 136.02 0.9922 1.6857-0.1997 6.4488-0.5865 8.3832-2.8856-6.8046-4.0125-7.7545-13.049-17.772-10.419 0.212-19.372 0.3943-29.791 0.6063l-0.3545 3.8243c-0.7456 8.0425-5.1467 3.6524-7.1915 19.509-0.7328 5.6834-0.6058 6.0708 4.4196 13.494 7.1733 10.595 8.1154 11.082 19.77 10.22 13.465-0.9962 21.204-0.7518 22.985 0.7259 2.4102 2.0004 89.471 0.7366 91.102 0.2351 1.0065-0.3094 2.1151-2.2458 2.5194-4.4006 0.4476-2.3865 2.3586-5.4847 5.0315-8.1576 4.2996-4.2995 4.3097-4.3303 4.3097-13.051 0-4.8077-0.4565-8.7411-1.0146-8.7411-1.9161 0-4.4486-3.4362-4.4486-6.0361 0-2.4874 0.2531-2.5754 5.7365-1.9981 7.8367 0.8252 10.651 3.9009 10.658 11.646 0 6.814 1.0211 23.31 1.4159 30.16-10.575-0.4968-8.9977-1.2333-13.986 6.5717l-142.59 0.0842c-1.3767-1.9163-7.4476-10.926-9.3864-10.926-2.0278 0-1.9775 0.2953 1.0771 6.3191 4.7415 9.3501 0.1169 8.6302 60.214 9.374 91.799 1.1364 96.7 0.0481 96.7 2.3356 0 3.0082-114.39 1.2495-121.78 0.5899-20.074-1.7924-9.7147 2.0919-28.504 2.1259l-8.7869 0.0159-4.4136-4.6437-1e-4 -1e-4zm165.63-0.63c-3.0258-2.4501-2.1157-6.4376 1.687-7.3921 3.5514-0.8913 4.9062 0.1998 4.9062 3.9507 1e-4 4.3839-3.3012 6.1071-6.5932 3.4414zm355.88-2.0106c-1.3408-1.3406-0.7473-6.6368 0.8963-8.001 0.9319-0.7734 2.7958-1.0546 4.3706-0.6593 2.3574 0.5917 2.7457 1.3044 2.7457 5.0389 0 4.2014-0.1243 4.3498-3.6421 4.3498-2.0032 0-3.97-0.3277-4.3705-0.7284zm-394.73-13.9c-0.3201-0.834-1.9617-1.7923-3.6482-2.1295-1.9231-0.3847-3.2965-1.4951-3.6848-2.9793-0.6128-2.3435-0.5928-2.3418 2.0966 0.1847 2.1658 2.0346 4.2235 2.636 10.167 2.9719 4.329 0.2446 8.4279-0.1012 9.7806-0.8252 2.8527-1.5267 3.0581 0.0171 0.3306 2.4855-2.5853 2.3397-14.17 2.5644-15.042 0.2919zm395.18-17.752c-2.7124-3.4483-2.7968-4.6162-0.5637-7.8044 2.258-3.2236 8.6351-3.3879 10.306-0.2656 1.5343 2.8668 0.3188 7.3323-2.5413 9.3354-3.2403 2.2698-4.6097 2.0291-7.2011-1.2654zm-715.76-202.09c9.0481-3.9131 13.953-12.228 12.074-20.467-3.828-16.778-28.422-14.731-28.659 2.3854-0.0732 5.3302 1.6119 8.4575 6.0012 11.134 7.6224 4.6478 14.774 1.8715 17.521-6.8019 0.9093-2.8708-1.3953-9.6625-4.2461-12.513-3.2859-3.2856-1.5549-3.809 2.8557 0.6018 2.7075 2.7075 3.194 4.0553 3.194 8.8505 0 4.9565-0.4518 6.1084-3.6506 9.3072-6.2067 6.2067-11.943 6.3301-18.695 0.4022-6.7963-5.9672-6.3031-16.254 1.0905-22.745 3.37-2.9589 4.6489-3.3793 10.283-3.3793 5.3979 0 6.9993 0.4756 9.9443 2.9537 6.4746 5.4481 8.0061 12.725 4.3655 20.744-2.2777 5.0168-9.8878 11.294-13.608 11.224-1.6971-0.0319-1.2987-0.4736 1.5298-1.6969zm-1494.3 2207.9c32.192-15.848 29.058-62.825-10.753-70.162-16.021-2.9529-34.411 6.1843-42.303 21.017-2.0984 3.9438-2.5273 6.4133-2.5337 14.582-0.011 8.3201 0.4297 10.767 2.8342 15.893 7.178 15.304 20.297 23.238 37.242 22.526 6.7925-0.2856 9.7573-1.0225 15.513-3.856h-2e-4zm-28.281-4.7634c-14.673-5.2302-26.676-24.606-18.501-41.009 9.6667-19.399 36.838-23.862 52.743-8.665 8.5964 8.2144 10.82 20.726 5.7217 32.199-3.1509 7.0913-11.294 14.686-18.31 17.077-5.7468 1.958-16.711 2.1599-21.652 0.3987l-6e-4 -4e-4zm22.184-9.2695c7.9487-3.7717 13.524-16.601 11.11-25.565-1.3391-4.9731-6.6306-10.665-12.507-13.454-6.3557-3.0159-16.632-2.0352-22.676 2.1646-21.847 15.18-1.6328 49.053 24.074 36.855zm-18.064-5.7395c-10.902-4.949-12.351-19.54-2.6619-26.809 2.1672-1.6262 4.6118-2.1853 9.5535-2.1853 5.5547 0 7.2827 0.4895 10.564 2.9927 12.898 9.8376 3.0037 28.273-11.196 28.118-0.9014-0.0111-3.7188-0.962-6.2603-2.1158zm13.909-13.698c0-2.8872-4.6265-7.1021-7.7961-7.1021-2.9004 0-6.4082 3.8877-6.4082 7.1021 0 3.2146 3.5081 7.1023 6.4082 7.1023 2.6892 0 7.7961-3.7061 7.7961-7.1023zm-1442 26.375c5.3413-2.2603 6.5034-6.175 9.5854-5.3689 2.7158 0.7104 13.071-5.8464 19.608-9.5752 3.9434-2.2493 33.913-16.688 38.502-19.867 4.6074-3.1924 13.402-1.4475 25.145-1.8733 1.7256-0.0637 1.9121-1.5491 1.9121-15.278 0-8.3643 0.2983-15.985 0.6631-16.936 0.5791-1.51 4.002-1.7283 27.107-1.7283 20.925 0 26.88 0.3188 28.533 1.5278 1.7725 1.2957 2.1504 3.2441 2.4907 12.839 0.5205 14.672-0.3418 16.941-6.8052 17.91-4.896 0.7341-45.22-1.1045-46.223-2.1079-0.2871-0.2871-0.1362-1.1462 0.3354-1.9092 1.0879-1.7593 0.9751-18.618 1-22.25 30.598-0.2786 30.848-0.0974 45.425 0.8674-0.2188 6.5752-0.4072 12.225-0.6265 18.8-1.9937-0.1365-6.0093-0.8259-6.0093 1.0957 0 2.1423 2.1538 3.1973 3.5918 1.7593 1.4204-1.4199 4.5991-1.2161 6.4966-1.2161-0.1172-2.915-0.5825-21.525-1.9556-22.899-1.1621-1.1616-48.142-2.4922-49.648-0.0562-1.2642 2.0454-0.2393 27.528 1.1641 28.933 0.6812 0.6826 10.99 1.2664 26.254 1.4868 32.789 0.4739 30.487 1.8555 30.487-18.296 0-21.524 2.9438-19.738-32.675-19.824-25.063-0.0601-29.08 0.1597-30.594 1.6794-3.8252 3.8391 1.1162 26.543-3.0503 30.314-2.8804 2.6067-18.335 4.3582-25.982 2.9443-6.9473-1.2842-12.268 0.4932-15.292 5.1099-2.4268 3.7034-14.742 12.46-17.523 12.46-3.3613 0-5.6592 3.1909-8.3081 3.2434-2.519 0.0513-9.5059 6.5906-11.039 6.5906-3.2793 0 19.276-20.814 24.274-22.4 1.2017-0.3813 2.1846-1.1519 2.1846-1.7124 0-0.5603 0.6777-1.019 1.5063-1.019 2.2979 0 22.832-15.875 27.225-16.978 3.314-0.8318 3.8223-2.1238 1.2271-3.1196-3.2603-1.251-4.7607-0.6511-13.799 5.5176-15.892 10.845-14.932 10.633-44.107 9.7407-22.007-0.6731-25.854-0.5439-29.53 0.9919-8.708 3.6384-12.451 9.5637-12.451 19.71 0 7.4036 1.7773 11.091 7.8496 16.289 6.917 5.9211 15.765 7.6875 23.053 4.6028l-9e-4 -1e-4zm-15.104-6.5615c-13.327-6.2061-12.648-21.132-2.7979-27.713 3.2729-2.1863 4.957-2.4609 14.205-2.3167 5.7705 0.0896 9.0166 0.3738 7.2139 0.6304-4.6377 0.6602-5.6089 2.0723-1.9326 2.8076 2.6821 0.5366 3.3228 1.4099 4.5522 6.2063 2.5737 10.042-0.1963 17.358-7.8945 20.854-5.8354 2.6497-6.7153 2.6187-13.345-0.4685h-5e-4zm13.975-10.224c6.0762-5.4988-3.6924-15.25-11.107-11.089-3.9229 2.2021-5.3857 6.8545-3.3154 10.544 2.6982 4.8071 9.4326 5.0615 14.423 0.5452h-5e-4zm1165.2 7.5366c12.346-6.3611 17.802-19.99 12.541-31.33-7.2366-15.597-27.833-19.63-41.01-8.0312-5.9993 5.2808-8.2683 10.107-8.2683 17.585 0 18.2 20.312 30.238 36.738 21.776v2e-4zm-17.01-15.759c-4.4395-4.7366-4.6328-10.569-0.4595-13.852 6.5112-5.1218 16.823-0.5713 16.754 7.3933-0.0381 4.3899-1.4385 6.7974-5.0835 8.7388-4.1487 2.2095-7.6753 1.4922-11.211-2.28h3e-4zm7.4033-3.6055c0.8669-0.7305-2.2258-4.8625-3.6396-4.8625-2.4099 0-4.262 4.1658-2.6926 6.0564 1.1525 1.3889 3.8764 0.8752 6.3322-1.1939zm-697.2 11.974c5.3853-3.1558 7.7959-7.2053 8.667-14.56 1.8413-15.547-10.922-27.234-26.169-23.964-14.112 3.0266-20.946 21.366-12.055 32.351 8.3696 10.341 18.746 12.508 29.557 6.1726zm-19.474-4.0242c-10.41-7.0151-11.604-19.776-2.5205-26.921 4.3818-3.4465 13.773-3.1912 18.621 0.5063 4.7432 3.6174 6.9321 7.9851 6.9272 13.821-0.0107 12.039-13.17 19.236-23.027 12.594h-5e-4zm12.104-10.627c0.6436-1.2021 0.8081-2.1853 0.3662-2.1853s-0.2139-0.5901 0.5078-1.3113c1.5039-1.5039 1.8047-5.6787 0.3438-4.7759-0.5317 0.3286-2.5366 0.05-4.4556-0.6184-7.0879-2.4707-11.834 3.707-6.9731 9.0781 2.5126 2.7769 8.685 2.6639 10.211-0.1872zm61.062 15.361c5.5781-2.8455 10.781-8.9763 11.678-13.76 1.1167-5.9524-0.0708-14.542-2.4526-17.731-4.5659-6.1155-7.4751-7.3613-17.186-7.3613-8.2437 0-9.3721 0.269-13.124 3.1311-7.4062 5.6489-10.279 12.757-8.8931 22.002 1.8657 12.441 18.006 19.828 29.978 13.72v2e-4zm-15.968-4.3955c-10.96-4.9756-12.193-18.47-2.4365-26.679 2.7627-2.3242 4.5244-2.8618 9.3809-2.8618 10.436 0 16.052 5.2036 16.064 14.884 0.0107 6.2253-3.2661 11.396-9.083 14.344-5.8804 2.9807-7.9458 3.0271-13.925 0.3125h4e-4zm10.358-10.904c3.0371-2.5337 3.1191-4.8638 0.2729-7.7102-4.0732-4.073-6.0708-1.5579-11.414 3.0386 8.0245 7.4953 7.4015 7.7917 11.141 4.6716zm3063.9 14.584c12.34-6.1489 15.957-23.826 7.0442-34.418-7.9159-9.4072-24.584-10.23-33.995-1.6785-7.4296 6.7512-9.0498 19.54-3.5706 28.18 6.369 10.043 19.448 13.436 30.521 7.9173zm-17.828-4.3474c-18.554-9.675-9.8867-32.151 6.3152-32.151 9.9108 0 16.172 5.4126 16.938 14.641 1.1431 13.786-11.76 23.502-23.253 17.51zm10.335-6.9968c5.5079-2.9478 4.408-14.457-1.5239-15.946-4.8217-1.2102-8.2673 0.3601-10.026 4.5693-1.8352 4.3921-1.2765 7.1985 2.0507 10.298 2.5046 2.3334 6.3407 2.7689 9.4992 1.0788zm-2995.3 10.992c7.4478-4.541 12.173-14.789 10.738-23.285-1.3057-7.7268-11.066-16.149-18.698-16.134-8.1924 0.0164-17.093 5.24-20.651 12.121-4.3267 8.3669-0.29 22.321 7.7861 26.917 5.6441 3.2122 15.875 3.3987 20.825 0.3802zm-18.287-5.8472c-13.727-9.1704-5.9722-29.7 10.517-27.841 5.957 0.6714 9.8184 3.5486 12.029 8.9634 2.1929 5.3696 1.3945 10.306-2.394 14.809-5.7578 6.843-13.622 8.4307-20.152 4.0686zm13.69-8.0129c-0.645-0.2678-0.9741-1.8379-0.7319-3.4895 0.624-4.2524-2.8491-7.2273-7.2969-6.2505-4.2466 0.9326-5.0659 2.302-3.3252 5.5554 0.915 1.71 2.918 2.9402 5.8657 3.603 4.8535 1.0916 7.3569 1.3567 5.4883 0.5813v3e-4zm61.8 13.217c16.299-8.5215 14.791-32.238-5.5396-37.713-11.846-3.1899-25.04 7.2202-25.04 19.757 0 15.026 17.044 25.033 30.58 17.956zm-13.806-3.9441c-3.9111-1.1023-9.8508-7.3174-10.869-11.372-1.833-7.3042 3.8916-16.188 11.331-17.584 8.3777-1.5718 16.844 4.1299 18.393 12.388 1.8496 9.8596-8.9585 19.356-18.855 16.567h4e-4zm8.747-12.1c1.7307-2.7649-1.9548-6.3467-6.5308-6.3467-5.3352 0-6.8738 3.4292-2.9307 6.5308 3.3561 2.6397 7.7474 2.554 9.4615-0.1841zm3013.6 15.049c6.0248-3.5305 9.3409-9.9299 9.3409-18.024 0-20.514-24.628-28.903-37.871-17.276-5.3309 4.6807-6.9279 8.418-6.9279 16.213 0 10.676 5.7555 18.453 16.132 21.798 5.0039 1.6135 14.132 0.333 19.326-2.7107h-2e-4zm-20.79-3.8723c-10.928-5.562-12.275-19.636-2.6553-27.73 4.7599-4.0051 9.6617-4.6626 15.502-2.0796 22.997 10.173 7.4069 40.118-12.846 29.81h-2e-4zm12.57-8.3835c6.5341-8.3069-2.9502-18.229-10.351-10.829-5.74 5.7402-0.5432 12.762-0.5133 11.188 0.011-0.4849 1.1095-0.1162 2.4452 0.8193 3.4816 2.4385 5.8328 2.1096 8.4188-1.178h-1e-4zm67.082 14.819c5.0356-1.3982 11.888-7.3477 14.288-12.404 3.5671-7.5173 1.4153-19.59-4.4349-24.88-3.29-2.9753-11.525-6.2935-15.667-6.313-25.06-0.1169-34.715 33.649-7.9239 43.21 5.0385 1.7981 8.3242 1.8909 13.738 0.3877v2e-4zm-18.42-33.753c10.119-9.8074 28.996-2.0671 28.996 11.889 0 5.6631-2.0134 9.6794-7.0844 14.132-3.2246 2.8311-4.8301 3.4355-9.0703 3.415-17.472-0.0805-24.266-18.364-12.842-29.436zm15.169 20.447c-0.2785-0.4509-0.0109-0.8196 0.6068-0.8196 0.6124 0 1.6959-1.9443 2.408-4.321 1.0915-3.6428 1.0172-4.7444-0.4735-7.019-5.4532-8.3228-17.449-0.8704-13.848 8.6025 0.6358 1.6724 1.4526 2.7439 1.8151 2.3816 0.3627-0.3625 1.512-0.0623 2.5543 0.668 2.0484 1.4345 7.7684 1.8532 6.9368 0.5075zm69.314 11.688c11.92-4.979 17.776-19.173 12.322-29.864-7.6292-14.954-27.456-17.72-39.06-5.4497-1.9161 2.0264-4.0059 5.0688-4.6437 6.7605-1.6058 4.2593-1.4503 12.142 0.3232 16.387 1.847 4.4204 7.7556 10.424 12.138 12.333 4.5282 1.9728 13.998 1.8888 18.92-0.1673zm-14.41-3.8115c-4.3162-1.291-10.173-7.179-11.678-11.74-5.1282-15.539 14.751-28.416 28.122-18.217 15.562 11.869 1.9193 35.45-16.444 29.957zm10.041-9.1622c0.7715-0.7283 1.6762-3.011 2.011-5.0732 0.7894-4.864-2.7549-9.7654-7.0438-9.741-3.5745 0.0208-4.9326 0.8684-6.6683 4.1626-1.3987 2.6543-0.6028 11.569 0.9471 10.611 0.4591-0.2837 1.7678 0.186 2.908 1.0437 2.1825 1.6419 5.4929 1.2188 7.846-1.0032zm77.223 11.42c7.058-4.3621 9.8017-9.1719 10.243-17.955 0.3657-7.2871 0.1707-8.0728-3.2654-13.151-9.1411-13.51-28.342-14.169-38.556-1.323-2.9886 3.7588-3.3359 4.9697-3.2908 11.473 0.0753 10.843 4.7084 18.512 13.616 22.535 5.3348 2.4094 16.095 1.6104 21.254-1.5784v2e-4zm-16.09-2.4102c-5.9222-1.2505-9.1252-3.7141-11.674-8.9797-4.4778-9.25-1.6428-17.587 7.5621-22.237 6.0615-3.0623 11.494-3.1233 16.317-0.1833 18.519 11.29 6.8786 35.429-12.205 31.4zm7.7702-8.1111c1.381-0.9673 2.2394-2.4358 1.9164-3.2781-0.322-0.8389-0.1093-1.5256 0.4728-1.5256 1.8842 0 1.1215-5.0881-1.2062-8.0474-1.6427-2.0884-3.2715-2.8792-5.9316-2.8792-8.2538 0-10.372 8.1882-3.8854 15.024 2.7563 2.9049 5.2085 3.1056 8.634 0.7064zm70.209 12.528c16.178-5.417 20.078-23.688 7.6964-36.054-15.053-15.035-39.048-6.011-38.818 14.598 0.1732 15.538 16.068 26.496 31.122 21.456v2e-4zm-17.115-6.9016c-6.1375-3.6794-8.5836-8.5625-7.8924-15.756 0.8624-8.9749 7.2-14.345 16.921-14.337 12.548 0.011 20.757 12.14 15.8 23.347-4.1456 9.3718-15.364 12.42-24.828 6.7466zm14.195-5.5908c2.3415-2.3416 2.283-11.143-0.0918-13.767-2.2526-2.489-8.3367-2.6235-10.723-0.2371-2.2198 2.2197-2.0247 11.094 0.3037 13.809 2.0516 2.3923 8.1994 2.5066 10.511 0.1953h5e-4zm70.603 10.433c2.1585-1.1013 5.6989-3.9663 7.8677-6.3669 16.309-18.052-10.263-45.004-32.209-32.669-5.046 2.8362-10.23 10.264-11.21 16.063-1.5021 8.8911 8.0522 22.326 17.788 25.013 5.1287 1.4155 12.693 0.5469 17.763-2.0396l2e-4 3e-4zm-19.17-4.8017c-1.8029-0.8047-4.7531-3.0305-6.5559-4.946-2.8014-2.9766-3.278-4.3342-3.278-9.3403 0-6.6108 2.1266-10.349 8.2953-14.583 8.2929-5.6917 22.245-0.4846 26.553 9.9094l2.1113 5.0942-2.6631 5.1748c-4.4827 8.7112-15.583 12.655-24.462 8.6912h-1e-4zm10.84-6.0999c3.543 0 5.2755-11.59 2.1933-14.673-4.241-4.2407-13.58 0.2295-13.58 6.5002 0 5.4036 4.523 9.9758 8.5574 8.6506 0.8004-0.2626 2.0735-0.4779 2.8294-0.4779zm461.17 9.9565c6.6429-4.4861 9.4995-10.218 8.7736-17.605-0.5685-5.7847-0.5338-5.887 0.9281-2.7317 1.2871 2.7781 1.6398 2.9861 2.3137 1.3635 1.1897-2.8647-0.1223-6.6672-4.0836-11.835-13.174-17.186-40.019-9.3765-40.132 11.674-0.0972 18.074 17.918 28.779 32.2 19.134v-5e-4zm-19.001-4.6689c-6.9417-4.7781-9.6432-13.773-6.1598-20.508 7.3658-14.244 27.274-12.139 28.732 3.0388 1.0478 10.904-4.3695 18.676-13.618 19.537-4.2213 0.3932-5.9638-0.0111-8.9544-2.0677zm13.716-16.714c-0.7823-2.0388-5.33-3.2275-8.91-2.3291-2.307 0.5791-2.7293 1.3193-2.7167 4.7622 0.0359 9.8918 1.2825 8.9934 10.778 8.9934 0.3531-2.3542 1.6205-9.4162 0.8491-11.426zm-385.57 22.842c18.499-7.728 20.699-34.768-2.7321-41.579-27.513-7.9983-43.262 25.828-18.608 39.967 6.645 3.8108 14.633 4.4145 21.34 1.6125zm-24.354-10.782c-10.149-13.305 1.7493-28.653 19.615-25.301 5.4274 1.0181 12.211 7.6863 13.204 12.979 3.175 16.923-20.786 28.098-32.819 12.322zm17.719-0.2225c-0.3751-0.375 0.2954-1.4812 1.49-2.4585 3.1693-2.592 3.9068-8.8833 1.3889-11.847-3.245-3.8193-9.3336-3.7554-11.876 0.1248-2.1716 3.3142-1.1626 14.572 1.1352 12.665 0.9831-0.8162 1.5486-0.6665 2.0081 0.531 0.8872 2.3115 6.6457 1.7761 5.8537 0.9849l1e-4 -3e-4zm68.147 11.454c19.371-5.804 21.96-31.198 4.1129-40.351-8.7689-4.4973-17.605-3.7302-25.853 2.2446-20.393 14.773-2.8739 45.48 21.74 38.106zm-15.186-5.9917c-8.6048-4.3872-12.509-15.777-7.9156-23.092 2.8341-4.5134 7.9696-7.6516 14.002-8.5562 5.969-0.895 13.83 2.8423 17.58 8.3577 4.5776 6.7336 2.1423 16.406-5.5828 22.173-3.9755 2.9683-13.321 3.5454-18.083 1.1172zm12.916-21.17c-4.2281-4.2283-13.112-1.3596-13.112 4.2339 0 3.9634 1.3693 8.8357 2.3184 8.2493 0.5277-0.3262 0.9595-0.0864 0.9595 0.5327 0 1.3271 6.4785 3.2529 8.4984 2.5264 4.5149-1.6233 4.4527-12.425 1.3355-15.542zm129.04 25.587c8.3469-4.2197 13.371-16.096 10.819-25.574-2.3712-8.8057-12.35-16.374-21.618-16.396-3.4399-0.011-10.06 2.8904-13.206 5.7825-6.3436 5.8318-8.4149 17.1-4.662 25.361 2.3479 5.1682 8.7958 11.162 13.006 12.09 1.6417 0.3616 3.4765 0.8206 4.0774 1.0198 1.7849 0.5913 8.5274-0.7373 11.584-2.2825v-2e-4zm-14.882-4.1118c-1.814-0.8188-4.8871-3.2988-6.829-5.5105-2.9137-3.3184-3.5301-4.9216-3.5268-9.1733 0.011-9.4827 6.5102-15.879 16.154-15.891 5.3154-0.011 9.2702 2.4131 13.07 7.9961 7.8368 11.515-6.1923 28.302-18.869 22.579v-3e-4zm11.081-9.2039c1.6338-2.6187 0.2997-11.22-1.9608-12.642-1.2176-0.7659-3.221-0.8047-6.0096-0.116-3.7679 0.9309-4.2112 1.4126-4.4675 4.8574-0.3951 5.3093 1.8442 9.1455 5.7773 9.8975 4.0016 0.7652 5.153 0.42 6.6606-1.9968zm65.59 12.758c10.034-6.2012 14.102-19.485 8.822-28.808-3.888-6.8643-10.401-10.785-18.807-11.32-6.088-0.3877-7.7013-0.0635-11.891 2.3921-5.4545 3.1968-10.522 11.709-10.522 17.675-1e-4 16.112 18.088 28.905 32.398 20.06zm-17.956-4.9929c-8.0419-3.9636-11.556-15.533-6.7632-22.265 7.0027-9.8342 23.402-8.3726 28.764 2.5642 6.1366 12.518-9.0259 26.095-22 19.701zm12.27-12.309 0.0568-6.9636c-9.55-3.2446-11.473-4.4863-11.473 5.4094 0 6.2708 0.2593 7.1062 2.4585 7.9229 1.3521 0.502 3.9078 0.8413 5.6794 0.7539 3.2062-0.1582 3.2213-0.1912 3.278-7.1226h1e-4zm-113.08 15.798c15.027-10.414 13.059-30.137-3.7777-37.861-18.119-8.312-38.933 11.234-30.148 28.312 4.6965 9.1304 12.378 13.552 22.657 13.04 5.2819-0.2627 7.6846-1.0071 11.269-3.4907zm-21.818-4.1299c-5.8595-3.988-8.1838-7.9446-8.1838-13.931 0-5.7334 2.1175-9.5566 7.5266-13.591 2.2567-1.6831 4.6229-2.2439 9.3541-2.2168 8.4773 0.0481 14.331 3.7717 17.027 10.831 1.8065 4.7302 1.806 5.2234-0.011 9.9741-3.9622 10.375-16.962 14.891-25.716 8.9331h0.0026zm12.51-5.5527c1.3132-0.9604 2.1737-3.3611 2.5287-7.0559 0.5332-5.5496 0.5023-5.6172-3.4297-7.4922-3.8362-1.8293-4.067-1.8181-6.9636 0.3364-1.6477 1.2256-3.1464 3.2351-3.3303 4.4656-0.4532 3.031 2.7449 10.436 4.1358 9.5769 0.6136-0.3794 1.1156-0.1687 1.1156 0.4678 0 1.6213 3.5624 1.4426 5.9435-0.2986zm-2836.7-63.284c0.4399-108.67-0.0391-152.95-1.6499-152.42-2.1836 0.7275-2.2683 222.47-2.0942 222.89 0.1855 0.4507 1.0393 0.8193 1.8967 0.8193 1.3312 0 1.601-10.412 1.8474-71.295zm8.2102-93.983c0.2588-156.22 0.1741-164.7-1.6389-164.7-1.8113 5e-4 -1.9211 8.6699-2.0859 165.05-0.1616 153.22-0.0437 165.03 1.6389 164.7 1.6781-0.3232 1.8334-12.619 2.0859-165.05zm-1364.4 160.63c16.17-8.179 15.847-32.848-0.5283-40.287-16.301-7.4043-38.927 7.6106-29.14 28.125 6.1186 12.825 18.402 17.86 29.668 12.162zm-18.102-6.1333c-4.1475-2.5291-6.6787-6.3159-7.6367-11.427-0.9746-5.1956 2.5396-12.603 7.3179-15.426 6.9097-4.0815 16.877-1.8098 21.956 5.0039 4.6436 6.2302 2.1274 18.065-4.6978 22.097-4.1079 2.4263-12.761 2.2993-16.94-0.2488v3e-4zm14.408-7.5494c4.0625-3.2742 4.2329-6.4075 0.5498-10.091-2.4282-2.4282-4.2891-3.2703-7.2285-3.2703-8.123 0-11.7 8.2427-5.8076 13.385 2.8037 2.4463 9.437 2.4336 12.486-0.0242h5e-4zm1350.3 14.775c0.2324-0.7512 0.7249-52.341 1.094-114.64 0.6406-108.05 0.5818-113.31-1.2764-113.88-2.5608-0.7898-53.622-0.3896-56.837-0.3767-1.4226 15.054-1.3643 18.587-1.3855 131.14 10.487 16.928 52.916 99.126 57.123 99.126 0.4709 0 1.0459-0.6145 1.2786-1.3657h0.0035zm-920.35-4.6138c11.449-7.5767 11.485-26.332 0.0649-33.889-10.326-6.833-25.517-3.4121-30.677 6.9084-4.7041 9.407-3.7505 16.94 2.9741 23.506 7.9489 7.7621 19.05 9.1576 27.638 3.4747zm-16.26-1.7859c-4.939-1.4417-10.947-7.7678-11.826-12.451-2.6362-14.052 16.781-23.129 27.197-12.714 6.2715 6.2715 4.813 18.676-2.7607 23.476-3.5342 2.24-8.4619 2.8997-12.61 1.6887v-2e-4zm9.5537-19.551c-4.6016-4.6016-14.205-0.9082-14.205 5.4634 0 3.6345 4.355 7.6484 8.2979 7.6484 3.4409 1e-4 11.781-7.237 5.9067-13.112zm-166.15 13.395c7.6504-0.218 9.8984-0.7129 13.214-2.907 9.6138-6.3623 10.359-21.702 1.4854-30.585-4.0806-4.085-10.858-7.1646-15.834-7.1951-8.7485-0.0537-17.447 5.1519-20.745 12.415-7.4126 16.322 9.9683 32.064 12.112 29.254 0.3013-0.3953 4.6973-0.8374 9.7671-0.9819v2e-4zm-9.3969-4.1233c-4.915-2.946-9.1094-9.9053-9.1094-15.115 0-4.2024 2.4971-9.5398 5.957-12.732 2.5098-2.3159 4.0161-2.7317 9.8945-2.7317 5.3242 0 7.6504 0.5305 10.019 2.2856 10.904 8.0793 10.59 21.156-0.6782 28.27-5.5297 3.491-10.286 3.4978-16.083 0.023zm15.014-8.8023c2.5239-2.2844 2.6685-5.7356 0.4614-11.019-1.3804-3.3027-1.8984-3.708-3.2783-2.5627-0.9009 0.748-1.6387 1.106-1.6387 0.7952s-1.8438-0.1057-4.0977 0.4558c-5.2412 1.3054-6.5376 1.3477-7.6167 2.5349-0.4683 0.5146-0.2368 0.5815 0.5146 0.1494 2.6318-1.5151-0.1895 9.2068 3.2778 11.335 2.6196 1.6079 9.8198 0.6257 12.377-1.6885v-2e-4zm3277.8 10.684c5.5222-4.1228 7.1853-7.5894 7.1853-14.978 0-5.332-0.53-7.6575-2.2858-10.027-7.9155-10.683-21.035-10.532-28.463-0.7937-7.2489 9.5037-2.979 26.048 7.257 28.117 4.8372 0.978 13.55-0.2615 16.307-2.3193v2e-4zm-13.664-3.6135c-7.5603-2.1348-10.451-11.475-5.7103-18.452 8.6255-12.694 27.079-0.5845 19.992 13.119-2.5411 4.9138-8.2347 7.0398-14.282 5.3323zm4.732-8.2432c1.4557-0.2224 2.5071 0.3462 2.8514 1.5415 0.3002 1.0415 0.4575 0.4185 0.3496-1.3845-0.1715-2.8701-0.6036-3.2778-3.4739-3.2778-2.9714 0-3.3007 0.3577-3.5214 3.8242-0.1753 2.7546 0 3.2402 0.6223 1.7363 0.4762-1.1484 1.9034-2.2463 3.1718-2.4397h2e-4zm-3348.3 11.765c1.8877-0.7417 1.9082-0.9417 0.2729-2.5769-0.9746-0.9751-1.7725-2.2998-1.7725-2.9436 0-1.5242-2.1855-1.7163-2.1855 0.4243 0 1.5786-0.541 1.666-10.107 1.6299-2.9028-0.011-4.0977 0.4578-4.0977 1.6077 0 1.2378 1.7515 1.7141 7.3755 2.0056 9.192 0.4763 7.9498 0.8606 10.514-0.147zm100.81-5.6843c0.0781-3.2581-0.0752-4.4485-0.3408-2.6458-0.2666 1.8027-1.2529 3.8691-2.1919 4.5911-1.938 1.49-1.0957 5.127 1.0249 4.428 0.8433-0.2778 1.4194-2.7141 1.5078-6.3735v2e-4zm-328.8 1.4429c1.7954-2.2549 0.6978-12.292 0.313-75.657h-66.651v77.523c5.8599 0.1025 63.485 1.718 66.338-1.8655v-2e-4zm-57.051-65.277c27.727-0.3352 13.44-0.1624 48.623-0.5881v59.016l-49.204-0.1575c0.7427-74.443 0.1523-15.276 0.5815-58.27zm42.51 50.473c1.7812-1.3027 1.9199-3.25 1.5742-22.126-0.2085-11.384-0.7769-21.312-1.2627-22.064-1.1978-1.8501-20.294-1.3657-35.471-1.3657-2.8066 6.0149-3.3755 5.054-2.7603 25.677 0.3047 10.216 1.0547 19.19 1.666 19.941 1.6084 1.9749 33.542 1.9197 36.253-0.0623l0.0011-4e-4zm1834.4 12.368c9.2708-3.4963 18.354-12.331 23.469-22.829 3.8501-7.9009 4.0571-8.8801 4.0696-19.251 0.012-10.035-0.2717-11.527-3.4761-18.292-15.823-33.402-62.446-33.678-77.99-0.4622-18.336 39.184 17.699 74.496 53.928 60.834v-3e-4zm-24.426-5.8777c-10.774-2.905-19.849-10.462-24.381-20.303-1.7524-3.8057-2.2925-7.1572-2.3008-14.283-0.011-8.3291 0.3679-10.08 3.5806-16.606 13.686-27.8 52.481-27.229 65.09 0.1047 1.8296 3.9656 2.3311 7.1633 2.3352 14.884 0 8.6406-0.3677 10.563-3.073 15.843-8.9355 17.444-25.928 24.49-41.251 20.359l5e-4 6e-4zm19.072-7.4831c2.8411-0.8394 6.5769-3.3958 10.143-6.9404 12.123-12.05 12.118-29.656-0.0129-41.469-6.2146-6.052-11.429-8.1719-20.101-8.1719-15.226 0-26.225 10.076-28.233 25.865-2.6487 20.824 17.327 36.884 38.202 30.717h5e-4zm-18.962-7.9917c-8.0288-3.6057-12.052-10.16-12.052-19.635 0-20.376 23.554-29.936 37.354-15.162 8.5022 9.1028 6.9983 25.141-3.0779 32.827-3.2729 2.4963-5.2808 3.0972-11.21 3.3564-4.7957 0.2099-8.4971-0.2564-11.015-1.3868zm17.107-8.1074c4.3079-2.627 6.104-5.8501 6.104-10.954 0-8.5554-5.8137-14.231-14.577-14.231-3.8325 0-5.2251 0.6716-8.7954 4.2419-3.7332 3.7329-4.2419 4.8625-4.2419 9.416 0 4.5537 0.509 5.6829 4.2419 9.4163 3.635 3.635 4.925 4.2415 9.0144 4.2378 2.7959 0 6.2139-0.8831 8.2537-2.1267h2e-4zm-12.053-7.5159c-3.5586-3.9321-1.4175-10.021 3.5239-10.021 5.6162 0 8.7583 6.5134 4.9697 10.302-2.3027 2.3027-6.2747 2.1711-8.4939-0.2812h3e-4zm426.87 34.952c8.519-4.1938 14.037-10.041 18.598-19.707 3.0308-6.4219 3.417-8.3445 3.429-17.071 0.012-8.7961-0.3523-10.606-3.4548-17.155-6.9253-14.619-17.335-19.184-26.209-23.663 0.123-15.235 0.8911-110.2 1.0146-125.47-11.96-1.1885-13.98-1.3032-22.145-2.7747 0 88.336-0.2119 88.576-1.4421 129.32-7.2378 3.6675-16.279 7.415-22.974 21.546-3.1487 6.6453-3.4434 8.2029-3.4434 18.194 0 9.5227 0.3699 11.716 2.8794 17.067 7.3586 15.694 21.284 24.252 38.297 23.537 6.7756-0.2849 9.76-1.0239 15.453-3.8264l-0.0027-8e-4zm-26.23-5.4165c-19.846-7.0771-26.653-25.674-21.561-42.821 2.2952-7.7288 11.624-17.299 19.672-20.182l5.5645-1.9929c1.5454-65.094 1.4346-67.233 1.4346-123.16l7.1023-7e-4 -0.6333 122.92 6.8726 2.1169c9.6179 2.9626 18.472 11.706 21.136 20.872 2.2295 7.6694 1.6074 17.868-1.521 24.941-6.1492 13.901-24.377 22.186-38.069 17.304l0.0023-6e-4zm16.193-6.9524c5.655-1.6943 12.788-7.9658 15.267-13.422 2.7004-5.9456 2.6953-17.162-0.011-23.007-4.1033-8.863-12.106-13.658-22.793-13.658-8.0999 0-14.848 3.2847-19.545 9.5137-14.964 19.846 3.5723 47.616 27.082 40.573v2e-4zm-13.897-8.5298c-3.8579-1.561-9.0886-7.5935-10.411-12.007-2.3557-7.863 1.4041-16.408 8.9321-20.301 4.593-2.3752 12.54-2.0186 17.53 0.7866 4.7024 2.6428 8.6169 9.3042 8.6169 14.663 0 4.7817-4.3816 12.625-8.6296 15.448-3.8757 2.5759-11.502 3.2466-16.039 1.4106h3e-4zm8.8981-26.885c-8.2607-2.0732-15.567 8.3826-11.367 16.268 1.9885 3.7334 4.3721 5.0459 9.2329 5.0835 12.947 0.0989 13.892-18.4 2.1343-21.351zm-4.3383 14.496c-4.0972-2.9958 0.2583-10.426 4.5386-7.7434 2.5808 1.6177 2.9705 5.2244 0.7996 7.3953-2.1473 2.1469-2.8185 2.1906-5.3382 0.3481zm2475.9 35.95c1.9995-1.4622 2.083-3.0063 1.7586-32.506-0.4062-36.945 0.2622-35.037-12.116-34.565l-8.2604 0.3154c-0.3238 36.498-0.8452 64.975 0.6637 66.793 1.7056 2.0552 15.13 2.0273 17.954-0.0371v-3e-4zm-4450.6-4.2014c-0.2607-0.4509-6.5913-0.8196-14.068-0.8196-13.523 0-13.594-0.0129-13.594-2.5566 0-3.689 0.0254-1.9744 33.059-1.8137-1.2573 7.8628-1.6782 8.7412 0.71 8.7412 1.1587 0 2.313-0.6145 2.5649-1.3657 0.5762-1.7178-0.896-8.4426-2.103-9.6086-1.187-1.1467-34.199-1.5459-36.418-1.5908 0.0029 10.551-1.2554 10.38 13.643 10.38 9.9458 0 12.593 0.3357 13.763 1.7449 1.3145 1.5842 1.5156 1.5591 2.1821-0.2732 0.4038-1.1099 0.5205-2.3865 0.2603-2.8374v-6e-4zm3161.9 2.4199c3.4589-1.8511 2.3746-6.3416-0.8453-3.1213-0.6721 0.6721-3.4747 1.0305-6.2999 0.8059-5.0106-0.3984-5.0526-0.375-2.7111 1.521 2.671 2.1631 6.6936 2.4873 9.8563 0.7947v-3e-4zm-16.005-17.148c2.473-3.2402 7.9852-5.7588 12.604-5.7588 1.8131 0 5.6938 1.4753 8.6239 3.2781 14.754 9.0779 2.8828-3.8708-1.6754-6.0339-8.3738-3.9736-21.967 0.3845-26.094 8.3662-1.7838 3.4495-2.0435 5.7422-0.5458 4.8167 1.9429-1.2007 1.8354 3.3779 3.8207 0.0444 0.6445-1.0818 2.1149-3.2024 3.2675-4.7126h-2e-4zm-1018.3-7.4175c7.6777-3.8848 16.228-12.842 20.056-21.011 2.5835-5.5132 2.9456-7.6284 2.9456-17.212 0-10.102-0.2671-11.473-3.5374-18.156-4.2847-8.7571-10.28-15.16-18.005-19.229-5.1997-2.739-6.8611-3.0415-16.701-3.0422-10.075-7e-4 -11.383 0.2522-16.791 3.2473-7.3162 4.052-14.486 12.086-19.041 21.336-3.1018 6.2993-3.4973 8.1523-3.5002 16.39 0 8.1643 0.4148 10.17 3.4546 16.586 3.751 7.918 10.446 15.909 16.424 19.604 10.114 6.2507 24.095 6.8501 34.695 1.4871zm-28.352-6.3753c-6.3918-2.9829-12.949-9.8364-16.229-16.963-3.2646-7.093-3.2822-21.546-0.0349-28.598 3.3435-7.26 8.479-12.56 15.519-16.017 5.2415-2.574 7.5684-3.0454 14.949-3.0276 13.812 0.0339 21.014 4.6655 28.003 18.008 2.1504 4.1057 2.5754 6.5396 2.5754 14.751 0 8.2444-0.4197 10.628-2.5959 14.751-4.4683 8.4629-8.6604 12.841-15.632 16.324-8.697 4.3459-18.299 4.6252-26.555 0.7722l5e-4 3e-4zm20.348-6.1894c5.8535-1.6257 13.352-8.772 16.234-15.47 4.5264-10.522 1.4321-22.941-7.6531-30.718-16.267-13.924-39.28-2.322-41.22 19.078-1.6699 18.414 14.775 32.072 32.639 27.11v-3e-4zm-13.792-8.0855c-17.042-7.6069-14.24-32.778 4.0264-36.164 18.352-3.4021 30.708 25.668 9.0854 35.648-5.157 2.3799-8.6299 2.5168-13.112 0.5164v-2e-4zm10.773-7.6045c10.117-4.2268 6.592-20.348-4.4487-20.348-10.455 0-13.863 15.175-4.5649 20.328 3.3464 1.8547 4.6165 1.8577 9.0139 0.0208l-3e-4 -5e-4zm-8.6333-8.4724c-0.5781-1.8215-0.1545-2.9583 1.647-4.417 3.334-2.6995 6.866-0.8918 6.3853 3.2678-0.2776 2.4036-0.9609 2.9917-3.7961 3.2668-2.78 0.2698-3.6104-0.1458-4.2363-2.1177h1e-4zm-1661.6 10.398c11.313-3.6538 21.495-14.445 24.998-26.493 1.5195-5.2268 1.5974-7.3708 0.5203-14.348-2.302-14.913-9.1953-24.517-21.858-30.454-5.2168-2.446-7.6206-2.8779-15.975-2.8701-8.5449 0.011-10.654 0.4109-16.09 3.0718-7.6816 3.7603-15.362 12.206-18.349 20.179-2.6748 7.1382-2.918 20.768-0.4941 27.638 2.4126 6.8386 7.6694 14.572 12.312 18.113 8.6533 6.5999 23.633 8.8145 34.935 5.1643h3e-4zm-22.289-22.814c-5.7773-3.4629-8.5015-8.9392-7.7524-15.584 0.6284-5.5786 3.1812-9.5249 8.54-13.203 3.0571-2.0981 4.7568-2.4727 9.4951-2.0923 4.7407 0.3806 6.4517 1.1228 9.582 4.1562 14.342 13.901-2.3569 37.217-19.864 26.722l-4e-4 3e-4zm-607.37 15.009c9.7744-5.0664 16.869-15.98 16.912-26.017 0.0991-22.852-19.779-37.564-40.991-30.337-7.3994 2.5212-14.902 10.209-17.478 17.91-7.5684 22.627 6.5479 42.27 29.537 41.099 4.9658-0.2529 9.1821-1.1841 12.02-2.655v2e-4zm-22.955-6.6739c-5.647-2.5657-11.157-8.8745-12.089-13.844-1.2212-6.51 0.0645-14.303 3.1206-18.922 3.1953-4.8279 12.336-9.9985 17.66-9.9888 10.637 0.0198 20.2 7.4224 22.312 17.273 3.9233 18.294-14.143 33.142-31.004 25.481l5e-4 -2e-4zm20.89-2.9206c12.388-7.1787 12.871-29.925-4.1968-37.056-13.442-5.6167-28.119 5.0747-28.149 20.506 0 1.6914 0.9863 5.3792 2.2002 8.1948 4.8643 11.287 18.545 15.079 30.146 8.3557l-5e-4 3e-4zm1477.2-0.0132c16.275-4.239 29.004-18.527 30.914-34.699 2.9143-24.684-13.622-46.066-37.502-48.492-9.2183-0.9365-23.88 3.3303-29.694 8.6411-4.2085 3.8445-4.5969 1.3086-1.4155-9.2417 8.7734-29.095 14.178-51.033 39.049-131.41 14.895-48.134 58.146-194.13 69.134-239.84-89.554 0-93.982-0.1709-178.14-1.4485v7.1858c156.57-2.3298 171.55-3.3047 171.55-1.21 0 2.2156-10.926 41.176-10.926 43.396 0 1.7432-23.282 1.3867-160.62 0.5898v6.1946c50.656-0.1987 158.43-0.8005 158.43 0.3003-5e-4 1.2061-3.2705 11.152-13.563 46.946-17.642-0.1724-127.22-1.2432-144.87-1.4158v6.7004c143.67-1.7139 134.26-1.292 146.61 0.0359-4.5315 4.8936-3.5757 1.6624-16.491 45.15-15.862-0.0923-115.25-0.6697-131.21-0.7625v6.9089c115.87-1.4102 128.93-1.7949 128.93 0.0532 0 3.625-11.79 42.842-12.822 46.247l-117.2-0.6123v6.6221c15.247 0 114.73-0.1343 114.73 0.4966 0 1.7139-16.636 51.537-46.089 155.21-12.06 42.45-13.014 48.797-9.1187 60.642 4.854 14.758 14.364 23.804 29.236 27.808 7.6221 2.052 13.212 2.0522 21.088 5e-4l-3e-4 4e-4zm-26.461-9.2087c-7.8645-3.96-12.646-8.9822-16.621-17.457-2.3838-5.0825-2.8337-7.5569-2.7898-15.347 0.0449-7.833 0.5-10.143 2.9104-14.751 3.6704-7.0164 9.8057-12.901 16.705-16.022 8.0693-3.6506 22.995-3.6045 30.51 0.094 21.324 10.495 26.817 37.998 11.084 55.497-7.1018 7.8992-13.275 10.601-25.205 11.034-9.1909 0.3328-10.276 0.1335-16.594-3.0483l2e-4 4e-4zm25.644-7.1817c5.6687-2.3643 10.975-7.7192 14.019-14.149 8.0603-17.021-4.5833-36.655-23.556-36.58-17.824 0.0698-30.341 15.837-26.218 33.024 1.0652 4.4402 2.5671 6.8708 6.9304 11.217 3.0637 3.0515 7.2915 6.0908 9.3948 6.7537 5.6631 1.7852 14.813 1.6599 19.429-0.2659h3e-4zm-16.635-5.3994c-12.579-4.4812-17.745-16.562-12.098-28.292 4.0933-8.5017 16.775-13.527 25.227-9.9968 8.9036 3.7195 13.734 10.649 13.734 19.705 0 8.9436-4.0898 15.039-12.428 18.523-4.9341 2.0615-8.7727 2.0779-14.435 0.0613l3e-4 -8e-4zm14.506-7.8721c7.6704-4.7952 6.4119-18.379-2.1113-22.787-9.5503-4.9387-20.925 3.7881-19.154 14.696 1.4683 9.0483 12.824 13.368 21.266 8.0906l2e-4 2e-4zm-11.594-6.4028c-3.3967-2.3794-3.2659-7.5339 0.2498-9.8374 3.3826-2.2163 6.9434-1.1814 8.3108 2.4155 1.4373 3.7808 1.3247 4.4575-1.1553 6.9375-2.6299 2.6301-4.1958 2.7324-7.4055 0.4846l2e-4 -2e-4zm-1376.4-64.404c-4.3789-0.2339-8.8438-0.428-16.936-1.2266-6.9429-0.6855-7.022-0.729-3.5479-1.9292 12.054-4.1641 17.182-19.379 10.228-30.345-9.3965-14.816-32.023-12.658-38.861 3.7058-4.5044 10.781 0.4731 22.874 10.888 26.455l3.9824 1.3691c-20.617 1.9473-22.535 1.0452-24.045 2.865-1.314 1.5835-2.0337 87.11-0.7505 89.186 0.9272 1.4995 37.584 1.1565 58.455 1.1565 1.0054-4.1291 1.2466 2.1685 0.5884-91.237zm-51.402 81.127c-0.6953-1.8123 0.2822-42.215 0.5947-72.932 24.978 0 41.03-0.2886 42.31 1.366 1.4424 1.8643 0.1821 62.179 0.0273 72.934-26.95 0-42.298 0.2837-42.932-1.3682h-4e-4zm36.433-5.4062c0.9551-0.9556 1.311-9.3884 1.311-31.102 0-29.123-0.0513-29.819-2.2886-31.016-2.9995-1.6052-25.544-0.9636-27.281 0.7764-1.4263 1.4299-2.1504 57.416-0.7856 60.74 0.6875 1.6753 2.4541 1.9121 14.259 1.9121 9.023 0 13.907-0.4331 14.785-1.311zm-22.839-85.296c-8.4614-5.636-9.4077-15.528-2.1802-22.79 5.2124-5.2373 11.14-6.3535 17.887-3.3689 11.071 4.8972 12.583 17.652 3.0449 25.678-4.6821 3.9397-13.229 4.1587-18.752 0.481zm14.232-6.7126c1.6699-2.0117 1.7764-8.99 0.1675-10.929-1.896-2.2847-8.6416-2.2427-11.196 0.0698-2.5537 2.3108-2.6025 8.2437-0.0864 10.475 2.872 2.5468 8.0151 3.4836 11.115 0.3838zm989.86 99.978c21.589-11.102 27.139-37.606 11.31-54.009-6.2378-6.4641-11.435-8.6787-21.687-9.2417-7.8535-0.4309-9.6272-0.1572-15.046 2.3235-3.4165 1.5642-8.479 5.2107-11.406 8.2161-4.6987 4.8237-6.2605 7.3875-8.1526 13.384-0.488 1.5466-5.3608 1.8386-41.896 2.51-159.06 2.9241-141.7 2.7871-293.54 2.8418-6.5229 6.8567-11.005 10.232-6.8872 20.088 1.1396 2.7275 2.3938 3.8035 5.0535 4.3357 3.5178 0.7036 177.2 1.2214 341.44-0.9336 2.9055 3.3091 5.5806 6.9829 13.104 10.621 5.8538 2.8303 7.4546 3.1274 14.761 2.7417 5.6699-0.2996 9.6592-1.1858 12.947-2.8767h7e-4zm-16.602-15.416c-1.7097-0.5188-3.8362-1.8337-4.7249-2.9221-0.9639-1.1802-1.3247-1.3176-0.894-0.3398 0.7917 1.7966-3.0376-2.0078-5.562-8.5891-1.5205-3.9644-1.6118-5.4844-0.5449-9.0459 0.7053-2.3545 1.6846-4.0325 2.176-3.7288 1.0261 0.634 4.7502-3.116 3.9194-3.9468-1.8081-1.8079 13.761-1.6221 17.439 0.2078 4.373 2.176 8.2356 8.1829 8.2356 12.807 0 10.402-10.41 18.481-20.045 15.558h3e-4zm748.65 5.4793c4.729-21.781 23.94-103.63 30.95-130.34 98.511 0.3286 322.18 1.186 322.08 0.4194-0.1055-0.8296-2.2258-6.5706-2.7068-7.8984l-325.55 0.0481c-9.4512 31.532-35.511 140.29-35.511 144.75 0 1.0427 7.1514 4.8672 7.7869 4.1643 0.3838-0.4241 1.7119-5.4421 2.9512-11.151v-3e-4zm1804.2 8.468c19.334-13.158 4.3671-38.968-13.382-33.65-15.168 4.5444-17.454 25.633-3.6874 34.028 4.7798 2.9145 12.482 2.7444 17.069-0.3772zm-13.123-4.8692c-3.288-1.2021-6.5388-5.1284-7.2106-8.709-1.4288-7.6169 4.2148-14.558 11.838-14.558 3.5004 0 5.0721 0.7397 8.1838 3.8516 3.6277 3.6277 3.8198 4.1792 3.309 9.4963-0.4203 4.3743-1.2025 6.2129-3.4752 8.1677-1.613 1.3872-3.8286 2.5227-4.9235 2.5227-2.4056 0-5.0208-2.7922-3.4972-3.7339 0.5789-0.3577 1.2465-0.0688 1.4834 0.6423 0.9561 2.8682 3.0336-0.6208 3.0336-5.0942 0-3.6987-0.4592-4.9248-2.0314-5.4236-4.9471-1.5701-7.2983 2.366-5.6818 9.512 0.5098 2.2534 0.856 4.0586 0.7689 4.0112-0.0874-0.0481-0.8956-0.356-1.797-0.6853h2e-4zm-3092 2.345c2.5376-1.7834 5.5317-4.8137 6.6523-6.7336 3.0347-5.196 3.6313-14.177 1.3896-20.926l-1.8682-5.6248c8.4741-9.999 14.054-15.586 27.153-28.566 18.08-17.916 18.478-18.23 24.724-19.486 17.873-3.592 24.117-24.772 11.132-37.757-12.232-12.232-32.525-6.552-36.552 10.231-2.126 8.8623 0.4487 13.231 4.4487 21.133-9.2578 11.119-14.514 16.114-43.537 45.44l-7.1582 0.7666c-28.086 3.0076-25.755 34.651-9.5156 43.022 7.061 3.6404 16.706 3.0146 23.131-1.5012v1e-4zm-17.134-1.2651c-1.2021-0.2917-3.7837-1.7356-5.7378-3.2078-10.798-8.137-9.2788-24.8 2.7466-30.119 11.649-5.1533 24.298 3.6475 24.298 16.906 0 10.44-11.008 18.923-21.307 16.421zm10.779-8.0362c3.209-2.5244 3.6963-6.0708 1.2744-9.2727-0.8823-1.1665-1.6196-2.8198-1.6392-3.6738-0.0625-2.8093-3.5581-5.55-7.0332-5.5144-3.8179 0.0393-6.249 1.5706-8.1455 5.1304-1.3369 2.51-1.0054 3.0581 4.6475 7.6816 0.9243 0.7556 1.3896 2.1313 1.0342 3.0574-0.7163 1.8672 2.4204 4.7664 5.2173 4.8213 0.9707 0.0198 3.0601-0.9844 4.6436-2.2297h9e-4zm5.064-28.313c-1.9395-1.2341-0.9604-1.9624 46.338-50.208l-2.2808-2.4934c-3.4639-3.7864-5.8145-9.0818-5.813-13.092 0-7.7329 6.6245-15.265 14.759-16.791 4.6353-0.8696 12.77 2.6345 15.386 6.6284 2.8267 4.314 3.3896 14.269 1.0522 18.609-2.2207 4.1235-8.8647 8.1626-13.428 8.1626-2.7593 0-6.5664 3.3472-25.788 22.673-12.403 12.47-23.323 23.779-24.266 25.131-1.853 2.6577-3.395 3.0151-5.9609 1.3821l5e-4 -2e-4zm60.844-59.993c4.4272-3.6963 1.4434-11.872-5.1748-14.179-2.5649-0.894-3.7622-0.6567-6.7227 1.3335-1.981 1.332-3.7559 3.4856-3.9438 4.7861-0.4854 3.3577 1.6519 6.9055 3.689 6.1235 0.957-0.3669 2.3398 0.2358 3.2266 1.4067 1.7842 2.356 1.5557 1.9707 1.8535-3.4141 2.1997 5.5661 2.5551 7.7145 7.0722 3.9435zm-406.35 91.77c6.9639-3.5713 12.248-11.313 12.248-17.942 0-2.4236 0.5239-2.6582 7.3755-3.3052 9.1372-0.8628 28.423-0.8984 31.554-0.0579 1.2788 0.3433 2.8804 1.842 3.5586 3.3308 5.7134 12.54 17.933 16.678 28.637 9.6975 3.8145-2.4875 7.5459-8.3896 7.5459-11.935 0-1.9978 3.8433-1.7471 35.955-1.7471 4.4746 9.9504 5.8745 14.388 17.092 15.103 6.0903 0.3877 7.6211 0.0874 10.906-2.1357 3.7192-2.5181 9.2549-9.6069 9.2549-11.851 0-1.4658 39.04-1.1162 57.565-1.1162l1.3149 4.3887c3.7607 12.553 18.533 19.665 30.48 14.675 7.8027-3.2593 14.442-12.073 14.442-19.17 0-4.481-6.6685 3.5337 107.75-113.53h122.97c47.242-45.394 89.7-88.426 97.358-93.304 4.4451-2.8318 309.5-2.436 528.01-5.5806 0.1948-10.224 0.3625-19.009 0.5574-29.233-447.55 1.8745-538.4 2.1184-541.61 4.1658-11.077 7.0669-90.097 86.374-99.226 95.543h-119.62c-25.19 22.996-105.14 105.72-111.47 110.88-3.1982 2.6069-2.1533 2.2024-268.27 3.2974-8.2334 4.342-19.122 8.8525-19.122 27.488 0 10.23 4.9346 18.302 13.658 22.341 5.8716 2.7183 15.769 2.7148 21.077-0.0107l6e-4 0.0032zm-16.16-5.6465c-12.079-5.0723-14.731-20.368-4.9512-28.549 2.6875-2.2483 10.386-4.0647 14.165-3.3423 3.4795 0.6653 11.495 9.2581 11.706 12.55 0.5586 8.7278-1.4761 14.604-6.1045 17.638-3.5229 2.3081-11.257 3.198-14.814 1.7041v4e-4zm11.772-7.8313c0.7656-0.6294 1.1426-1.3945 0.8369-1.7002-0.3062-0.3057 0.2959-1.1785 1.3369-1.9395 1.7402-1.2725 1.7603-1.7622 0.2559-6.0828-2.0142-5.7827-6.2124-7.5107-13.18-5.4233-8.5156 2.5513-9.6812 12.587-1.8501 15.931 3.7314 1.5935 10.197 1.1904 12.6-0.7854v3e-4zm246.09 7.0865c-4.0664-0.6973-9.8604-5.5305-11.588-9.6672-3.0542-7.3093-1.1797-15.799 3.958-17.927 1.9395-0.8032 6.9995-1.1584 13.138-0.9229 12.196 0.469 14.16 2.0322 14.16 11.27 0 10.811-9.3555 19.016-19.668 17.247zm10.648-9.8335c3.6567-4.4763 3.1992-8.6072-1.4385-12.981-4.7891-4.5168-9.8149-4.9561-13.373-1.1692-9.5352 10.15 6.0283 24.901 14.812 14.15zm-187.11 2.7985c-3.1831-1.7981-8.1987-7.1978-8.1704-8.7961 0.0132-0.7566 0.8857-0.2568 1.9385 1.1108 3.144 4.0857 1.377-0.3718 9.1343 0.0854 2.8027 0.1653 4.896-0.2769 5.4512-1.1519 0.7046-1.1113 0.9082-1.0635 0.9341 0.2185 0.0293 1.4568 0.1528 1.4568 1.1089 0 0.9473-1.4426 1.2007-1.4456 2.1133-0.0251 0.7173 1.1155 0.4956 2.2126-0.7153 3.5513-1.8818 2.0793-7.4102 2.635-8.5098 0.8552-0.4209-0.6812-1.2119-0.5798-2.1348 0.2729-1.7607 1.6267-1.1865 2.8215 1.9668 4.0938 3.1353 1.2656-0.209 1.427-3.1167-0.2156v8e-4zm11.2-0.2314c1.9531-0.9021 3.5513-2.4541 3.5513-3.449 0-1.1633 0.5879-1.5828 1.6484-1.176 2.1084 0.8088 3.4199-3.4163 4.729-6.4084 0.041 1.6331 0.5132 7.1023-1.1167 7.1023-1.855 0-4.5332 3.9436-9.0845 4.8899l-3.2783 0.6814 3.5513-1.6404-5e-4 2e-4zm61.543-1.4744c-3.6626-1.8696-6.5396-5.1042-5.4814-6.1624 0.293-0.293 3.3989-0.6484 6.9014-0.7903 5.4756-0.2217 6.5308-0.614 7.5259-2.7976 0.8809-1.9333 2.0449-2.54 4.8711-2.54 2.0776 0 3.4292 0.459 3.0693 1.0425-0.3545 0.5732-0.3271 2.3074 0.061 3.8535 0.5635 2.2446 1.0107 2.5583 2.2188 1.5554 2.3179-1.9236 0.5391-3.0464 3.5107-5.7356 1.7563-1.5894 5.5947-1.8083 31.687-1.8083 25.662 0 29.689 0.2224 29.689 1.6389 0 1.8689-7.2729 1.6428-60.642 1.6658l-2.4688 3.8105c-2.3457 3.6218-4.6338 4.999-4.6338 2.7893 0-0.5618-0.5278-2.4055-1.1743-4.0974-1.1187-2.9302-1.2461-2.978-2.6895-1.0129-1.083 1.4749-1.2046 2.6431-0.4263 4.0974 1.5659 2.9263-0.895 2.2964-1.4917 0.6685-0.4004-1.0925-0.79-1.0925-1.9482 0-1.5981 1.5078-5.3813 1.8633-5.3813 0.5059 0-1.1323-4.3706-1.5002-4.3706-0.2029 0 1.793 4.1499 3.2471 9.4888 3.3252 3.9453 0.0579 4.7153 0.3118 3.0771 1.0156-3.5078 1.5073-7.376 1.2285-11.392-0.8213l-5e-4 2e-4zm-60.45-9.0854c-3.0771-1.8157-2.2134-3.2053 1.9922-3.2053 3.1201 0 3.8306 0.3816 3.5381 1.8997-0.4385 2.2766-2.9009 2.8579-5.5308 1.3057h5e-4zm54.057-0.1206c-1.0239-1.0242-6.6357-1.2864-22.321-1.0437-19.469 0.3013-20.846 0.1951-19.439-1.5005 1.3408-1.6155 3.811-1.7712 21.554-1.3616 19.432 0.4487 22.965 1.0989 21.983 4.0447-0.2915 0.8735-0.8057 0.8333-1.7778-0.1387l5e-4 -2e-4zm-120.44-2.0325c0-1.7312 51.595-0.8806 52.174 0.8601 0.27 0.8103-0.3594 1.2634-1.5483 1.1145-4.3037-0.5398-50.626-0.3337-50.626-1.9746zm-9.6274-12.549c0.7979-0.7981 101.41-1.0449 101.41-0.2488 0 1.2014-98.339 0.3901-98.339 1.7786 0 3.5227 2.3491 3.5825 109.2 2.7817 79.75-0.5977 106.05-0.4827 106.05 0.4639 0 1.96-48.618 0.4163-213.61 2.6487-5.145-7.0743-4.8467-7.2881-4.7104-7.4241zm255.99-1.6145 31.714-31.141c-23.641 24.089-30.549 30.752-28.618 31.832 4.6734 2.6164-353.33-0.6919-3.0957-0.6919zm33.899-27.367c32.086-32.622 58.214-59.054 79.703-80.806 39.574 0.3955 10.759 0.1074 50.323 0.5029-28.23 0.3596-13.731 0.175-49.468 0.6299-100.1 100.97-96.886 98.663-103.5 104.08-3.0049 2.4609 7.3208-8.5234 22.945-24.409v3e-4zm-1.6099-5.009c0.041-1.2974 79.055-81.203 79.188-81.339 18.074 0.1868 38.744 0.4001 56.818 0.5869l-56.001 0.6211c-45.506 45-80.005 81.431-80.005 80.131zm149.94-75.518c14.141-0.4739 39.374 0.3572 10.653 0.3572-11.719-1e-4 -16.512-0.1607-10.653-0.3572zm14.809-4.3716c15.141-0.4768 39.949 0.3574 10.595 0.3547-12.019-1e-3 -16.787-0.1614-10.595-0.3567v2e-3zm679.62 150.29c0.9819-0.9819 1.3113-14.01 1.3113-51.901 0-48.451-0.0852-50.59-2.0168-50.59-1.8179 0-2.0869 1.3733-2.7271 13.931-0.9336 18.305-0.9265 88.206 0.011 89.142 1.0532 1.0535 1.938 0.9028 3.4236-0.5825h-2e-3zm12.238-51.136c0-50.626-0.0308-51.355-2.1853-51.355-1.8047 0-2.178 0.7141-2.1421 4.0974 0.0789 7.4194-0.8789 97.413-0.1873 98.104 0.2795 0.2795 1.4094 0.5083 2.5115 0.5083 1.9141 0 2.0032-2.2846 2.0032-51.354zm1542 39.588c8.0228-3.5552 15.273-11.066 19.468-20.168 3.1337-6.7988 3.6349-9.0498 3.589-16.12-0.2476-38.047-45.286-55.596-71.304-27.783-3.5415 3.7859-6.7594 7.8933-7.1514 9.1272-0.6901 2.175-1.4597 2.2441-24.95 2.2419-27.999 0-60.204-0.9045-81.424-1.4368l-0.7249-3.864c-2.5593-13.642-15.18-27.683-29.165-32.448l-4.8972-1.6685c-2.9656-218.16-1.71-781.79-2.7976-782.87-0.615-0.6151-4.9927 3.0289-6.385 4.1243 1.2388 792.25 1.2339 767.72 2.8171 784.6l6.0095 1.5242c7.8357 1.9871 16.514 7.8113 21.297 14.294 3.9978 5.4172 8.2048 16.818 8.2048 22.233v3.1631h115.66l3.3735-5.8965c7.0219-12.273 17.204-18.441 30.665-18.577 14.01-0.1414 24.233 6.5618 30.335 19.891 2.3568 5.1477 2.6401 7.0422 2.2277 14.901-0.5397 10.282-3.2996 16.282-10.33 22.454-6.5682 5.7666-11.801 7.605-21.693 7.6199-6.9547 0.011-9.8579-0.5166-14.204-2.5796-12.525-5.9443-17.144-17.643-21.328-26.887h-115.74l-1.7598 3.4031c-2.8757 5.561-10.392 12.982-16.282 16.074-4.7009 2.4683-6.8665 2.8916-14.794 2.8916-7.9661 0-10.085-0.4182-14.891-2.9404-16.43-8.6218-22.351-25.446-14.492-41.175 2.708-5.4192 4.6282-7.616 9.4658-10.828 5.6709-3.7649 6.6177-4.0293 14.438-4.0293 7.2502 0 8.9617 0.3921 12.799 2.9312 18.096 11.975 11.626 41.708-8.9412 40.002-6.8967-0.5718-10.711-3.1775-13.805-9.4307-2.0469-4.1367-2.1843-5.2769-1.0823-8.9558 1.5991-5.3367 5.7954-8.7036 10.848-8.7036 4.6038 0 8.9375 3.5364 8.9375 7.2927 0 2.53-0.3835 2.7437-5.3328 2.969-5.6455 0.2573-5.802 7.2988-0.1809 8.1309 4.3474 0.6433 7.7136-0.8813 9.9141-4.4902 5.4631-8.96-0.8672-20.229-11.962-21.295-10.697-1.0278-19.755 7.6187-19.755 18.857 0 21.571 25.819 31.385 41.449 15.756 11.447-11.447 10.634-31.154-1.7568-42.575-6.7031-6.1787-11.37-7.959-21.117-8.0554-10.396-0.1028-18.353 3.4761-25.567 11.499-22.125 24.609-3.3767 62.297 31.03 62.377 13.785 0.0317 24.486-5.3699 33.413-16.866l4.0298-5.1902h106.41l2.6451 5.6819c4.5432 9.7583 15.515 19.357 26.137 22.866 5.1588 1.7043 23.044 0.4111 28.646-2.0713v-1e-4zm-47.221 1.044c0-0.6638-1.4358-2.2639-6.5719-7.1846-32.118-0.2498-99.61-0.7744-118.54-0.9216-0.8386 0.5657-11.881 7.9709-12.475 8.55-0.544 0.5313 137.58 0.7705 137.58-0.4438zm1766.5-400.61c-1.7566-0.5474-22.473-1.6128-25.95-1.8086 0 245.36 0.0226 390.94 0.7285 391.65 0.9116 0.9119 21.482 0.7285 26.588 0.7285-1e-4 -304.68 0.1891-390.09-1.3659-390.57zm-19.525 364.62c-0.7193-88.934-0.2185-342.27 0.6767-342.27 0.724-2e-4 1.0927 59.974 1.0927 177.74 0 234.6 2.7489 240.34 2.7316 0.7307-0.0587-525.61 2.8696 177.87 3.1311 178.28 3.2657 5.1816-0.2392-372.05 1.5082-372.05 1.2354 5e-4 2.1358 366.14 1.3868 370.13-0.7637 4.0708-0.8207 3.554-10.402 3.554l-0.1304-16.117 0.0048 3e-4zm-1761.2 21.302c0-1.7217-2.4178-4.873-3.4017-6.2778h-96.711l-4.8 6.4924c0.1198 0.0027 104.91 2.3238 104.91-0.2146zm-189.94-0.6181c2.3542-0.9612 0.0916-5.8208-22.53-76.364-7.7769-24.252-54.488-160.02-95.967-272.93-0.8577-88.179-0.8552-95.75-1.3318-191.86 5.3628 0.3958 3.3745 0.249 8.7451 0.6455 1.561 165.88 0.5356 150.35 4.6438 149.24l3.0049-0.8079-0.4412-149.54 4.8687-2.0134c7.4822-3.0947 15.197-10.708 19.304-19.051 3.292-6.6865 3.5845-8.1326 3.5845-17.707 0-9.5706-0.2937-11.023-3.5774-17.693-4.5251-9.1918-13.122-17.295-21.83-20.576-5.1865-1.9543-7.9902-2.2924-16.113-1.943-12.114 0.5212-18.542 3.6075-27.366 13.139-14.525 15.689-13.564 40.282 2.1931 56.087 6.3472 6.3665 11.292 7.9072 15.532 9.6553 1.2373 110.55 1.4438 123.01 1.446 191.78 12.789 34.286 111.06 312.58 117.25 343.49-120.86-1.1521-127.04-1.2434-326.13-2.7878-2.4592-6.1599-44.934-151.61-58.052-195.88l-384.07-0.3657c-2.6328 11.283-46.159 188.47-46.643 190.64-0.5325 2.3855 7.71 3.7397-143.97 3.7383-68.332-5e-4 -98.065 0.3499-98.065 1.157 0 0.6367 0.509 2.1089 1.1311 3.2712 1.1077 2.0698 3.5825 2.1133 119.37 2.1016 131.06-0.0222 121.5-0.5505 126.32-1.3474 20.883-86.329 8.8682-37.447 30.432-128.12 8.1152 0.2739 340.43 2.5984 347.39 0.6741 2.5112-0.6943 6.6904-3.0464 9.2876-5.2268 6.6013-5.5425 16.84-10.196 22.436-10.197 8.2019 0 23.692 7.3728 20.231 9.6316-1.0864 0.7087-0.8542 2.0828 1.063 6.2905 3.3762 7.4099 3.4077 18.861 0.0688 25.187-11.073 20.982-40.366 13.147-42.591-11.393-0.6584-7.2625 0.4216-8.2949 4.1042-15.513h-2.7317c-3.4543 0-7.1465 6.6919-7.1465 12.953 0 12.083 8.4194 26.54 17.986 30.886 9.9885 4.5374 23.38 1.6526 30.084-6.48 8.6492-10.493 9.9048-19.704 4.5586-33.441-1.8511-4.7566-3.1765-8.9543-2.9456-9.3284 0.1587-0.2568 0.0864-1.7856-15.384-53.046-20.159-0.0303-342.48-0.5127-362.64-0.543-13.462 58.754-12.341 55.225-16.866 55.006-1.9282-0.0928-3.8093-0.4731-4.1807-0.8445-0.3713-0.3711 2.5125-13.723 6.4077-29.671l7.0823-28.997c45.481-0.0503 328.45-0.363 374.02-0.4136 0.9912 3.916 44.571 152.43 56.465 196.68 119.4 1.8555 274.77 1.3171 275.65 2.1963 0.8254 0.8254 63.849 0.4802 65.91-0.3611l6e-4 -5e-4zm-124.87-549.12c-14.254-5.0935-23.219-17.167-23.219-31.271 0-17.42 15.243-33.142 32.089-33.096 20.792 0.0568 35.401 15.732 33.513 35.956-0.8044 8.6167-5.8018 18.691-11.383 22.948-8.4092 6.4138-21.757 8.7656-31 5.4624h3e-4zm20.541-8.4213c15.171-7.3442 19.288-27.178 8.197-39.492-12.808-14.22-35.187-10.792-42.433 6.5-1.9775 4.7186-1.8652 14.736 0.2207 19.738 5.4358 13.032 21.524 19.301 34.015 13.254zm-21.425-7.6199c-4.9617-3.5944-8.7573-10.37-8.7974-15.704-0.0876-11.728 13.458-21.764 24.47-18.13 12.558 4.1444 17.566 17.622 10.618 28.577-5.8215 9.1794-17.62 11.539-26.29 5.2578h-3e-4zm17.633-7.4695c2.9326-2.6201 3.5435-3.9583 3.5435-7.7603s-0.6108-5.1403-3.5435-7.7604c-4.8506-4.334-10.168-4.3239-14.519 0.0273-9.4927 9.4928 3.2429 25.569 14.519 15.493v5e-4zm-11.157-4.4823c-2.6304-2.6305-2.6731-3.1876-0.4844-6.3127 2.063-2.9453 6.0513-3.147 8.51-0.4303 2.3503 2.5972 2.2896 4.8761-0.1897 7.1201-2.6558 2.4031-5.177 2.2817-7.8359-0.377v-1e-4zm363.6 576.32c14.083-5.8845 17.891-24.633 7.5511-37.178-8.4752-10.282-26.58-10.996-35.306-1.3926-10.824 11.911-7.6472 30.994 6.3099 37.902 5.7506 2.8464 15.504 3.1501 21.445 0.6677h-2e-4zm-18.094-6.6873c-10.627-5.2378-12.627-19.116-3.9355-27.314 7.2812-6.8672 18.342-5.9014 24.876 2.1716 6.3938 7.9001 3.942 20.816-4.8104 25.342-4.1 2.1202-11.612 2.0272-16.13-0.1999zm13.496-11.782c2.1682-3.3093 1.2148-6.8682-2.265-8.4536-6.2422-2.844-12.305 3.092-8.7308 8.5479 2.3993 3.6619 8.5697 3.6089 10.996-0.094v-3e-4zm1836.6 3.1076c1.5339-0.5889 1.7283-5.3145 1.7283-42.003 0-22.736-0.3688-41.54-0.8195-41.784-1.0833-0.5886-68.797 0.5571-71.295 0.5938 0 35.134 0.212 39.364 1.4382 82.731l31.786 0.3066c37.564 0.3621 35.093 0.9482 37.16 0.1553h0.0027zm-66.016-4.8957c-0.23-37.97-0.3667-65.715-0.5458-73.658l60.642-0.5693c0 59.408 0.2083 72.79-1.5181 74.223-2.6208 2.175-55.239 0.1398-58.578 0.0046zm52.3-6.0557 2.6565-3.0884c-0.0641-2.3271-1.3476-54.868-2.0766-56.768-0.8821-2.2983-5.5679-3.9216-11.321-3.9216-9.4713 0-8.7791-2.583-8.7791 32.763 0 23.829 0.3305 31.704 1.3658 32.545 2.1497 1.7454 5.3393 2.3242 10.617 1.9265 3.7352-0.2812 5.5043-1.0923 7.5373-3.4558v-2e-4zm-31.945 1.5525c1.078-1.7441 1.0131-61.636 1.0216-64.238-6.2793 0-6.3695 0.4312-10.846 4.0554 0.152 18 0.3258 38.586 0.4778 56.587 2.9424 2.6292 7.2036 7.063 9.3464 3.5959h-3e-4zm158.84-32.638c0-40.91 0.4741-36.39-4.984-42.736-7.7495 0.0244-95.278-0.0081-97.755 1.3179-1.0439 0.5586-2.1878 1.7712-2.5423 2.6946-1.5044 3.9204-3.4086 72.228 1.7194 78.748l2.1922 2.7866c11.794-0.0552 85.278-0.3999 97.112-0.4556 4.4452-5.6503 4.2585-2.0532 4.2585-42.355zm-91.054 36.508c-4.1685-4.1682 9.3526-1.6091 20.916-1.4927 2.1248 0.0208 3.3372 0.4866 2.9403 1.1289-0.745 1.2056-22.68 1.5403-23.856 0.364v-2e-4zm38.334-0.0547c-3.7041-0.5608-4.7411-3.0159 1.2969-2.2058 2.366 0.3171 4.5583 0.3206 4.8718 0.011 0.8924-0.8923 23.848-0.2695 25.569 0.6936 3.0887 1.7285-22.311 2.9336-31.737 1.5056v-0.0044zm-0.1683-74.61c35.132 0 41.136 0.4712 37.336 2.9294-1.8275 1.1816-75.729 1.5916-78.917 1.6216 4.4084-4.8711 0.2116-4.551 41.581-4.551zm-4762.7 76.583 4.6582-0.0974-0.5752-73.754c-22.349-0.2019-63.804-0.9094-65.586 0.5698-1.6187 1.343-1.2969 20.922-1.0649 72.638 17.727 0.8252 24.972 1.4307 62.568 0.6443v-7e-4zm-53.71-63.928c0.5762-1.5012 3.7197-1.7285 23.904-1.7285 18.38 0 23.502 0.314 24.487 1.5017 1.6104 1.9409 0.9268 30.572 0.6606 54.77l-49.715 0.302c0-2.8518-0.207-52.576 0.6631-54.845zm43.004 46.42c0.6523-1.2192 1.1309-9.9768 1.1309-20.698 0-23.255 1.103-21.987-19.121-21.987-20.257 0-19.122-1.3289-19.122 22.372 0 10.433 0.2988 19.748 0.6631 20.698 0.5664 1.4753 3.1987 1.7283 17.99 1.7283 16.013 1e-4 17.413-0.1603 18.458-2.1135zm64.302 4.7417c6.1143-3.0466 12.251-9.6484 14.931-16.062 0.9146-2.188 1.6621-7.0935 1.6621-10.901 0-30.792-42.912-39.833-55.637-11.722-2.7134 5.9946-2.9316 14.869-0.5625 22.848 4.585 15.438 24.46 23.385 39.606 15.837v3e-4zm-20.399-5.9824c-8.4312-3.377-13.42-10.795-13.503-20.079-0.0557-6.2175 1.1855-9.3647 5.5566-14.088 4.4106-4.7651 8.0752-6.1851 15.964-6.1851 11.958 0 17.191 3.5945 20.283 13.933 3.1309 10.466-3.6992 23.603-13.708 26.368-5.2261 1.4438-11.063 1.4641-14.592 0.0503v3e-4zm18.963-4.0527c13.679-9.4792 10.54-35.206-10.494-35.206-8.9937 0-18.206 6.8098-20.254 14.973-3.5864 14.289 14.283 31.644 30.748 20.233zm352.14-11.772c12.503-5.2231 18.327-20.756 12.809-34.162l-1.9419-4.7188c53.921-55.31 64.82-68.516 92.696-96.738 17.889-1.2622 20.788-0.9844 22.564-5.9043 0.1313-0.365 1.0625-0.926 19.105-2.3762l1.249 4.9609c5.7729 22.925 35.718 16.717 39.089-0.1343l0.6919-3.46h26.999l2.1597 4.2332c10.822 21.214 43.877 15.423 45.729-6.908 1.2065-14.548-8.1602-24.561-23.03-24.617-10.888-0.0415-19.436 6.3335-23.379 17.436l-1.9482 5.4854h-26.608l-2.3877-4.9324c-4.4062-9.1021-15.804-12.918-25.938-8.6841-7.4697 3.1213-8.6621 6.4075-12.342 13.616-14.203 0-15.614 0.2888-14.643-1.9121 0.4644-1.0515 1.0425-5.5999 1.2852-10.107 0.4126-7.6584 0.2207-8.5383-2.9238-13.44-9.5103-14.826-33.402-13.657-40.613 1.9675-2.6235 5.6838-2.7563 17.598-0.2554 22.843 1.8071 3.7891 1.8042 3.8025-1.7876 7.9587-5.4014 6.2498-46.073 50.608-88.981 94.307-13.564 0-17.294-0.6995-24.272 6.7361-5.1475 5.4851-6.2832 8.4204-6.2715 16.21 0.0151 10.381 4.2407 17.621 12.97 22.223 4.2427 2.2363 14.757 2.2988 19.976 0.1187l-1e-3 -6e-4zm-15.059-4.5547c-9.5991-3.6069-14.923-16.65-10.381-25.433 2.562-4.9536 8.3438-8.7402 14.357-9.4019 13.446-1.4795 23.745 11.791 18.558 23.913-3.6826 8.6064-14.606 13.901-22.534 10.923h-5e-4zm10.232-8.0764c1.1738-1.3711 1.7349-3.2344 1.3809-4.5869-0.3271-1.2527-0.0938-2.8831 0.52-3.6221 2.4429-2.9434-3.6362-10.253-8.5107-10.235-2.6694 0.011-6.9092 6.4578-6.8667 10.44 0.0386 3.5623 2.4194 7.4478 3.7988 6.1982 0.4873-0.4417 0.5952 0.0107 0.2407 1.0027-0.8682 2.4285 0.0229 3.1118 4.0605 3.1118 2.1079 0 4.1504-0.8772 5.3765-2.3088v-2e-4zm9.7461-29.286c-2.2305-3.5713 6.7983-8.4458 26.494-31.232 18.149-20.995 62.549-67.198 64.577-67.198 5.2852 0-0.625 7.1272-36.232 43.693-25.875 26.572-50.91 55.762-52.856 56.56-0.3696 0.1519-1.2627-0.6687-1.9834-1.8232h5e-4zm153.75-89.905c-6.8564-4.6528-7.9126-15.99-1.8574-19.952 6.0894-3.9854 17.576-2.9336 20.976 1.9207 0.9033 1.2898 1.6421 4.4553 1.6421 7.0347-1e-4 10.423-12.134 16.85-20.76 10.997zm15.953-4.5911c4.2812-4.2817 4.73-7.8115 1.5122-11.902-6.5957-8.3855-20.743-4.9993-20.743 4.9648 0 6.1121 4.668 10.652 10.952 10.652 3.7334 0 5.2397-0.676 8.2783-3.7151h1e-3zm-13.768-6.6264c0-1.395 0.7778-2.835 1.7285-3.1995 3.1094-1.1931 8.9497-0.7017 9.5264 0.8015 1.0117 2.6355-0.9814 4.0969-6.1616 4.5193-4.7183 0.3843-5.0928 0.2285-5.0928-2.1213h-5e-4zm63.776 6.6611c-4.1367-4.1365-4.7734-5.3916-4.7734-9.4121 0-17.272 23.084-25.129 32.484-11.057 3.189 4.7737 3.3208 12.377 0.3008 17.331-3.4067 5.5886-8.168 7.9031-16.266 7.908-6.7783 0-7.106-0.1292-11.746-4.7693v2e-4zm20.315-5.2668c3.1465-3.3777 2.7754-7.063-1.103-10.941-2.9502-2.9507-3.8535-3.2605-7.9102-2.7163-7.4893 1.0042-11.274 8.7629-6.4189 13.157 1.875 1.6965 2.1157 1.6897 3.6338-0.1038 0.894-1.0566 1.6851-3.083 1.7578-4.5029 0.1504-2.9409 1.4189-4.5935 2.0903-2.7241 0.2471 0.6875 1.4092 0.999 2.5825 0.6919 2.7896-0.7292 2.9668 3.4299 0.2207 5.1726-4.4229 2.8071 7.8198-1.9863 2.7861 3.0474-1.5977 1.5972-0.707 2.2131 2.3613-1.0803h-4e-4zm-142.55-1.5088c-21.726-11.277-7.4199-37.31 10.887-33.876 9.9287 1.8623 16.928 14.156 13.175 23.14-4.4121 10.56-15.16 15.356-24.06 10.736h-1e-3zm15.297-9.9419-3.6206-1.8843c-3.7539-1.9539-4.1523-4.2168-0.855-4.8562 1.1919-0.231 2.1211 0.4807 2.4951 1.9121 1.0137 3.8772 3.6191 2.7297 3.6191-1.5935 0-7.5684-7.9448-11.693-14.234-7.3892-3.667 2.5098-4.3071 3.615-4.3071 7.439s0.6401 4.9292 4.3071 7.439c4.2784 2.928 6.0011 1.7666 12.595-1.0669zm214 142.03c11.774-8.2754 11.405-23.958 3.7612-32.663-3.3372-3.801-3.3638-3.9182-1.3198-5.8311 2.717-2.5432 43.462-41.333 48.351-45.987h526.83v-30.95c-525.47 1.4209-524.86 1.3918-533.44 2.865 0.3438 8.4851 0.6394 15.776 0.9832 24.261l-49.376 48.92c-6.0076-0.217-12.552-0.9243-17.384 1.3684-15.953 7.5701-16.337 31.187-0.645 39.595 6.7043 3.592 15.804 2.946 22.243-1.5791l4e-4 6e-4zm-18.473-2.976c-13.147-5.7266-13.452-24.291-0.4839-29.48 5.7786-2.312 8.1816-2.2249 13.81 0.4998 18.766 9.0842 5.7886 37.305-13.326 28.98zm13.71-11.436c0-0.978-2.5781-3.8557-5.7253-6.3945-4.8997-3.9529-5.9417-4.3967-7.2495-3.0891-1.3076 1.3076-1.2222 2.0488 0.594 5.1587 2.8704 4.915 8.9177 8.9795 10.905 7.3296 0.8125-0.6743 1.4763-2.0266 1.4753-3.0046h5e-4zm1919.2 14.696c3.4158-2.0569 8.1438-4.0664 10.507-4.4656 2.3628-0.3992 4.6001-1.2178 4.9719-1.8188 0.8984-1.4541-0.925-617.83-0.957-630.09-3.397 1.2556-4.5164 1.056-5.5078 7.048-1.4883 8.9963 1.3101 415.31-1.1074 617.78-1.2163 0.6067-6.5137 3.2625-6.6453 3.2625-0.1736 0 0.6716-622.34 0.6719-622.49-11.75-1.9348-334.58-0.4639-334.58 1.2773 0 4.6528-3.8574 3.8619 327.95 3.8619-1.5161 647.62-2.439 629.37-1.9922 629.37 0.2649 0 3.2761-1.6829 6.6919-3.7397l8e-4 2e-4zm-1985.9-0.9714c21.486-14.219 4.5547-44.172-17.09-35.129-5.4185 2.2642-7.855 4.5938-10.242 9.7922-8.2906 18.054 11.131 36.057 27.332 25.336zm-18.122-4.1143c-4.9692-3.1831-7.6582-10.54-5.9438-16.261 1.5381-5.1331 6.2378-9.3438 11.54-10.338 5.7339-1.0759 12.819 2.3347 15.178 7.3066 2.3569 4.9658 2.2837 7.8999-0.3408 13.682-3.4268 7.5509-13.21 10.237-20.433 5.6109zm13.5-9.9021c0.1343-1.7896-0.7197-3.7637-2.2485-5.2002-2.1392-2.0095-2.9238-2.1558-5.9351-1.106-4.7915 1.6702-3.5957 4.48-2.3691 3.7224 2.3682-1.4639 1.3555 6.5183 7.5293 5.7966 2.1543-0.2521 2.8574-0.9994 3.0234-3.2128zm-392.43 14.505c4.9668-2.2566 11.011-8.6313 13.239-13.964 5.9521-14.246-5.9634-32.062-21.443-32.062-9.5527 0-20.472 8.2849-22.925 17.394-5.2031 19.323 13.584 36.603 31.129 28.632zm-12.029-4.4692c-8.4097-1.9646-13.112-8.4194-13.112-17.997 0-11.516 7.0269-17.746 18.906-16.761 5.2207 0.4331 6.5239 1.0298 9.6172 4.4055 13.724 14.974-1.5797 33.585-15.411 30.353zm11.574-11.076c3.2861-3.2864 1.0454-4.9868 1.0063-8.2073-0.0103-0.6636-1.2202-2.5073-2.6938-4.0974-6.0464-6.5239-15.654-1.7009-14.459 7.2588 0.7983 5.9875 2.3628 7.3323 8.5308 7.3323 3.9512 0 5.9204-0.5913 7.6162-2.2864h-5e-4zm3812.1 13.773c2.5198-1.7461 6.1365-5.4138 8.0374-8.1504 2.9429-4.2366 3.456-5.9492 3.456-11.532 0-8.6584-2.8977-14.197-9.91-18.942-2.9628-2.0049-5.6968-4.2178-6.0752-4.9167-0.6888-1.2729-2.2562-165.82-0.1837-166.51 3.1646-1.0615 8.6672-5.5574 10.953-8.949 2.9402-4.363 3.4398-14.76 0.9387-19.534-7.6902-14.679-29.504-17.733-40.413-5.6582-8.7966 9.7368-7.2256 24.286 3.3599 31.116l3.3867 2.1853c1.5769 44.663 1.454 62.568 2.0547 169.66l-3.074 1.8159c-6.7839 4.0071-11.068 16.459-8.6957 25.271 1.536 5.7043 8.0872 13.321 13.726 15.958 6.68 3.1242 16.458 2.3361 22.44-1.8089zm-18.533-5.6982c-4.288-2.2153-8.7805-8.2307-8.7283-11.687 0.0339-2.2546 0.0645-2.2578 1.639-0.1758 0.8823 1.1665 1.6042 2.9248 1.6042 3.907 0 4.0273 8.8494 9.2856 13.614 8.0898 2.9433-0.7388 7.28-5.095 9.5869-9.6301 0.8845-1.7385 1.9044-2.6809 2.2668-2.0947 0.978 1.5825-2.6644 8.0825-5.8259 10.396-4.1357 3.0273-9.7001 3.4968-14.157 1.1943l1e-4 -2e-4zm-2.2946-203.7c2.8967 0.239 5.3857 0.4443 8.2824 0.6833 0.0311 9.2627 0.5289 157.37 0.5601 166.63h-6.3071c-0.9047-93.684-1.0652-132.72-2.5354-167.31zm91.333 211.17c16.909-7.6816 18.307-30.722 2.5072-41.322l-4.7019-3.1545c-1.6092-41.169-1.5835-56.431-2.7632-172.01l2.8793-4.3508c6.1949-9.3611 3.4265-22.356-6.1815-29.014-14.986-10.386-36.677-0.2793-36.434 16.975 0.1016 7.2302 2.0978 11.401 8.0132 16.745 4.2136 3.8066 5.227 4.2427 10.448 4.4944 2.1259 0.1028 2.2034 1.1028 2.8517 36.69 0.7766 42.634 0.8613 96.197 0.9726 130.25-8.7775 9.604-15.622 15.698-11.596 29.548 3.3313 11.459 10.984 17.148 23.068 17.148 4.0093 0 8.2573-0.7732 10.936-1.9897l1e-4 -4e-4zm-15.151-6.7229c-5.534-1.6782-11.164-8.7427-10.274-12.893 0.2515-1.1729 1.2299 0.0129 2.7018 3.2737 4.8134 10.664 18.346 11.586 24.396 1.6636 2.5233-4.1387 2.8569-3.135 0.4836 1.4546-2.6998 5.2206-11.111 8.3798-17.308 6.5007zm-1.2342-40.682c-0.7595-3.2532-1.0899-159.39-1.1069-164.55 5.2681-1.0535 6.5154-1.1145 6.8704-0.7595 0.7098 0.7097 2.4446 165.75 1.754 166.87-0.3072 0.4971-1.9952 0.9036-3.7512 0.9036-2.4124 0-3.3328-0.6008-3.7664-2.4585v2e-4zm-3929.5 44.33c13.989-8.1699 14.582-29.428 1.0815-38.679-2.9688-2.0344-5.6138-2.7112-11.82-3.0247-7.0527-0.356-8.5669-0.0688-12.842 2.4363-15.443 9.05-14.346 32.522 1.9883 40.196 5.5992 2.6303 16.285 2.1706 21.592-0.9285zm-15.986-3.616c-2.873-0.553-5.4863-2.1177-7.8555-4.7031-8.6494-9.4382-4.8218-23.747 7.2212-26.99 16.688-4.4932 28.285 14.32 17.361 26.761-2.7109 3.0874-9.4316 6.4158-11.876 5.8809-0.3003-0.0657-2.4834-0.4924-4.8511-0.9482h-4e-4zm3.5464-25.119c-4.7178-0.0393-8.9248 4.3284-8.7461 9.0784 0.2236 5.9497 2.9731 9.4722 7.3936 9.4722 16.454-1e-4 11.257-18.469 1.3525-18.551zm146.95 27.684c10.607-7.4553 13.897-19.771 8.209-30.734l-2.8643-5.5212c40.41-39.669 59.905-59.35 173.53-173.2 14.76 0.0383 165.28 0.4282 184.2 0.4773 11.363-10.349 24.362-22.188 35.726-32.537 89.559-1.2334 98.946-1.4453 168.07-1.4453 33.989-31.729 41.062-38.884 103.14-100.25 302.62-1.2959 298.27-1.2717 304.3-2.709v-24.525c-53.381-1.3389-311.66-2.969-317.41 0.5986-4.4194 2.7417-24.188 23.038-103.2 97.389h-167.57c-25.863 25.165-25.409 24.604-33.543 31.687h-187.37c-27.321 27.599-138.04 138.78-149.49 153.27-12.304 15.579-38.836 41.4-45.23 49.963-9.0488 12.119-9.0825 23.702-0.0972 33.45 7.8921 8.5618 20.712 10.334 29.595 4.092l0.0011-2e-4zm-20.538-4.6216c-6.4297-3.9939-8.5693-7.3413-9.0645-14.186-0.8242-11.392 4.8599-17.631 16.071-17.638 10.491-0.011 16.407 4.9832 18.128 15.293 0.8374 5.0173-3.0503 12.761-8.0864 16.108-4.6812 3.1108-12.412 3.303-17.048 0.4233v-3e-4zm15.745-9.0327c2.481-4.4382 0.1519-11.077-4.6943-13.376-9.4985-4.5076-17.388 6.7407-9.9473 14.182 2.2861 2.2861 3.5957 2.6863 7.8862 2.4089 4.2456-0.2744 5.4268-0.8367 6.7563-3.2146h-9e-4zm-1.54-27.945c-3.4316-0.8254-4.3257-2.2168-2.6904-4.1877 1.3477-1.624 1.5527-1.5801 2.3223 0.5 0.4644 1.2546 1.5859 2.2812 2.4932 2.2812 0.9067 0 13.087-11.678 27.066-25.95 326.43-333.28-23.803 28.221-25.913 27.998-0.6006-0.0635-2.0757-0.3523-3.2778-0.6414l-6e-4 3e-4zm1.1845-5.6285c-0.5327-0.8618 170.31-173.11 173.64-175.15 4.4683-2.7292 7.5063-2.343 3.2783-0.481-8.0464 3.543-175.47 177.98-176.92 175.63zm100.98-108.87c22.288-22.322 23.898-22.841 1.0928 0-22.288 22.322-23.898 22.841-1.0928 0zm72.661-72.617 17.482 0.3958-17.482 0.7417c-17.744 17.522-15.781 14.135 0-1.1375zm143.96 6.7925c11.346-0.499 31.232 0.3723 8.4683 0.3723-9.3149 0-13.126-0.1675-8.4683-0.3723zm-104.28-7.6538c22.52-0.448 59.978 0.3347 16.049 0.3335-18.028-8e-4 -25.251-0.1507-16.049-0.3335zm89.803 0.0427c71.954-1.75 74.793 0.8896 22.608 0.5405-19.345-0.1294-29.519-0.3723-22.608-0.5405zm191.19 228.19c5.9885-4.8396 8.21-9.4897 8.1592-17.079-0.1611-24.108-30.169-32.169-41.181-11.062-6.822 13.076 1.2322 29.92 15.468 32.347 5.9385 1.0125 13.271-0.7444 17.554-4.2058l-2e-4 3e-4zm-20.741-3.5276c-6.2883-3.686-8.1948-7.1396-8.1948-14.846 0-5.9758 0.3687-7.1421 3.1851-10.082 8.5334-8.9067 22.036-6.3477 27.117 5.1394 4.915 11.111-1.7405 22.09-13.366 22.048-2.9589-0.0109-6.4398-0.9106-8.7413-2.2597zm15.027-10.073c3.5928-2.3098-5.1062-8.946-11.724-8.9436-2.8228 0-3.9019 0.5208-4.1982 2.0215-0.488 2.47 4.9058 8.3601 7.6558 8.3601 1.0896 0 1.981 0.4624 1.981 1.0278 0 0.9265 2.5901-0.0896 6.2856-2.4658h-3e-4zm942.17 9.5354c0.8198-2.1555 49.357-189.03 49.859-190.96 136.1-0.0459 467.11-0.4897 467.51 0.9358 0.031 0.1118 28.374 94.189 36.015 116.91 18.361 54.603 17.3 65.184 28.909 68.26 2.8125 0.7451 168.06 1.8308 181.16 1.1902 0.7512-0.0371 1.3657-0.8975 1.3657-1.9128 0-10.282-90.932-265.58-170.43-525.36-22.045-72.034-22.832-74.466-24.565-75.904-1.9021-1.5786-9.0925-1.8007-10.567-0.3265-1.7151 1.7151 0.2126 4.6626 3.0493 4.6626 5.1719 0 1.7954-2.7858 54.446 164.99 66.42 211.65 142.55 428.27 141.2 428.86-0.1094 0.0474-173.88-0.4092-177.49-2.4729-1.8647-1.0662-3.5815-5.1116-7.4202-17.482-12.013-38.716-6.1675-15.228-46.015-146.05-3.8313-12.579-6.9663-22.904-6.9663-22.946 5e-4 -0.6086-473.74 0.6536-474.35 1.2634-2.3174 2.3174-26.696 99.989-35.909 132.6-10.553 37.351-12.249 58.601-16.954 60.406-0.9966 0.3823-41.878 0.6953-90.847 0.6953-84.274 0-89.006-0.1028-88.491-1.9121 1.6956-5.9519 4.9255-19.466 10.008-34.066 5.061-14.539 3.332-12.816 5.2637-16.518 0.7979-1.5295 1.5007-5.4629 1.5618-8.7412 0.1323-7.1345 0.3804-7.7798-7.7878 20.263-5.9854 20.548-11.628 41.963-11.628 44.131 0 2.0598 13.387 1.8577 187.99 2.3064l1.0754-2.8291v2e-4zm-451.57-14.25c2.8247-0.7568 2.4585-0.209 2.4585-33.511-92.688 2.7415-257.83 1.906-257.91 4.05-0.0559 1.6021-1.1499 25.547-1.3093 29.048 0.111 3e-4 255.65 0.7108 256.76 0.4134zm83.588 0.0864 5.1902-0.6951c0-32.02-0.5625-31.683-0.8196-31.833-0.7449-0.4365-57.792-0.0581-58.586 2.01-0.6709 1.7476 0.5637 27.136 0.7083 30.575 8.4133 0.1113 47.035 0.8208 53.507-0.0564l-5e-4 -4e-4zm-71.295-16.88c0-15.46-0.1196-16.39-2.1077-16.39-1.8945 0-2.1433 0.967-2.4585 9.5608-0.1929 5.2583-0.2043 12.634-0.0251 16.39 0.2827 5.9338 0.605 6.8291 2.4585 6.8291 2.021 0 2.1333-0.8621 2.1333-16.39h-5e-4zm11.025-16.875c-0.5466-0.3381-1.7759-0.3145-2.7317 0.0525-1.9802 0.76-1.7373 5.1191-1.7373 33.213h5.4631c0-1.7085 0.3111-32.459-0.9941-33.265zm73.507 23.825c0.3818-2.7881 0.6948-22.21 0.6948-43.16 0-37.498-0.0339-38.09-2.2087-38.09-2.1699 0-2.2083 0.5947-2.1665 33.599 0.0439 34.44 0.8059 52.72 2.1985 52.72 0.4329 0 1.0999-2.2812 1.4822-5.0696h-3e-4zm817.97-4.493c14.341-7.2051 11.841-32.276-3.605-36.165-6.3079-1.5884-11.38-0.0896-16.28 4.8105-7.5542 7.554-7.7764 18.114-0.5547 26.34 5.9854 6.8169 13.287 8.6084 20.44 5.0149h5e-4zm-11.544-6.1953c-12.933-5.6313-9.2246-24.483 4.8457-24.632 5.5652-0.0588 11.09 5.8823 11.09 11.926 0 6.1248-2.6423 10.827-7.1396 12.706-4.4497 1.8594-4.5254 1.8594-8.7964-2e-4zm7.7798-11.681c1.0742-3.3848-1.7878-5.9441-4.8281-4.3169-2.23 1.1934-3.0894 4.3906-1.5842 5.8958 1.6533 1.6532 5.7031 0.6564 6.4123-1.5789zm-2172.8 4.4043c1.2832-0.8982 1.105-0.9976-0.8193-0.4558-3.6602 1.0295-3.7026-2.5581 2.7314-1.7229 0.7515 0.0974 1.3657-0.2827 1.3657-0.8447s1.1357-1.3071 2.5239-1.6553c2.876-0.7219 9.9341-8.9368 8.9902-10.464-0.8384-1.3569 2.2349-3.0747 1.1562-1.3276-0.4292 0.6938-0.5176 1.2615-0.1968 1.2615 0.8848 0 3.9287-6.2512 3.8306-7.8674-0.0679-1.1074-0.208-1.1179-0.6396-0.0479-0.3047 0.7549-1.0562 1.0623-1.6699 0.6826-0.7041-0.4348-0.8442 0.1687-0.3794 1.6323 0.8442 2.6609 0.6851 2.7195-3.2861 1.21-6.0811-2.3125 1.8467-5.0117-5.8032-5.6665-12.865-1.1006 266.36-3.2573 267-3.2625 50.678-50.565 138-140.64 173.09-177.35 20.581 0.0833 161.05 0.6519 182.73 0.7395 23.26-22.209 41.958-37.938 44.488-40.994 2.5896-3.1304 39.054-0.7847 161.69-3.4514 40.093-39.252 70.091-68.691 98.765-96.153 206.48-0.696 323.87-0.8193 325.43-2.3833 1.3525-1.3528 0.9907-24.764-0.4041-26.159-0.8533-0.853-172.45-0.5151-338.56-0.4133-60.388 57.659-98.812 96.03-102.22 97.326-3.803 1.446-148.46 0.8306-155.12 1.9131-5.1072 0.8301-7.8909 3.948-44.223 38.777-10.37-0.0203-176.21-0.3433-186.58-0.3635-60.371 62.17-160.01 165.72-175.12 179.76-16.77 0.0537-121.84 0.3904-138.72 0.4443 21.341-24.921 207.16-212.25 249.63-256.68l215.95 1.2c10.331 4.8096 12.729 6.5293 20.846 4.2747 9.6748-2.6877 18.309-15.278 17.005-24.795-1.2476-9.1016-6.3896-16.202-14.051-19.404-13.195-5.5132-21.466 3.344-30.274 11.674-12.496-0.0906-212.3-1.5371-224.8-1.6277-44.188 40.191-129.34 133.6-276.91 284.37-224.29 0.6353-75.923 0.3049-188.91 1.0925v29.502c47.938 0.6121 43.25 0.728 61.872 0.9341 14.254 0.1575 14.341 0.1741 14.341 2.7104 0 6.553 8.1421 17.014 16.396 21.067 2.377 1.167 6.3486 1.9836 9.48 1.9495 9.5859-0.104-2.3467 1.53 4.4443 1.6543 1.8032 0.0327 4.0156-0.4563 4.917-1.0874l-4e-4 -4e-4zm-16.96-10.015c-1.189-0.6501-2.4077-1.5234-2.708-1.9404-3.4517-4.7878-7.0664-8.5295-7.8022-8.075-0.5024 0.3105-0.6099-0.2275-0.2388-1.1958 0.4624-1.2043-0.0601-1.9534-1.6514-2.3696-1.2803-0.335-2.3271-1.1167-2.3271-1.7375 0-1.2129 21.943-0.4741 25.352 0.8535 1.52 0.5918 1.627 1.0989 0.584 2.7688-0.9272 1.4846-1.5073 1.6826-2.1172 0.7224-0.5947-0.9363-0.8452-0.8152-0.8569 0.4146-0.0293 3.0645-8.8086 5.75-10.396 3.1802-1.6304-2.6379-5.0117-0.1841 2.4062 4.855 3.856 2.6204 3.6592 4.6587-0.2446 2.5237v1e-4zm-78.205-29.426c-1.5054-2.8137 0-5.2703 3.2256-5.2588 1.5884 0.011 41.366-0.1663 88.393-0.3818 95.775-0.4387 84.362 0.1436 91.712-5.6379 7.6523-6.0178 85.589-90.816 272.95-276.99 199.48 0 217.66-0.2563 218.41 1.71 0.7598 1.9805-16.618 1.6743-218.9 1.2595-131.39 125.86-251.8 260.66-279.23 280.85-93.405 0.7058-173.72 1.3125-174 1.3354-0.1504 0.012-0.2729 0.7727-0.2729 1.6902 0 1.4905 19.054 1.6155 179.33 1.175 488.74-1.3438-179.12 4.9099-181.62 0.2412l9e-4 -7e-4zm379.79-14.321c164.97-168.21 143.2-147.98 149.85-153.73 18.593-16.068-163.01 169.34-164.56 169.34-0.3301 0 6.2881-7.0234 14.706-15.607v-5e-4zm-9.2778 1.8015c18.484-19.265 33.765-34.411 99.962-103.11 65.158-67.618 62.024-65.61 67.141-65.38 3.854 0.1731 3.8594 0.1794 0.4707 0.606-2.812 0.354-7.708 4.8779-27.306 25.23-103.55 107.53-126.68 130.28-138.71 143.18-8.7095 9.343-13.885 12.319-1.562-0.5247h5e-4zm-180.72 1.563c26.368-23.732 20.831-23.97 265.76-270.12 235.74 0.7031 223.08 0.2664 223.08 2.7371 0 1.4634-210.19 0.1592-214.96-1.3337-1.9434-0.6077-4.6479-0.7527-6.0098-0.322-8.6758 2.7439-254.15 258.97-271.26 273.43 13.686 2.5671 8.9502 0.2322 171.52 0.1943 34.326-35.564 77.213-78.495 93.958-96.153 30.268-31.908 62.339-63.225 32.535-32.305-2.8384 2.9446-121.08 126.08-126.42 129.24-2.6182 1.5496-54.194 1.3506-175.74 1.4041l7.5332-6.7803 0.0011 1e-4zm307.48-137.89c-0.0239-1.2244 5.3164-5.8125 35.966-37.8 34.457 0 43.741 0.7913-0.0337 1.4817-10.69 11.184-35.909 37.811-35.932 36.319l-5e-4 -3e-4zm87.67-37.518c9.8818-0.5122 27.188 0.3821 7.3755 0.3821-8.1128 0-11.432-0.1719-7.3755-0.3821zm37.696-0.011c20.823-0.449 57.473 0.3354 15.57 0.3354-17.127 1e-4 -24.134-0.1508-15.57-0.3354zm-201.73-72.152c15.566-16.702 27.06-28.826 35.671-37.935 199.9-0.0679 217.95-0.3066 216.97 2.2351-0.6987 1.8215-27.011 1.5793-218.36 1.5066-15.044 15.325-48.868 49.841-34.285 34.194l-4e-4 -5e-4zm267.48-18.02c-10.52-7.0891-11.566-18.616-2.4702-27.221 4.5137-4.2712 8.4985-5.509 13.446-4.1768 8.3369 2.2449 13.33 8.6365 13.33 17.064-1e-4 12.922-14.08 21.225-24.306 14.333zm13.281-9.4507c3.9033-3.9033 4.0688-7.5625 0.5142-11.397-3.543-3.823-8.4673-3.8628-12.231-0.0994-2.3726 2.3726-2.6797 3.3989-2.0435 6.8289 1.5435 8.3193 7.939 10.488 13.76 4.6672l4e-4 5e-4zm743.46 257.24h-59.003c-0.1851 18.577-0.3972 39.879-0.5823 58.457h60.167c-0.1848-18.578-0.397-39.879-0.582-58.457zm-86.866 44.257h-62.281v12.019h62.281v-12.019zm-1111 0.2022c0.998-0.9983-0.7588-1.2949-7.665-1.2949-8.1543 0-11.144 1.0286-7.5942 2.6128 2.3379 1.0432 13.896 0.0447 15.259-1.3179h4e-4zm4500.9-42.269v-40.428l-72.661-0.5759c0 21.915-0.0625 23.878-1.4427 82.008l74.106-0.5759v-40.428l-0.0021 2e-4zm-68.837-37.15c9.7508 0.052 58.791-0.0439 60.947 2.551 0.9672 1.1638 1.4283 10.676 1.6779 34.616 0.3067 29.402 0.1488 33.206-1.4438 34.799-2.0474 2.0474-8.1312 1.7881-61.757 1.7881 0.1565-20.061 0.4841-62.053 0.5754-73.754zm53.678 67.754 2.5934-1.6992c0-59.701 1.0573-59.945-6.878-62.014-3.5086-0.915-12.554 0.1841-14.034 1.7053-1.0924 1.1233-1.5613 59.565-0.4917 61.295 2.2898 3.7049 13.59 4.1331 18.81 0.7127zm-31.825-61.198c-4.3322-0.6135-4.5782-1.2454-10.307 4.1367 0.7931 54.607 0.3921 54.447 3.2139 56.732 2.7289 2.2095 5.4186 1.9585 7.6734 1.9585-0.1845-19.984-0.3955-42.842-0.58-62.827zm158.98-8.9065c-5.5235-5.1887-4.6438-5.3579-11.836-3.8723-8.1531 1.6841-56.948 1.3062-90.822 1.3062-3.7342 5.6936-3.8422 3.0818-4.2261 36.553-0.434 37.841-0.071 41.561 4.3157 44.229 3.755 2.2834 7.4368 1.9285 97.652 0.979 5.9561-6.5374 4.917 2.3237 4.917-79.194zm-92.875 4.8106c0-3.9036 1.9288-4.0989 40.513-4.0989 30.87 0 38.122 0.2793 39.141 1.5068 1.5906 1.9163-9.3986 2.6768-50.425 3.4895-24.108 0.4773-29.228 0.3201-29.228-0.8977v3e-4zm-3398.7 52.719c0-14.022-0.1084-14.751-2.1853-14.751-2.553 0-2.2068 1.0566-2.7947 30.208 5.2312-0.742 4.98 1.1076 4.98-15.457zm9.6343-22.944c-1.3145-5e-4 -2.6548 0.8572-2.9863 1.9109-0.7742 2.4604-0.1897 31.479-0.1221 36.331h5.707c-0.2141-38.3 0.2305-38.24-2.5986-38.242zm-21.107-9.8689c-36.791 0.3457-42.866 0.4028-61.735 0.5803l-0.3459 4.2124c-0.7236 8.8098-4.4639 7.2605 62.081 7.2605-1e-4 -4.2155-1e-4 -7.8376-1e-4 -12.053zm-1342.6 7.3016c5.3936-2.2603 10.717-7.2556 12.935-12.139 2.6045-5.7346 2.6045-15.116 0-20.851-7.167-15.777-30.431-16.913-40.547-1.9795-2.1284 3.1414-2.7974 5.6982-3.0781 11.76-0.3311 7.1621-0.0854 8.1951 3.2656 13.686 5.9438 9.7407 17.407 13.721 27.425 9.5234h-5e-4zm-13.42-6.2542c-3.563-1.4939-7.4707-5.189-9.3921-8.8809-6.8486-13.164 9.4473-28.996 22.503-21.862 11.267 6.156 11.777 20.909 0.998 28.89-3.3994 2.5173-10.349 3.4302-14.109 1.8535zm12.713-11.45c3.4102-3.6794 3.3701-8.5439-0.0981-12.012-4.6812-4.6812-12.233-2.9656-15.733 3.5745-1.7798 3.3259-1.5693 5.0664 1.0112 8.3472 3.2134 4.085 11.073 4.1331 14.819 0.0906l5e-4 2e-4zm1427.9 16.775c0.3479-0.4272 1.5327-8.5852 1.6907-9.6169h-56.844c0 1.7173-0.2124 9.2534 0.8196 10.305 0.7429 0.7573 53.702 0.0864 54.333-0.6882l5e-4 2e-4zm-1342.8-5.1267c30.438-13.826 17.428-54.702-10.51-54.742-11.892-0.0178-20.559 5.4949-26.414 16.798-4.6167 8.9116-2.2383 24.402 4.9463 32.218 6.6714 7.2588 22.401 10.075 31.978 5.7251h-4e-4zm-29.143-15.646c-3.9038-7.6492-1.9468-19.631 4.0996-25.098 9.98-9.0249 34.259-4.6394 34.259 16.155 0 21.582-29.025 27.235-38.359 8.9431zm30.177 5.5344c14.217-12.482 5.7314-33.714-13.475-33.714-13.487 0-21.669 14.673-15.221 27.294 1.3521 2.6462 3.8008 5.7891 5.4409 6.9841 2.9546 2.1528 10.966 4.0596 13.77 3.2778 2.9747-0.8298 4.2315 0.7711 9.4854-3.842zm64.499 9.0313c8.1006-3.6794 13.613-12.428 13.613-21.604 0-16.554-18.7-27.463-33.898-19.775-16.475 8.335-17.282 32.759-1.3589 41.163 5.4033 2.8521 15.616 2.9539 21.644 0.2159zm-18.903-6.6817c-10.766-6.5645-10.394-20.609 0.7437-28.116 7.0366-4.7417 17.498-2.4094 22.552 5.0276 4.9185 7.2383 2.6714 17.748-4.8721 22.787-4.8491 3.2395-13.376 3.3787-18.424 0.3008h4e-4zm15.483-8.8308c3.1553-3.75 3.2461-4.1399 1.8281-7.8701-1.5986-4.2039-4.3374-6.2502-8.3647-6.2502-5.1655 0-8.1172 3.1782-8.1172 8.7412 0 8.7539 9.0264 12.067 14.654 5.3794v-3e-4zm171.76 14.842c8.7007-4.3357 12.986-12.116 12.269-22.274l-0.3711-5.2529c3.8887-3.9219 133.99-135.14 137.87-139.07 10.666 2.1902 17.29 4.2571 26.769-5.5283 9.2573-9.5559 9.936-22.22 1.7251-32.181-11.11-13.478-32.977-10.638-39.569 5.1401-1.9238 4.6047-2.2397 15.644-0.5732 20.028 1.4268 3.7515 5.6572-1.0457-134.82 140.2-8.2383-4.8284-8.8154-5.6931-15.395-5.0139-9.3623 0.9663-15.677 4.8623-19.261 11.883-10.489 20.55 9.6968 42.857 31.349 32.068h5e-4zm-24.109-9.1812c-2.7271-2.8987-3.2861-4.4846-3.6099-10.24-0.4448-7.9058 1.7368-12.5 7.6475-16.104 4.3135-2.6301 12.682-2.8867 17.242-0.5286 8.2686 4.2756 11.46 16.902 6.2334 24.658-6.4956 9.6389-18.073 12.247-27.513 2.2136zm15.569-3.0007c2.9634-0.7937 7.1743-8.3528 6.2593-11.236-1.9712-6.2117-11.215-7.9119-15.559-2.8618-3.063 3.5605-3.1504 6.6104-0.3228 11.248 2.2007 3.6101 4.3769 4.2546 9.6221 2.8496zm15.756-21.425c-2.313-2.8079 138.15-138.65 136.92-143.96-2.8086-12.035-1.918-18.252 3.3457-23.364 6.3169-6.1348 15.405-7.094 22.592-2.385 3.4658 2.2708 7.3652 9.8892 7.3652 14.39 0 4.3884-4.2197 12.362-8.0015 15.12-3.2627 2.3794-11.723 3.0447-17.175 1.3506-2.5137-0.781-3.9102 0.3081-14.734 11.491-22.46 23.204-127.78 128.72-128.48 128.72-0.3848 0-1.2056-0.6145-1.8247-1.3657v2e-4zm157.72-147.79c1.9785-1.5347 1.9141-1.5713-0.9551-0.5461-3.915 1.3987-4.3022 1.3799-3.7808-0.1836 0.2349-0.7053 1.8643-1.4749 3.6211-1.7102 4.0957-0.5483 5.0703-2.1008 4.2954-6.8411-0.687-4.2043-3.9497-7.6487-7.2451-7.6487-2.9907 0-8.1738 2.8665-8.9795 4.9661-2.1475 5.5955 0.5693 12.21 4.584 11.16 1.2715-0.3325 2.27-0.2861 2.2192 0.1028-0.3716 2.8569 2.9766 3.2332 6.2407 0.7009v2e-4zm1081.2 174.57c1.5569-4.095 8.6426-29.347 8.6426-30.8 0-1.5371-68.454-1.1733-120.19-1.1733-0.3684 18.573-0.4441 21.719-0.5466 33.326 68.815 1.2639 70.684 1.2292 110.96 1.6389l1.1372-2.9912h2e-4zm-210.43-28.696h-6.3208l0.7017 6.7161c1.7322 16.563-0.8557 19.881 3.1606 19.31 2.8955-0.4113 2.4585-0.6591 2.4585-26.027zm12.019 8.7412v-16.936c-3.5322-0.4102-2.104-0.2444-5.6792-0.6599-0.0344 12.311-0.064 22.89-0.0981 35.201 3.5415-0.4099 2.2363-0.259 5.7783-0.6689v-16.936h-1e-3zm63.322 16.116c0.5469-1.7522 1.6101-24.069 1.8237-28.171l-59.683 0.5818c-0.3513 8.1094-0.9705 14.901 0.7656 16.002 1.0918 0.6924 1.104 0.9043 0.0535 0.9172-1.7727 0.021-1.3657 7.2944-1.3657 12.036 41.606 0 57.912 0.2156 58.406-1.366v-2e-4zm15.348-24.311c-4.9817 0.3257-9.7334 0.6206-9.8743 0.8647-0.0696 0.1211-0.0239 2.8503 0.8389 23.833 5.5769-0.407 3.4873-0.2544 9.0354-0.6597v-24.038zm-106.26-7.8896c3.4866-0.6714 3.0049-1.1162 3.0049-11.267-18.94 0.1851-40.61 0.3967-59.55 0.5815-0.2322 4.0513-0.4319 7.5322-0.6641 11.583 5.5323-0.0325 53.356-0.1556 57.209-0.8977zm88.778-11.778c-33.15-0.3584-20.936-0.2266-54.086-0.5845v10.965h54.334c-0.0866-3.6304-0.1611-6.7497-0.2475-10.38zm156.38-18.029c2.6182-8.7139 4.7666-16.212 4.7744-16.663 0.0173-0.7144-46.258-0.8196-135.47-0.8196v32.754c72.075 0.5354 80.727 0.624 125.94 0.5728l4.7607-15.844v-6e-4zm-240.51 10.38v-26.68c-13.734-1.6074-61.048-1.137-238.2-0.6362-0.5796 19.218-0.7649 21.276 0.6555 29.01 231.12-0.4698 219.77-0.6209 237.54-1.6934zm8.562-26.56c-1.5354-0.2188-2.5618 0.3562-2.9263 1.6392-0.458 1.6113-0.2478 24.255 0.2341 25.195 0.136 0.2632 2.4612 0.2732 5.6704 0.2732-0.5942-25.905-0.1957-26.71-2.9782-27.107zm14.93 10.171v-16.936h-6.1753l0.0745 33.872h6.1011v-16.936h-3e-4zm63.296 3.2778 0.0176-13.658h-58.943v27.316h58.908l0.0176-13.658h-6e-4zm5.541-13.658v26.349l9.2876-0.6719c0.7564-27.374 1.4212-25.677-9.2876-25.677zm3300.6-23.765 0.2864-40.701h-76.512c0 59.219-0.1209 59.546-1.4223 80.816 42.566 0.5269 50.554 0.6687 77.362 0.5859l0.2864-40.701zm-68.474 36.142-4.8142-0.5002c0.9825-54.964 1.4077-72.311 1.8351-72.738 0.2606-0.2607 5.3936-0.3308 64.065 2.2559 0 24.877 0.1421 69.315-0.8294 69.915-1.1763 0.7268-54.45 1.6704-60.256 1.0669l-2e-4 4e-4zm52.875-6.9007c1.4002-1.1621 1.6523-5.6836 1.6382-29.376-0.0109-15.401-0.3779-28.543-0.8195-29.204-2.573-3.8533-13.172-5.0024-18.886-2.0476l-3.2237 1.667c0.0319 57.563-0.4166 59.4 3.1172 60.465 3.2762 0.9873 16.489-0.1069 18.174-1.5046h-2e-4zm-33.277-0.833c0.4147-10.328-0.0175-57.274-0.5344-58.111-1.2288-1.9883-5.5632-1.2839-7.9577 1.2932-2.6429 2.8445-2.3065 4.0476-2.9735 51.296l3.5482 3.1704c3.2728 2.9243 7.84 4.28 7.9174 2.3508zm-4653.1-60.915c-53.059 0.1814-65.096 0.0115-66.198 1.7505-0.5317 0.8398-0.9746 16.377-0.9834 34.526-0.0156 30.281 0.1406 33.091 1.8955 34.121 2.5688 1.5078 50.756 0.7388 65.286 0.6248 1e-4 -19.245 1e-4 -59.684 1e-4 -71.022zm-56.053 60.424c-1.3848-1.3853-1.9683-44.874-0.6475-48.315 0.7524-1.9619 5.7432-1.7283 46.173-1.7283 0.6011 30.768 0.7603 34.048-0.0327 51.354-22.35 0-43.857 0.324-45.493-1.311zm39.585-5.8692c1.4111-1.4114 1.7173-4.6943 1.7173-18.441 0-12.056-0.3818-17.035-1.3662-17.84-2.6074-2.1294-18.045-1.5525-36.877-1.3372 0.0039 3.7554-0.1929 35.161 0.8364 36.75 1.2656 1.9546 4.1978 2.3225 19.573 2.4583 11.753 0.1038 14.715-0.189 16.116-1.5903h5e-4zm131.34 10.715c1.5645-1.0139 6.585-12.622 7.7729-15.247 10.896-0.9504 6.8721-0.5996 17.758-1.5491 0-54.966 0.2173-66.054-1.5684-67.536-2.3262-1.9302-64.414-1.1682-66.396 0.8149-2.126 2.1272-2.7891 65.677-0.6987 67.002 0.8062 0.5107 5.5107 0.9365 10.455 0.9456 9.7812 0.0186 11.109 0.8406 12.743 7.8901 1.9478 8.4065 2.0889 8.5178 10.748 8.4995 4.3716-0.0107 8.5059-0.3779 9.187-0.8193l-4e-4 -2e-4zm-30.74-25.094c-1.2021-0.3003-2.5469-1.1035-2.9883-1.7854-1.0688-1.6499-1.0371-46.762 0.0332-48.447 0.9092-1.4307 47.094-2.2893 49.314-0.9172 1.7358 1.0728 1.6025 48.894-0.1406 50.638-2.6729 2.6726-9.9214 1.647-5.7534-6.4097 1.4878-2.8772 1.7266-6.3662 1.4214-20.726-0.2017-9.4968-0.7778-17.675-1.2798-18.175-0.502-0.4995-9.0098-0.8945-18.907-0.8779-14.63 0.0251-18.184 0.3311-19.011 1.6392-1.3047 2.0615-1.0454 31.549-1.0508 37.031 6.0254 5.6721 6.3506 5.4026 3.8887 7.2434-1.166 0.8723-2.3955 1.5291-2.7314 1.4595-0.3359-0.0701-1.5942-0.3726-2.7964-0.6729l8e-4 1e-4zm-36.218 17.177c12.864-8.7148 14.624-26.705 3.5913-36.716-13.158-11.941-15.19 3.8296-15.815-33.695-0.4214-25.324 0.4995-30.075 1.1377-36.109 169.48-170.39 125.53-126.14 265.23-268.79 448.08 1.7069 189 3.4055 693.9 1.7439 13.796 13.622 19.497 18.739 52.3 49.025 272.11-0.6665 244.54 0.6827 260.19-1.2112-0.0051-3.3933 0.2246-21.836-1.0063-23.779-1.104-1.7443-32.925-1.3396-249.05-0.0028-37.427-36.465-41.006-39.955-55.41-53.532l-715.61-0.6818c-11.721 12.735-29.792 32.362-42.471 46.183-32.153 35.052-228.87 229.19-230.77 236.77-0.8345 3.3237 0.6401 4.9634 4.4497 4.948 1.4282-0.011 23.012-20.938 62.281-60.398 203.52-204.51 252.52-260.52 178.14-179.4-31.488 34.345-237.69 239.32-237.69 242.73 0 2.4136-5.4434 7.6667 68.676-66.277 186.94-186.5 201.13-208.77 207.65-208.61 2.561 0.0623 2.6284 0.1624 0.6646 0.9875-7.8931 3.3167-23.44 24.936-194.8 197.29-76.852 77.296-79.125 79.758-75.63 81.918 1.502 0.9285 1.0923 54.432 1.0923 64.968l-4.2646 2.1758c-13.379 6.8254-16.912 24.478-7.1768 35.852 5.4751 6.3965 9.4614 8.0334 18.642 7.6555 6.1079-0.2512 8.5952-0.8943 11.76-3.0381l1e-3 3e-4zm-19.891-3.9655c-8.814-4.4895-12.144-16.782-6.7192-24.798 3.6514-5.3943 10.755-8.8542 16.115-7.8486 9.7441 1.8281 14.468 7.2207 14.475 16.522 0.0108 12.692-13.154 21.583-23.871 16.124zm14.345-10.401c3.0688-4.1267 1.8633-10.14-2.4839-12.388-4.6694-2.4148-7.4395-2.0247-11.016 1.5522-9.876 9.8765 6.875 19.744 13.5 10.836zm937.74 10.123c5.0872-2.3552 9.751-7.0115 11.403-11.384 1.6748-4.4326 1.4294-15.638-0.4209-19.216-0.8706-1.6838-3.2871-4.5576-5.3696-6.386-10.771-9.457-26.765-6.75-34.103 5.7712-7.2349 12.346-2.9233 26.16 9.9148 31.769 4.7222 2.063 13.488 1.8015 18.575-0.554l2e-4 3e-4zm-16.503-6.0462c-3.7864-1.6484-7.5554-6.3423-8.6755-10.804-1.9551-7.7893 3.2166-15.992 11.487-18.219 9.5884-2.582 18.476 3.8516 19.426 14.062 1.0666 11.462-11.246 19.746-22.237 14.962zm12.542-8.7927c4.019-3.9309-0.814-12.591-7.0266-12.591-3.3594 0-7.0522 3.5994-7.0066 6.8291 0.0962 6.7954 9.1682 10.52 14.033 5.762zm-9.6973-4.3052c0-1.4524 0.6147-2.8474 1.3657-3.1001 1.9263-0.6482 5.1902 0.3342 5.1902 1.562 0 0.5662-0.4917 0.7258-1.0925 0.3545-0.6011-0.3713-1.0928 0.3372-1.0928 1.5742 0 1.5215-0.7078 2.25-2.1853 2.25-1.5825 0-2.1853-0.7285-2.1853-2.6406zm419.23 15.752h9.2151l-0.6721-9.2876c-17.536-0.1855-37.642-0.3982-55.179-0.5837 0 2.2263-0.3533 9.5496 1.3657 10.231 1.9043 0.7546 30.534-0.3596 45.27-0.3596l-3e-4 2e-4zm-78.869-10.38h-57.91l-0.666 10.38h59.242c-0.4114-6.4079-0.2571-4.0065-0.666-10.38zm252.83-3.6057c1.522-2.844 8.8582-28.445 8.8582-30.913 0-2.0298-1.8013-2.0852-67.471-2.0779-35.374 0-66.932-0.0432-82.222 1.4009v32.435c140 1.1135 139.46 1.7287 140.83-0.8455zm-251.76-4.6455c1.9246-1.9246 1.4795-5.4714 0.2349-27.26-5.8618-0.0254-301.91-1.1729-306.43 2.45-1.4587 1.1697-1.9961 21.953-0.6577 25.44 0.6609 1.7224 10.853 1.8191 152.93 1.4551 135.76-0.3479 152.41-0.5735 153.92-2.0852v2e-4zm87.98-25.075h-59.003c0 20.904 0.2061 26.065 0.7285 26.588 0.2917 0.2917 2.3376 0.7285 58.275 0.7285v-27.316zm-1204.5 23.344c5.1084-3.3125 10.201-10.526 10.201-14.45 0-4.165-2.8086-0.3025 148.05-155.09l226.78-0.2183c11.999-11.057 7.4917-6.4641 84.625-82.245 362.15 3.0891 168.36 0.6287 645.95 3.8713 0.6064-12.064 1.3684-26.961 1.1255-27.149-3.561-2.7626-474.42-5.0369-659.1-6.0862-43.97 42.278-48.963 47.147-86.075 82.107h-225.74c-102.04 103.91-157.2 160.62-160.3 160.62-3.374 0-13.59 8.3481-16.089 13.148-4.3862 8.4221 0.0122 21.473 8.7988 26.111 6.311 3.3318 16.099 3.0535 21.762-0.6184v5e-4zm1.626-11.97c1.8359-6.646-2.2085-9.7529 0.1851-10.616 0.8257-0.2976 0.4673-1.2019-1-2.5229-2.396-2.1575-3.1172-5.9929-1.0825-5.76 0.6509 0.0742 1.6934 0.0776 2.3164 0.0107 1.9956-0.2273 66.883-69.358 150.75-151.95l228.23 0.0393c49.743-48.31 85.881-84.998 62.869-60.312-21.347 22.9-26.44 27.491-61.876 61.431l-228.74 0.4253c-1.7363 1.751-149.6 151.07-150.54 153.62-0.2007 0.5447 0.5371 1.0049 1.6387 1.0234 4.416 0.0737 67.314-69.437 149.96-150.82 136.7 0 224.39-1.0864 215.35-0.1689-11.97 1.2144-176.67 0.6616-214.71 2.4814-59.924 60.151-63.95 64.039-147.51 149.69-0.4209 2.2815-2.4624 13.319-2.6138 14.318-0.0645 0.4299-1.0605 1.2856-2.2124 1.9021-1.9609 1.0491-2.0259 0.8716-1.0171-2.782l0.0014-0.01zm-24.032-7.7407c-0.9238-0.9895-0.6567-1.4937 1.0835-2.0461 1.625-0.5156 1.9092-0.9807 0.9575-1.5688-0.9312-0.5757-0.3638-1.3289 1.8247-2.4204 2.6338-1.314 3.4082-1.3376 4.5293-0.1375 0.7437 0.7959 2.3486 1.4475 3.5659 1.4475 3.3115 0 6.4414 2.0166 6.4414 4.1501 0 1.6289-1.1792 1.8882-8.5879 1.8882-5.2764 0-9.0605-0.5063-9.814-1.3127l-4e-4 -3e-4zm17.953-13.187c-0.4473-0.4475-3.6025-1.0908-7.0112-1.4299-5.6167-0.5588-5.8965-0.7034-2.9844-1.5427 3.8701-1.1157 8.9658 0.6123 12.961 1.6809 28.073-26.992 124.4-126 151.3-153.6l226.27-0.2163c56.684-54.373 58.77-55.261 1.2397 1.8633l-226.62-0.144c-159.29 161.12-152.18 156.37-155.16 153.39v-6e-4zm427.67-199.48c0-1.0898 28.733-27.579 22.399-20.567-4.1074 4.5471-22.399 21.343-22.399 20.567zm155.5-37.63c21.859-0.4518 57.99 0.3364 15.503 0.3352-17.428-6e-4 -24.404-0.1513-15.503-0.3352zm550.42 245.57h-6.5247c0.2073 21.32-0.1841 27.911 4.1716 27.077 1.971-0.3777 1.8329-4.3987 2.3531-27.077zm12.536-6.6563c-4.1052 0.4026-2.5051 0.2456-6.594 0.6465l-0.2385 33.326c6.0613 0 5.865 3.7088 6.8325-33.972zm77.849 21.134 0.3088-12.292h-9.6008c-1.4836 12.351-1.3792 12.956-1.3987 25.25l10.38-0.666 0.3088-12.292 0.0018 2e-4zm2471.2-18.948c2.9089-0.7327 6.1531-2.6538 8.4055-4.9775 3.4203-3.5291 3.6683-4.2791 3.6683-11.099 0-8.3743-1.6191-11.351-8.6868-15.968-4.9543-3.2366-12.606-3.7866-18.391-1.3215-10.688 4.5542-13.42 18.631-5.4536 28.098 5.0742 6.0305 11.183 7.6033 20.458 5.2681l2e-4 -3e-4zm-2573.6-11.919h-59.123v10.962c18.577-0.1851 39.879-0.3972 58.456-0.5823 0.4114-6.4077 0.2574-4.0063 0.6663-10.38zm84.554 6.5959c0.4026-2.3816 0.4167-4.8401 0.0317-5.4631-0.9441-1.5281-41.378-1.1328-55.204-1.1328v10.926h54.44l0.7319-4.3306h-4e-4zm189.19-39.656c0.6401-2.2473-5.0295-1.8999-162.96-1.3589l-0.6082 30.048c58.669 0.5374 83.792 1.4319 155.05 2.1853 4.1715-13.234 5.9041-21.706 8.5157-30.874zm-251.51 26.23c0.5549-1.7798 1.6562-31.458 1.7817-34.527l-6.1008 1.6255c-0.0562 1.3582-1.4941 32.367-0.8816 33.448 0.7622 1.3454 4.7407 0.9275 5.2007-0.5464zm-22.894-14.478v-14.204c-214.31-0.3684-321.78-0.8188-323.67 0.7502-2.0764 1.7231-1.6084 25.633 0.5276 26.95 1.8296 1.1282 317.13 0.7104 323.14 0.7078v-14.204 2e-4zm11.951 4.3706c0.1096-5.4084 0.6001-11.432 1.0903-13.385 1.0405-4.1492 1.0286-3.551-6.9028-3.551-0.5681 22.24-0.5066 26.581-0.1694 26.915 0.2781 0.2756 1.6929 0.356 3.1438 0.178 2.5529-0.3128 2.645-0.6421 2.8381-10.157zm75.491-15.634c-0.3123-0.313-2.9873-0.781-58.486-1.4043v27.418h59.003c0.0688-4.0479 0.6117-24.882-0.5169-26.014zm14.483 0.4878c-2.9087-0.7791-6.3374-0.687-8.5024-0.698v26.343l10.38-0.6663c0.6191-24.465 0.9959-24.209-1.8777-24.979zm-17.681-11.123c0.7144-2.8467 0.1646-5.6736-0.1089-7.6038h-53.54c-0.4133 5.7068-0.2583 3.5681-0.6697 9.2446 5.6284 0.0696 46.816 0.5569 50.677 0.7063 2.278 0.0887 3.1755-0.4901 3.6416-2.3471zm-84.243-8.6965c-18.578-0.1848-39.879-0.397-58.457-0.582v10.998c18.577-0.1851 39.879-0.3972 58.457-0.582v-9.834zm-1316.3 0.6465c4.6211-2.377 8.811-6.5669 12.12-12.119 4.7515-7.9753 251.66-251.08 271.7-278.08 9.6245-12.965 3.1802-11.644 59.168-12.122 0.1514-0.0012 815.31-3.7368 974.43-3.1747-0.0869-21.839 0.1265-28.941-1.6968-30.188-2.0405-1.3947-1030.7 2.5259-1030.9 2.5264-22.135 28.998-217.65 220.75-263.63 272.38-18.162 20.392-18.641 20.755-27.524 20.878-11.376 0.1572-19.88 5.8164-23.015 15.317-2.9268 8.8677 1.502 20.136 9.5918 24.407 5.4136 2.8579 14.345 2.9375 19.714 0.1758l-5e-4 1e-4zm-13.611-4.5432c-4.3818-1.3115-8.8076-6.5186-9.7334-11.451-1.9756-10.532 10.287-20.411 21.184-17.066 5.1035 1.5664 4.6689 1.9119 35.763-28.4 14.475-14.111 20.531-19.571 14.352-12.94-16.015 17.186-48.919 47.246-48.34 47.825 1.8994 1.8992 19.15-14.566 110.01-105 191.63-190.73 171.42-178.09 180.15-180.38 2.3984-0.6307 2.332-0.4943-0.5464 1.1194-4.9268 2.7621 1.5244-2.0996-46.984 48.442-105.48 109.9-140.41 138.9-140.41 141.73 0 0.8088-0.561 1.4709-1.2471 1.4709-1.9468 0-16.221 14.436-15.472 15.648 0.3672 0.5938 0.1689 0.772-0.439 0.396-0.6089-0.3762-18.263 16.829-39.231 38.235-33.869 34.574-38.212 39.402-38.907 43.245-1.1299 6.2451-3.46 6.324-3.5361 10.356-0.0991 5.3083-9.1733 9.0073-16.624 6.7769h1e-3zm11.655-8.6687c2.623-2.6235 2.9858-9.9946 0.5889-11.984-0.8784-0.7285-3.4668-1.5757-5.7534-1.8823-4.8926-0.6562-8.5459 1.7903-9.6514 6.4629-0.5645 2.3865-0.0483 3.6331 2.6006 6.2827 3.9414 3.9412 8.9355 4.3992 12.215 1.1201v2e-4zm128.82-141.56c77.522-76.76 144.27-145.48 100.53-100.03-75.722 78.686-215.16 213.54-100.53 100.03zm1277.2 135.44 0.3054-13.219c-30.227-2.1455-58.946-1.4116-59.518-0.4875-0.7556 1.2227 0.6609 24.074 0.7805 26.307 21.637 0.7153 22.026 0.7302 58.126 0.6187l0.3054-13.219-2e-4 2e-4zm14.757-11.46c-1.0801-1.0422-7.5166-2.0515-9.053-2.3337v27.685l9.2876-0.6719c0.0749-2.8648 0.8608-23.622-0.2346-24.68zm-90.721 1.1875c0.3025-3.1094-0.5015-2.7317-6.29-2.7317l-0.5105 25.677h6.3069c0.0426-3.7941 0.1589-19.507 0.4936-22.946zm11.748 11.746c0-22.473 3.1379-22.672-1.4756-22.672-4.1377 0-3.6973 0.4163-4.9307 33.872h6.397l0.0107-11.2h-0.0014zm-1116.7 0.3891c13.498-9.665 7.8125-30.691-8.3042-30.706h-4.48c-2.0142-28.369-2.7451-26.984 3.3843-27.903 7.0107-1.0513 11.394-4.165 13.929-9.8962 5.4155-12.243-4.9688-25.395-18.104-22.93-4.293 0.8052-11.247 6.238-12.626 9.8628-0.4731 1.2441-0.5073 17.746-0.0752 36.671 0.8413 36.918 1.0083 37.969 6.9092 43.48 5.1782 4.8359 13.726 5.4651 19.368 1.4253l-0.0015-4e-3zm-16.31-8.4582c-4.7026-5.978-1.1646-14.07 6.6987-15.321 3.4966-0.5566 4.4995-0.1917 7.3755 2.6846 6.6836 6.6833 2.7427 15.516-6.9224 15.516-3.9784-1e-4 -5.3085-0.5355-7.1518-2.8792zm10.604-2.0996c4.0571-2.8416 2.1973-10.318-2.5664-10.318-3.04 0-6.1768 4.3376-5.3936 7.4592 1.1816 4.708 3.917 5.6904 7.9595 2.8591h5e-4zm-11.602-56.866c-3.7051-2.595-4.813-6.4214-3.0679-10.595 1.8911-4.5247 3.9854-6.1904 8.7549-6.9646 8.4194-1.3662 14.278 11.035 8 16.933-3.0689 2.8831-10.012 3.2007-13.687 0.6265zm12.45-4.1973c2.3955-3.6558 1.6216-7.3105-1.9717-9.3142-2.6982-1.5046-3.311-1.5049-6.0093 0-3.3525 1.8667-4.687 7.6611-2.3994 10.418 2.1816 2.6287 8.3662 1.9729 10.38-1.1008v-0.0025zm4492.3-16.999c-59.187 0.0234-57.804 0.1931-76.391 1.4238l-0.5992 78.305c43.23 0.593 47.262 0.6621 76.486 0.5854 1.6575-70.98 1.8378-75.002 0.5047-80.314zm-72.073 4.271c4.9094 0.1094 58.826 1.1792 61.991 1.822 1.3809 0.2805 2.7 1.5569 3.0361 2.9377 0.7759 3.1887-0.9921 61.52-1.1074 65.816-16.932 1.5137-22.501 1.4077-63.92 1.6389v-72.214zm56.037 66.478c2.0831-1.5615 1.9955-7.9285 3.3016-57.302-4.6218-4.6216-3.9915-4.9807-12.863-4.5325-4.5148 0.2278-8.7008 1.0403-9.7202 1.8862-1.5731 1.3057-1.7905 4.8621-1.7905 29.287 0 17.074 0.4364 28.616 1.1311 29.914 0.9694 1.8113 2.3456 2.1135 9.625 2.1135 5.0949 0 9.2229-0.5466 10.316-1.3657v-2e-4zm-32.738-30.845c-0.147-22.258-0.5253-29.502-1.5744-30.15-1.5744-0.9731-7.4281 1.7144-8.0333 3.688-0.5292 1.7263-1.4772 47.922-1.5257 50.023 1.5467 1.1204 8.6904 6.6147 10.16 6.1248 0.7959-0.2655 1.1058-9.712 0.9739-29.686zm-60.085 28.659c0.8884-13.078 0.7441-195.43 0.7499-213.89-1.7668 0-6.5429 0.3085-7.0997-1.3658-0.6-1.8036-1.0893-66.709-1.1162-69.477l3.8668-1.7059c4.5967-2.0278 10.395-7.4709 12.694-11.915 2.6193-5.0651 3.102-13.983 1.0786-19.922-6.1763-18.127-20.581-14.422-18.121-20.891 1.3051-3.4327 1.0288-33.993 1.0288-40.569l2.7962-0.7019c4.3289-1.0863 12.178-8.9977 14.213-14.324 1.272-3.3308 1.6889-6.9475 1.3729-11.91-0.9092-14.277-9.1776-17.604-18.526-22.347-0.1407-13.586-0.2616-25.259-0.4022-38.845-5.3298-2.6985-6.2414-2.764 1.3273-2.7821 5.5855-0.0131 6.9914-0.3912 7.9217-2.1296 0.659-1.2312 1.1311-10.283 1.1311-21.684 0-23.711-0.0711-22.001-9.8338-24.321v-74.258h-9.8338c-0.3724 18.786-0.6282 29.738-1.639 74.847-1.9631 0.1975-11.106 0.9076-12.225 2.0259-1.2491 1.2472-1.7364 28.123-0.6764 37.309l0.8825 7.6486c3.8788 0.2585 16.884 0.8899 14.478 1.8779-1.7241 0.7079-1.9121 2.7769-1.9121 21.033 0 16.571-0.2762 20.248-1.5207 20.248-0.8366 0-3.9883 2.2184-7.0038 4.9298-8.0154 7.2064-10.709 16.583-7.7863 27.108 1.3406 4.8276 7.5344 12.129 12.404 14.624 1.8481 0.9463 3.7214 2.2666 4.1629 2.934 1.0539 1.593 0.8339 39.471 0.8359 41.993-8.1659 3.953-8.9519 3.8706-17.334 13.149l-1.7382-2.6528c-3.6908-5.6328-11.847-1.0603-9.4328 5.2885 0.5799 1.525 1.6044 3.1128 2.2765 3.5283 2.0591 1.2726 6.1372-0.358 7.4471-2.9779 2.0333-4.0658-0.3397-0.2654-0.3397 12.307 0 7.6851 0.2574 8.5911 3.8688 13.616 4.526 6.2979 9.241 8.1478 14.16 10.679v68.403c-2.4839 0.2395-4.6183 0.4452-7.1022 0.6847-0.0309 12.378-0.5257 210.88-0.5566 223.29 5.8001 1.1165 8.0504 0.9949 24.819 1.2458l0.6864-10.107h-3e-4zm-16.984-36.604c-0.3766-42.629 0.1062-127.75 0.3123-173.05 3.6445 0.4202 2.2697 0.2616 5.9314 0.6838 0.145 54.157 0.7248 208.15-0.2677 208.15-1.1731-2e-4 -0.4784-204.89-1.6444-206.06-0.4507-0.4507-1.1883-0.4508-1.639-4e-4 -1.0764 1.0758-1.5081 160.37-0.5044 186.12 0.5968 15.308 0.4702 19.942-0.5453 19.941-1.002-1e-3 -1.3995-8.6812-1.639-35.785h-0.0039zm-2.5556-257.49c-7.6459-3.3303-11.718-12.18-9.1899-19.972 2.9279-9.0239 8.7328-13.46 17.604-13.452 6.4088 0.011 11.021 3.048 14.024 9.2516 7.2665 15.01-7.3417 30.748-22.438 24.172zm14.889-7.1202c2.7039-2.7037 3.1939-4.0579 3.1939-8.8252 0-4.7672-0.4901-6.1215-3.1939-8.8252-4.6184-4.6184-9.9918-4.4312-14.944 0.5211-3.1298 3.1298-3.715 4.4935-3.715 8.6571-1e-4 10.434 11.484 15.648 18.659 8.4722zm-11.072-3.1918c-2.807-2.2728-3.369-7.7339-1.0798-10.492 2.0523-2.473 8.442-2.2028 9.8436 0.4163 1.7158 3.2059 1.3681 6.0316-1.1335 9.2119-2.6775 3.4041-4.2708 3.5845-7.6303 0.8639v1e-4zm-2.7839-83.62c-12.622-5.7194-13.744-32.351 7.9512-32.367 6.2684 0 11.043 2.9893 14.054 8.813 3.5609 6.8862 1.031 17.514-5.2304 21.972-4.0636 2.8934-12.189 3.6594-16.775 1.5812zm14.743-6.7594c9.4207-7.9269 1.5619-23.327-10.218-20.024-6.1147 1.7142-10.352 8.7588-8.8559 14.721 2.0195 8.0466 12.388 10.929 19.074 5.3033zm-11.898-3.7584c-4.2924-4.2922-1.4826-12.019 4.3706-12.019 3.3808 0 6.5559 3.3168 6.5559 6.8486 0 2.4281-4.7245 7.3557-7.0525 7.3557-0.9288 0-2.6722-0.9834-3.874-2.1853zm-3270.3 385.67-57.364 0.5828c-0.2336 3.2166-0.4341 5.9805-0.6675 9.1973 20.62 0.7234 25.261 0.7654 58.032 1.3591v-11.139zm85.773 0.5828-55.306-0.5842c0.2358 3.2615 0.4382 6.064 0.6738 9.3254 4.1301 0.095 49.525 1.0837 52.78 1.397 2.7944 0.2685 2.5044 0.027 1.8523-10.138zm-1396 2.3681c1.4507-1.7478 2.2944-71.065 0.8823-72.48-1.2017-1.2041-61.622-1.554-64.104-1.5803v75.516c47.124 0 61.836 0.2141 63.222-1.4561h5e-4zm-53.817-11.199c-0.9966-2.5967-0.7651-48.866 0.2524-50.47 1.0249-1.615 13.306-1.2202 44.43-0.7957 0.5181 43.729 0.8247 49.281-1.1504 51.256-2.5967 2.5969-42.535 2.605-43.531 0.011l-5e-4 -0.0019zm40.885-7.6328c0.5854-1.5403 1.0645-9.8452 1.0645-18.456 0-13.897-0.2148-15.739-1.9126-16.401-3.4858-1.3596-34.523-0.6401-35.452 0.8215-1.0933 1.7202-1.1055 32.606-0.0132 34.323 0.8262 1.3003 5.5049 1.7178 25.114 2.2412 9.978 0.2664 10.152 0.2271 11.2-2.5295v3e-4zm1335.1 1.4394c0.0393-6.1599 0.2068-12.183 0.3723-13.385 0.3391-2.4673-1.1685-2.3269-6.802-2.8701 0 21.096 0.21 26.208 0.7285 26.726 0.4006 0.4006 1.8311 0.7285 3.179 0.7285 2.2846 0 2.5222-0.2216 2.5222-11.2zm12.146-21.58c-3.5803 0-5.4512-0.4773-5.5264 2.4585-0.0349 1.3521-0.4751 8.1128-0.9788 15.024-1.1931 16.373-0.1392 15.297 6.5054 15.297-4e-4 -20.094-2e-4 -12.69-2e-4 -32.78zm62.756 29.529c2.5991-0.9883 2.802-1.5637 2.7932-7.9216 0-7.6477-0.7998-13.434-1.3877-18.329h-58.768c0.6243 25.945 0.1782 25.461 3.3472 26.34 4.2625 1.1829 50.872 1.1052 54.015-0.0896h5e-4zm18.171-25.158h-10.998v25.251l10.38-0.6663c0.216-8.5981 0.4018-15.986 0.6179-24.584zm795.86 15.183c0.8911-0.8914-79.533-269.09-80.634-273.05-54.814-196.9-63.089-217.56-67.911-241.74-3.417-17.138-17.993-69.612-22.132-84.416l-17.327-0.6281c-57.034 208.07-167.59 591.35-167.59 600.64 0 0.7625 354.82-0.0383 355.59-0.8027h3e-4zm-185.6-584.04c1.55-5.3318 1.9973-5.8773 4.8196-5.8773 4.6609 0 6.5676 1.0654 6.5676 3.6698 0 1.2887 3.71 15.864 8.2446 32.389 19.455 70.899 0.0657 9.4053 53.354 191.76 84.504 289.18 107.89 352.43 104.34 354.67-1.9199 1.2161-81.17 0.5522-338.84 2.438 4.9644-22.999 161.47-578.94 161.5-579.05zm173.41 572.2c1.8674-1.7371-36.54-123.76-41.839-141.02-30.046-97.835-7.967-19.069-73.854-248.03-20.169-70.088-24.32-80.482-31.656-111.15-3.418-14.286-17.384-66.66-17.389-66.684-0.5823-2.8063-1.2827-3.5511-3.3396-3.5511-2.1445 0-2.8147 0.8174-3.8076 4.6438-9.9751 38.442-158.41 559.56-158.41 566.55 0 2.6594 329.51-0.0383 330.29-0.7681v3e-4zm-252.36-54.015c-17.921-5.8811-33.052-27.048-27.28-49.579 5.4751-21.371 18.017-23.758 17.269-30.892-0.4536-4.3248 12.393-48.904 17.267-66.626 80.912-294.16 73.319-264.42 75.883-264.42 2.324 0 2.8335-0.9269 26.492 84.68 57.208 207 94.353 319.57 94.345 321.51 0 1.7375-10.434 1.366-23.005 1.366-0.0425-0.1106-82.573-267.38-83.749-266.21-0.6526 0.6526-34.973 115.11-45.665 155.3-4.7495 17.853-7.4824 28.09-10.276 38.122l4.2449 4.6053c11.585 12.568 14.75 29.449 8.6121 45.931-3.3721 9.0554-15.26 20.913-24.444 24.383-8.1958 3.0962-23.037 4.0073-29.694 1.823h-5e-4zm30.004-8.7151c7.3916-3.801 13.572-10.196 17.413-18.017 2.6455-5.3868 3.0342-7.4519 3.0159-16.018-0.0186-8.5544-0.407-10.571-2.9885-15.502-3.8159-7.2886-9.4329-12.695-17.102-16.461-5.2102-2.5588-7.4814-3.0015-15.399-3.0015-7.9438 0-10.182 0.4393-15.471 3.0369-13.242 6.5031-20.61 17.658-21.435 32.453-0.6389 11.463 2.3369 19.167 10.592 27.423 8.0181 8.0183 12.913 9.7998 25.767 9.3789 8.1599-0.2673 10.817-0.8276 15.608-3.2915h-2e-4zm-40.071-16.712c-15.458-23.336 11.192-54.397 36.543-42.592 9.4265 4.3895 16.875 15.795 16.875 25.84 0 5.324-3.0483 13.128-7.022 17.977-8.5431 10.426-32.652 19.524-46.396-1.225zm35.836-0.3164c4.585-3.2648 7.6929-10.02 7.7239-16.788 0.0295-6.4749-2.0471-10.66-7.2651-14.64-3.4666-2.6442-5.0039-3.0613-11.281-3.0613-8.8037 0-14.142 3.0211-17.504 9.9055-7.0146 14.366 2.2146 28.413 18.092 27.535 4.7766-0.2643 7.6069-1.0803 10.234-2.9513h-3e-4zm-17.039-4.948c-3.7197-1.6178-6.9023-6.5281-6.8958-10.639 0.011-3.6417 3.9177-9.4984 7.1702-10.735 5.2725-2.0048 10.042-1.2729 13.842 2.1234 3.0464 2.7224 3.554 3.8881 3.469 7.9681-0.1218 5.8617-2.7734 10.151-7.238 11.707-4.3186 1.5056-6.0752 1.4334-10.348-0.4248zm10.086-5.4532c7.0496-7.05-1.9924-16.817-8.9934-10.24-3.4519 3.2428-3.3025 7.7837 0.3499 10.657 3.7302 2.9342 5.3716 2.855 8.6436-0.4172v1e-4zm179.91 28.319c1.2617-1.2615-6.7827-16.185-98.876-337.04-14.75-51.387-15.097-57.067-15.741-56.423-1.532 1.5316-51.703 189.21-61.539 222.51-10.478 35.467-25.69 93.756-24.72 94.725 0.2661 0.2662 3.0801-0.287 6.2532-1.2294 7.6433-2.2697 11.922-2.1624 22.73 0.5709 4.9678 1.2563 9.1672 2.1167 9.3315 1.9121 0.9102-1.1332-1.1746 0.2635 36.223-130.67 12.573-44.019 23.139-80.036 23.48-80.037 0.3408-7e-4 1.5071 3.8093 2.592 8.4667 8.0276 34.462 53.412 172.18 84.809 277.81 2.6138 0 14.717 0.1526 15.456-0.5862h3e-4zm-19.762-28.642c-91.085-283.2-92.789-327.06-95.54-319.33-2.9602 8.3262-34.861 137.14-54.269 200.5-6.9106 22.562-15.309 52.516-15.309 54.602 0 0.895 1.3523 1.9106 3.0049 2.2574 4.8784 1.0233 12.382 3.043 13.47 1.9263 1.7642-1.8091 58.412-200.52 58.447-200.63 1.6494-5.2201 1.7466-6.5155 0.5452-7.2579-1.1389-0.704-0.9719-1.1661 0.7561-2.0908 3.0198-1.6162 5.658 1.2451 3.8369 4.161-1.9658 3.1475-60.201 210.98-61.35 212.25-0.3743 0.4116-3.6311 0.0503-7.2366-0.8025-9.8198-2.3225-18.683-1.0848-19.562-2.5059-1.5496-2.5068 24.561-91.374 34.871-129.65 36.382-135.07 42.607-155.7 43.151-155.7 1.6182 0 58.835 208.45 104.42 350.99 4.5024 14.08 4.5715 15.044 1.0791 15.044-2.5156 0-3.1121-1.375-10.314-23.765h-8e-4zm-155.28-83.92c0-1.8975 7.9724-28.936 8.4045-28.504 0.3047 0.3049-8.4045 34.1-8.4045 28.504zm10.926-38.592c0-3.3523-0.8132 7.8959 21.316-76.076 11.694-44.376 19.233-66.898 21.173-75.393 0.572-2.5055 1.4382-3.3586 3.6763-3.6201 2.4399-0.285 3.0405 0.1702 3.6033 2.7317 0.897 4.0802 1.7734 5.5596 0.4456 6.3811-0.5889 0.3639-1.0449-1.0236-1.0449-3.1786 0-3.9678-1.6338-6.0345-3.385-4.2832-3.7104 3.7107-45.784 165.72-45.784 153.44h-4e-4zm-1263.3 221.07c2.2344-0.9333 5.4766-3.0232 7.2053-4.6438 3.3909-3.1797 8.3015-12.586 8.3191-15.935 0.0127-2.3904 0.6382-2.0498 84.22-0.4717 10.094 6.7927 11.157 8.241 20.685 7.5759 9.1084-0.6355 18.78-10.398 20.292-20.482l0.7158-4.7749h12.411c1.739 6.5024 3.4102 15.74 15.32 19.202 5.3557 1.5569 6.4333 1.5564 11.809-0.011 9.0747-2.6379 11.809-8.7024 15.25-15.918 54.871-0.8896 393.23 0.1763 395-1.6389 1.3696-1.4045 2.3943-23.052 2.6191-26.77-204.86-0.4565-226.04-0.5449-425.14-0.5464-9.2024 7.3633-9.3596 8.3306-15.805 19.121-12.688 0-11.85 0.7581-15.895-4.9802-8.907-12.636-28.173-11.243-35.419-2.0322l-2.0444 2.5989c-85.427 0.7305-106.99 0.6853-115.7 2.821-7.3647 1.8064-14.91 11.651-15.999 20.875-2.207 18.696 15.453 32.98 32.151 26.004l4e-4 5e-3zm-17.905-6.9358c-4.2578-2.5964-7.6313-8.0593-8.5837-13.901-2.1926-13.451 12.902-25.552 24.434-19.589 13.732 7.1011 14.594 27.002 1.4624 33.792-4.6843 2.4226-13.084 2.2756-17.313-0.3022h4e-4zm15.879-10.636c5.1501-6.5476 1.5776-14.603-6.4768-14.603-5.6863 0-8.7412 2.9346-8.7412 8.3975 0 5.5459 3.4487 9.085 8.8521 9.085 3.1287 0 4.6379-0.6826 6.3655-2.8792h4e-4zm-8.6621-0.5156c0-0.6653 0.6775-0.9497 1.5061-0.6318 2.4636 0.9456 6.3054-3.9158 2.0449-3.3359-2.6448 0.3599-2.0833-1.9819-1.0925-1.6519 1.4116 0.4705 0.8914-1.7009-0.5464-2.281-0.8057-0.3252-0.5708-0.5867 0.5735-0.6375 2.5747-0.1147 4.4624 4.7878 2.9397 7.6338-1.2004 2.2432-5.4248 2.9473-5.4248 0.9043h-5e-4zm120.53-3.2452c-6.6567-4.2642-9.9685-15.885-6.4521-22.643 6.53-12.55 23.249-12.42 29.83 0.2332 2.2673 4.3601 1.4231 13.508-1.644 17.815-4.7454 6.6646-15.088 8.8508-21.733 4.5945h-3e-4zm14.903-9.4851c3.5596-2.8823 3.374-8.6902-0.3801-11.92-5.8127-5-13.769-1.9365-13.769 5.3018 0 7.2031 8.5105 11.184 14.149 6.6177v2e-4zm41.784 4.0779c-8.8357-5.387-9.0105-20.26-0.324-27.569 7.0532-5.9351 16.426-4.4448 21.682 3.447 2.9824 4.4775 3.3694 13.784 0.781 18.789-3.7224 7.1982-14.73 9.8496-22.139 5.3328h3e-4zm13.778-8.7434c6.949-6.4741 1.3242-16.06-8.0444-13.708-3.6589 0.9182-6.0959 6.4116-4.665 10.516 1.8271 5.2417 8.6657 6.9595 12.709 3.1924zm-135.8 7.6787c-26.962-0.4995-29.519-0.71-29.855-2.4585-0.3447-1.7935 2.1699-1.9121 40.56-1.9121 39.288 0 40.949 0.0833 41.47 2.0757 0.4663 1.7837-0.2458 2.1704-5.0625 2.7471-7.9146 0.9477-34.152-0.4522-47.112-0.4522zm-39.184-15.297c105.66 0 91.071-0.8147 91.071 4.5002 0 1.1543-41.645 0.8657-86.209 0.675-3.0162-3.2099-1.8138-1.9301-4.8621-5.1752zm-430.48 39.887c7.2354-2.1487 14.752-8.8674 18.507-16.544 2.3945-4.8948 2.9751-7.6047 2.9736-13.892 0-14.993-6.4502-26.045-18.703-32.062-5.3086-2.6069-7.5532-3.0581-14.985-3.0127-14.476 0.0886-25.259 6.8442-31.31 19.614-3.8623 8.1519-4.3203 20.172-1.0425 27.388 3.8218 8.4136 11.536 15.341 20.752 18.634 5.3779 1.9219 17.124 1.8599 23.809-0.1252v-3e-4zm-21.816-8.0354c-5.041-2.6301-12.02-7.8552-11.367-8.5095 0.895-0.8945-2.3867-8.5918-3.5464-8.3179-1.8735 0.4426-1.3936-12.555 0.6206-16.8 2.5156-5.3008 10.443-11.895 16.256-13.522 9.4038-2.6328 20.374 0.7888 26.55 8.2805 6.8345 8.2915 7.6172 22.303 1.6592 29.701-5.8369 7.2476-11.538 10.491-19.222 10.936-5.2182 0.3024-7.7733-0.11-10.951-1.7677zm18.13-1.9282c8.6294-4.3525 12.824-10.697 12.701-19.215-0.0981-6.8271-1.6943-11.653-5.1714-15.633-2.8345-3.2444-10.413-7.0337-14.14-7.0701-1.3521-0.0129-2.4585-0.5156-2.4585-1.1165 0-0.6011-1.1064-1.0581-2.4585-1.0159-2.3462 0.0732-2.3584 0.1199-0.2734 1.0159 1.9927 0.8562 1.9409 0.9458-0.5884 1.0156-5.3125 0.1482-13.481 6.6729-11.431 3.355 2.5869-4.1853-5.8433 4.7271-2.6895 2.7126 0.9253-0.5906 0.1875 0.2434-1.6387 1.8533-3.1582 2.7839-3.3062 3.2878-3.0151 10.296 0.4858 11.728 5.4307 20.275 13.899 24.028 4.5225 2.0044 13.064 1.8931 17.264-0.2253h5e-4zm1021.3-16.847-57.364 0.5825-0.6719 9.2876h58.036c1e-4 -3.4522 1e-4 -6.4182 1e-4 -9.8701zm87.412 0.0361h-57.91v9.2876c18.426 0.241 39.485 0.5164 57.91 0.7573v-10.045zm-743.64 3.9727c5.2056-3.9705 8.0889-13.086 6.167-19.499-1.5337-5.1189-7.5713-12.108-12.07-13.971-4.2241-1.7495-7.8022-0.7698-12.611 3.4521-5.3564 4.7031-7.0664 8.4934-7.0664 15.666 0 7.0815 1.7744 11.106 6.7393 15.284 3.0972 2.6062 4.2539 2.9194 9.248 2.5054 4.0171-0.3333 6.8589-1.3513 9.5928-3.4363v-2e-4zm-14.987-2.73c-14.378-9.4805-1.6064-27.92 6.3423-25.925 4.106 1.0305 7.8003 5.0808 9.3486 10.248 1.167 3.8955 1.0527 4.9617-0.9854 9.1719-2.1924 4.5286-6.9839 8.5488-10.17 8.5332-0.8086 0-2.8496-0.9168-4.5356-2.0281zm7.9438-7.7268c1.5273-2.8538 1.4302-8.0767-0.1802-9.687-2.0073-2.0073-6.1279-1.5603-7.3916 0.8022-1.5273 2.8538-1.4302 8.0767 0.1802 9.687 2.0078 2.0076 6.1274 1.5603 7.3921-0.8022h-5e-4zm675.22-28.48h-6.4805c0 30.109 0.5437 29.681 0.7744 29.912 0.426 0.426 1.7783 0.6309 3.0049 0.4556 2.5815-0.3696 2.2439-1.1948 2.7012-30.367zm12.095 13.658v-16.936h-6.313c-0.043 1.4478-1.0908 31.973-0.5352 33.053 0.2319 0.4507 1.8674 0.8193 3.635 0.8193h3.2134v-16.936h-2e-4zm80.173 12.429c1.198-5.9905 0.7754-21.187-0.6282-22.591-1.5737-1.574-6.3081-1.311-8.5227-1.311v27.316c7.9619 0 8.3701 0.4885 9.1509-3.4146zm-16.343 1.6587c1.9705-0.7563 1.7283-4.8862 1.7283-26.688l-60.524 0.5808c0.1003 3.7249 0.3411 22.379 1.6533 24.831 0.9507 1.7766 3.3088 1.9385 28.226 1.9385 14.954 0 27.966-0.2983 28.917-0.6631zm-862.73-29.14c10.008-6.623 12.779-23.541 5.5254-33.728-3.1577-4.4343-10.768-8.5514-17.219-9.3156-7.4229-0.879-16.436 3.3397-20.61 9.6467-7.3408 11.094-1.9697 30.059 10.058 35.512 5.5382 2.5108 16.887 1.432 22.246-2.1147zm-20.423-3.7375c-8.1577-4.0193-12.301-16.582-8.0386-24.37 2.5303-4.6235 9.2388-8.6987 14.359-8.7233 5.3262-0.025 12.716 3.8844 15.328 8.1102 2.979 4.8199 3.0181 14.052 0.0801 18.871-2.5464 4.1763-9.4707 7.9753-14.473 7.9407-1.9775-0.0139-5.2427-0.8367-7.2559-1.8286h6e-4zm10.685-9.5788c5.335-2.7585 6.1108-8.9546 1.5698-12.526-3.7163-2.923-6.1416-2.8595-9.7627 0.2549-3.3945 2.9202-3.811 7.0269-1.1279 11.122 2.0454 3.1221 4.8398 3.4669 9.3203 1.1498l5e-4 -1e-4zm1180.7 9.5202c0.3459-1.6523 1.0405-4.8486 1.5435-7.1021 1.4075-6.3048-0.4331-4.8544-2.0798 1.6389-0.8003 3.155-1.6833 6.3511-1.9624 7.1023-0.6024 1.6214 1.623 2.5437 2.4987-1.6391zm-395.22-1.7254c0.449-2.3333-0.468-5.3945-0.9436-7.2889-64.758 0-58.215-2.0458-56.523 9.8695 54.789-0.5586 57.025-0.2849 57.466-2.5806h2e-4zm86.51-8.0706c-2.906-0.0836-53.491-1.7886-55.998-0.8169-1.9072 0.7383-2.7681 6.9347-1.1836 8.5192 0.2898 0.2898 2.448 0.7285 57.182 0.7285v-8.4308zm239.03 5.335c1.3433-0.8528 12.277-39.194 12.277-43.051 0-1.3918-0.8652-1.9302-3.1021-1.9302-3.0017 0-3.2134 0.3798-6.5439 11.746-5.8777 20.06-8.2749 30.335-7.5295 32.277 0.7686 2.0027 2.6675 2.3743 4.8979 0.9583h5e-4zm3069.2-87.429c-1.7581-1.4592-35.772-0.569-77.231 0.1864v81.597h77.227c1.5955-63.605 2.1666-79.988 4e-3 -81.783zm-72.041 77.915c-1.0869-1.1499-0.8195-72.662-0.8195-75.057 3.4864 0.14 21.209 0.5588 23.091 2.053 1.0362 0.8226 4.1698 0.8782 10.235 0.1812 11.598-1.3328 29.54-0.7454 31.307 1.025 1.5208 1.5232 1.6038 4.5397 1.1994 43.589-0.2264 21.868-0.5444 26.484-1.8587 26.988-2.6187 1.0047-62.268 2.1579-63.154 1.2208zm56.745-6.3616c0.9164-0.8813 1.3824-9.7554 1.6002-30.472 0.3669-34.905 1.0425-33.053-12.055-33.053-5.6258 0-9.1473 0.5109-10.338 1.4996-1.5992 1.3278-1.8062 4.9208-1.8062 31.349 0 22.7 0.3271 30.052 1.3658 30.695 4.083 2.5282 18.599 2.5148 21.234-0.0194zm-34.371-29.926c0.2961-16.834 0.0994-31.172-0.4418-32.233-1.9846-3.8916-4.9799-0.7737-9.5034 3.0048-0.2169 17.246-0.4656 37.028-0.6824 54.274 1.8073 1.5548 5.7188 5.275 8.1128 5.275 1.8529 0 2.0159-1.9649 2.5148-30.321zm-3334.5 5.7363h-5.4634c-0.2131 10.127-0.3965 18.828-0.6099 28.955h6.4216c-0.1217-10.127-0.2264-18.828-0.3483-28.955zm13.02 1.9122c0.1084-2.292-2.3174-1.9122-6.363-1.9122-0.1997 10.127-0.3713 18.828-0.5708 28.955h6.4785c0.0532-3.6793 0.3404-24.632 0.4553-27.043zm81.079 23.082c0.6577-2.6207-0.1038-22.136-0.8884-22.773-0.4331-0.3518-7.4834-1.3757-8.5312-1.5375v27.179c7.7098 0 8.5995 0.3988 9.4196-2.8685zm-16.346-22.117c-1.9866-1.6489-30.936-0.9777-59.179-0.692l-0.6184 24.619 60.714-0.5812c0.4382-15.612 0.8708-21.862-0.917-23.346zm313.47 17.519c0.1621-2.2015 1.8801-5.6454 2.8159-5.6454 0.5959 0 0.7793-0.4917 0.408-1.0927-0.9021-1.4601 0.8953-1.3993 2.3745 0.0797 1.8125 1.8123 2.6396-4.5013 1.9656-5.5935-0.3542-0.5734-0.1235-1.0424 0.5129-1.0424s1.1572-0.552 1.1572-1.2264c0-2.1492-1.9333 1.6395-4.2224 0.2256-0.9705-0.5997-0.3997-1.0793 1.811-1.5214 2.2126-0.4426 3.394-1.4365 3.7556-3.1592 0.0288-0.1381 105.1-395.36 166.97-649.91 278.3 0.1749 258.84 0.3981 267.02 1.6388 87.562 288.35 62.444 210.19 126.98 415.75 0.8623 2.7469 31.003 101.77 31.003 104.62v2.4525c18.389-0.0299 312.87-0.5087 331.26-0.5386 3.1531-3.6659 1.9995-2.3248 5.2739-6.1313 0-121.29 0.2893-125.54-1.9124-125.52-1.0515 0.011-2.4036 0.3781-3.0046 0.8195-2.0374 1.4972-0.6497 120.84-3.3347 123.64-1.7429 1.819-49.544 1.5785-322.27 1.7252-7.0688-14.498-1.7188-6.5273-42.228-135.49-74.706-237.82-115.86-385.65-119.26-386.8-1.7466-0.5905-265.08-1.0695-272.9-1.0879-140.54 547.2-123.89 481.54-129.38 504.26-17.008 70.33-43.04 145.04-35.433 140.33 0.5381-0.3325 0.9783-0.0841 0.9783 0.5527 0 1.552-1.8608 1.4734-2.8457-0.1202-0.6616-1.0706-3.6357 6.3364-3.6936 9.1991-0.0361 1.7794 1.9478 0.6891 2.4851-1.3658 0.3142-1.2019 1.3088-2.1853 2.2107-2.1853 2.949 0 0.7429 4.4268-2.5325 5.0819-2.7178 0.5437-3.2188 1.4355-5.3359 9.5049-1.2854 4.8978-2.3298 9.3558-2.322 9.9067 0.0164 1.0966 1.6206-0.1866 1.7075-1.3658l5e-4 1e-4zm-1328.5-3.009c9.6172-5.533 9.8311-14.458 10.48-21.211h48.728l2.5435 4.6108c4.2808 7.7606 15.852 12.412 24.104 9.6885 7.7002-2.5414 15.064-13.154 15.014-21.64-0.0459-7.9385-6.3047-17.213-13.432-19.906-7.3032-2.7594-17.518-0.7211-22.272 4.4445-3.2944 3.5792-8.4951 15.528-6.978 16.033 2.373 0.7909 1.1772 3.4911-1.5459 3.4911-1.502 0-2.7314-0.4236-2.7314-0.9414 0-1.7653 8.7959-19.717 10.492-21.413 1.5249-1.525 1.522-1.7546-0.0303-2.3502-6.416-2.4618-7.3745 10.374-19.611 23.612-2.4351-0.0024-32.588 0.2059-34.02-0.8359-0.6064-0.4414-2.4253-2.844-4.042-5.3389-10.383-16.028-38.215-12.549-40.932 10.394-0.5493 4.6376-0.1709 6.5262 2.3311 11.64 6.1377 12.544 19.776 16.7 31.905 9.7223l-7e-4 -4e-4zm-18.753-3.6787c-8.1069-3.3533-12.006-16.886-7.1567-24.838 4.9424-8.1055 16.567-9.7748 24.518-3.5205 9.1729 7.2152 8.3564 22.095-1.5015 27.366-3.9458 2.11-11.949 2.6111-15.86 0.9933h5e-4zm12.231-10.157c3.7446-4.1243 4.0835-8.0958 0.9565-11.223-5.4814-5.4811-15.191-2.3218-15.191 4.9427 1e-4 7.27 9.522 11.471 14.235 6.2801zm75.576-2.7724c-5.6592-5.2789-6.7388-11.444-3.3467-19.112 2.9126-6.5836 7.1699-8.8553 15.329-8.1788 5.1895 0.4303 6.5 1.032 9.5889 4.4028 6.543 7.1394 6.0039 17.271-1.2578 23.647-3.3052 2.9017-4.6987 3.3793-9.8628 3.3793-5.4502 0-6.4292-0.3878-10.45-4.1383l-5e-4 2e-4zm13.873-4.022c2.0933-1.5831 2.0928-1.606-0.0645-1.7479-1.8535-0.1217-1.7861-0.2552 0.4429-0.8789 3.7744-1.0562 5.1655-3.743 3.8599-7.4546-2.332-6.6317-11.512-7.2936-14.506-1.0459-1.875 3.9127-0.0654 8.8448 4.0713 11.093 3.605 1.9591 3.6509 1.9596 6.1963 0.0338l4e-4 5e-4zm127.15 18.033c2.4736-1.2617 5.7778-4.2817 7.4502-6.8096 2.7036-4.0847 3.0059-5.5033 3.0059-14.081 0-8.9952-0.1904-9.7784-3.3413-13.738-10.819-13.595-30.898-11.349-38.908 4.3531-8.2339 16.139 9.2378 41.783 31.793 30.276h4e-4zm-19.142-5.3828c-10.54-6.4276-12.068-19.486-3.1909-27.28 7.0879-6.2233 16.59-5.6475 23.44 1.4199 7.2271 7.4567 5.4106 20.325-3.6484 25.85-4.418 2.694-12.192 2.6991-16.601 0.011v-2e-4zm13.755-9.953c2.9834-2.9834 2.7432-7.1901-0.6011-10.534-6.4678-6.4673-16.115 2.7175-10.81 10.291 2.2242 3.1745 8.3492 3.3051 11.411 0.2431zm-482.17 9.5607c0.1284-0.0918 170.27-176.78 176.18-179.18 4.5361-1.8389 492.32-0.6007 630.14-2.0056 12.193-11.268 11.288-9.8649 11.288-17.719-7.0076 6.6273-4.6003 4.3507-11.888 11.244-16.289-0.175-30.28-0.3253-46.568-0.5004 16.221-0.2225 30.1-0.4128 46.321-0.6354 26.654-28.78 27.705-29.749 50.924-53.537 228.49 1.7915 265.47 1.9783 349.16 3.6166l-0.6099-30.346c-136.26-1.1064-143.5-1.291-359.9-1.6389-8.1121 9.5712-43.151 49.622-52.3 58.035-127 0.9752-115.25 1.0764-620.47 1.1548-33.282 38.016-167.32 173.34-167.61 173.36-0.3003 0.0262-2.0215-2.0112-3.8247-4.5287-2.0449-2.8545-5.54-5.7372-9.2876-7.6598-6.8052-3.491-7.8638-2.9733-19.487-2.2883l-0.7163-4.7749c-0.876-5.843-6.6079-12.65-12.21-14.498-2.1235-0.7007-6.9893-1.0747-10.814-0.8312-5.7056 0.3633-7.6958 1.0337-11.091 3.7349-5.0063 3.9829-9.0635 11.522-9.0308 16.782 0.0557 8.9706 7.5928 18.193 17.028 20.835l4.8008 1.344c0 31.772 0.5005 31.54 0.728 31.767 0.4009 0.4006 10.863 0.7285 23.25 0.7285 21.604 0 22.662-0.0994 25.97-2.4585h0.0012zm-29.485-3.362c-24.33-7.5677-17.3-43.444 8.7295-43.325 9.7871 0.0448 16.447 4.8046 20.587 14.713l1.645 3.9369c14.399-10.454 166.33-169.37 169.02-169.43 0.751-0.0164 1.3657 0.4615 1.3657 1.0625 0 0.6011 2.3359 1.1786 5.1899 1.2836l5.1904 0.1909c-9.2842 0.8534-4.8472-3.2517-49.788 42.026-121.68 122.59-122.21 128.05-127.9 128.05-2.5034 0-3.2319 0.5829-3.7524 3.0048-3.3286 15.473-15.702 23.028-30.287 18.491v2e-4zm24.015-30.338c-6.3906-12.279-24.237-12.786-32.095-0.9113-3.9404 5.9548-4.332 15.585-0.8242 20.284 3.458 4.632 7.6279 7.2772 12.731 8.0774 18.097 2.8373 27.232-13.914 20.188-27.45zm-51.001-4.5746c-1.4844-0.7511-3.8638-3.0795-5.2876-5.1741-5.4365-7.9987-0.916-19.293 8.7661-21.9 5.519-1.4862 13.038 1.6453 15.532 6.4688 6.4404 12.454-6.7871 26.79-19.011 20.605h5e-4zm13.898-7.9495c3.0288-3.4419 3.105-5.9261 0.291-9.5039-7.9121-10.058-22.14 3.4893-12.327 11.209 3.7431 2.9446 8.5434 2.2648 12.036-1.7048zm558.07-142.01c5.7251-0.0081 161.31-0.338 158.43 0.1259-7.3345 1.1788-25.997 0.8857-158.43-0.1259zm181.93 0.5111c-9.0583-0.6116-8.9531-0.6321 4.2795-0.8307 7.4619-0.1121 13.362-0.0273 13.112 0.1881-1.0895 0.9376-8.8014 1.2224-17.391 0.6426zm-325.84-1.8442c9.2515-0.5238 23.838 0.3944 6.2397 0.3889-7.2114 0-10.02-0.1791-6.2397-0.3929v4e-3zm832.81 173.59c-0.0398-6.6984 1.6682-5.6821-58.44-5.0627v7.6486c2.8184 0.0564 54.028 1.2192 56.545 0.6921 1.2415-0.2603 1.9062-1.4099 1.8953-3.278h4e-4zm86.986 0.6161c0.094-0.1185 0.4666-1.1989 0.8281-2.4008 1.406-4.676 0.321-4.8701-28.392-5.0759-15.044-0.1082-27.928 0.1588-28.629 0.5924-1.5469 0.9564-1.2754 5.3385-1.2754 7.1718 3.6399 0.0461 56.441 1.0088 57.468-0.2875h-2e-4zm251.03-3.2202c1.9724-1.8115 3.5698-5.8501 6.0706-15.348 1.8665-7.0894 3.3938-13.145 3.3938-13.458 0-0.3124-1.3523-0.4125-3.0049-0.222-3.5029 0.4028-3.2341 1.1881-9.3711 23.73-220.49-1.069-222.31-1.3552-222.77 0.8809-0.4705 2.2771 0.1565 5.0748 0.481 6.8757h222.52l2.6768-2.4585h-4e-4zm-325.98-8.468c0-1.8029-0.5486-3.278-1.2185-3.278-0.8247 0-1.0076-1.8551-0.5657-5.7365 0.7832-6.882 0.9382-16.912 1.0713-22.126-4.2849-0.4231-5.4873-0.5417-6.9355-0.6848v35.103c7.314 0 7.6487 0.4468 7.6487-3.278h-3e-4zm10.926-31.687c-4.8115 0-5.075-0.6992-5.8477 5.7365-0.3789 3.155-0.6934 9.5181-0.6987 14.14 0 12.833-2.1948 7.2281-2.1948 12.421 0 3.0415 0.7209 2.6672 8.7412 2.6672v-34.965zm65.34 3.4965c-2.0759-2.0759-58.072-1.8477-59.807 0.2439-1.6174 1.949-0.5791 12.797 0.2412 25.761h60.877c1e-4 -7.1077 0.3893-24.305-1.3112-26.005zm249.6-2.4039c-158.46 0-222.51-0.2102-224.03 1.3112-1.6831 1.6835-1.311 16.447-1.311 24.888 100.86 0.6576 111.18 0.677 218.2 1.1166 4.408-16.903 5.6255-21.581 7.1406-27.316zm-234.17 1.6536 8.406-8.1802c13.051-0.032 221.74-0.5436 234.79-0.5756 4.9631-3.54 6.8782-4.3267 8.6602-10.72 18.663-66.962 69.253-262.35 69.97-265.85 0.6389-3.1194-0.4353-4.8253-12.742-20.238-18.503-23.172-36.987-42.57-38.795-46.616-1.6926-3.7878-1.3711-34.633-1.415-60.31h-7.7349c0.4707 19.977 1.0098 42.85 1.4805 62.827 2.7266 3.0685 52.146 59.283 52.146 63.356 0 4.0996-69.021 265.54-70.955 269.14-0.8892 1.6544-51.026 1.3868-237.82 1.2543-11.413 11.693-17.924 17.828-17.924 21.228 0 4.7449 2.9451 3.4332 11.935-5.3152l-5e-4 -1e-4zm245.69 1.3513c0.616-0.7512 1.291-2.5951 1.4995-4.0975 0.3306-2.3779-0.0798-2.776-3.1711-3.074-4.9319-0.4755-2.8179 0.7747-4.24 6.0789-0.5542 2.0684-0.2263 2.4584 2.0664 2.4584 1.4988 0 3.229-0.6146 3.845-1.3657h2e-4zm-348.86-14.478c-26.847-1.3922-29.317-1.691-59.003-1.0927l-0.6741 9.3229 59.677-0.5817v-7.6485zm88.505-2.1853c-20.184-1.5953-19.846-1.6536-60.096-1.0927l-0.6719 9.2875h61.446c-0.2371-2.866-0.4409-5.3287-0.678-8.1948zm-1311.8-5.9241c13.243-13.8 17.009-16.626 20.431-15.326 5.1206 1.947 9.1191 1.222 12.631-2.2896 3.0752-3.0753 3.2876-3.7787 2.8252-9.3585-0.6465-7.7882-3.8901-11.349-11.077-12.159-4.6226-0.521-5.3184-0.2632-8.8696 3.2885-3.1128 3.1124-3.854 4.6863-3.854 8.1808 0 4.0459-0.8687 5.2327-13.385 18.279-7.3613 7.6735-13.554 14.397-13.762 14.94-0.5601 1.4712 2.0327 4.1931 3.9946 4.1931 0.9409 0 5.9209-4.3867 11.066-9.7483v1e-4zm21.463-23.376c-2.3213-1.6973-1.9648-4.9373 0.7295-6.6342 4.083-2.5714 8.4478 3.7869 4.5532 6.6342-1.0811 0.791-2.27 1.438-2.6411 1.438-0.3716 0-1.5601-0.647-2.6416-1.438zm1201 10.267c0.2302-9.2476-0.0525-12.708-1.0925-13.368-1.8511-1.1747-53.9-0.9222-56.285-0.9237-1.2085 8.817-1.3896 8.7775-1.3896 27.352 18.577-0.1851 39.879-0.3971 58.456-0.5822l0.3105-12.478 3e-4 -3e-4zm344.83 7.2877c2.5354-8.7759 66.242-247.55 66.242-256.74 0-1.4882-1.561-4.8691-3.4685-7.5134-4.8542-6.7283-28.172-35.98-47.886-55.63 0-31.038 0.1162-33.995-1.416-67.184l-7.2114-3.2491c-18.692-8.4213-29.706-28.853-26.539-49.229 6.4863-41.721 61.695-52.902 84.371-17.817 16.376 25.337 6.4609 61.007-29.092 70.807 0.5439 37.661 0.5981 59.177 2.2693 61.769 0.7747 1.2019 5.4749 6.6106 10.445 12.019 13.152 14.313 24.99 30.055 26.027 30.032 4.6436-0.1013 92.579-376.25 92.617-376.4 166.54-1.4412 176.92-1.3674 322.47-1.6389 2.0876-10.437 1.3328-40.361 0.6721-45.171-0.6355-4.6366-1.2415-5.4517-7.4316-9.9963-12.667-9.2997-19.03-20.965-20.022-36.708-2.2505-35.682 34.222-60.867 68.499-44.657 17.322 8.1923 28.56 29.772 25.409 48.79-2.4443 14.752-12.718 29.675-24.76 35.968l-6.0315 3.1515v48.582c17.298 0.2054 32.134 0.3817 49.432 0.5872 0.041 0.1372 45.974 153.37 47.268 157.34 304.76 0.6674 284.05 0.433 289.91-0.6095 0.5693-87.714 1.0867-130.1-0.4607-132.76-1.6521-2.8403-15.319-17.142-18.415-20.433-0.1589-5.4434-1.0435-28.402-0.1157-32.096 0.928-3.6976 17.806-20.552 21.675-24.544l-0.6919-7.3237c-1.8008-19.07 3.6262-11.228-20.375-36.082l0.0698-37.894 23.903-24.585h37.567c9.4304 9.3235 17.534 17.335 26.965 26.658v39.449c-11.062 12.059-7.1262 7.7686-18.575 20.249v16.899c5.4092 5.9232 10.057 11.013 15.466 16.936h110.76l14.792-13.351c-6e-4 -0.1266-0.3802-117.35-1.2716-118.24-0.2803-0.28-49.432-0.6555-1250.2-0.7374-10.117 9.845-6.6333 6.4548-17.164 16.703-13.176-0.7433-13.164-0.3771-13.163-0.1797 0 0.3097 2.3599 1.4004 5.2417 2.4238 10.619 3.7715 22.313 16.324 25.56 27.437 2.0779 7.1115 1.51 18.881-1.2612 26.158-2.9785 7.8204-11.867 17.718-19.782 22.025-6.4277 3.4987-18.129 4.9917-23.753 3.031-2.8848-1.0056-3.571-0.8014-5.9534 1.7722-3.1514 3.4043-27.968 35.42-35.228 47.707 1.5103 450.78 2.6047 272.72 1.5073 538.44-0.365 88.252-0.218 100.42 1.2244 101.35 2.26 1.4622 164.96 0.903 194.6 0.8744 4.7266 3.6053 10.679 7.4528 9.0703 13.863-1.4155 5.6399 2.8447 5.3944-103.77 5.9785-54.846 0.3005-100.09 0.9196-100.55 1.3756-0.7937 0.7943-2.6775 23.992-0.3062 25.52 3.9211 2.5277 199.76 2.521 229.16 2.606l1.6575-5.7365h-1e-3zm-64.457-55.856c-34.964-8.7726-39.85-59.02-9.5249-76.792 2.6042-1.5262 4.7349-3.0062 4.7349-3.2892 0-0.6823-47.283-70.732-48.623-72.721l0.7241-308.59-4.2703-1.2793c-5.9717-1.7892-16.424-8.797-21.434-14.37-5.4529-6.0664-10.401-16.72-11.941-25.708-4.3586-25.444 14.514-50.388 41.814-55.267 29.19-5.2164 56.863 17.975 56.801 47.602-0.0469 22.331-12.297 38.736-36.116 48.365-4.7253 1.9105-4.2725-9.8571-4.2725 306.26 51.293 74.833 50.427 74.42 57.066 77.679 8.8367 4.3381 16.619 11.978 20.752 20.372 2.9216 5.934 3.657 8.8658 3.9771 15.853 0.4807 10.497-1.0732 16.424-6.5144 24.842-8.6604 13.399-27.711 20.916-43.175 17.037h1e-4zm23.368-8.9626c7.489-3.7321 15.935-13.074 18.325-20.268 2.3557-7.0929 1.7327-18.076-1.4316-25.23-10.803-24.422-51.038-28.978-61.581 4.9844-2.7637 8.9033-2.3315 15.542 1.5637 24.014 3.7341 8.1223 7.5833 12.17 15.185 15.969 9.0524 4.5234 19.527 4.7223 27.939 0.5304zm-21.962-5.5187c-10.194-3.1321-18.231-14.616-18.204-26.01 0.0217-9.0134 7.5137-20.075 16.856-24.886 16.353-8.4214 42.236 8.4076 34.944 32.965-2.3562 7.9342-10.883 16.584-18.154 18.415-6.4277 1.6185-8.8464 1.5427-15.442-0.4836h-4e-4zm27.676-22.165-14.751-0.6461c0.7695-21.46 1.1526-21.998-1.5554-23.447-1.2932-0.692-3.3162-0.9521-4.4954-0.5779-3.8545 1.2235-0.6267 7.0521-3.5227 24.572-13.572 0-15.011-0.3091-15.011 2.0959 0 6.5245-0.6465 5.5526 39.335 5.5526v-7.5486zm-20.452-44.728c2.8589-1.1295-4.7363-9.5618-47.343-73.605 5e-4 -1.0415 0.1118-302.48 0.0767-304.35-0.0317-1.7192-5.4934-1.3658-7.6746-1.3658-1e-3 83.228 0.071 80.545-1.4497 305.46 55.495 81.366 50.896 76.026 56.39 73.856v-2e-4zm-7.6999-422.58c2.8323-17.094-6.5076-35.869-21.374-42.964-28.518-13.61-60.867 3.465-62.771 33.134-0.8726 13.598 3.8542 25.509 13.824 34.834 6.1365 5.7401 9.9597 7.8821 17.87 10.012 22.1 5.9497 48.025-8.2968 52.452-35.015zm-56.71 25.833c-17.708-8.9556-25.532-29.763-17.423-46.336 13.102-26.781 52.285-26.687 64.264 0.1545 3.5217 7.8917 3.3635 19.723-0.3706 27.688-6.4556 13.77-16.474 20.705-30.992 21.452-8.0779 0.4156-9.2527 0.1912-15.479-2.9579l2e-4 2e-4zm22.328-11.575c18.692-7.8102 17.508-34.299-1.8223-40.771-12.167-4.0737-25.488 4.2458-27.968 17.468-2.914 15.534 14.946 29.505 29.79 23.303zm-16.903-5.9132c-11.369-6.9321-10.057-30.092 8.9612-30.092 21.088 0 22.058 32.225 0 32.225-3.4954 0-6.7234-0.7683-8.9612-2.133zm13.254-8.3171c2.2461-2.2461 2.1963-7.9614-0.0918-10.489-4.0161-4.4377-11.304-0.9902-11.304 5.3472 0 5.4928 7.6099 8.9269 11.395 5.1421h3e-4zm781.16-35.429c-13.852-4.5378-25.197-15.961-29.907-30.114-2.0532-6.1699-2.3599-8.9364-1.894-17.101 2.2551-39.57 48.688-56.903 75.739-29.885 6.3564 6.3486 11.929 16.91 13.741 26.039 3.8711 19.513-8.7195 42.739-27.023 49.851-9.2378 3.589-21.871 4.0876-30.656 1.21h-3e-4zm28.134-8.9515c29.978-13.724 27.902-56.548 1.978-69.773-9.7122-4.9547-25.064-4.6339-34.919 0.7297-6.7705 3.6849-10.874 8.3967-15.565 17.872-3.0652 6.1915-3.5046 8.1782-3.5037 15.844 7e-4 7.3049 0.5081 9.8479 3.0481 15.274 5.5522 11.86 11.73 17.948 21.899 21.582 8.5401 3.0514 20.514 1.7466 27.063-1.5277zm-28.033-6.7583c-20.663-9.6221-24.386-43.752-0.1606-56.028 28.817-14.602 57.522 23.227 35.506 48.239-8.9998 10.224-23.332 13.382-35.346 7.7886v1e-4zm23.834-10.462c14.58-9.2467 12.701-31.164-3.2512-37.906-13.447-5.6832-28.717 5.1409-28.717 20.356 0 12.42 8.4609 20.628 21.366 20.728 4.2846 0.0328 6.6608-0.6793 10.602-3.1788zm-17.218-3.361c-6.1101-3.0897-8.5496-6.9011-9.0762-14.18-0.3909-5.4032-0.0974-6.5214 2.5349-9.6495 1.6375-1.9459 4.4753-4.3129 6.3059-5.2595 4.1382-2.1399 11.432-1.4868 15.387 1.3779 3.332 2.4132 7.2556 9.7972 7.2297 13.606-0.0327 4.8059-4.5625 11.227-9.7786 13.86-5.9694 3.013-7.0883 3.035-12.602 0.2465zm10.162-10.026c3.1296-3.1296 0.1267-10.708-4.2432-10.708-2.8503 0-5.3721 3.0115-5.3721 6.4154 1e-4 7.2247 7.901 6.0063 9.6153 4.2926zm-1029.8 622.76c-0.6284-16.765-1.0303-18.251-4.947-18.285-1.7393-0.0154-1.9121 1.5079-1.9121 16.839 0 18.053-0.1484 17.58 5.6543 17.982 1.6621 0.1151 1.7727-1.4 1.2048-16.536v2e-4zm11.716-0.8194v-16.39h-6.5559c-0.0244 4.0867 0.0867 25.069-1.0181 27.862-2.1619 5.4639 2.5271 4.917 7.5742 4.917v-16.39h-2e-4zm66.413 3.5511-0.3079-12.839c-8.6243-1.2954-5.7859-1.4646-61.733-1.6389 0.2422 23.078 0.3857 22.243 1.2644 27.316h61.084l-0.3079-12.839 4e-4 -2e-4zm-89.359-27.589h-57.91v8.7412h57.91v-8.7412zm312.28 5.2531c0.2231-1.1597-0.8711-2.4834-2.9358-3.551-2.9153-1.5074-15.659-1.7021-111.43-1.7021-197.68 0-32.967-0.8143-169.51-2.827v9.3376c4.4283 0.0625 283.18 2.3154 283.87-1.2575zm1035.5-6.7996c2.0356-0.8506 4.2322-2.5392 4.8818-3.7524 1.647-3.0774 1.6628-143.3 0.0164-143.3-0.6406 0-2.1157 0.509-3.2781 1.1311-2.0552 1.0999-2.1135 3.0262-2.1135 69.711 0 51.883-0.3193 68.899-1.311 69.891-1.856 1.8562-38.547 0.8402-225.23 2.0377-104.74 0.672-113.27 0.8639-113.27 2.5494 0 1.0024 0.3279 2.1506 0.7285 2.5511 0.668 0.668 333.56 1.6967 339.58-0.8179l-5e-4 2e-4zm-1257.6-38.335c-22.266-0.2094-61.707-0.736-61.884 0.2561-0.1956 1.0999-0.5459 28.218-0.5686 29.792h63.06c-0.3728-18.434-0.2351-11.628-0.608-30.048zm-84.68-7.1021c0 21.41 0.1226 23.931-1.4119 35.127 4.5522-0.4346 2.8611-0.2731 7.4214-0.7086-0.6309-38.586 1.0632-34.418-6.0095-34.418zm18.184 29.775c-0.3723-2.2535-0.6826-9.8223-0.6892-16.819-0.011-10.86-0.2786-12.824-1.8337-13.421-1.002-0.3845-2.1702-0.3141-2.5959 0.1561-1.0178 1.1245-1.9072 32.339-1.9734 34.181 8.0443 0 7.8763 0.6505 7.0922-4.0974zm-1207.9-5.8624c8.7236-4.3618 13.781-14.784 11.69-24.091-1.7231-7.6698-3.4546-8.9307-11.311-17.624-0.1719-19.614-0.5322-60.71-0.6328-72.178 10.077-10.42 12.475-12.145 12.46-21.464-0.0229-14.834-10.761-23.659-26.008-21.372-12.085 1.8123-20.278 16.773-15.478 28.262 1.7788 4.2568 9.147 10.439 12.722 13.653 0 4.8594-1e-3 67.886-1e-3 72.874l-5.5942 4.8174c-11.496 9.9001-12.964 22.399-3.8179 32.492 7.0366 7.7648 16.373 9.4297 25.97 4.6312l1e-3 -1e-4zm-16.263-5.8646c-10.412-4.5262-11.935-23.506 4.2827-28.308 2.1558-0.6384 1.8569-6.5615 2.0117-86.868-6.9614-3.0792-13.144-5.1151-13.144-14.868 0-19.43 28.409-17.315 28.409 1.2017 0 3.9185-3.4746 9.2864-7.5728 11.699l-3.3535 1.974c0 35.626-1.1421 81.498-0.4121 84.589 0.2881 1.2195 1.9429 2.8452 3.6763 3.6127 4.2896 1.8987 8.1099 9.7943 7.0845 14.642-2.1235 10.038-10.885 16.717-20.984 12.326l0.0034 1e-4zm11.654-16.251c-1.2412-1.5776-1.9712-3.3295-1.623-3.8928 0.8623-1.3951-3.2549-2.5851-5.9663-1.7245-4.3584 1.3833-6.9697 10.24-4.0854 13.856 7.242 9.0781 18.792 0.8111 11.675-8.2387zm-5.8355 5.6848c0.3647-0.5901-0.3701-1.343-1.6323-1.6731-2.5562-0.6686-3.022-2.0895-0.9292-2.8361 1.9575-0.6987 7.3755 2.2695 7.3755 4.0409 0 3.244-6.1133 2.572-4.814 0.4683zm7.5811-122.36c-4.5894-3.8492-7.9785-9.9205-12.095-1.9585-2.2847 4.4182-1.9849 7.2834 1.0835 10.352 8.2836 8.2848 15.032-5.0227 11.012-8.3932zm-7.5025 5.976c-1.1914-1.1913-0.8262-8.0126 0.4292-8.0126 0.6362 0 0.8115 0.5591 0.3887 1.2426-0.4268 0.6909 0.3423 2.0797 1.7319 3.1279 4.5796 3.454-0.6978 5.4935-2.5493 3.6421h-5e-4zm-58.162 88.687 0.0688-25.131c-5.0273-0.4161-3.1714-0.2626-8.1948-0.6782 0 1.9044-0.25 49.779 0.7798 50.81 1.0015 1.002 6.3057 0.2275 7.2769 0.1304l0.0688-25.131h5e-4zm134.76 22.894c17.205-7.1886 17.431-31.084 2.2085-38.853-7.4355-3.7949-18.606-1.8726-24.04 4.1375-7.2651 8.0336-6.5337 23.401 1.4531 30.538 6.5522 5.8546 13.135 7.2045 20.378 4.1781h-4e-4zm-15.134-10.09c-8.939-7.9867-1.8755-24.421 9.7666-22.725 8.3721 1.2196 12.69 8.4465 10.138 16.965-2.6724 8.9198-13.017 11.913-19.904 5.7596v-1e-4zm1131.9 6.9723c1.5801-0.9767 1.2671-7.6018 1.2671-9.4316l-57.364 0.5825c-0.1384 1.6844-0.812 8.1113-0.2134 9.6757 0.5322 1.3919 53.99 0.6071 56.31-0.8266zm91.278-1.2479c1.5225-3.9669 0.709-7.0975-2.1235-8.1746-1.5486-0.5887-14.976-1.0656-30.009-1.0656-25.78 0-27.266 0.1108-28.338 2.1135-1.3196 2.4655-1.1311 5.6425-1.1311 7.6531 58.554 1.342 60.822 1.5062 61.602-0.5265h-3e-4zm2889.6-13.762c0-3.9851-0.466-5.5596-1.7969-6.0703-4.002-1.5355-6.3989 6.9689-3.0173 10.706 2.9009 3.2054 4.8142 1.3632 4.8142-4.6353zm-204.97 1.7868c0.898-3.578-1.0629-8.1915-3.4819-8.1915-4.7023 0-6.2164 6.0485-2.4557 9.8091 2.5874 2.5874 5.0505 1.9165 5.9375-1.6176h1e-4zm23.816-0.5007c0.7009-4.7758-0.8741-7.9058-3.7712-7.4946-1.9086 0.2711-2.5442 1.175-2.8152 4.0034-0.653 6.8155 5.6112 10.136 6.5864 3.4912zm12.296-0.7472c0.796-4.2428-0.6816-6.9436-3.7988-6.9436-3.4324 0-4.5621 7.2841-1.5904 10.256 2.4134 2.4134 4.5631 1.0923 5.3892-3.3121zm10.776 4.2561c1.813-3.0804 1.7686-7.7578-0.095-10.06-1.8998-2.3462-2.1341-2.3854-3.8716-0.6478-2.1365 2.1365-2.4609 8.2935-0.5383 10.216 1.4762 1.4762 3.7782 1.7274 4.5054 0.4917h-5e-4zm13.188-0.9089c1.2086-3.1494 0.688-7.9244-1.0538-9.6664-0.9444-0.9443-1.8927-1.717-2.1073-1.717-1.4095 0-3.8243 3.8893-3.8243 6.1595 0 5.75 5.2709 9.6919 6.9854 5.2239zm12.02-1.7586c2.1098-5.968-2.2993-12.339-5.5051-7.9547-2.009 2.7477-1.8669 7.6215 0.2849 9.7733 2.2625 2.2626 3.9902 1.6606 5.2203-1.8187v1e-4zm11.643 1.1999c1.2809-2.3933 0.5914-7.0911-1.3916-9.4803-0.9314-1.1224-1.5633-1.036-3.1901 0.4364-2.5151 2.2761-2.6191 6.6823-0.2203 9.3329 2.332 2.5768 3.2995 2.5186 4.802-0.289zm12.394 0.5587c1.8981-4.9462 0.2563-10.291-3.1611-10.291-2.6539 0-3.8243 1.8425-3.8243 6.0209 0 4.6543 5.5386 8.0399 6.9854 4.2699zm11.551-0.3852c1.5757-2.9442 1.4106-6.9204-0.3896-9.3823-2.2358-3.0576-5.0352-0.3582-5.0352 4.8551 0 5.9339 3.2295 8.629 5.4248 4.5272zm12.604-3.896c0-4.5027-0.3618-5.5031-2.113-5.8402-2.8517-0.5493-5.1062 2.7729-4.2686 6.29 0.9144 3.8397 2.5558 5.7203 4.6422 5.3186 1.7652-0.34 1.7394-3.3438 1.7394-5.7684zm11.902 4.2812c0.9504-2.4769 0.7879-7.3096-0.3038-9.0325-1.4451-2.2803-4.8841-1.0129-6.0205 2.2188-1.7693 5.0308 4.441 11.722 6.3243 6.8137zm12.136-4.2812c0-4.4492-0.3721-5.505-2.0544-5.829-2.5536-0.4918-3.9166 1.5443-3.9385 5.8834-0.0186 3.7399 1.8353 6.1794 4.3312 5.6987 1.2215-0.2352 1.6617-1.7594 1.6617-5.7533v2e-4zm13.07 2.9214c0.3732-1.6985 0.1785-4.4027-0.4324-6.0096-1.9516-5.1329-6.628-2.9542-6.628 3.0883-1e-4 6.1932 5.8135 8.5987 7.0604 2.9213zm10.968-2.9214c0-4.4492-0.3721-5.505-2.0544-5.829-2.5536-0.4918-3.9166 1.5443-3.9384 5.8834-0.0186 3.7399 1.8353 6.1794 4.3312 5.6987 1.2215-0.2352 1.6617-1.7594 1.6617-5.7533l-1e-4 2e-4zm12.925 3.6618c0.8618-3.2954-0.382-8.6561-2.1673-9.3411-3.8193-1.4658-6.6703 7.1439-3.4365 10.378 2.0648 2.065 4.9315 1.5347 5.6038-1.0366zm11.822-0.3032c1.4403-3.1611 0.4212-8.1202-1.8476-8.9908-2.5151-0.9651-4.8705 1.7175-4.8705 5.5476 1e-4 5.9802 4.5091 8.2912 6.7181 3.4432zm24.306 0.9226c1.09-2.8405 0.7565-6.4675-0.7892-8.5813-1.2034-1.646-1.8586-1.7687-3.8243-0.7167-2.6702 1.429-3.3274 7.4485-1.0608 9.7151 1.851 1.8511 4.8895 1.6278 5.6741-0.4172l2e-4 1e-4zm12.019 0c2.0164-5.2544-0.5555-11.315-4.2073-9.9135-2.2688 0.8706-3.2879 5.8297-1.8476 8.9908 1.3618 2.9888 5.0466 3.5502 6.0549 0.9227zm12.644-0.3852c1.6311-3.0476 1.405-4.9547-0.929-7.837-1.766-2.181-2.3118-2.3351-3.8243-1.0798-0.9703 0.8053-1.7642 3.0265-1.7642 4.936 1e-4 5.6348 4.2448 8.2274 6.5175 3.9808zm12.74-0.7714c1.0136-4.0385-0.795-8.5878-3.4141-8.5878-2.932 0-4.6311 5.0085-2.9505 8.6971 1.7116 3.7564 5.4103 3.6929 6.3646-0.1093zm11.556 0.1093c1.6806-3.6886-0.0186-8.6971-2.9505-8.6971-2.932 0-4.6311 5.0085-2.9505 8.6971 0.6956 1.5266 2.0232 2.7756 2.9505 2.7756 0.9273 1e-4 2.2549-1.249 2.9505-2.7756zm13.02-0.2291c0.8845-2.2811 0.802-3.6627-0.3421-5.7365-1.9443-3.5238-4.2029-3.4705-6.2335 0.1472-1.4496 2.5826-1.4232 3.1729 0.2564 5.7365 2.4188 3.6912 4.8528 3.6345 6.3192-0.1472zm11.833 1.4371c1.783-2.1483 1.01-8.339-1.215-9.7317-2.6401-1.6525-5.2816 0.9509-5.2816 5.205 0 5.3682 3.6738 7.9281 6.4966 4.5267zm10.322-0.1582c0.6143-1.6008-0.0842-6.4163-1.2231-8.4342-0.8082-1.4318-3.5759 1.517-3.5759 3.8098 0 3.0146 2.9998 9.3135 4.799 4.6244zm19.18 0.1582c1.8402-2.2174 0.9802-8.3641-1.3706-9.795-4.0145-2.4435-7.0134 6.0414-3.4091 9.6456 2.1247 2.1248 3.1146 2.1558 4.7797 0.1494zm11.718 0.7206c4.0127-2.5525 2.2219-11.591-2.1726-10.965-1.9005 0.2705-2.4542 1.1866-2.7282 4.5132-0.4528 5.4982 1.7797 8.4374 4.9008 6.452zm12.32-0.7206c1.8402-2.2174 0.9802-8.3641-1.3706-9.795-1.5777-0.9603-2.2936-0.775-3.5511 0.9182-2.0809 2.8026-1.9931 5.9862 0.2334 8.4464 2.1797 2.4086 2.9853 2.4825 4.6883 0.4305v-1e-4zm11.86 0.2565c1.5099-1.51 1.7199-7.2786 0.3441-9.4497-2.349-3.7065-9.0981 1.9928-5.1984 7.9447 2.0606 3.1449 2.9413 3.418 4.8543 1.505zm12.668-2.1758c1.3999-3.9601 0.011-8.5322-2.5979-8.5322-4.0486 0-5.8527 7.1206-2.6224 10.351 2.2625 2.2626 3.9901 1.6606 5.2202-1.8187l1e-4 1e-4zm-407.11 1.0832c3.1786-3.1786 0.3432-11.308-3.6779-10.544-1.5696 0.2979-2.2015 1.472-2.4567 4.5656-0.4961 6.011 2.8456 9.2678 6.1346 5.9788zm12.854-1.3092c1.548-6.1677-1.8333-11.376-5.4414-8.3821-2.0361 1.6898-2.3008 7.8099-0.4194 9.6914 2.1833 2.1833 5.1505 1.5204 5.8608-1.3092v-1e-4zm11.184 1.3092c1.6108-1.6108 1.6978-5.7588 0.1801-8.5945-1.3714-2.5625-2.5381-2.6588-4.8005-0.3965-4.056 4.0561-0.2097 13.82 4.6204 8.991zm25.512-1.3399c2.3569-5.173-1.517-11.232-5.2176-8.1605-1.5544 1.2899-1.9947 6.067-0.8373 9.0831 1.0084 2.6276 4.693 2.066 6.0548-0.9226h1e-4zm298.27 0.0579c0.8737-1.9175 0.8301-3.2505-0.1673-5.1138-1.2173-2.2749-1.4767-2.3457-2.6608-0.7262-1.8531 2.5344-0.5713 13.301 2.8281 5.84zm71.085-5.6015c-2.9331-6.4373-8.6957-0.3198-6.0916 6.4666 1.6646 4.3374 8.9319-0.2324 6.0916-6.4666zm11.274 2.7316c0-4.5162-0.2226-4.9169-2.7316-4.9169-3.0003 0-4.0252 2.8834-2.7835 7.8306 0.5036 2.0067 1.2912 2.6039 3.0953 2.3474 2.0886-0.2971 2.4199-1.0173 2.4198-5.2611zm11.254 4.1521c1.843-1.8429 1.6335-7.9875-0.3278-9.6154-6.2363-5.1759-6.9956 16.939 0.3278 9.6154zm12.238-1.4204c1.8541-4.8767-1.7607-10.814-4.9648-8.1552-1.5954 1.324-2.2296 8.7915-0.8626 10.158 1.6651 1.6653 4.8487 0.571 5.8274-2.003zm11.57 0c1.0581-4.2162-0.337-8.1949-2.8735-8.1949-1.2734 0-2.7082 1.1417-3.4325 2.7317-2.9315 6.4339 4.774 11.567 6.306 5.4632zm7.5098-8.5742c-3.6313 1.3934-3.2898 11.306 0.3897 11.306 7.6459 0 4.3643-13.13-0.3897-11.306zm15.665 6.2944c0.5217-7.118-4.0096-9.3046-6.3772-3.0773-1.4981 3.9403 0.501 8.3304 3.5932 7.8912 2.0231-0.2872 2.5146-1.137 2.784-4.8139zm10.927 3.7001c1.8204-1.8204 1.6434-7.9794-0.2754-9.5719-2.2834-1.895-5.9426-0.3534-6.7445 2.8416-1.4234 5.6715 3.4277 10.322 7.0199 6.7302v1e-4zm159.2-83.369c-2.7149 0.0115-73.23 0.1113-75.394 0.9418-1.4137 0.5425-1.6381 6.0109-1.6381 39.909 0 21.604 0.2984 40.058 0.6632 41.009 0.7653 1.9944 8.2867 1.7283 76.941 1.7283-0.0692-10.112-0.5026-73.408-0.5723-83.588zm-71.569 5.2568c7.9619-0.3641 57.012-3.252 62.038 0.2684 2.8647 2.0065 2.4284 0.6501 2.4284 71.465-4.2914 0.8689-0.3008 0.8977-64.466 2.2565v-73.99zm55.003 67.867c1.0903-0.4185 2.3865-1.8236 2.8803-3.1226 0.8102-2.1306 0.8851-56.688-1.9178-59.894-1.3503-1.5447-3.4865-1.9121-11.118-1.9121-5.8901 0-9.9395 0.4935-10.757 1.3112-0.9566 0.9565-1.3112 9.4885-1.3112 31.553 0 31.705 0 31.705 4.9169 33.063 2.6676 0.7371 14.574 0.0503 17.306-0.9987v4e-4zm-34.562-63.563c-1.6274-2.1366-4.5302-1.613-7.279 1.313-2.4779 2.6377-2.5194 3.1006-2.705 30.176-0.1755 25.61-0.0448 27.68 1.9065 30.161 2.4132 3.0679 4.3177 2.4058 7.851 1.9965 0.1127-5.5382 1.6362-61.796 0.2265-63.647zm-4653.5 30.941c0.2246-28.935-0.0151-37.269-1.0923-37.953-1.7476-1.1093-64.19-1.1969-64.26-0.0907-0.3687 5.9001-1.5811 58.663 0.2285 75.698 7.8818-0.0703 56.936-0.5079 64.835-0.5785l0.2881-37.076v4e-4zm-57.263 27.227c-0.4614-1.2026 0.147-54.287 0.6543-57.075 0.0269-0.1501 10.81-0.2732 23.96-0.2732 21.891 0 23.944 0.1615 24.311 1.9121 0.5264 2.5105-0.626 53.258-0.6919 56.545-42.172 0.5222-47.492 0.8252-48.234-1.1085v-1e-4zm41.6-7.7106c2.5444-2.5444 2.5444-37.728 0-40.272-1.3955-1.3956-4.5493-1.717-16.846-1.717-8.3213 0-15.908 0.2983-16.858 0.6633-1.4907 0.572-1.7285 3.4744-1.7285 21.124 0 11.254 0.3276 20.789 0.728 21.19 0.4009 0.4008 7.9868 0.7285 16.858 0.7285 13.206 0 16.441-0.3111 17.847-1.7169zm1326 3.4204c0-8.9348-0.4424-14.96-1.1299-15.384-4.8689-3.009-29.044 0.1719-350.16 1.7311-3.7661 3.7496-2.3884 2.3778-6.2988 6.2714l-5.0454-2.7097c-8.78-4.7155-17.139-1.983-21.062 6.8849-3.8784 8.7675 0.9717 12.776 6.0063 17.347-1.8359-2.7188-3.6489-4.6066-3.6489-10.707 0-4.4056 0.541-5.8452 3.1941-8.498 5.1973-5.1974 14.198-4.0642 17.932 2.2578 2.2896 3.876 2.3242 8.978 0.0906 13.298-1.8264 3.5322-1.0242 3.5157 3.2805-0.0677 1.9375-1.6127 2.0449-1.6017 1.4087 0.1432-0.792 2.1732 7.1873 2.2858 196.91 2.7786 162.13 0.4208 62.931 1.3419 158.51 1.3419v-14.686 3e-4zm89.598-16.669-11.643-0.7123c-20.642-1.2629-49.56-0.8854-50.039 0.6534-0.5525 1.774-1.666 28.267-1.811 31.414h63.493c-6e-4 -19.276-3e-4 -12.117-3e-4 -31.355zm-78.964 28.896c1.4092-1.8033 0.2024-27.942 0.0183-33.599-2.3877 0.0076-4.4395 0.0142-6.8269 0.0219-0.3684 21.482-0.2317 13.505-0.5989 34.944 2.0796 0 6.1357 0.2629 7.4075-1.3658v-0.0013zm11.22-34.692c-5.7466 0-5.4631-1.5957-5.4631 10.873 0 20.319-4.0935 21.087-0.4128 23.779 1.1196 0.8187 3.0229 1.3472 4.229 1.1742 2.9381-0.4211 2.224 0.2487 1.6469-35.826zm-386.8 31.687c3.0388-3.0389 2.8005-7.1951-0.5383-9.3827-5.5593-3.6425-11.713 1.3849-9.3391 7.6292 1.6528 4.3473 6.4346 5.1964 9.8774 1.7535zm-884.06-26.714c4.0488-2.0939 9.7681-8.6995 10.473-12.095 0.3086-1.4915 0.8223-3.9594 1.1396-5.4841 1.3369-6.4191-3.856-16.286-10.268-19.512-4.3008-2.1637-12.384-2.9104-17.177-1.5868-11.82 3.2637-17.275 20.786-9.8853 31.752 5.0684 7.5208 17.891 10.974 25.718 6.927h-4e-4zm1248.2-9.8268c-0.1458-2.3693-0.6375-4.65-1.0928-5.0685-1.0969-1.0081-56.222-2.2552-58.192-2.3083v11.096c48.204 0.6736 49.357 0.6735 59.55 0.5879l-0.2649-4.3076v2e-4zm90.408-1.1557v-4.9169c-39.383-0.3752-47.318-0.4564-61.735-0.5468l-0.666 10.38h62.401v-4.9169 5e-4zm-748.45-2.7403c5.0332-2.5679 7.4077-6.3961 9.1348-8.7324h157.07c15.553-16.332 31.057-31.687 26.437-31.687-0.3237 0-1.8525 1.0853-27.126 25.677-149.77 0.6082-140.79 0.3221-158.43-1.7817-6.7515 9.4065-11.311 16.202-20.926 11.101-3.4888-1.8507-5.3989-3.9095-7.4526-8.0306-3.9253-7.8765-3.6343-11.053 1.4805-16.168 3.6616-3.6617 4.9102-4.2422 9.124-4.2422 5.4995 0 12.296 4.1031 14.895 8.9915 0.8706 1.6383 2.7871 3.0637 4.6089 3.4281 4.1187 0.8237 147.37 0.859 153.43 0.8689 84.168-89.253 82.135-86.87 94.25-98.737 32.845 3.3492 378.66 4.7769 402.36 4.5923 0-27.387 0.3743-27.199-2.4585-27.774-4.5161-0.9166-381.7-4.6594-410.54-2.2743-55.972 60.423-52.594 57.363-68.811 74.34-13.394 14.022-29.227 30.997-39.541 42.027h-125.44c-3.4731-3.4733-9.1289-9.6191-14.952-12.195-13.807-6.1075-27.719 9.302-27.719 21.316 0 14.984 17.467 25.984 30.612 19.279h-0.0015zm-442.63-5.4074c2.2476-1.2026 1.8916-3.2638 0.8901-38.836 5.3569 4.7853-7.5171 4.2509 169.96 3.951 106.47-0.1797 165.61-0.6611 166.32-1.3538 0.6011-0.5912 1.0928-5.1257 1.0928-10.077 0-9.7711 1.3926-13.276 6.6416-16.715 6.0225-3.946 17.452-1.1583 20.656 5.0381 2.3555 4.5549 2.1147 12.696-0.501 16.928-5.6079 9.0734-17.75 4.9269-19.157 9.359-0.3389 1.0669-1.7534 2.2255-3.144 2.5745-3.5947 0.9021-316.21 0.5543-329.83 1.4484-10.759 0.7064-9.5605 0.517-9.5605 5.8756l342.73-0.6536c3.106-2.0553 8.0435-5.6243 13.28-7.0348 17.432-4.6938 21.186-29.777 5.9067-39.466-15.582-9.8823-34.011-0.2856-34.095 17.756-0.0273 5.7472-1.5054 7.8011-6.8433 9.5099-4.4941 1.4388-179.97 0.882-321.38 0.6752-0.6436-2.4839-1.1968-4.6183-1.8408-7.1022-3.0991 0.0021-48.194-0.2109-49.767 0.8358-1.8003 1.1978-3.1514 44.735-1.4521 46.782 2.061 2.4832 48.104 1.5739 50.101 0.5051h8e-4zm679.15-5.3571c9.5222-5.5364 12.562-17.892 6.8149-27.698-4.127-7.042-8.6816-9.605-17.071-9.605-26.59 0-28.863 30.945-8.2712 38.74 5.2266 1.9786 13.796 1.3141 18.527-1.4366v1e-4zm-16.219-3.4372c-5.76-1.772-10.536-8.2411-10.536-14.272 0-3.9336 3.4744-9.912 7.0146-12.071 5.1775-3.1571 13.795-2.7975 18.012 0.7517 3.9644 3.3357 6.1306 9.6841 5.1279 15.028-0.7805 4.1613-6.9771 10.558-10.252 10.584-3.9988 0.0425-4.8599 1.3667-9.3669-0.021h2e-4zm9.8808-8.9256c3.1362-2.9464 3.2913-7.7885 0.3438-10.736-2.792-2.7919-5.5203-2.7683-9.1401 0.0798-3.6433 2.8657-3.7185 6.8287-0.197 10.35 3.3074 3.3076 5.7114 3.3895 8.9934 0.3062v-4e-4zm439.23 13.029c0.55-0.7512 0.811-8.5695 0.5801-17.374-0.416-15.857-0.4448-16.013-3.0259-16.507-1.4331-0.274-2.8633-0.2408-3.1777 0.0742-0.8447 0.8451-0.6963 33.591 0.1565 34.444 1.1985 1.1984 4.3962 0.8256 5.467-0.6372v-6e-4zm11.533-12.565c0.7183-17.879 0.2783-21.034-2.9312-21.034-2.3796 0-2.4543 0.3824-3.1299 16.034-0.717 16.6-0.2729 18.931 3.6067 18.931 1.6693 0 1.9612-1.6565 2.4544-13.931zm67.558-16.378-3.4446-0.6887c-4.9705-0.9941-57.575-0.8502-58.199 0.1593-0.4971 0.8043-1.9172 28.306 0.0171 29.508 1.6653 1.0353 58.548 0.4807 61.02 0.4677 0.2119-10.299 0.394-19.148 0.6062-29.446zm-752.71 24.13c2.2773-2.0608 2.6035-7.6927 0.5977-10.306-0.7319-0.9534-2.3657-2.2845-3.6299-2.9578-5.0342-2.6808-11.028 9.5022-6.77 13.76 1.8936 1.8938 7.4736 1.6107 9.8022-0.4971v-1e-4zm-590.22-53.902v-41.506c3.6665-1.5579 9.2822-3.4442 14.258-10.575 1.5083-2.1609 2.874-2.3987 16.91-2.9436 27.5-1.0674 26.742 0.1469 26.742-3.313 0-4.6539-1.9697-5.1553-19.839-5.049-9.2207 0.0547-17.807 0.0764-19.08 0.0492-5.8613-0.1282 1.9614-9.194-13.172-17.735l-5.8193-3.2845v-62.926l-7.6484-0.8929c-0.1621 35.981-0.0728 64.234-2.0195 64.883-2.9976 0.9991-8.5508 5.566-10.767 8.8534-5.9702 8.8601-4.873 24.374 7.5977 30.562l5.1885 2.5745c0 3.9397-0.231 81.122 0.728 82.081 0.9492 0.949 6.3315 0.7285 6.9204 0.7285v-41.506l4e-4 -2e-4zm4045.5 16.375c-0.2147 0-1.163 0.7726-2.1073 1.7169-3.8071 3.8071-0.4816 12.565 3.8838 10.228 4.2231-2.2599 0.9925-11.945-1.7765-11.945zm22.946 1.0927c-2.3386 1.9408-2.1569 9.4354 0.2615 10.789 6.9189 3.8717 5.5691-15.628-0.2615-10.789zm41.648 8.0742c0.9771-3.8928-0.4014-8.0742-2.6618-8.0742-2.7991 0-4.5682 2.1699-4.5682 5.6036 0 6.0116 5.8405 8.0072 7.23 2.4706zm11.282 2.3821c0.7133-0.8595 1.1423-3.4408 0.9532-5.7365-0.2981-3.6202-0.7025-4.1737-3.049-4.1737-3.8479 0-5.4559 4.777-2.9139 8.6565 2.1028 3.2091 3.1659 3.4752 5.0097 1.2537zm13.325-1.0622c1.7988-3.9479-0.1501-8.848-3.5191-8.848-2.2715 0-2.6887 0.5834-2.9843 4.1737-0.5539 6.726 4.058 10.041 6.5034 4.6743zm11.656-3.2082c0.2512-3.854-0.0885-5.278-1.3797-5.7732-4.2792-1.642-6.8348 6.3008-3.1975 9.938 2.7465 2.7464 4.2137 1.4115 4.5772-4.1648zm10.596-5.7899c-4.2065-1.6143-6.7755 6.3329-3.2025 9.906 6.3934 6.3934 8.8299-7.7465 3.2025-9.906zm13.596 10.055c3.1119-3.7495-1.0801-13.027-4.3906-9.7167-1.7192 1.7191-1.5433 9.184 0.2431 10.316 2.04 1.2927 2.6503 1.2043 4.1475-0.5995zm13.183-1.7161c1.4531-6.0597-1.4447-10.534-4.9424-7.6312-1.9656 1.6315-2.1454 7.7722-0.282 9.6357 2.0152 2.0152 4.4879 1.0667 5.2244-2.0045zm10.555 2.4367c2.5049-1.5934 2.7904-6.2565 0.5522-9.0204-1.8256-2.2546-2.3774-2.4196-3.8915-1.163-2.0634 1.7125-2.3483 7.824-0.453 9.7192 1.5158 1.5158 2.0383 1.5798 3.7923 0.4642zm13.634-1.804c1.4403-3.1611 0.4212-8.1202-1.8476-8.9907-3.8742-1.4867-6.3111 4.7229-3.7393 9.5283 1.5518 2.8998 4.1339 2.6514 5.5869-0.5375v-1e-4zm11.644-3.1063c0.3617-5.6301-1.5847-7.7579-4.7179-5.1576-1.9657 1.6315-2.1454 7.7722-0.282 9.6357 2.6915 2.6914 4.6521 0.9355 4.9999-4.4781zm12.926 1.732c0.3716-1.4803 0.1321-3.8846-0.5323-5.3427-2.2252-4.8835-6.718-2.5277-6.718 3.5227 0 5.9301 5.8502 7.3986 7.2503 1.82zm10.689 3.3622c3.2362-1.2418 1.731-11.356-1.6901-11.356-2.1699 0-6.6424 6.1731-2.5131 10.302 1.9589 1.9586 1.8899 1.9414 4.2032 1.0537zm13.201-5.3463c0-3.9738-0.4403-5.5104-1.639-5.7201-2.9814-0.5217-4.8077 1.6512-4.8077 5.7201s1.8262 6.2418 4.8077 5.7201c1.1986-0.2097 1.639-1.7463 1.639-5.7201zm12.347 4.6985c3.5581-3.5581-0.0797-11.795-4.2279-9.5747-4.7124 2.522-1.0916 14.894 4.2279 9.5747zm12.019 0c2.7691-2.7692 1.2528-10.708-2.0453-10.708-3.9298 0-5.719 7.1581-2.5752 10.302 2.0609 2.0607 2.8924 2.1338 4.6205 0.4059zm12.019 0c2.6161-2.6161 1.0236-10.708-2.1073-10.708-1.7186 0-4.2301 3.568-4.2301 6.0095s2.5115 6.0095 4.2301 6.0095c0.4378 0 1.3862-0.5901 2.1073-1.311zm13.48-1.3136c1.2968-2.8461 0.0721-8.4097-2.0037-9.1017-1.9428-0.6476-4.7023 2.9453-4.7023 6.1227 0 5.5312 4.61 7.5792 6.706 2.979zm11.81 1.0572c1.783-2.1484 1.01-8.3391-1.215-9.7317-2.64-1.6525-5.2816 0.9508-5.2816 5.2048-1e-4 5.3682 3.6737 7.9282 6.4966 4.5269zm29.018-1.0166c2.2005-3.3583 0.5684-8.3423-2.7318-8.3423-3.1604 0-5.1161 4.6047-3.4804 8.1948 1.565 3.4349 4.0202 3.4931 6.2122 0.1475zm12.649-0.3779c2.216-5.8286-1.5453-11.346-5.2258-7.6649-4.8923 4.8921 2.0836 15.93 5.2258 7.6648v1e-4zm10.62 1.651c2.616-2.616 1.0236-10.708-2.1073-10.708-1.635 0-4.2301 3.5142-4.2301 5.7284 0 2.1829 2.8219 6.2906 4.3214 6.2906 0.3876 0 1.2949-0.5899 2.016-1.311zm8.4134-9.6153c-1.977 1.6406-2.1652 7.7778-0.2959 9.6472 6.4983 6.4981 6.8065-15.05 0.2959-9.6472zm17.024 7.9643c3.5226-9.2651-6.6435-12.243-6.6435-3.1323 0 6.1439 4.6628 8.3422 6.6435 3.1322v1e-4zm10.62 1.651c2.6007-2.6008 1.24-9.6154-1.8651-9.6154-4.3582 0-6.34 7.5447-2.5601 9.7463 2.4822 1.4459 2.8595 1.4347 4.4252-0.1309zm12.4-1.34c1.5977-3.5068 0.3591-8.2754-2.1498-8.2754-4.4107 0-6.0476 5.2954-2.7599 8.9282 2.4076 2.6603 3.464 2.5199 4.9097-0.653v2e-4zm11.945-0.311c2.1714-5.7113-1.3665-10.9-4.973-7.2935-2.1607 2.1608-2.1379 6.3544 0.0459 8.5387 2.4432 2.443 3.6392 2.1407 4.9265-1.2452h6e-4zm10.62 1.651c3.5044-3.5045 0.0688-12.665-3.6057-9.6154-2.8569 2.371-1.5735 10.926 1.639 10.926 0.3606 0 1.2456-0.5899 1.9667-1.311zm12.457-1.4646c1.3716-3.0103 0.2078-8.1957-2.0042-8.9297-1.8938-0.6287-4.7706 2.8063-4.7706 5.6958 0 2.5919 2.5432 6.0095 4.4721 6.0095 0.571 0 1.6071-1.2489 2.3027-2.7756zm11.176 1.0587c0.9444-0.9443 1.717-2.8761 1.717-4.2926 0-2.1532-2.454-6.0095-3.8242-6.0095-0.2146 0-1.1629 0.7726-2.1073 1.7169-2.0319 2.0321-2.2622 7.1345-0.4058 8.9911 1.728 1.728 2.5595 1.6549 4.6203-0.4059zm11.332 0.4059c2.6179-2.6179 1.1885-13.902-4.1726-9.0504-2.601 2.3539-2.8048 6.2876-0.4478 8.6447 2.0609 2.0607 2.8923 2.1338 4.6203 0.4059v-2e-4zm12.684-2.2065c2.0136-5.7256-2.9678-11.006-6.7834-7.1903-4.429 4.429 3.5883 16.276 6.7834 7.1903zm11.635 0.0896c1.1919-2.8776 1.1635-3.8861-0.1771-6.2827-2.1052-3.7634-5.7333-4.2343-7.9743-1.0349-2.1921 3.1296-2.2031 5.234-0.0437 8.3173 2.1967 3.1361 5.8222 3.7461 8.1951-0.9997zm-1904.1 0.6815c7.2957-1.9004 17.045-7.9733 20.888-13.01 1.4502-1.9011 3.9998-6.3862 5.6653-9.9666 2.6333-5.6599 3.0312-7.865 3.0483-16.89 0.0176-8.9814-0.3718-11.216-2.8872-16.581-12.396-26.442-44.576-30.745-64.454-10.603-8.1755 8.2841-11.157 15.728-11.106 27.731 0.061 14.626 5.9927 26.333 17.065 33.682 10.431 6.9238 20.195 8.656 31.781 5.6382h2e-4zm-19.002-7.6223c-15.64-5.1102-25.822-21.449-22.916-36.771 3.8401-20.248 23.871-32.829 42.445-26.66 7.0667 2.3472 16.562 10.831 19.964 17.838 5.1108 10.528 2.5022 25.862-6.1382 36.078-7.1394 8.4417-22.888 12.934-33.355 9.5139zm13.457-8.1333c18.46-4.2845 26.441-29.094 11.323-42.368-4.5737-4.016-9.1123-5.1356-18.162-4.4811-8.6045 0.6224-14.149 4.313-17.956 11.953-3.8308 7.6875-3.8438 14.95-0.0405 22.582 3.1296 6.28 7.092 9.6257 13.935 11.766 5.562 1.7395 5.7305 1.7479 10.9 0.5479l2e-4 1e-4zm-13.247-8.8406c-4.1709-2.5427-7.7988-9.6224-7.8342-15.288-0.0754-12.072 15.467-20.577 25.936-14.193 10.422 6.3542 10.565 22.203 0.2639 29.234-4.7423 3.237-13.273 3.3514-18.366 0.2464zm11.258-9.4099c2.1968-0.8429 4.011-5.2097 3.1245-7.5204-2.1177-5.5189-10.221-3.3599-10.221 2.7235 0 4.1631 3.1682 6.3044 7.0967 4.797l-3e-4 -1e-4zm1357.4 34.349c1.9236-1.9236 1.5977-8.0801-0.5411-10.219-1.7413-1.7413-2.0031-1.6768-4.3705 1.0754-2.7725 3.223-3.0934 5.153-1.3873 8.3408 1.2748 2.3821 4.3301 2.7712 6.2989 0.8024v2e-4zm13.271-0.2565c1.783-2.1484 1.0101-8.3391-1.2151-9.7317-2.6401-1.6525-5.2816 0.9508-5.2816 5.2048 1e-4 5.3682 3.6739 7.9282 6.4967 4.5269zm11.86 0.2565c1.8815-1.8815 1.6167-8.0016-0.4193-9.6914-3.8148-3.1659-7.5905 3.6505-4.8544 8.7632 1.3507 2.5238 3.3297 2.872 5.2737 0.9282zm13.112 0c2.2183-2.2183 1.9623-12.888-4.0822-9.6525-4.9485 2.6483-1.2432 14.977 4.0823 9.6527l-1e-4 -2e-4zm13.884-0.8987c1.0012-3.1541-0.3823-8.417-2.4178-9.1981-2.066-0.7927-5.7848 2.2788-5.7848 4.7782 0 5.2062 6.7916 8.8657 8.2026 4.4199zm12.339-2.8015c0.5339-7.2856-5.3708-9.5227-6.8892-2.6099-0.9243 4.2081 1.1268 7.8488 4.1774 7.4144 1.9403-0.2762 2.4456-1.1715 2.7118-4.8045zm12.854 2.3909c1.548-6.1677-1.8333-11.376-5.4413-8.382-2.0361 1.6898-2.3008 7.8099-0.4194 9.6914 2.1833 2.1832 5.1505 1.5204 5.8607-1.3093v-1e-4zm12.658-0.0306c2.4019-5.2717-1.3543-11.367-5.093-8.2638-1.6249 1.3486-2.2811 8.802-0.8966 10.186 1.6133 1.6132 4.8523 0.5737 5.9896-1.9227zm24.422-2.8121c0-4.2662-0.3251-4.9633-2.4567-5.2659-1.8441-0.262-2.7457 0.4115-3.616 2.7006-1.6062 4.2246 0.2826 8.3048 3.625 7.83 2.1213-0.3014 2.4479-1.004 2.4479-5.2648l-2e-4 1e-4zm24.038 0c0-4.5162-0.2225-4.917-2.7316-4.917-3.0003 0-4.0252 2.8834-2.7835 7.8307 0.5035 2.0067 1.2912 2.6038 3.0953 2.3473 2.0886-0.297 2.4199-1.0172 2.4198-5.261zm13.45 1.4161c0.3492-3.6094-1.3093-7.972-3.0306-7.972-1.9869 0-4.4102 3.5249-4.4102 6.4154-1e-4 6.9285 7.4408 7.3236 7.4408 1.5566zm237.53 2.1349c0.7254-2.9214-0.685-7.3754-2.3354-7.3754-2.6163 0-3.9104 3.3595-2.4926 6.4709 1.4706 3.2278 4.1275 3.7256 4.828 0.9045zm-3083.6-4.7903c1.1699-1.8617-0.3088-7.4275-2.1111-7.9443-3.1899-0.9148-55.288-1.1826-56.699-0.2915-1.114 0.7037-2.051 8.0167-1.0925 8.5282 0.7798 0.4163 52.192 1.4351 55.452 1.0989 2.1035-0.2168 4.1061-0.8429 4.4509-1.3913zm-742.5-2.4179c2.6123-3.7295 2.0366-8.9569-1.2734-11.56-3.73-2.9341-5.3716-2.8549-8.6436 0.4174-1.7739 1.7742-2.6763 3.9009-2.6655 6.2827 0.021 4.4408 0.9263 5.9432 4.3442 7.2076 3.4717 1.2843 6.249 0.4928 8.2378-2.347l5e-4 -2e-4zm833.11-6.1767h-62.281c0 1.8368-0.3491 8.4181 1.3657 9.1102 1.8037 0.7275 58.443 0.7166 60.915 0.7238v-9.834zm2593.2 5.3592c2.7227-4.3458-2.6212-10.624-6.3845-7.501-1.9404 1.6105-2.0792 6.6753-0.2335 8.521 1.7459 1.746 5.2206 1.2103 6.6179-1.02h1e-4zm-3080.7-0.8722c6.481-3.3079 7.7617-6.4336 10.936-12.642l386.47-0.0393 0.6099-27.605c-13.547-2.0316-335.35 1.5099-335.51 1.5118-50.007 0.62-54.339 0.8231-57.436 2.6932-5.5337 3.3413-6.073 6.464-10.586 6.464-8.4814 0-16.112 7.6918-16.112 16.241 0 11.922 11.064 18.766 21.624 13.377l2e-4 -6e-4zm-12.386-4.9835c-3.3992-3.399-3.7109-10.156-0.592-12.826 4.3235-3.7018 12.632-2.5363 14.362 2.0148 3.8736 10.188-6.3596 18.222-13.77 10.812zm7.2429-4.2708c2.0532-2.0211 4.4707-3.9305 5.3721-4.2433 1.4265-0.4949 1.4153-0.662-0.085-1.2869-2.6311-1.0961-7.908 1.2689-7.1628 3.2106 0.3428 0.8931 0.1641 1.6238-0.397 1.6238-1.8103 0-6.3345 9.1675 2.272 0.6958h7e-4zm3077.9-0.0185c0-1.3881-0.9854-3.4155-2.1898-4.5055-1.8303-1.6564-2.6492-1.7722-4.9885-0.7064-2.1713 0.9893-2.7216 1.9413-2.4539 4.2455 0.691 5.9524 9.6322 6.8497 9.6322 0.9664zm-2664.1-36.734h-6.9185c0.0662 3.5724 0.4622 31.852 1.084 33.602 0.5828 1.6378 4.0881 1.3657 5.7029 1.3657 0.0144-3.86 0.117-31.108 0.1316-34.968zm10.483 34.003c0.7805-1.2631 1.1387-31.511 1.1733-33.457-1.9893-0.231-3.6985-0.4294-5.6877-0.6605-1.1626 32.677-1.7898 35.006 2.6187 35.062 0.7158 0.011 1.5688-0.4161 1.896-0.9451l-3e-4 2e-4zm68.941-2.5894c0.7722-3.1021 0.0928-22.084-0.0239-26.497-19.9-0.1842-42.738-0.3955-62.639-0.5797-0.1519 5.0184-0.886 25.223-0.3562 27.623 0.4888 2.2158 3.9282 1.9121 62.406 1.9121l0.6118-2.4585h8e-4zm2573.1-1.4438c2.1397-2.1396 2.1371-2.66-0.0273-5.7505-2.5056-3.5773-6.3402-2.7875-6.8173 1.4042-0.2441 2.145 0.283 3.6993 1.5745 4.6438 2.4981 1.8267 3.185 1.7878 5.2701-0.2972v-3e-4zm-76.307-7.5705c1.6581-2.5305 1.6581-2.9327 0-5.4633-2.1642-3.3029-3.2559-3.4005-6.1101-0.5464-2.6308 2.6309-2.7702 4.7223-0.4683 7.0243 2.448 2.4481 4.5187 2.1288 6.5784-1.0146zm13.614-0.1475c0.832-2.1885 0.6885-3.4988-0.5986-5.4633-3.7778-5.7656-9.0976-0.3043-6.4428 6.6141 1.1121 2.8981 5.793 2.133 7.0414-1.1508zm11.908 1.3064c1.7559-2.1157 1.0345-7.223-1.2194-8.6337-2.5068-1.5691-5.2816 0.8784-5.2816 4.6586 0 4.8761 3.8166 7.2097 6.5011 3.9751h-1e-4zm13.112 0c1.756-2.1157 1.0345-7.223-1.2194-8.6337-2.5067-1.5691-5.2816 0.8784-5.2816 4.6586 0 4.8761 3.8165 7.2097 6.5011 3.9751h-1e-4zm12.542-0.1442c3.3179-3.3181 1.5052-9.2096-2.8337-9.2096-2.0106 0-4.1906 3.0482-4.1906 5.8597 0 1.7653 2.848 5.0668 4.3706 5.0668 0.5153 0 1.7094-0.7726 2.6537-1.7169zm14.282-4.9723c0-3.0833-0.4396-3.7531-2.6704-4.068-4.741-0.6692-7.3083 5.5393-3.7585 9.089 2.7279 2.7279 6.429-0.1627 6.429-5.0211v1e-4zm716.5 3.4161h25.95c0-80.023 0.3187-84.129-1.9121-84.162-18.679-0.277-72.784 0.2488-74.01 0.7192-1.4396 0.5522-1.6564 6.032-1.6564 41.857 0 22.672 0.3688 41.608 0.8195 42.081 1.0981 1.1517 16.022-0.4838 50.808-0.4906l1e-4 -0.0047zm-45.618-79.222c8.9745-0.0527 59.472-0.6649 62.002 0.6897 2.2534 1.2059 1.9207 4.3221 1.3711 72.361-4.7404 1.2543-0.9275 1.3364-63.948 2.853 0.1675-22.11 0.4878-64.421 0.5747-75.904zm18.608 70.056c2.0691-1.4493 2.1525-2.7874 2.0096-32.241-0.1572-32.376-0.474-34.468-5.1158-33.771-1.1942 0.1793-3.0537 1.5553-4.1324 3.0576-2.2425 3.1235-2.0151 7.7756-2.5464 57.372 5.0329 6.8074 5.6441 8.4833 9.7849 5.5829l1e-4 -2e-4zm37.166-2.2626 2.6819-2.682c0-58.088 0.6571-58.483-5.1085-60.892-4.024-1.6814-17.212-1.0288-19.749 0.9773-1.0351 0.8184-1.3658 8.5746-1.3658 32.032 0 28.326 0.1623 31.047 1.9121 32.066 1.0517 0.6125 5.7451 1.1287 10.43 1.147 7.6102 0.0295 8.8034-0.2524 11.2-2.6487v1e-4zm-4690.9 5.2968c1.9771-0.7585 1.7285-7.9915 1.7285-76.816-6.1025-1.0994-2.6094-1.3276-66.105-0.6453-0.4282 56.816-0.7935 76.2 0.8047 77.215 1.5943 1.0119 60.978 1.2421 63.572 0.2464zm-56.182-9.2222v-60.044h50.129c-0.2881 39.318-0.186 58.942-1.7974 59.938-1.7646 1.0905-2.5796 0.9421-48.332 0.1065zm43.082-9.3141c2.5469-2.547 2.5469-38.818 0-41.365-1.4121-1.4121-4.7031-1.717-18.537-1.717-15.51 0-16.908 0.1644-17.951 2.1135-1.6582 3.0989-1.499 39.695 0.1802 41.374 0.9048 0.9049 6.4658 1.3112 17.951 1.3112 13.67 0 16.946-0.3064 18.356-1.7171zm1323-7.0241c-0.2024-0.2294-2.8501-0.5776-58.348-1.3104 0.4214 5.8678 0.2634 3.6689 0.6826 9.5052 33.299 0.7241 48.062 1.2723 59.378 0.34-0.1975-1.2828-1.105-7.8456-1.7131-8.5348zm91.885 6.2827c0.7534-2.8103 0.6772-5.4504 0.6892-7.3754h-63.374c0 3.3403-0.1064 8.2705 0.7285 9.1052 0.3416 0.3417 5.0938 0.7286 61.298 0.7286l0.6587-2.4585h-5e-4zm-1193.1-3.6405c0.3647-0.9506 0.6631-12.453 0.6631-25.56 0-20.276-0.2471-23.927-1.6543-24.467-2.4053-0.923-45.651-0.7787-47.095 0.1571-2.6919 1.7451-3.877 49.024-1.2695 50.679 0.7681 0.4873 12.038 0.8938 25.044 0.903 20.566 0.0141 23.735-0.2087 24.312-1.7117zm674.28-63.284c75.831 1.725-34.063 4.2561 240.93 3.5287 101.26-0.2678 184.97-0.8552 186.02-1.3053 1.6335-0.6989 1.9121-2.3632 1.9121-11.419 0-7.4301-0.4639-11.235-1.5508-12.722-3.0635-4.1902-315.67-1.8629-437.57-4.9331-1.1401 1.1454-33.707 33.717-34.182 34.797-0.7283 1.6566-21.179 20.674-22.894 21.29-2.3599 0.8472-423.71 1.1863-432.12 1.1973-4.5107-3.3352-6.2017-5.1204-12.041-5.1204-4.4917 0-5.5625 0.4872-8.7729 3.9902-2.6621 2.9052-3.6567 5.0105-3.6567 7.7412 0 4.4695 0.9189 7.2078 2.418 7.2078 0.6006 0 2.6147 1.2819 4.4766 2.8486 2.8569 2.4039 4.1436 2.7631 8.2441 2.3009 2.9014-0.327 5.2603-1.2639 5.854-2.3252 0.5474-0.9777 1.5229-1.451 2.1689-1.0519 1.4805 0.9149-2.395 3.5234-4.0405 4.8134 6.6606 5.6034-25.276 4.3903 449.08 3.7942 11.557-8.2455 41.008-42.858 55.725-54.632zm440.01 52.72c0.5918-1.7733-0.6401-28.751-0.7686-31.96l-6.0095-0.6915c0 32.751 0.4771 33.038 0.7285 33.289 1.2511 1.2511 5.5711 0.7961 6.0496-0.6373zm10.79-1.0926c0.0471-1.3522 0.0669-8.8505 0.0427-16.663-0.0496-16.054 0.2649-14.166-5.2664-14.865-0.0586 1.5641-1.3711 32.085-0.7039 33.165 0.2791 0.4513 1.7075 0.8207 3.1743 0.8207 2.0121-1e-4 2.6884-0.6041 2.7533-2.4586zm67.42 0.4433c1.6511-1.0479 1.1948-9.9683 0.7844-28.033h-62.281c-0.0671 2.8235-0.7732 25.691-0.071 27.526 0.9011 2.3484 60.224 1.3593 61.568 0.507zm-1247.6-8.9114v-8.7412h-33.599l-0.6826 3.4146c-0.9004 4.5016-0.8735 12.421 0.0459 13.339 0.228 0.2283 0.2925 0.7285 34.236 0.7285v-8.7412h-5e-4zm4294.7-17.99c8.7704-5.1399 12.145-12.39 11.113-23.877-1.0823-12.052-8.3173-16.303-14.799-20.592-0.1988-31.067-0.405-36.478-0.7212-36.795-0.2689-0.269-1.2585 0.1497-2.199 0.9303-1.9595 1.626-2.8152 0.3483-9.2691-5.9071v-93.134c-8.0829-9.6027-4.9001-5.8214-12.951-15.386-86.063-2.5951-310.47 0.655-310.47-0.7767 0-0.4296 0.5026-1.7203 1.1171-2.8682 2.7328-5.106 376.45 0.8361 372.57-5.4177-1.1544-1.8628-37.072-1.7129-372.05-2.3995l-3.1031-3.74c-11.041-13.306-28.037-7.3547-28.037 9.8179 0 7.2965 3.0594 12.03 9.3212 14.421 4.1848 1.5983 5.5485 1.6656 9.7696 0.4838 16.976-4.7531-43.761-4.1879 317.07-4.4399l11.301 11.949c0 72.983-0.222 92.724 1.4945 95.503 1.7736 2.8717 1.183 12.082 0.4236 35.629-9.8887 8.3383-15.373 12.118-15.504 25.794-0.0612 6.4487 0.3971 8.4478 2.9224 12.744 2.9678 5.049 7.9174 8.9606 13.683 10.814 4.7494 1.527 13.17 0.2589 18.319-2.7582v0.0051zm-18.078-5.8865c-5.5177-2.9321-8.7251-8.1753-8.7201-14.255 0.0142-17.693 22.515-22.361 30.468-6.3213 2.2999 4.6385 2.4621 5.7554 1.3663 9.4127-3.322 11.088-13.765 16.132-23.114 11.164v-1e-4zm10.758-10.951c1.908-1.2096 1.2219-6.7131-1.011-8.1104-0.9587-0.5997-3.0409-0.7648-4.6272-0.3666-3.3526 0.8414-5.004 5.2784-2.9055 7.807 1.4677 1.7685 6.2228 2.1415 8.5437 0.67zm-8.5555-60.234c2.1851 0 6.0648 0.1201 8.1055-0.6633 1.5277-0.5862 1.7283 1.2026 1.7283 15.414 0 13.558-0.2469 15.982-1.5764 15.472-1.905-0.7308-6.2895 0.7468-8.2575 1.3113 1e-4 -11.029 1e-4 -20.506 1e-4 -31.534zm7.6486 21.234c0-3.6064-0.2239-3.8711-3.0048-3.5511-2.5038 0.288-3.062 0.9379-3.3472 3.8969-0.3189 3.3081-0.1133 3.5511 3.0048 3.5511 3.1087 0 3.3472-0.2776 3.3472-3.8969zm-0.0165-12.22c-0.0361-6.536-4.7083-7.5104-5.2393-1.0927-0.3109 3.7562-0.106 4.0974 2.4585 4.0974 2.3275 0 2.7947-0.505 2.7808-3.0047zm-351.04-124.85c-5.3572-4.2141-4.7866-13.604 0.9866-16.235 4.021-1.832 6.5297-1.5154 9.7002 1.2241 4.246 3.6688 4.339 11.03 0.1846 14.603-3.7017 3.1841-7.1761 3.3145-10.872 0.4075l1e-4 3e-4zm-2777.7 177.57-60.642-0.5809c0 3.2279-0.1169 8.2947 0.7285 9.1399 0.3315 0.3315 4.1658 0.7285 60.586 0.7285-0.235-3.2482-0.4372-6.0393-0.6723-9.2875zm89.508 0.117c-1.7449-0.6694-58.31-1.3765-60.334 0.6478-1.4023 1.4023-1.79 6.587-0.5828 7.7942 0.3335 0.3335 4.5247 0.7285 62.645 0.7285-1e-4 -3.8254 0.4304-8.3422-1.7283-9.1705zm-539.68-57.574c262.14 2.0408 277.69 2.1644 450.71 3.4297 0-12.584 0.3159-24.67-1.3657-26.016-3.0486-2.4409-119.19-2.6085-455.98-3.8517-10.333 9.5146-45.425 48.546-58.987 61.444l-308.45 1.4854c-5.2129-4.3861-9.6479-8.8551-17.389-5.0729-5.7358 2.8029-8.4512 8.5225-6.8569 14.443 1.3096 4.8646 5.5527 8.8639 9.4028 8.8639 3.5361 0 4.314 2.1853 1.9487 2.1853-3.0371 0-0.291 1.9587 3.4321 2.4481 4.3433 0.571 316.46 0.8285 325.94 0.8406 30.058-31.498 38.181-40.035 57.579-60.199zm-377.3 46.969c0.6382-1.9404 6.1089-2.5162 10.875-1.1444l3.6646 1.0549c-3.2148 0.0742-9.3301 0.0919-12.438 0.9241-1.9419 0.5198-2.4766 0.3074-2.1011-0.8345v-1e-4zm475.91-62.982c8.9978-0.5114 25.268 0.3878 6.8289 0.3878-7.512 0-10.585-0.1745-6.8289-0.3878zm69.446-0.011c18.728-0.4579 50.06 0.3438 13.322 0.3418-15.024-6e-4 -21.019-0.1549-13.322-0.343v0.0012zm-589.25 55.394-1.3955-46.382c-2.5454-2.3353-13.802-12.763-16.169-14.451-1.3682-0.9757-10.251-1.3629-32.736-1.4272-37.187-0.1062-28.807-2.5402-50.391 18.063l0.6436 45.402c14.739 12.979 15.117 13 22.77 18.518h57.611c11.759-11.792 7.4355-7.4566 19.667-19.724zm-83.064 6.0697c-2.8369-2.8904-4.3921-5.2739-3.7788-5.7911 0.5737-0.4832 3.2554-2.6493 5.9595-4.8136 8.4541-6.7659 18.575-16.799 18.591-18.431 0.0283-2.306-21.87-21.966-21.87-23.581 0-1.1829 4.3145-5.2245 7.1968-8.0179l52.956 0.1071c1.4375 1.2622 7.5908 6.3374 7.5908 7.9369 0 1.7689-19.434 18.504-20.919 22.412-1.4185 3.7318-1.6084 2.1567 23.568 25.484-6.2783 5.9319-3.9253 3.7086-10.169 9.6085h-54.305l-4.8218-4.9125 9e-4 -2e-3zm964.54-8.4725c-0.2722-16.048-0.3682-16.675-2.6018-16.994-1.2756-0.182-2.5129 0.3097-2.7493 1.0927-0.5581 1.8492 0.2373 29.269 0.3164 32.564h5.3164l-0.2822-16.663h5e-4zm11.585 12.565c-0.5176-2.2535-0.9412-9.752-0.9412-16.663 0-14.076 0.1775-12.54-4.9167-13.264v34.024c7.0315 0 6.9395 0.6117 5.8579-4.0974zm68.41-0.2128c1.5635-2.9208 0.707-21.549 0.5789-26.607-12.75 0.0963-61.734 0.0547-63.624 1.623-1.8638 1.5468-1.3889 16.444-1.3889 25.973 65.592 0.8319 62.792 2.079 64.434-0.9896v-2e-4zm-1314.9-15.866c3.1963-2.4174 94.886-2.4557 99.515-0.0415 4.3462 2.2666 8.7749 2.0492 13.134-0.645 14.859-9.1833 3.29-33.092-12.957-23.661l-4.6963 2.7262c-75.747 0.8608-92.782 1.2642-95.091-0.424-3.3857-2.4757-8.8501-1.8143-12.585 1.5232-6.6318 5.9257-4.6943 16.891 3.6226 20.506 4.5581 1.9818 6.4536 1.985 9.0571 0.0154l5e-4 3e-4zm-8.2598-7.137c-2.5615-2.5618-2.7363-4.292-0.7124-7.0597 1.2061-1.6499 2.3159-1.8793 6.1353-1.2684 6.0337 0.9648 89.687 0.6699 100.82 0.66 4.7944-4.0339 8.3184-7.7969 12.858-3.2581 6.605 6.6047-2.8833 16.874-10.598 11.471-3.9526-2.7686-100.01-0.4886-101.96 0.5581-2.9087 1.5565-4.0762 1.3597-6.5376-1.1023l-0.0011-3e-4zm116.91-3.278c0.8315-1.5527 0.8315-2.818 0-4.3706-2.064-3.8567-8.7412-2.1875-8.7412 2.1853 0 4.3727 6.6772 6.042 8.7412 2.1853zm1115.4-5.3253c0.8252-0.5233 1.2974-2.2864 1.0925-4.0808-0.4338-3.8015 2.5088-4.4685-59.91-4.7981v8.7009c59.679 0.7389 57.121 1.2531 58.817 0.1782v-2e-4zm90.826-0.6241c1.5276-1.8402 0.855-4.7903 0.5962-6.6161l-60.642-0.5808v7.6261c60.574 1.2079 58.551 1.3719 60.046-0.4293v1e-4zm-1399.4-4.1934c1.0161-1.6343 0.4214-71.562-0.6177-72.602-1.0278-1.0295-33.798-2.062-50.613-1.5946l-12.255 0.3406c-1.0645 5.9242-1.3032 1.4197-0.6201 74.712 4.3574 0.1211 62.199 2.213 64.107-0.8553h-4e-4zm-57.005-66.384c17.405 0.2056 32.311 0.3817 49.716 0.5873v59.003l-49.716 0.1356v-59.726zm42.686 51.357c1.9702-1.0543 2.1133-2.4739 2.1133-20.947 0-16.906-0.2656-20.11-1.8081-21.815-1.5898-1.7566-3.6792-1.9982-17.292-1.9982-21.14 0-20.143-1.2024-19.708 23.783 0.2241 12.902 0.7529 19.378 1.6733 20.487 2.1025 2.5333 32.747 1.708 35.022 0.4904v-1e-4zm4718.3 15.682c0.8903-0.5166 0.8195-48.042 0.8195-81.203h-77.578c0 2.5062-0.2634 81.32 0.8195 82.408 0.832 0.8364 74.434-0.3322 75.939-1.2057v2e-4zm-71.295-75.74h64.211l0.6589 2.4585c0.3624 1.3522 0.6655 16.485 0.6737 33.629 0.0131 26.46-0.242 31.538-1.686 33.599-2.0093 2.8688-1.05 2.4285-63.858 2.4285v-72.115zm19.498 66.821c2.3057-2.3057 2.0367-5.3392 2.3849-60.195-3.867-2.5339-4.9829-3.698-7.5939-2.3008-6.2249 3.3314-5.5478 7.4218-5.5478 58.382 5.3387 5.5724 6.9286 7.9418 10.757 4.1135v2e-4zm37.955-1.7444c2.3431-3.2058 2.2729-56.55-0.0776-58.9-2.368-2.368-7.5726-3.2233-14.602-2.3994-11.065 1.2966-9.9936-2.1085-9.9936 31.753 0 27.321 0.1661 30.022 1.9121 31.09 1.0881 0.6655 6.0709 1.0422 11.562 0.8738 8.0822-0.2477 9.9013-0.6404 11.2-2.4167h2e-4zm-3369.9-0.3375c-0.0989-3.131-0.3975-24.805-0.4685-29.775h-6.0095c1.9155 32.242 1.5518 32.951 4.2551 32.565 1.5898-0.2269 2.2764-1.088 2.2227-2.787l2e-4 -3e-3zm10.215-13.752c0.2952-15.782 0.2471-16.174-1.9373-15.83-2.1301 0.3357-2.2441 1.1027-2.3196 15.65-0.0959 18.585-0.2688 17.173 2.0415 16.729 1.7019-0.3267 1.9456-2.147 2.2148-16.55h6e-4zm69.65 13.206c0.7725-3.1022 0.0928-22.084-0.0239-26.497l-62.536-0.5793c-0.613 3.7091-1.3582 6.9291-1.3718 17.734-0.011 7.9092 0.3091 9.6936 1.9001 10.62 2.553 1.4872 50.839 1.1681 61.42 1.1798l0.6116-2.4585 2e-4 2e-4zm-1335.2-7.9121c6.665-3.9056 9.6553-9.2799 9.7085-17.447 0.0503-7.6108-1.0244-9.5577-1.8218-11.765 11.601 1.012 18.069 1.2606 19.254 3.3783 4.3765 7.8177 15.585 12.429 24.424 10.049 10.072-2.7123 16.966-13.695 14.454-23.027-3.6953-13.724-17.258-20.115-29.535-13.918-5.1299 2.5892-9.7446 9.035-9.7788 13.658-0.0166 2.2235-0.5659 2.467-5.7544 2.548-12.567 0.196-19.059-0.3002-23.53-1.7983-14.155-4.7438-26.185 4.2675-27.283 15.694-1.7876 18.6 15.013 31.33 29.861 22.628h0.0011zm4530-5.5509c1.4418-1.4417 1.717-5.0815 1.717-22.702 0-27.422 1.0531-25.848-17.271-25.826-7.6281 0.0109-14.416 0.3779-15.083 0.8195-0.7911 0.5231-1.4094 8.4929-1.7754 22.881-0.4594 18.062-0.2769 22.484 1.0026 24.311 1.4375 2.0524 2.7025 2.233 15.629 2.233 11.329 0 14.398-0.3339 15.782-1.7169v-2e-4zm-1925.3-1.2902c0.6943-1.1235 2.1052-286.12 2.1318-290.92h-46.8c-8.1421 8.2162-15.138 15.276-23.28 23.492-0.281 66.969-0.6443 172.93-1.2698 173.53-2.0403 1.9536-35.208 1.754-321.78 1.973-3.1753-8.0715-3.6946-8.942-3.8237-14.336 67.714-0.0781 314.14-0.1125 315.69-1.6621 1.4045-1.4048 0.9062-27.756 2.6167-168.43 9.2981-2.4871 8.27-1.4846 21.508-15.783v-16.03c-2.5569-2.3671-12.537-12.069-15.908-12.915-1.5-0.3765-2.9392-1.7064-3.2588-3.0118-0.7402-3.0233-0.0276-45.727 0.0449-51.507 7.3635-0.7136 6.5503-0.2759 19.121-12.948v-21.66l-12.117-11.83h-21.886c-7.0073 6.6273-4.6001 4.3507-11.888 11.244 0 20.04-0.835 21.837 8.0867 30.061 5.5464 5.1128 6.6526 4.5872 12.674 4.5872v54.632c-7.3848 0-8.1497-0.5901-13.766 4.587-6.7532 6.225-8.0864 9.2159-8.0864 18.14 0 6.5912 0.3997 8.0907 3.1807 11.93 5.6711 7.8286 10.94 9.2441 15.941 10.874-0.0808 139.1-0.2944 165.46-0.678 165.85-1.0254 1.0259-291.89 0.276-318.69 1.8599 8.8225 32.954 12.529 43.885 31.792 107.97 122.83 1.2611 370.04 0.9764 370.45 0.3093l-1e-3 -0.0037zm-238.76-5.734c-69.511-0.3004-126.62-0.7921-126.91-1.0927-0.6331-0.663-24.786-79.974-23.812-81.084 0.7883-0.8982 223.75-1.2114 325.72-1.4114 0.7703-26.136 0.7539 28.135 1.0935-174.11l21.307-20.881 36.604-0.0437c-0.2395 288.17-0.5044 264.35-1.6387 279.17-47.379 0-88.355 0.0763-232.37-0.5463l-4e-4 -8e-4zm227.98-8.7046c1.1897-1.925 0.8022-260.29-0.3921-261.49-1.4456-1.4459-26.441-1.3163-28.5-1.3334-5.5557 5.5469-10.329 10.313-15.884 15.86-0.9021 101.11-1.3164 148.66-1.6392 179.18-18.083 0-322.01-0.3179-322.79 0.9553-0.7234 1.1704 17.636 63.622 19.153 65.15 1.5389 1.5506 349.24 2.9923 350.05 1.6758zm-80.333-272.7c-4.7175-4.807-4.8711-5.1786-4.8711-11.794 0-11.192 5.7744-17.103 16.717-17.11 6.855 0 10.683 1.7601 15.354 7.0803 2.8333 3.2268 3.4402 4.8405 3.4402 9.1466 0 4.4238-0.6055 5.936-3.9338 9.8246-5.1277 5.9905-8.865 7.8165-15.998 7.8165-5.4819 0-6.1321-0.3014-10.708-4.9634l-3e-4 -2e-4zm7.1206-95.626c-1.8179-0.5291-4.9602-2.6694-6.9834-4.7566-6.6201-6.8302-5.8286-19.148 1.6523-25.717 3.3621-2.952 4.5713-3.3322 10.587-3.3285 12.2 0.0109 18.252 6.1198 18.26 18.442 0 6.7781-0.1292 7.1061-4.7693 11.746-4.3821 4.3821-5.21 4.765-10.107 4.6746-2.9337-0.0548-6.8213-0.5313-8.6392-1.0603zm-1277.3 357.91c-17.539-0.1855-37.64-0.3983-55.179-0.5837v8.7343c39.436 0.5262 43.901 0.5906 55.179 0.5906v-8.7412zm32.179-0.5463c-3.7803 9.9434-7.8489 8.8707 59.604 8.1949 1.3381-9.436 5.7009-8.1949-59.604-8.1949zm355.38 4.1326c7.8965-3.6355 14.916-10.636 18.995-18.943 2.8071-5.7169 3.1897-7.6761 3.1897-16.33 0-8.7347-0.3779-10.628-3.3811-16.936-4.1096-8.6324-10.606-15.321-18.751-19.306-8.6248-4.2198-22.16-4.8643-31.131-1.4822-13.079 4.9309-23.772 18.667-25.379 32.601-2.0327 17.63 9.5388 36.096 26.612 42.466 6.6331 2.4751 22.339 1.3859 29.845-2.0697zm-22.068-4.1491c-10.919-1.8162-18.904-7.4548-23.82-16.822-2.498-4.7588-2.9197-6.9019-2.9216-14.849 0-7.5291 0.4624-10.161 2.4507-13.902 7.5967-14.292 24.566-21.721 39.198-17.159 8.8281 2.7526 18.024 11.787 20.507 20.148 7.2454 24.398-11.225 46.607-35.414 42.583v-2e-4zm14.204-14.787c6.3914-3.2268 9.834-9.3972 9.834-17.626 0-15.954-19.29-24.813-31.22-14.339-5.1104 4.4869-7.0232 8.4454-7.0232 14.535 0 2.7639 0.7126 6.4032 1.5833 8.087 2.1453 4.1487 8.7166 9.7633 12.368 10.568 1.6416 0.3617 3.4763 0.8019 4.0774 0.978 1.7296 0.507 7.3929-0.6948 10.38-2.2028zm-16.257-4.5478c-5.5132-2.7161-8.0017-7.3701-7.4365-13.908 0.3875-4.4816 1.123-5.9971 4.3435-8.9481 7.2766-6.6686 16.848-5.4863 22.341 2.7593 8.2444 12.378-5.5913 26.824-19.247 20.096h-3e-4zm10.797-8.5152c3.1765-3.8276 0.761-10.377-3.8274-10.377-3.0754 0-5.1899 2.4485-5.1899 6.0095 0 6.4983 6.5432 7.3475 9.0173 4.3673zm2793.4 25.086c12.246-3.1724 18.873-10.122 21.458-22.502 5.2349-25.072-27.788-46.793-50.184-26.657-7.5122 6.7542-10.537 13.967-9.8554 23.497 0.2815 3.9336 1.3091 8.6938 2.2837 10.578 3.744 7.2401 12.213 13.461 21.213 15.581 6.0482 1.425 7.8964 1.3639 15.084-0.498zm-14.494-13.712c-4.8572-2.4043-8.3422-6.9797-9.4934-12.464-1.818-8.6595 9.3166-19.13 18.51-17.405 8.6012 1.6136 14.592 10.633 12.665 19.07-1.4248 6.2394-3.3068 8.776-8.1382 10.97-5.8395 2.6512-7.8944 2.6253-13.543-0.1708zm10.408-9.9506c2.3306-2.3307 1.5872-7.3511-1.2823-8.6584-3.7195-1.6949-7.2404 0.4089-7.2404 4.3263 0 6.8433 6.5258 6.3288 8.5227 4.3321zm-3152.5-8.1139c-0.1953-0.173-4.1584-1.368-5.072-1.6488v32.927h6.0554c-0.3013-11.333-0.8064-31.121-0.9834-31.278zm11.318 15.435v-15.843h-6.0898c0.0884 3.354 0.6396 28.577 1.2068 30.321 0.2441 0.7511 1.4429 1.3657 2.6636 1.3657 2.1292 0 2.2197-0.6469 2.2197-15.843h-3e-4zm68.201 12.995c2.0334-0.7804 1.7285-5.5658 1.7285-27.541-2.2952-0.031-61.302-0.9691-63.101-0.4008-1.6545 0.5219-1.3657 11.544-1.3657 28.606 2.6135 0 60.458 0.212 62.738-0.6633v-5e-4zm-90.6-41.404c-19.231-0.1946-38.429-0.3888-57.645-0.5833 0.3635 1.8181 1.3733 6.5254 1.3733 8.3683 0 1.7227 10.369 1.5024 56.944 1.5024-0.235-3.2482-0.437-6.0393-0.6721-9.2874zm91.88 6.5582c1.7888-7.1274 3.4397-6.012-60.739-6.012 0 1.8188-0.324 7.3357 1.366 8.0176 1.8035 0.7279 56.337 0.7167 58.688 0.7238l0.6851-2.7292v-2e-4zm-81.5-27.941c0-16.45 0-16.466-2.4585-16.117-1.7478 0.2482-2.4358 1.0599-2.3806 2.8076 0.8325 26.371-0.4695 29.775 2.6538 29.775 2.0886 0 2.1853-0.7285 2.1853-16.466zm11.301 0.349c0.1709-15.47 0.1562-15.571-2.2864-15.57-2.4373 4e-4 -2.4585 0.1392-2.4585 15.92 0 15.537 0.0547 15.911 2.2864 15.57 2.1871-0.334 2.294-1.0242 2.4585-15.92zm70.408 1.6393 0.3057-13.931h-64.532c0 34.511-0.0039 23.843 0 25.95 0 0.5223 40.822 2.2286 63.922 1.9121l0.3057-13.931-0.0018 2e-4zm-90.996-13.385c-39.675-2.2246-218.74-0.5031-458.91-3.0229-65.17-64.728-79.4-78.964-240.89-240.07l-0.1333-87.389c4.3115-5.0828 8.0166-9.4502 12.329-14.533-0.4771-10.506-0.2983-6.5747-0.7954-17.519-5.3037-4.8549-9.8613-9.0265-15.165-13.881h-18.768c-9.269 9.6691-14.66 14.66-14.66 23.789 0 10.921 6.2505 15.911 14.205 23.65v99.115c54.485 57.266 87.412 89.284 87.412 91.283 0 2.8783-4.0923 1.4852-5.4805-1.8658-0.7559-1.8254-1.9224-3.1371-2.5913-2.9148-1.6099 0.5353-2.2598 38.227-0.7095 41.124 0.9214 1.7216 0.5073 2.413-2.5093 4.1929-6.9502 4.1006-9.9678 17.025-5.8398 25.008 2.1216 4.1033 7.5854 8.873 11.205 9.7812 2.5781 0.6471 2.647 0.9469 2.647 11.473 0 10.8 0 10.808 2.7319 10.808 2.6514 0 2.7314-0.222 2.7314-7.5942 0-6.0685-0.3843-7.8241-1.9121-8.7382-1.752-1.048-1.6689-1.3501 0.9922-3.6053 1.5977-1.3539 4.9224-3.6704 7.3882-5.1477 7.3691-4.4146 10.765-14.446 7.6667-22.647-2.5293-6.6953-10.424-12.363-17.218-12.363h-3.1543c0.0581-2.0153 0.8179-31.858 1.3101-33.454 0.2075-0.6718 1.6196-1.4589 3.1377-1.749 3.1616-0.6044 18.195 14.979 163.05 160.52 31.376 2.6371 370.19 1.9528 471.93 1.9402 0.0022-15.732 0.0017-9.7346 0.0017-26.182zm-464.1 6.934c-1.5222-0.9401 74.179-1.2607 73.2-0.2815-0.9536 0.9537-71.671 1.2255-73.2 0.2815h2e-4zm105.71 0.1593c14.339-1.004 19.956 0.9985 2.1853 0.8646l-13.112-0.0994 10.926-0.7652zm95.88 0.2843c21.973-0.455 59.33 0.334 16.117 0.334-17.728 0-24.981-0.1504-16.117-0.334zm-378.9-78.313c-6.4272-2.7488-8.1494-13.189-3.1543-19.125 2.3848-2.8344 3.5981-3.3617 7.7329-3.3617 9.0537 0 14.122 8.9811 10.078 17.857-2.1016 4.6116-9.3467 6.9-14.656 4.6293l-5e-4 -1e-4zm63.4-21.394c-16.882-16.925-16.9-18.039 1.0925 0 17.201 17.245 16.58 17.72-1.0925 0zm-74.3-85.118c-31.455-31.272-43.213-43.366-55.223-55.612 0.2227-16.321 0.4136-30.338 0.6357-46.659l0.5005 46.507c62.15 62.676 116.33 117.65 54.086 55.765v-3e-4zm-63.374-148.16c5.0278-0.4163 3.1714-0.2626 8.1953-0.6782 0.0547 1.8485 0.2988 10.704 0.4365 12.424 0.187 2.3301-6.6553-0.3431-8.2495 2.0874-1.2534 1.911-0.5127-10.377-0.3823-13.833zm7.1025 6.5559c0-3.5208-0.2603-3.8243-3.2778-3.8243s-3.2783 0.3036-3.2783 3.8243c0 3.5206 0.2607 3.8242 3.2783 3.8242s3.2778-0.3035 3.2778-3.8242zm-9.7543-28.556c-3.0156-3.8336-2.8618-8.1768 0.415-11.712 5.3672-5.7915 13.71-1.9255 13.71 6.3533 0 7.5127-9.5742 11.145-14.125 5.359h-4e-4zm2001.7 357.01c0-0.5367-0.7881-1.2781-1.7507-1.6477-3.7156-1.426-309.65 0.4672-309.65-1.745 0-2.1456 312.5 0.282 312.5-2.7378 0-2.9149-299.82-0.5917-314.68-0.4482 0 2.6655-0.1035 5.9963 0.7285 6.8281 1.1208 1.1209 312.86 0.8828 312.86-0.2494zm-2401.1-8.1798c5.1519-3.3759 8.5923-9.2129 9.1104-15.457 0.2681-3.2343 0.1699-7.1448-0.2178-8.6901-1.0938-4.3573-7.9292-11.174-13.238-13.201-12.499-4.7734-25.811 5.3622-25.811 19.652 0 6.951 1.8848 11.061 7.2222 15.748 3.6191 3.1777 5.1304 3.8441 10.962 4.8346 3.1094 0.5281 8.8862-0.8645 11.971-2.8856h9e-4zm-16.455-3.3328c-5.3677-2.3367-8.6279-7.8134-8.6279-14.494 0-4.9838 0.4565-6.1469 3.7451-9.54 7.248-7.4781 14.866-7.7001 21.263-0.6193 6.9956 7.7435 6.2622 17.177-1.7891 23.009-4.8667 3.5254-9.1597 4.0092-14.592 1.6445h5e-4zm11.366-7.4905c0.8892-0.7129 1.2969-2.9955 1.0923-6.123-0.2622-4.0143-0.8428-5.243-2.978-6.3024-6.0947-3.0244-13.155 3.9476-9.9883 9.8644 2.4912 4.655 7.8247 5.8054 11.874 2.5612v-2e-4zm-74.743-43.852c-0.7959-2.0732-4.2695-1.7284-5.8926-1.7284v59.003h6.5557c0-2.76 0.209-55.004-0.6631-57.275zm1287.8 40.85-60.642 0.5808c-0.4226 4.3799-0.2593 2.6859-0.6848 7.1023h61.327c-1e-4 -2.6872-1e-4 -4.9961-1e-4 -7.6831zm-90.69 2.9145c0-5.1993 2.4932-5.0653-55.725-5.0653 0.0613 9.2347-4.3101 8.1935 55.725 8.7412l4e-4 -3.6759zm91.119-8.979c0.6106-1.5907 1.4695-25.124-0.7026-25.744-1.8015-0.5146-61.478 0.2246-64.193 0.2523v27.22c56.718 0 64.128 0.2734 64.896-1.7284v-2e-4zm-475.19-1.464c33.552-1.9165 376.71 2.5891 382.33-1.5156 1.521-1.1123 2.0857-3.5134 2.5408-10.805 0.5603-8.9833 0.4758-9.4462-2.0203-11.067-6.2915-4.0859-419.97-0.5997-428.05-5.8353-9.3738-6.073-197.18-193.55-202.83-199.18l0.5967-85.502c9.2725-10.753 12.954-13.76 11.351-24.454-0.8723-5.8175-2.4087-6.7445-15.835-20.012-26.647 0.8191-32.704-0.2966-32.704 21.204 0 14.307 2.7246 15.938 10.914 23.935v97.06c56.07 57.206 71.158 72.089 217.13 217.73 60.281-0.9925 51.263-1.5534 56.584-1.5534zm-52.053-19.546c-2.5688-2.911-2.5691-2.9143-0.0667-0.7997 2.4246 2.0485 4.3772 2.1123 55.452 1.811 67.375-0.3975 91.264 1.3693-52.806 1.9113l-2.5793-2.9227 5e-4 1e-4zm116.79 2.26c10.597-0.5045 29.229 0.3771 7.9216 0.3771-8.7138 0-12.278-0.1697-7.9216-0.3771zm24.465 0.294c0.7349-0.7349 69.894-0.8212 70.628-0.0886 0.7849 0.7853-71.313 0.7737-70.628 0.0883v3e-4zm119.3-0.3017c62.624-0.6354 98.3 0.3093 29.697 0.3088-33.052-1e-4 -46.416-0.1392-29.697-0.309v2e-4zm-411.89-151.69c-126.52-128.69 48.065 46.521 46.297 46.521-0.3093 0-21.143-20.934-46.297-46.521zm-28.805-16.58-28.948-29.228c79.706 78.94 65.977 66.617 28.948 29.228zm-33.532-121.34c0.6162-0.7816 2.3911-1.2733 3.9453-1.0927 2.5278 0.2939 2.9287 0.978 3.8047 6.499 1.4043 8.8468-0.3755 12.253-1.9595 3.7496-2.4443-13.126-6.1045-4.6963-4.0005 0.8383 0.687 1.807 0.7251 2.7621 0.0947 2.3723-1.4087-0.8707-1.5479 20.879-1.6699 26.204-0.3246-9.0358-1.6816-36.71-0.2148-38.571zm2.1978-19.87c-8.1562-3.3666-5.0273-16.406 3.9355-16.406 4.7349 0 7.3779 2.2947 8.373 7.2689 1.2017 6.0062-6.3364 11.602-12.309 9.1368v-1e-4zm657.66 315.49c-0.3647-15.268-0.5337-16.118-3.1973-16.118-2.3481-4e-4 -1.835 2.3168-1.4048 29.229 0 0.1501 1.1108 0.2738 2.4631 0.2747 2.4331 0 2.4553-0.1361 2.1389-13.385v1e-4zm10.882 0.8182c0.1006-6.911 0.2231-13.426 0.2732-14.478 0.0569-1.1873-0.8411-2.0444-2.3674-2.2614-2.446-0.3473-2.4585-0.2733-2.4585 14.478 0 14.098 0.1069 14.827 2.1853 14.827 2.0481 0 2.1967-0.7891 2.3674-12.565zm1671.2 8.6064c10.461-4.9642 12.153-19.675 3.1699-27.562-13.569-11.914-33.319 4.5214-24.768 20.612 4.2246 7.95 13.322 10.878 21.598 6.9505zm-9.0601-4.5533c-3.0493-0.4608-7.8558-5.2611-8.7214-8.7101-0.947-3.7732 2.1661-9.6576 6.2177-11.753 7.0878-3.6653 14.712 1.4412 14.712 9.8538 0 7.2972-5.0553 11.69-12.208 10.609zm-2528.2-7.3311-27.863-0.6117v6.6865l27.863-0.6116v-5.4632zm63.785-0.7274c-17.146-0.7917-22.016 0.4442-20.217 5.1318 0.73 1.9033 4.8501 1.5764 27.454 1.059 0.7109-6.1502 1.6953-5.7783-7.2373-6.1908zm73.069-0.3657c-19.106-1.2911-17.691-0.5548-18.447 6.0099h29.646c0-5.4039 1.4112-5.1575-11.2-6.0099zm88.218 3.9602c4.0308-0.8627 4.936-3.9576 1.4319-4.8962-1.3811-0.37-8.7961-0.6793-16.477-0.6874-11.467-0.0121-14.079 0.2808-14.6 1.6378-1.4912 3.8862 1.5542 4.9086 14.222 4.7738 6.687-0.0709 13.627-0.4437 15.423-0.8279v-1e-4zm-637.46-5.1407 2.6489-2.8197c-0.7573-160.21-0.7651-170.07-2.1855-358.76-2.2007-0.2515-4.0923-0.4675-6.2935-0.719 0.0908 19.901 1.543 338.66 1.6338 358.56h-3.3418c-4.4312 0-5.5234 2.0436-2.4307 4.5476 3.4409 2.7864 6.8501 2.5089 9.9692-0.8115h-4e-4zm400.84-4.1912c1.8647-2.2471 1.1792-12.542-0.9131-13.713-7.5503-4.2256-5.4985 13.873-4.8389 14.532 1.249 1.2493 4.4087 0.7992 5.752-0.8193v-1e-4zm-268.17-7.7397c0-7.0984-0.1768-7.6736-2.457-7.9974-2.9897-0.4247-4.6455 3.1646-4.6455 10.072 0 5.4906 0.6167 6.3306 4.3296 5.8975 2.6733-0.3116 2.7729-0.5967 2.7729-7.9718zm335.99-7.2473v15.442h6.6553c-0.7261-16.592 0.3188-14.64-6.6553-15.442zm79.217-0.25c-5.5522-2.1309-4.917 3.6565-4.917 14.6h6.5562c-1e-4 -8.6987 0.333-13.842-1.6392-14.6zm-320.19-386.83c0.2021-375.72 0.1079-398.26-1.6636-398.72-1.0332-0.2701-2.5479-0.071-3.3652 0.4426-3.7324 2.3438-4.876-3.7147-5.1836 6.5565-0.1738 5.7885 0.0415 6.6152 1.5732 6.0275 2.3804-0.9134 4.4585 0.4064 2.5234 1.6025-2.9067 1.7966 2.3765 2.1329-0.1533 5.196-1.063 1.2887-1.0483 1.7222 0.0708 2.099 1.1206 0.377 1.1348 0.8082 0.0698 2.0909-1.0713 1.2906-1.0254 1.836 0.228 2.7086 1.1968 0.8334 1.2446 1.224 0.2026 1.6467-1.6982 0.689-1.811 3.65-0.1392 3.65 0.8472 0 0.8062 0.5066-0.1338 1.639-1.0854 1.3076-1.0854 1.9704 0 3.278 0.9395 1.1324 0.981 1.639 0.1338 1.639-1.5996 0-1.6865 3.2723 0.1392 3.2947 0.9258 0.0114 0.8384 0.39-0.2729 1.1758-1.3442 0.9505-1.3711 1.2662-0.1494 1.7545 1.2573 0.5027 1.2573 0.7579 0 1.639-1.1958 0.8376-1.2109 1.1559-0.0776 1.613 2.9824 1.2029-2.7842 2.8276 0.2979 4.8107 1.3633 0.8771 1.3633 1.1416 0 2.0187-1.2432 0.7999-1.2944 1.3403-0.2456 2.6041 1.0537 1.2699 0.9917 1.7222-0.3081 2.2208-1.8481 0.7093-3.2686-0.9054-2.2485-2.5563 0.3716-0.601 0.3389-1.6368-0.0718-2.3019-1.2778-2.0676-2.2666 0.8171-1.7617 5.1403 0.2544 2.1781 0.8105 3.3972 1.2358 2.7092 0.4248-0.688 1.5913-0.937 2.5918-0.5532 2.3008 0.8831 1.2925 2.6541-1.5117 2.6541-1.166 0-2.1206 0.6915-2.1206 1.5367 0 2.6749 4.3706-0.7603 4.3706 1.978 0 2.3856-1.2607 3.1693-2.9043 1.8052-1.1479-0.9521-1.4668-0.7197-1.4668 1.0679 0 1.5485 0.5112 2.0886 1.5864 1.6759 2.5542-0.9802 4.2144 0.5933 2.6343 2.4969-1.0811 1.3026-1.0371 1.8253 0.2197 2.6343 1.3633 0.8771 1.3633 1.1416 0 2.0187-1.3003 0.8365-1.3237 1.3044-0.1392 2.7316 0.9565 1.153 1.0239 1.7223 0.2026 1.7223-1.6714 0-1.5586 2.961 0.1392 3.65 2.0249 0.8215-1.2598 2.8782-3.3281 2.0844-2.3066-0.8849-1.1099 2.45 1.2202 2.4559 2.7739 0.0065 2.709 2.1434-0.0771 2.5391-3.3447 0.475-3.1265 2.3824 0.2729 2.3824 3.8496 0 3.8955 2.9501-1.3657 2.2668-1.6948-0.2201-2.3677 2.1038 1.3657 2.1038 2.5688 0 4 2.0268 1.6392 2.3219-2.0049 0.2508-3.5371 0.0934-4.1108 1.8159-0.9214 2.7626 5.2036-1.0404 5.2036 2.0129 0 1.0522-0.8403 1.5134-2.3574 1.2935-3.731-0.541-4.3872 3.4547 1.5371 2.5192 0.9741-0.1538 1.6587 2.5303-1.3657 1.7393-1.603-0.4193-2.1855-0.0336-2.1855 1.4488 0 1.4321 0.6362 1.8977 2.1855 1.5994 3.1006-0.597 2.7695 2.7316 0 2.7316-1.2363 0-2.1855 0.7285-2.1855 1.6774 0 1.3388 0.4414 1.4413 2.1855 0.5079 2.0205-1.0812 2.1851-0.8309 2.1851 3.3132 0 3.9855-0.2422 4.4058-2.1851 3.7891-1.5508-0.4922-2.1855-0.1963-2.1855 1.019 0 0.9841 0.9297 1.7126 2.1855 1.7126 2.8892 0 2.8911 2.1853 0 2.1853-1.2842 0-2.1855 0.7285-2.1855 1.7664 0 1.2285 0.6655 1.5923 2.1855 1.1949 2.9111-0.7612 2.9165 1.4092 0 1.4092-1.2842 0-2.1855 0.7285-2.1855 1.7664 0 1.2285 0.6655 1.5923 2.1855 1.1949 3.1343-0.8198 2.6479 2.6802 0.3862 2.2766-2.2954-0.4098-3.6274 2.4106-0.478 2.4106 3.0801 0 2.9326 2.1853 0.0913 2.1853-1.2842 0-2.1855 0.7285-2.1855 1.7664 0 1.2285 0.6655 1.5923 2.1855 1.1949 2.8862-0.7548 2.9224 0.9615 0 1.7258-2.8628 0.7485-2.9648 3.42 0 2.6448 3.0898-0.808 2.7837 2.5018 0 2.5018-2.9146 0-2.7734 1.5677 0.2729 3.037l2.4585 1.1857-2.4585 0.074c-3.0674 0.0922-3.3335 3.3519-0.2729 3.3519 2.8887 0 2.8911 2.1853 0 2.1853-2.6953 0-2.8403 1.6951-0.2734 3.1905 1.0615 0.618 1.3047 1.1285 0.5464 1.1469-1.7637 0.0429-1.8423 2.929 0 3.703 0.978 0.411 0.8232 0.9175-0.5464 1.7843-2.3438 1.4835-2.4937 3.2871-0.2729 3.2871 1.9829 0 2.1812 1.8069 0.2729 2.4978-1.063 0.3851-1.0801 0.9791-0.0781 2.6825 2.4155 4.1053-2.3647 3.0203 0.3125 6.2462 0.9492 1.1438 1.0049 1.6852 0.1724 1.6852-1.6714 0-1.5586 2.9611 0.1392 3.65 1.0288 0.4175 0.9639 0.8331-0.2642 1.6845-3.1948 2.2159 2.2583 2.3135-0.2378 5.3214-0.7622 0.9189-0.8613 1.8237-0.2471 2.2659 0.9155 0.6591 1.1074 66.749 1.5073 517.29 0.061 69.087 0.0811 69.675 2.3379 71.933 1.252 1.2521 2.5469 2.006 2.877 1.6754 0.3306-0.3304 0.6978-179.8 0.8159-398.83l0.0028 6e-4zm1120.6 387.23h-61.188v7.6484h61.188v-7.6484zm-99.704 5.5044 7.9216-0.0415c0-4.198 0.4226-6.1877-2.4585-6.9598-3.1763-0.8513-45.804-0.6842-52.174-0.6879 0 1.4467-0.2058 7.0751 0.8196 8.1174 1.1003 1.1183 32.866-0.3599 45.891-0.4276v-6e-4zm3158.8-1.8413c5.8648-4.3787 7.3976-7.6282 7.3976-15.682 0-5.8865-0.489-8.1482-2.2857-10.573-7.0954-9.5762-19.729-10.811-27.114-2.6504-2.0545 2.2701-2.6623 2.2972-51.625 2.2972-45.838 0-49.668-0.1432-51.174-1.9121-9.1369-10.733-10.945-12.357-14.969-13.441-9.4834-2.5536-17.443 7.4685-23.859 14.806-30.55 0.4747-22.205 0.4954-208.59 1.0927-9.8104 9.6637-11.009 11.094-11.009 11.432-3e-4 0.6866 9.4363 0.0284 223.45-0.0284l3.8242 4.3724c7.9567 9.0967 17.181 8.9611 26.165-0.385l3.7654-3.9175c93.093 0 97.873-0.3123 98.622 1.9121 3.8561 11.455 9.3205 15.902 18.728 15.242 3.5241-0.2473 6.9109-1.2487 8.6736-2.5648l-1e-4 -3e-4zm-16.437-7.3943c-7.6242-7.0657-3.1083-19.214 7.142-19.214 9.465 0 14.144 11.016 7.8541 18.491-3.7279 4.4303-10.637 4.7636-14.996 0.7233zm9.627-7.1857c0.8915-2.8088-0.1228-4.3802-2.8273-4.3802-2.3928 0-3.7507 2.3981-2.7841 4.9169 0.914 2.3818 4.8032 2.0098 5.6114-0.5367zm-143.6-0.094c-6.6088-6.6086-2.797-17.702 6.5951-19.194 3.3316-0.5292 4.5248-0.1111 7.6485 2.6799 3.2047 2.8634 3.7012 3.9905 3.7012 8.4031 0 4.3752-0.5048 5.5471-3.5684 8.2845-4.9103 4.3872-9.8753 4.3274-14.376-0.1737zm10.296-8.6568c0-3.1837-4.2021-4.5315-5.2899-1.6968-1.0497 2.7352 0.439 5.1205 2.9705 4.7594 1.7639-0.2516 2.3194-1.2404 2.3194-3.0626zm385.98 20.185c1.575-0.5175 1.3658-21.855 1.3658-82.493-21.449 0.1553-66.552 0.4818-79.217 0.5735 0.0198 2.2118 0.6159 81.723 1.0957 82.5 0.412 0.6666 74.669 0.1049 76.756-0.5802zm-71.113-4.5238c-0.5355-0.5354-0.7285-18.078-0.7285-72.479h65.559v71.768c-12.743 0.4128-63.16 2.3859-64.83 0.7059v5e-3zm20.065-68.108c-5.0615 0-6.8733-0.5376-9.6613 3.2336-2.742 3.7087-2.3908 3.5869-2.3908 53.924 5.9775 7.837 5.3117 7.4751 11.473 6.7622 0.0701-7.7271 0.5089-56.142 0.5793-63.92zm35.781 61.673c2.4031-1.6831 2.4284-1.9961 2.4284-29.97 0-24.242-0.2445-28.513-1.717-29.986-1.3163-1.3162-4.1033-1.7169-11.941-1.7169s-10.625 0.4008-11.941 1.7169c-1.4723 1.4725-1.717 5.7423-1.717 29.97s0.2446 28.497 1.717 29.97c2.4237 2.4237 19.716 2.4358 23.171 0.0164v-2e-4zm-4690.6 9.4358c1.4312-2.3196 0.0259-72.552-1.4722-73.56-1.5957-1.0732-59.935-0.3016-62.396-0.2803-0.1919 23.808-0.9097 71.034 0.5957 73.846 1.1362 2.1234 2.0996 2.1801 31.743 1.8684 24.989-0.2629 30.746-0.6052 31.53-1.8744h-5e-4zm-56.766-66.738h50.262v60.857c-38.552 0.3096-11.801 0.0946-50.262 0.4037v-61.261zm43.042 51.811c0.3652-0.9506 0.6636-10.478 0.6636-21.173 0-16.063-0.2886-19.684-1.6606-20.823-1.8501-1.5358-33.143-1.6733-34.664-0.1526-0.4644 0.4639-0.9443 10.063-1.0684 21.332-0.1855 16.968 0.0503 20.662 1.3745 21.5 0.8794 0.5564 9.0449 1.0189 18.145 1.0281 14.09 0.0142 16.644-0.2397 17.209-1.7117h5e-4zm1414.3 11.275c0.6548-0.7891 1.1814-7.3273 1.2305-15.275 0.083-13.544 0.0229-13.911-2.377-14.497-3.2087-0.7841-57.157-0.0435-62.558 0.0117-1.1768 23.536-1.0034 22.933-0.4165 30.013 2.8047 0.0286 60.122 0.5356 61.744 0.8719 0.6775 0.1403 1.7473-0.3657 2.3767-1.1244l5e-4 -2e-4zm-122.93-0.7538 29.284-0.0514 1.7534-4.0974c2.8928-6.7598 3.1255-14.562 0.5303-17.767l-2.2026-2.7198c-379.48 0.7772-379.97 1.1659-386.57-1.3596-6.3271-2.4241-14.841-11.37-91.975-88.288 0.0413-6.0393 1.2878-154.67 0.3826-159.5-0.7424-3.9574-4.1372-7.9137-27.329-31.849-15.09-15.574-18.548-17.723-25.368-15.767-5.7373 1.6455-7.9351 3.3149-10.196 7.7463-3.8472 7.5406-2.343 13.748 4.2815 17.675 4.9221 2.9178 24.777 22.898 29.587 27.643v163.37c12.653 14.246 7.2366 9.2006 104.35 105.45 36.795-0.0474 336.05-0.4283 373.47-0.4946l5e-4 -3e-4zm-366.06-15.622c-2.6016-3.3638-2.5522-3.921 0.2327-2.6294 1.4985 0.6951 2.7288 1.5094 2.7344 1.8099 0 0.777 38.591 1.1223 39.252 1.7513 0.3593 0.3428-40.561 1.2115-42.219-0.9318zm123.6 0.0929c-0.613-0.9944 36.638-0.7373 33.984-0.272-4.2843 0.7513-33.544 0.9853-33.984 0.272zm204.98 0.1146c4.5002-1.0223 61.942-1.8911 59.218-0.8956-2.4202 0.8843-64.28 2.0456-59.218 0.8956zm-153.79-0.7497c15.741-0.4706 43.334 0.3512 11.746 0.3512-12.921 0-18.206-0.158-11.746-0.3512zm-279-91.159c-1.5066-2.8156-0.7639-55.065 0.2622-161.44-22.276-24.062-29.331-31.77-32.336-31.77-2.7524 0-6.0659-3.1144-6.0659-5.7015 0-0.9377 1.011-2.8657 2.2468-4.2844 2.1138-2.4268 2.1787-2.4381 1.0928-0.1929-1.9673 4.0673-1.678 3.579 6.7349 0.9971-3.8198-3.093-5.1248-3.9301-3.0393-3.9301 3.7556 0 8.1548 3.5718 23.559 19.129 21.975 22.192 7.8691 11.028 8.0398 9.8265 0.0852-0.601-0.4597-0.9697-1.2109-0.8195-0.751 0.1501-1.3657-0.4935-1.3657-1.4303 0-0.937-0.5039-1.3921-1.1196-1.0116-0.616 0.3807-0.9846 0.0634-0.8193-0.7052 0.165-0.7687-0.4229-1.4198-1.3066-1.447-2.3135-0.0715-4.3606-6.0634-4.387-4.6554-0.011 0.4716-1.5676-0.9095-3.4639-3.0692-3.0261-3.4467-11.531-8.9291-12.366-7.9717-0.1675 0.1923-0.6226 1.386-1.0112 2.6528-0.8054 2.6262 4.7317 8.0854 27.846 32.661-0.0178 4.5664-0.9265 162.36 0.2434 164.17 1.0813 1.6711 0.2329 2.2889-1.5332-1.0115l3e-4 1e-4zm512.87 93.067c0-13.125-0.0916-13.672-2.3413-14.007-2.2922-0.3417-2.3413-0.048-2.3413 14.007 0 14.056 0.0491 14.349 2.3413 14.007 2.2502-0.3356 2.3413-0.8826 2.3413-14.007zm8.3198-14.012c-2.2715 0.34-2.3591 0.8502-2.3184 13.465 0.0525 16.176-0.1248 14.981 2.1543 14.544 1.6829-0.3228 1.949-2.0448 2.2188-14.365 0-12.075 0.8384-14.078-2.0547-13.645zm-1208.4 23.854c3.9087-2.7837 7.5991-9.8008 7.6367-14.522 0.0371-4.7092-2.5405-9.7653-6.9536-13.64-3.5361-3.1047-4.7861-3.5341-10.29-3.5341-21.152 0-23.193 26.891-6.7705 33.796 4.2578 1.7906 12.374 0.7495 16.377-2.101v2e-4zm-17.349-6.0842c-10.662-8.9707 1.0117-25.412 13.01-18.324 3.9126 2.3114 5.8813 5.9745 5.8813 10.943 0 3.0114-0.8003 4.6141-3.5137 7.0388-4.666 4.1691-10.67 4.3027-15.377 0.342zm425.57 6.6528c3.8691-0.7753 9.5879-6.2195 11.298-10.756 5.7983-15.379-10.137-31.338-23.686-23.723-4.582 2.5754-9.5688 9.2426-10.673 14.27-0.9526 4.3352 1.2446 11.502 4.7056 15.349 3.0347 3.3735 10.424 6.6692 13.331 5.9457 0.9019-0.2242 3.1626-0.713 5.0249-1.0861l3e-4 1e-4zm-12.758-9.2347c-2.5835-2.5837-3.1938-4.1332-3.1938-8.1108 0-4.0337 0.6035-5.5209 3.3618-8.2789 4.501-4.5009 9.4663-4.5609 14.376-0.1736 3.1577 2.8215 3.5684 3.8379 3.5684 8.8357 0 4.833-0.4424 6.0277-3.0659 8.2845-4.4991 3.8698-10.856 3.6345-15.047-0.5569zm88.897 9.3381c9.5859-4.1019 14.234-15.474 10.234-25.045-1.7588-4.2103-8.3804-10.291-12.268-11.267-13.245-3.3242-25.729 9.6654-22.158 23.055 1.6372 6.1381 4.5488 9.7863 9.9404 12.455 5.4141 2.6801 9.3433 2.901 14.25 0.8013v1e-4zm-11.579-28.566c9.415-4.4677 18.515 4.4066 15.546 15.16-1.3896 5.0314-4.6494 7.2621-10.612 7.2621-12.845-1e-4 -15.135-17.582-4.9336-22.422zm-403.58 27.488c1.9619-0.8197 4.9463-3.1294 6.6323-5.1328 2.8052-3.3339 3.0303-4.2512 2.6592-10.826-0.4971-8.7928-3.4727-13.561-10.367-16.61-16.923-7.4862-28.432 14.135-20.837 25.404 5.314 7.8855 13.659 10.614 21.913 7.1653h-5e-4zm-15.219-8.7805c-4.7168-4.7168-5.0356-9.8444-0.9175-14.739 7.209-8.5671 20.148-3.194 20.148 8.3668 0 6.671-3.5356 10.087-10.44 10.087-4.3159 0-5.6323-0.5564-8.791-3.7151v-1e-4zm211.52 8.0957c10.394-5.3029 13.445-16.278 7.042-25.331-4.48-6.3336-8.2568-8.849-13.286-8.849-9.4102 0-17.113 7.0034-18.394 16.724-1.398 10.602 10.331 24.756 24.639 17.456zm-14.064-7.1783c-11.515-9.6896 3.2085-27.914 14.168-16.954 2.6147 2.615 3.1934 4.1154 3.1934 8.2788 0 10.058-9.8613 14.986-17.361 8.6753h4e-4zm87.302 6.8951c7.96-5.4176 10.509-13.328 7.1387-22.154-2.5586-6.6989-7.8418-10.6-15.15-11.186-4.6128-0.3701-6.3452 0.0175-9.3813 2.1019-5.7632 3.9553-8.0522 7.7944-8.6021 14.428-0.5845 7.0432 2.4463 13.6 7.9004 17.096 4.7627 3.0525 13.389 2.9161 18.094-0.286h5e-4zm-15.006-5.1603c-6.9263-4.2229-6.3862-16.533 0.8901-20.295 3.9077-2.021 5.7715-1.9977 9.874 0.1241 7.0654 3.6536 8.1162 14.319 1.9243 19.529-3.9785 3.3478-7.9233 3.5475-12.688 0.6421v-2e-4zm3526.9 1.7588c3.5912-2.5701 10.598-12.506 120.7-120.58l265.47-1.5588c8.7976-8.7137 5.7826-5.7275 14.926-14.783 0.2369-35.9 3.7835-581.77 5.6316-628.63 27.81 0 35.247 0.2407 36.78-1.6068 0.9605-1.1573 1.5036-11.596 1.9416-37.314 0.5763-33.842 0.5027-35.785-1.4086-37.182-1.5893-1.162-9.1434-1.4746-35.642-1.4746-32.126 0-33.675 0.0942-34.756 2.1135-1.4264 2.6652-1.5164 70.978-0.0962 73.223 1.3289 2.1006 11.281 2.2369 15.712 2.5192-1.311 254.3-1.9027 375.84-4.9927 618.5-5.2432 5.6882-3.3251 3.6073-8.7696 9.5138l-273.42-0.0568c-73.068 73.635-76.816 77.801-129.9 133.34-80.786 0-167.84 0.0702-167.84-0.8536 0-1.8654 155.28-159.38 166.63-170.92 135.23 0.4891 155.31 0.639 249.69 0.2271 15.114-13.714 19.882-18.504 55.365-53.34 1.9501-93.701 9.7123-849.09 6.6481-853.47-1.8937-2.7037-26.896-29.1-31.673-34.172 0.4464-26.035 0.5677-28.928 0.1659-50.602-6.4684 7.3525-5.3942 0.5441-5.3942 54.182l31.955 33.23c-5.0664 633.8-3.6041 632.06-6.829 848.99-29.29 28.607-48.923 48.322-53.535 49.674-4.6627 1.3678-20.76 1.5063-20.76 0.1788 0-1.2668 60.268-60.366 62.296-62.365 3.4844-118.73 5.9042-592.77 8.86-835.38l-30.625-31.687-0.1027-42.123-6.5559 3.3902v39.926c11.731 12.013 13.948 14.386 31.991 33.409-6.616 511.13-0.6028 58.701-8.2853 830.34-3.4468 3.3844-61.658 60.81-65.179 63.131-3.0902 2.0371-18.318 1.7306-219.39 1.2339-150.45 153.34-176.59 179.85-175.73 182.08 0.6188 1.6127 9.3541 1.6934 102.54 0.9479 73.157-0.5853 102.35-1.165 103.6-2.0571l-4e-4 -0.0013zm104.27-131.63 274.23-1.3192c6.842-6.7568 4.308-4.2543 11.147-11.008 2.0043-211.14 2.8543-320.24 5.0839-621.6h5.3107c-2.2653 139.55-2.2191 353.67-4.8616 625.89l-12.281 11.954c-32.2 0.1674-232.65 1.2096-264.94 1.3776-59.33 59.19-63.958 63.979-121.45 122.35h-17.59c29.346-30.837 26.727-28.388 125.36-127.65zm284.35-640.19-9.5768-0.376 0.5787-64.927c19.158-0.7891 23.383-0.509 59.582 0.7863-0.0699 7.8311-0.5081 56.89-0.5785 64.773-11.586 0.0344-38.386 0.2002-50.005-0.2558zm42.582-59.294h-44.478c0 40.136 0.1653 52.248 0.7285 52.811 0.1774 0.1774 0.5436 0.7285 44.07 0.7285 0.6275-46.295 1.2599-32.908-0.3208-53.54zm-538.36 814.36c0-4.4431-1.1729-6.9255-6.2271-13.179-2.7601-3.415-4.5432-4.6438-6.7393-4.6438-8.2605 0-7.3999 9.04 1.6767 17.614 7.8864 7.4495 11.29 7.5127 11.29 0.2095zm-7.3653-2.3919c-4.0073-4.3873-7.5688-10.695-6.5908-11.673 1.1149-1.115 2.4509 0.1588 6.8201 6.5027 4.9194 7.1426 4.7644 10.638-0.2293 5.1705zm-254.91 2.097c0.9304-0.5886 2.0895-0.609 2.7644-0.0492 1.6992 1.41 10.384 0.8462 10.384-0.6742 0-1.6173-3.0913-2.845-4.6846-1.8605-2.5496 1.5764-10.321-0.9934-12.739 1.9205-1.2017 1.4481-1.1058 1.7073 0.6271 1.6931 1.1251-0.0109 2.767-0.4728 3.6482-1.03v3e-4zm23.14-0.319c1.8506-1.0927 2.4121-1.0927 2.8079 0 0.6766 1.8685 4.6831 1.7347 4.6831-0.1561 0-1.6671-2.9298-3.1927-4.3937-2.2878-0.5052 0.312-1.2614 0.0131-1.6803-0.665-1.0951-1.7719 1.7877-3.2054 4.0312-2.0048 4.491 2.4034 2.0815-0.3169 0.2725-7.4517-0.604-2.3816-4.6636-1.475-6.5952 1.473-1.5522 2.369-1.6301 3.207-0.4708 5.0634 1.7157 2.7474-0.1791 4.3641-3.9932 3.4069-1.7069-0.4285-2.4675-0.1338-2.4675 0.9559 0 3.2837 3.7218 4.0779 7.8062 1.6664l-2e-4 -2e-4zm-2314.9-52.72c-1.9534 0-53.942-0.1986-55.292 0.6244-1.3484 0.822-0.5212 41.443-0.4336 48.545 44.29 0.9628 49.655 1.1729 56.312 0.2924-0.1955-16.469-0.3916-32.993-0.5869-49.462zm2287 47.507c2.0616-0.7838 3.3699-0.7557 4.3938 0.094 2.1711 1.8019 3.7415 0.2471 3.7225-3.6862-0.0305-6.3513-1.3281-6.6874-6.8961-1.7861-2.8085 2.472-5.1063 4.9446-5.1063 5.4944 0 1.2588 0.2922 1.2501 3.886-0.1162l1e-4 1e-4zm21.554-2.9813c-0.7162-4.5377-1.834-5.6948-5.5259-5.7197-1.6521-0.011-2.8323 0.8959-3.5204 2.7053-2.7992 7.3623 4.5939 5.8634 8.942 6.928 0.4131 0.1017 0.46-1.6602 0.1038-3.9137l5e-4 1e-4zm108.53-82.432c99.402-98.529 127.82-126.84 159.04-157.9l4.5492 1.5797c9.2942 3.2273 23.474-3.3776 25.323-11.795l0.7066-3.2172c27.058 0 30.421-0.2468 30.421 1.7634 0 3.0314 4.4371 9.8239 7.6615 11.729 9.2182 5.4453 22.816 1.7875 27.227-7.3239 2.8553-5.8982 2.855-9.7166-9e-4 -15.616-3.728-7.701-12.687-11.574-21.367-9.2373-4.7238 1.272-10.566 6.6189-12.322 11.278l-1.1204 2.9728-29.034 0.6104c-3.5624-8.906-3.6888-10.583-9.2459-13.385-9.0532-4.5652-21.561-2.2827-26.758 4.8832-3.0057 4.1443-3.6016 14.134-1.1283 18.917l1.8943 3.6631c-224.3 223.09-239.98 238.87-242.6 238.87-1.3318 0-2.4303 0.953-2.8339 2.4585-1.087 4.0564-0.7925 5.1901 1.3484 5.1901 1.2352 0 35.96-33.625 88.231-85.437h1e-4zm161.12-164.51c-13.089-12.148 12.472-30.622 17.437-12.181 1.4344 5.3268-0.1082 11.073-3.6346 13.544-3.8604 2.7039-10.083 2.0896-13.803-1.3624v-2e-4zm69.616 0.5409c-9.0137-7.4441-4.1938-20.482 7.5722-20.482 3.9077 0 5.4761 0.6224 8.0475 3.194 2.6151 2.615 3.194 4.1154 3.194 8.2788s-0.5789 5.6639-3.194 8.2789c-4.1297 4.1299-11.108 4.4561-15.62 0.73zm-2556 219.35-63.92-0.5792c0 28.174 0.2983 28.376 0.4558 28.533 0.2214 0.2212 5.4343 0.4554 62.768 0.4554 0.9012-4.7164 1.063-3.6908 0.6963-28.409zm-80.869 10.653c-0.2439-7.6621-0.4641-14.3-0.4885-14.751-0.0251-0.4507-0.9839-0.8195-2.1316-0.8195-1.9609 0-2.0679 0.8395-1.7749 13.931 0.3782 16.924 0.1426 15.57 2.7114 15.57 2.0203 0 2.1053-0.7023 1.6836-13.931zm10.393-0.6373c0-8.0127-0.2939-14.863-0.6533-15.222-0.3591-0.3594-1.3425-0.3887-2.1853-0.0657-1.209 0.464-1.532 3.6753-1.532 15.222 0 13.905 0.1094 14.634 2.1853 14.634s2.1853-0.7285 2.1853-14.569v4e-4zm2551.1 7.9284c0.3944-4.6891-5.3096-13.808-10.103-16.151-4.4192-2.1603-8.2532-0.2137-8.2532 4.1898 0 5.327 11.814 16.966 16.39 16.146 1.0161-0.1821 1.7634-1.7722 1.9663-4.1841h2e-4zm-8.8512-4.1895c-4.4471-4.9224-6.5358-8.4575-5.9809-10.122 0.5008-1.5023 11.773 10.796 11.773 12.845 0 2.5838-1.7346 1.7683-5.7923-2.7229zm61.48 4.865c1.7769-2.141 0.6213-6.6898-3.0599-12.044-3.7441-5.446-7.5786-7.6962-11.456-6.723-2.3993 0.6022-2.9291 1.3558-2.9291 4.1671 0 2.7273 1.3102 4.7421 6.381 9.8131 6.5797 6.5796 8.7846 7.5336 11.064 4.7869zm-7.8845-6.7557c-4.0024-4.9458-5.1699-8.0398-3.0339-8.0398 1.0842 0 8.7703 10.76 8.7703 12.278 0 1.9162-1.8808 0.5269-5.7364-4.2379zm-3545.3 3.1598c0.0303-1.6526 0.3086-4.9774 0.6182-7.3884 0.5674-4.4199-0.9375-10.367-2.623-10.367-0.501 0-1.7241 0.6146-2.7168 1.3657-2.5264 1.9106-1.4365 17.948 1.269 18.671 3.2173 0.8601 3.397 0.7415 3.4531-2.2812h-5e-4zm69.648 2.0751c1.0166-0.6453 1.3228-3.4725 1.0923-10.09-0.291-8.3586-0.5186-9.1938-2.5054-9.1938-2.0049 0-2.2114 0.8331-2.4995 10.107-0.3198 10.302 0.2036 11.53 3.9126 9.1772zm75.701-19.831h-5.5454c0 21.116-0.3711 20.965 2.4585 20.563 2.8579-0.4058 2.48-1.05 3.0869-20.563zm74.735 18.302c0.6919-3.0449 0.9829-12.343 1.1216-15.57 11.699-1.2902 13.48-1.0378 17.655-5.0837 3.4609-3.3545 4.7539-6.3889 2.7231-6.3889-0.5107 0-3.0923 1.5869-5.7368 3.5266-5.4121 3.9698-6.2671 3.5977-21.589 4.3464-0.8042 20.612-1.2944 21.629 2.6733 21.629 1.7959 0 2.7661-0.7565 3.1533-2.4585v-3e-4zm3030.5-0.2829c2.0436-1.5077 8.6541-8.0735 14.69-14.59 28.682-30.968 224.18-224.72 228.34-226.3 4.7659-1.8119 3.3563-7.2692-3.9484-2.452-1.2911 0.8514-251.82 246.08-244.9 246.08 1.1562 0 3.7742-1.2336 5.8179-2.7413h1e-4zm-3518.2-14.887c-4.4443 0.4272-2.7798 0.2673-7.2012 0.6921-0.3867 9.5967-0.2402 5.968-0.645 15.989 4.4185-0.4248 2.7866-0.2679 7.2007-0.6921 0.3882-9.6135 0.2412-5.9685 0.6455-15.989zm72.016 7.3218c0-7.1494-0.2607-8.2037-2.1758-8.8118-3.5122-1.1146-4.3804 0.2874-4.3804 7.0742 0 8.1196 0.6953 9.8588 3.9414 9.8588 2.5235 0 2.6148-0.2838 2.6148-8.1212zm3713.5-4.428c1.6554-2.5264 1.6381-3.0691-0.248-7.8025-2.4673-6.1923-8.033-12.428-11.092-12.428-5.5117 0-7.3271 6.5818-3.5323 12.806 2.023 3.3179 10.224 10.14 12.19 10.14 0.497 0 1.704-1.2219 2.6827-2.7155h1e-4zm-5.7432-4.2547c-3.601-3.0299-7.7516-10.037-6.6174-11.171 1.1152-1.1152 3.5533 1.2919 7.4343 7.3403 4.027 6.2752 3.7321 7.6584-0.8169 3.8307zm59.152 3.0307c4.2971-4.2971-6.3062-19.006-13.701-19.006-2.7307 0-3.1942 0.4221-3.1942 2.9092 0 3.8666 6.1204 13.246 10.311 15.802 4.0768 2.4861 4.3801 2.4996 6.5845 0.2953v1e-4zm-8.0593-7.2023c-3.3-4.4875-4.2769-7.4332-2.465-7.4332 1.1497 0 7.8338 9.2422 7.8338 10.832 0 2.3915-2.0781 1.076-5.3687-3.3987h-1e-4zm503.26 1.6926c2.0871-0.9904 5.3169-3.6946 7.177-6.0095 3.2796-4.0809 3.5917-4.209 10.274-4.209 6.4061 0 7.0026-0.2115 8.4723-3.0048 8.0252-15.253 5.0526 48.219 8.3458-454.27 1.8336-279.78 0.0039-354.56 4.028-354.56 2.0822 0-1.6261 640.39-3.0973 803.64-3.7797 3.8883-8.0378 7.7479-6.4089 8.7548 1.7317 1.0701 9.792-7.6681 12.132-10.008 2.1782-393.83 2.2487-411.53 4.1791-804.52l2.3092-2.3092c5.3522-5.3522 7.3374-17.077 3.9803-23.508-1.8652-3.573-6.6413-8.3045-10.259-10.163-3.8992-2.0033-11.404-1.4215-16.188 1.2548-8.4091 4.7042-11.644 16.808-7.1418 26.725 2.0432 4.5011 7.5352 9.0247 10.966 9.0325 1.8625 0.0044 1.8597-27.439 0.0328 320.15-2.6562 505.56-1.0101 482.66-7.6212 486.2-1.1563 0.6187-3.9993 1.1249-6.318 1.1249-4.0926 0-4.2554-0.1482-5.5731-5.0748-1.8903-7.0676-5.1765-11.228-10.853-13.738-6.3032-2.7882-11.11-1.9062-16.589 3.0435-5.5209 4.9879-6.987 8.8418-6.408 16.845 0.3623 5.0092 1.0976 7.2118 3.1362 9.3944 6.1466 6.5803 14.34 8.5737 21.425 5.212h5e-4zm-15.386-9.2096c-4.0573-4.822-3.9094-11.023 0.3652-15.297 9.834-9.8341 23.739 4.5994 14.738 15.297-2.3553 2.799-3.6192 3.3617-7.5514 3.3617-3.9321 0-5.196-0.5628-7.5514-3.3617zm10.106-7.5269c0.4315-2.9517-1.8639-4.7957-3.8833-3.1198-1.7612 1.4618-1.7902 3.3496-0.0776 5.0623 1.8535 1.8534 3.526 1.0332 3.9609-1.9425zm33.446-817.66c-6.577-5.6573-2.692-17.164 5.795-17.164 4.8983 0 10.106 4.9927 10.106 9.6889 0 4.4794-3.9903 8.8126-8.8232 9.5814-3.1388 0.4992-4.5297 0.0853-7.0775-2.1063zm-3074.8 827.43c-1.2068-1.1437-58.257-2.3807-60.461-2.439 0 1.8965-0.1753 7.3864 0.7456 8.3074 0.3235 0.3236 3.5608 0.718 59.896 0.1649 0.2122-1.4976 0.9241-4.9862-0.1804-6.0333zm-1282.3 2.215c10.303-6.2821 10.712-22.574 0.7568-30.168-9.5054-7.2499-23.239-2.1486-26.556 9.864-4.0146 14.541 13.126 28.03 25.798 20.304h1e-3zm-12.392-4.3426c-1.2515-0.506-3.6382-2.5405-5.3042-4.521-2.5181-2.9922-2.9336-4.3212-2.4595-7.8591 1.46-10.883 14.557-13.953 20.898-4.8993 3.5332 5.0449 1.0503 13.648-4.8154 16.681-3.5659 1.8441-4.9883 1.9465-8.3193 0.5988v-2e-4zm82.146 2.2547c6.8027-3.0895 9.7256-7.9401 9.7256-16.14 0-7.8694-2.0884-11.496-8.8442-15.359-5.5425-3.1692-9.5571-3.1061-15.267 0.2397-12.567 7.3649-11.885 25.999 1.1646 31.799 4.4917 1.9962 7.9468 1.8552 13.22-0.5396h4e-4zm-10.489-5.2455c-3.2432-1.1855-6.5347-5.108-7.1821-8.5579-1.3364-7.1239 5.8164-14.57 12.572-13.086 3.7524 0.8242 8.291 5.5422 9.252 9.6189 1.8637 7.9023-6.6935 14.93-14.642 12.025zm209.42 3.3472c8.4233-3.9971 12.038-16.887 7.0361-25.089-4.9395-8.1003-16.486-10.968-24.42-6.064-4.5684 2.8235-8.4795 10.02-8.4438 15.538 0.0361 5.5848 3.6885 12.671 7.8345 15.199 4.4692 2.725 12.727 2.9163 17.994 0.4169h-6e-4zm-13.287-4.8764c-8.6709-5.0066-7.7178-17.862 1.6108-21.726 9.9189-4.1086 19.028 10.682 11.772 19.116-2.8144 3.2715-9.8579 4.6451-13.383 2.6094zm83.673 4.187c16.709-11.26 7.6924-36.662-12.65-32.211-10.533 2.3044-15.838 14.904-10.77 25.582 4.0688 8.5736 15.665 11.856 23.421 6.6283l-5e-4 1e-4zm-13.831-4.2293c-6.7979-3.2983-7.6919-14.341-1.6025-19.783 8.3916-7.4982 20.567 1.0231 17.538 12.274-1.9673 7.3048-9.2676 10.745-15.936 7.5093h9e-4zm88.056 4.2553c18.515-12.6 4.3027-39.299-14.778-32.012-11.713 4.473-15.812 18.508-8.2246 28.154 5.0619 6.4352 16.417 8.3395 23.002 3.8575zm-16.316-6.3668c-5.7427-5.7422-4.2554-15.688 2.8501-19.06 7.5381-3.577 15.641 1.9124 15.641 10.596 0 3.5426-0.7217 5.1173-3.7148 8.1111-4.9902 4.9901-10.019 5.1102-14.776 0.353v-1e-4zm92.465 5.9553c5.147-3.8425 7.2124-7.6246 7.7578-14.203 0.6411-7.7358-1.481-12.176-7.8511-16.423-8.8594-5.9065-20.445-3.1245-25.664 6.1631-5.561 9.894-1.5024 22.447 8.6011 26.603 3.4361 1.4134 14.193 0.0721 17.156-2.1401zm-13.568-3.3219c-4.1777-0.8734-7.959-6.4824-7.959-11.805 0-10.222 10.747-15.192 18.585-8.5966 4.4292 3.7273 5.5962 6.8628 4.2998 11.558-1.834 6.642-7.9956 10.293-14.926 8.8439zm3324.1 0.792c0.772-2.4324-2.3103-9.0466-6.5807-14.122-4.7416-5.6351-11.428-4.2905-11.428 2.2982 0 2.3044 1.651 4.7972 6.436 9.7178 5.6389 5.7986 6.7125 6.4703 8.6672 5.4243 1.227-0.6566 2.5344-2.15 2.9054-3.3184zm-9.1707-5.6645c-4.3166-5.4214-5.5851-8.6031-3.4302-8.6031 1.024 0 4.5808 4.3584 8.1652 10.006 3.4165 5.3827-0.1809 4.3171-4.735-1.4026zm-2582.3 7.9508c2.4463-0.7012 2.4812-0.9612 2.636-19.658 0.1738-20.997 0.2102-20.888-6.9492-20.918-7.1357-0.0294-7.5457 1.1696-7.2068 21.09 0.2988 17.567 0.3079 17.624 3.0315 19.001 2.9512 1.4918 4.6387 1.588 8.4885 0.4845v-2e-4zm-6.6216-3.0319c-0.426-0.426-0.7744-8.027-0.7744-16.891 0-16.73 0.2671-17.675 4.6716-16.533 1.7676 0.4584 1.9131 1.9716 1.6389 17.031-0.2856 15.692-0.4138 16.544-2.5312 16.848-1.2266 0.1756-2.5789-0.0294-3.0049-0.4553zm2649.8 1.5565c2.0118-2.0117 1.5771-5.1454-1.4247-10.268-3.2236-5.5006-7.9728-9.1818-11.846-9.1818-3.7018 0-4.3107 1.3188-2.947 6.3834 0.7568 2.8104 2.9767 5.9628 6.558 9.3127 5.624 5.2605 7.4446 5.968 9.6597 3.7529l1e-4 3e-4zm-7.0844-6.6105c-4.2252-4.4639-6.1662-8.1182-4.7703-8.9808 1.047-0.6471 9.8881 9.6687 9.8881 11.537 0 1.8717-1.7571 0.9939-5.1178-2.5566zm-2563.2 5.0731c1.9934-0.7649 1.7283-5.1588 1.7283-27.746-17.434 0-65.338-0.1642-65.886 0.8195-0.5977 1.0754 0.533 24.841 0.5999 26.463 67.281 0.6733 61.884 1.1056 63.557 0.4629l4e-4 -2e-4zm-484.14-8.4865 7.0725-3.6865c0.7227 3.6125 0.4299 2.1493 1.1577 5.7878 261.34 0.2828 384.54 0.6521 385.48-0.8704 0.4375-0.7079 1.0037-5.255 1.2581-10.105 0.3916-7.4602 0.1658-9.0648-1.4685-10.421-2.1929-1.8204-43.864-1.6029-379.11-1.6029v7.4781c13.022-0.0619 94.163-0.7365 94.964 0.5616 0.9202 1.4886-93.423 0.9343-96.024 1.9327-0.9194 0.3528-1.6714 1.8181-1.6714 3.2562 0 1.8862-0.6089 2.6146-2.1853 2.6146-2.6182 0-2.7361-0.9127-0.5251-4.0691 2.9111-4.1561 2.4512-11.365-1.179-18.487-7.9077-15.513-24.336-18.202-35.871-5.8695-7.8713 8.415-8.9226 13.404-5.0776 24.097 1.1802 3.2822 2.1636 5.561 2.1853 5.0641 0.022-0.4969 1.5464 0.6035 3.3887 2.4457 6.6509 6.6508 17.08 7.3586 27.603 1.8735l-6e-4 1e-4zm-16.542-13.838c-2.8894-2.6919-3.0291-3.4058-0.4795-2.4502 1.656 0.6206 1.7166 0.4761 0.4521-1.0791-2.8127-3.4595 1.9402-5.9038 2.0754-2.1647 0.0515 1.4084 0.3408 1.2345 1.0999-0.6604 0.7383-1.8435 1.5703-2.3672 2.9353-1.8475 2.6345 1.0029 0.8123-1.4297-3.8506-1.7852-2.7896-0.2125-3.2466-0.5472-2.1675-1.5867 1.3003-1.2526 4.1204-1.8962 7.104-1.6215 5.0276 0.4633 7.6633 10.062 3.7383 13.615-2.7349 2.4749-8.019 2.2716-10.908-0.4197v4e-4zm129.07 0.8058c-0.738-1.1852 75.473-0.7611 77.37 0.4304 2.0276 1.274-76.663 0.7057-77.37-0.4304zm79.799 0.6753c1.2358-1.2356 180.78-1.6666 182.98-0.4391 2.6851 1.5028-183.95 1.4154-182.98 0.4392v-1e-4zm2825.9 7.8621c-0.3564-0.9288-0.0667-1.5144 0.6765-1.3658 2.4463 0.4893 2.0423-4.5693-0.7449-9.3253-4.2418-7.2378-7.3973-9.7542-11.714-9.3409-3.1975 0.306-3.7126 0.7798-3.9962 3.6766-0.812 8.2926 18.283 22.882 15.779 16.355v2e-4zm-5.2127-6.2959c-8.2242-8.8654-7.3259-15.972-0.7857-6.048 6.2884 9.5426 6.6565 12.376 0.7857 6.048zm59.693 2.454c2.3344-2.5796 1.4291-5.3766-3.931-12.144-3.1839-4.0199-9.7015-7.2489-11.895-5.8932-3.7191 2.2985 2.7576 14.828 9.5782 18.53 3.8455 2.0872 3.9183 2.0814 6.2478-0.4926v2e-4zm-7.9833-6.7217c-4.7757-4.7285-5.59-6.3857-3.1376-6.3857 3.8729-1e-4 16.225 19.344 3.1376 6.3857zm-26.928-7.9589c1.603-2.4467 1.5994-2.9761-0.0448-6.4409-2.6721-5.6309-9.1712-12.746-11.642-12.746-4.2961 0-6.6518 2.1216-5.8598 5.2771 1.4409 5.741 11.038 16.314 15.006 16.532 0.4369 0.0239 1.5804-1.1559 2.541-2.6221zm-8.1594-6.7755c-4.0712-4.6252-5.8249-9.1338-3.5525-9.1338 0.7733 0 6.9521 8.4514 9.3865 12.839 1.7698 3.1896-1.7112 0.9788-5.834-3.7048zm-3310.1 5.6032c0.7012-1.8285-1.0879-4.4475-4.1646-6.0939-3.3862-1.8123-2.4282 1.9661 1.0029 3.957 1.6528 0.9589 2.144 1.4817 1.0923 1.1619-4.6025-1.4 0.27 5.6608 2.0684 0.975h1e-3zm765.63 0.8122c0.5886-0.9529-0.2517-4.7473-0.6521-6.8419-57.414 0.5521-60.291 0.2659-60.732 2.5563-0.9775 5.0826-0.9917 5.0802 30.847 5.0886 16.52 0 30.261-0.3569 30.537-0.8029l2e-4 -1e-4zm2604.4-1.7795c2.3029-2.4509 2.3557-2.8248 0.8207-5.793-2.0006-3.8687-11.012-12.347-13.123-12.347-0.8414 0-2.1796 0.7828-2.9737 1.74-1.2191 1.469-1.0302 2.5201 1.2116 6.746 2.8163 5.3088 8.8071 12.274 10.557 12.274 0.5754 0 2.1539-1.1791 3.5078-2.6201l-1e-4 -2e-4zm-6.8046-5.3017c-6.4505-8.6436-5.8794-11.967 0.6573-3.8242 5.0817 6.33 5.5977 7.3754 3.6406 7.3754-0.9063 0-2.8404-1.598-4.2979-3.5512zm-3886.1-11.746h-6.6445v18.72c7.0409-0.8101 5.9257 1.6927 6.6445-18.72zm413.79 6.1887c0.311-10.622 0.2905-10.719-2.1851-10.367-2.3477 0.3329-2.5186 0.9127-2.8193 9.5507-0.3652 10.492 0.0845 12.42 2.7754 11.905 1.6446-0.3147 1.9595-1.8858 2.229-11.089zm-341.67-7.2814h-6.6475v17.628c7.0167-0.8074 5.9273 1.4936 6.6475-17.628zm197.45 7.3755c0.3296-9.9822-0.0176-10.655-4.5967-8.8975-1.9805 0.76-1.7285 4.6176-1.7285 19.15 6.3809-0.7341 5.9683 0.5559 6.3252-10.252zm70.16 0.2731c0-9.761-0.021-9.8339-2.7319-9.8339-2.8735 0-2.9297 0.2115-2.9297 10.926 0 8.4902 0.084 8.7412 2.9297 8.7412 2.7114 0 2.7319-0.0732 2.7319-9.8338zm2353.6 2.5669 6.873-7.2668c17.283 0.4453 31.944 0.8231 49.116 1.2656 2.6056-2.6055 5.2505-5.3066 5.9323-5.3066 0.3441 0 2.3055 1.475 4.359 3.2778 2.6479 2.325 4.8607 3.278 7.6107 3.278 2.1324 0 3.7136-0.4049 3.5129-0.8999-0.5249-1.2974-15.186-14.397-16.113-14.397-0.4279 0-2.222 1.5245-3.9872 3.3878-1.7651 1.8634-4.3855 3.8445-5.8229 4.4026-3.396 1.3182-35.944-0.2263-42.731-0.479-0.0475-15.553 0.1471-14.174-15.877-31.35h-21.008c-15.827 16.777-14.258 13.828-15.015 25.677l-139.31 0.5625v6.5398c54.28 0 137.67-0.126 137.67 0.88 0 1.7249 12.215 15.654 14.554 16.597 3.0006 1.209 19.439 1.0723 23.364 1.098l6.873-7.267-1e-4 2e-4zm-22.027 1.0351c-5.7234-0.3953-6.5375-0.8032-10.77-5.3945-3.9008-4.2318-4.4802-5.4568-3.9158-8.2797 2.827-14.135-4.1617-7.621 9.5897-24.893h17.925c10.236 10.578 12.483 12.284 12.483 19.661 0 3.4517-0.8779 5.6576-3.7456 9.4133-6.9667 9.124-9.6703 10.314-21.567 9.4921l4e-4 1e-4zm11.514-9.1499c4.3477-3.4198 5.3248-6.0179 4.505-11.978-0.6277-4.5635-1.2681-5.6333-4.5223-7.5532-5.7367-3.3846-11.508-2.9684-15.601 1.125-2.8578 2.8577-3.3619 4.1815-3.3619 8.8252 0 4.5815 0.5154 5.9788 3.1938 8.6572 4.042 4.0421 11.284 4.4658 15.787 0.9238h-3e-4zm-12.824-2.1799c-2.3157-1.8215-2.8792-3.187-2.8792-6.9811 0-5.9285 2.549-9.1917 7.8414-10.039 8.8864-1.4224 13.416 10.45 6.2793 16.456-4.0627 3.4183-7.3999 3.5858-11.242 0.5641v-1e-4zm-1902.4 9.3669c3.3201-2.7043 6.4495-4.917 6.9541-4.917 0.5049 0 1.5103-1.4304 2.2344-3.1788 2.0317-4.9048 0.5347-5.7755-14.231-20.21 0.22-142.7 0.6309-139.93-2.1189-143.79-1.2844-1.804-3.2576-3.7734-4.3845-4.3766-1.7302-0.9259-20.378-21.553-32.988-36.489-11.814-13.993-23.134-0.6855-22.062-11.694 0.4185-4.2941-4.0615-34.102-4.7942-6.9917l-0.3098 11.478c-8.1758 0-9.1377 1.1401-9.4514-14.86-0.1306-6.6704-0.7219-13.402-1.3137-14.958-2.2986-6.0459-12.71-4.9747-40.118-3.733-15.292-18.221-13.694-17.433-23.89-20.095-14.641-3.8224-15.843-4.0645-15.843-3.1905 0 4.1793 24.038 7.2589 24.038 12.125 0 0.6211-1.0925 0.364-2.4285-0.5715-1.615-1.1312-5.1831-1.7508-10.653-1.8497-4.5237-0.0818-7.1189-0.3619-5.7664-0.6224 6.7124-1.2927-3.0049-6.0859-3.0049-0.8034 0 0.866-0.9822 1.5745-2.1819 1.5745-2.4854 0-10.93 7.1839-10.93 9.2978 0 0.7672-0.7625 1.6875-1.6941 2.0449-1.9094 0.7327-1.6101 4.8409-1.0376 33.459-12.831-0.0016-17.576 0.2009-16.062-1.3138 1.6589-1.6591 1.3115-17.412 1.3115-29.572l-14.52-13.306-25.028 0.6913c0.7085-2.1081 1.7109-4.6514 1.7871-7.8566 0.0596-2.4808-0.395-2.7616-4.9473-3.0574-7.8003-0.507-10.445 4.1726-3.1792 5.6258 8.3013 1.6602 2.0269 6.8356-5.4663 14.442v30.748l12.118 11.46c24.639-1.1947 19.675-1.3949 142.33-1.4534 14.382 14.822 23.111 23.728 54.306 55.639-0.1765 123.5-0.4177 138.84 1.4478 141.53 3.855 5.5684 22.154 23.691 23.92 23.688 1.0601 0 4.644-2.2152 7.9641-4.9196l-0.0016-6e-4zm-26.828-162.55c-10.302-10.74-44.834-47.085-49.442-49.525-7.186-3.8058 0.655-4.6621 1.9231-2.61 0.3774 0.6107 1.2668 0.7778 1.9768 0.3711 0.7097-0.4066 0.9304-0.3416 0.4905 0.1447-0.9539 1.0544 1.6858 4.0603 25.245 28.749 9.9209 10.396 18.686 19.827 19.477 20.957 1.6821 2.4016 1.3103 33.292 0.8599 142.61-0.0645-17.132-0.4654-123.57-0.5301-140.7zm12.057 0.8407c-0.1592-1.2019-0.356-2.8994-0.437-3.7721-0.0808-0.8728-1.3765-1.9301-2.8789-2.3496-1.5024-0.4194-2.0054-0.8118-1.1182-0.8717 2.1294-0.1436-15.448-17.611-16.375-17.038-0.3945 0.2439-0.7175-0.3107-0.7175-1.2322s5.1213 3.4456 11.38 9.7048c10.097 10.097 11.327 11.739 10.908 14.562-0.3203 2.1565-0.5657 2.4777-0.7622 0.9967h2e-4zm-43.47-46.49c-5.9648-6.3862-6.6638-7.6005-4.3706-7.5913 2.2979 0.0088 7.3401 4.7705 7.6919 7.2634 0.1824 1.2935 0.9934 3.1493 1.802 4.1238 0.8088 0.9747 1.2776 1.9011 1.0417 2.0588-0.2358 0.1578-3.01-2.4768-6.1653-5.8547h3e-4zm-64.507-39.156c1.3296-0.4919 3.2966-0.6646 4.3706-0.3837 2.5193 0.6588 2.2983 2.4606 1.7681 24.184 7.8132 2.2502 9.2793 2.0739-8.5566 2.2958 0-24.366-0.4161-25.047 2.4179-26.096zm-98.226 13.018c-3.0034-1.262-4.748-4.457-4.6035-8.4299l0.1123-3.0767c0.6172 2.5822 1.9824 10.078 4.1304 8.7512 1.3281-0.8207 6.5718 1.9744 6.5718 0.6277 0-0.8256-5.0542-2.7893-6.5557-2.547-1.3481 0.2175-0.3687-6.3854 1.1763-7.9305 1.4385-1.4384 2.2505-1.5051 4.917-0.4037 1.7568 0.7255 3.4399 1.3679 3.7407 1.4274 3.5601 0.7057 4.1982 4.2731 1.3657 7.6375-4.2075 4.9982 3.0049-2.8805 3.0049-0.6549 0 3.2572-9.5288 6.4189-13.86 4.5989zm63.106-9.5104c0.0676-2.7111 0.1914-2.8215 1.0159-0.9036 1.8413 4.2839-0.1013-0.9554 2.4585-3.8262 1.0723-1.2025 0.9165-1.1907-0.7251 0.0547-1.9644 1.4902-2.012 1.4382-0.7881-0.8594 2.8406-5.3306 11.232-4.5048 14.039 1.3816 1.6875 3.5388 1.686 4.056-0.0251 7.6448-1.624 3.4058-5.3115 5.9847-8.5581 5.9847-1.0052 1e-4 -7.5321-4.8349-7.4171-9.4766zm58.249 5.9861c-0.374-0.6051-2.0435-0.8275-3.7102-0.4943-2.5996 0.5199-2.9507 0.3029-2.4714-1.5288 0.6609-2.5281 1.2434-2.5941 4.0632-0.4612 2.6973 2.0402 4.9812 2.0575 4.9812 0.0378 0-2.6909-9.5779-2.3062-2.5857-2.6405 2.8164-0.1346 3.5134 0.306 3.9299 2.4843 0.3667 1.9187-0.0491 2.7933-1.5107 3.1754-1.1091 0.29-2.3228 0.0323-2.6965-0.5728h2e-4zm-124.01-10.478c2.3867-4.46 11.786-4.1862 15.468 0.4506 1.5347 1.9327 1.4858 1.938-1.3262 0.1444-8.0225-5.1184-11.501-1.3252-15.388 1.7324l1.2461-2.3274zm-51.229 251.07c0-1.4323 2.5513-1.5605 1.6226 0.2732-0.3804 0.7512 0.104 0.3824 1.0757-0.8195 3.1538-3.8994 3.3628-7.2537 0.5923-9.4972-2.5029-2.0266-5.5664-1.8541-8.4805 0.4771-1.9131 1.531-1.7031 6.8878 0.3511 8.9421 1.9228 1.9227 4.8388 2.2991 4.8388 0.6243zm4100.7-0.3495v-84.877c-73.801 0-75.127-0.3531-76.447 2.1135-1.5319 2.8621-1.1311 66.283-1.1311 84.206 27.615 1e-4 34.532-0.2663 77.578-1.4421zm-71.297-5.3868c-0.2798-0.7512-0.2651-17.429 0.0328-37.062 0.5338-35.187 0.5744-35.705 2.8504-36.316 3.0271-0.8127 58.144-0.6481 61.858-0.65v74.003c-12.295 1.6851-63.949 2.1504-64.741 0.0237v6e-4zm20.489-66.925c-6.3355-0.5289-7.616-1.0807-10.255 2.2742-2.6789 3.4058-2.3106 4.0864-2.3106 54.922 6.1685 7.3313 5.3134 6.8833 12.566 6.1774v-63.374zm35.268 62.219c2.405-1.6846 2.4284-1.978 2.4284-30.516 0-24.739-0.2429-29.058-1.717-30.532-1.316-1.3159-4.1023-1.717-11.93-1.717-5.6171 0-10.99 0.2985-11.941 0.6633-1.5177 0.5824-1.7283 4.3036-1.7283 30.532 0 35.384-0.8674 33.271 13.658 33.271 6.1974 0 9.5197-0.5032 11.23-1.7009v-2e-4zm-4061.8 8.3853c1.1504-1.8611-11.332-16.001-17.534-19.862-5.4136-3.3701-12.735-1.1277-15.953 4.8862-2.2207 4.1484 3.2646-2.6354 6.8555-2.6354 2.7363 0 8.6675 3.5485 8.6758 5.1901 0 0.7512 0.5566 1.2428 1.2275 1.0927 0.6714-0.1501 1.3823 0.7013 1.5791 1.8922 0.1978 1.1912 0.8818 2.3398 1.5205 2.5527 3.1089 1.0367 11.23 10.764 13.629 6.8831h-5e-4zm793.69-52.296c9.6282-13.284 14.571-20.178 19.922-28.332-7.0195-11.657-10.386-16.043-10.409-29.311-0.0283-16.006 9.0273-27.726 25.242-32.669 6.1184-1.8654 6.739-2.3994 13.268-11.414 16.636-22.97 13.234-21.507 27.022-35.839 375.81 1.8104 1259.8 2.7629 1260.8 0.069 0.6802-1.7723 1.3619-23.46-0.7744-39.05-603.13 7.1567-733.85 5.085-1294.1 3.2666-14.108 19.965-26.984 38.389-40.779 58.818-36.997 54.79-85.177 119.77-86.69 128.93-0.9082 5.5043-0.741 30.57-0.7454 36.603h65.273c4.4481-26.91-6.3678-12.019 21.94-51.075zm442.92-164.32c2.6118-1.6562 42.117-0.8975 10.38 0.421-6.5239 0.2709-11.174 0.0823-10.38-0.421zm414.19-0.6629c9.8818-0.5121 27.188 0.3822 7.3752 0.3822-8.1129 0-11.432-0.172-7.3752-0.3822zm87.882-0.0077c55.003-0.651 88.34 0.3119 27.119 0.3124-29.447 1e-4 -41.65-0.1404-27.119-0.3124zm-1762.4 204.24c2.5283 0.201 4.2515 0.036 3.8281-0.3663-0.9414-0.8966-3.0933-1.2145-7.0674-1.0441-3.4873 0.1495-7.3911 5.4856-7.2891 9.9634 0.0503 2.1958 0.6382 1.5894 2.9966-3.0934 2.916-5.7874 2.9644-5.8226 7.5312-5.4594l6e-4 -2e-4zm-606.64-65.561c-1.7456-1.6189-59.009-2.7373-61.866-1.2081l-2.3691 1.2676c0.04 2.5658 0.8901 72.331 1.8794 73.933 0.9512 1.5387 33.843 1.2144 64.172 1.2144-0.1036-10.606-0.3311-73.829-1.8165-75.206zm-56.271 5.277h50.08c0.0342 2.6309 0.9087 60.381 0.4214 61.462-0.4463 0.9927-37.844 0.8196-50.502 0.8196 1e-3 -38.174 5e-4 -24.107 5e-4 -62.281zm43.963 53.157c1.4629-2.2896 0.9814-40.522-0.5361-42.597-1.5986-2.1855-5.0762-1.8127-36.324-1.2723v44.799c4.4297 0.2109 34.872 2.1831 36.86-0.9288v-2e-4zm3984.1 12.347c1.9759-2.1831 1.9732-2.3413-0.1038-6.2335-3.4444-6.4542-9.5786-12.286-12.923-12.286-3.7418 0-4.6048 2.278-2.9524 7.7932 1.4733 4.9176 8.8826 12.967 11.936 12.967 1.1088 0 2.9282-1.0082 4.0433-2.2402v-2e-4zm-8.1052-5.9303c-4.6112-5.0024-5.2973-6.5109-3.4745-7.6375 0.9394-0.5804 9.8912 10.108 9.8912 11.81-1e-4 1.8044-2.2658 0.331-6.4167-4.1723zm-2912.3 4.7476c12.994-6.2904 15.864-22.738 5.7336-32.868-8.1172-8.1176-9.9424-0.4547-13.392-7.6882-2.6885-5.6385-3.1614-11.223-4.5754-15.024-0.4377-1.1769 1.053-2.3574 5.2881-4.1877 7.9634-3.4415 15.042-10.386 16.908-16.588 0.8113-2.696 1.7268-8.8959 2.0347-13.778 1.9966-31.671-22.617-32.823-24.282-39.454-0.7886-3.1421 1.4158-27.299 2.8037-30.726 0.8103-2.0002 1.6094-2.4272 3.6052-1.9265 4.2288 1.0614 9.875-3.4657 10.278-8.2407 0.3845-4.5582 2.6487-5.7883 8.8647-10.784l1.1853 4.402c2.7297 10.138-4.4414 20.527-15.799 22.888-3.0002 0.6239-3.3831 1.2832-5.3315 9.1818-1.4746 5.9773-1.7556 8.8533-0.9446 9.6643 0.8108 0.8109 1.5144-0.2688 2.364-3.6283 1.9519-7.7179 2.967-9.3749 6.2375-10.18 13.894-3.4215 21.824-17.68 17.383-31.258l-1.8359-5.6129 4.3894-5.6895c6.4644-8.3788 16.481-16.76 16.481-18.095 0-0.476 1.8762-1.1654 4.1699-1.5321 8.3069-1.3284 15.795-9.4783 17.768-19.338 1.0403-5.1991 0.9041-6.7115-1.0774-11.961-3.4973-9.2654-6.1223-12.797-12.581-16.929-3.2725-2.0934-6.2441-4.2823-6.6038-4.8643-0.8247-1.3345 0.5413-12.722 0.811-15.357 17.308 0 17.035 0.4139 17.847-2.8224 0.9009-3.5883-0.8875-33.978-1.2131-40.337l-9.0049-0.3172c-10.248-0.361-9.4729 0.5459-10.694-12.522-0.3792-4.0565-1.019-7.3798-1.4219-7.3853-0.7493-0.0101-3.5762 3.4501-6.5461 7.064-5.4597-2.6036-13.419-5.5899-14.15-18.385-0.4688-8.2105 1.7559-12.898 8.3347-17.561 8.3652-5.93 20.198-3.3967 26.398 5.6515 2.2668 3.308 2.7131 5.2441 2.7131 11.773 0 6.8652-0.3696 8.2982-3.0444 11.805-1.7698 2.3203-4.4834 4.3643-6.4814 4.882-3.7571 0.9736-4.6038 2.1743-3.1516 4.469 1.5493 2.4482 8.2783-0.4744 12.531-5.4424 14.379-16.799 0.7664-43.256-21.172-41.148-16.177 1.5544-26.092 18.419-19.643 33.41 2.948 6.8524 9.3738 12.937 14.721 13.941 3.9246 0.7363 3.9365 0.7562 3.6951 6.0479-0.2795 6.126-1.4431 8.8455-2.3313 5.4485-0.5254-2.0089-1.4204-2.2777-7.5818-2.2777-3.9766 0-7.5505 0.5648-8.2969 1.3112-1.6758 1.6758-1.3113 22.658-1.3113 42.306l18.029 0.6347c0.2141 5.35 0.3979 9.9471 0.6118 15.297l-4.886 1.994c-9.0046 3.6749-17.032 15.621-17.032 25.347 0 13.798 12.34 21.299 21.976 27.592-1.8093 2.0403-15.406 17.728-16.867 17.728-1.4402 0-5.2134-3.8234-6.146-4.6995 8.2092-11.312 10.606-14.293 8.6277-16.677-1.9255-2.3201-2.875-1.9274-3.5544 1.4696-0.3342 1.6713-2.6501 5.359-5.1465 8.1948-3.7717 4.285-5.1797 5.1561-8.3325 5.1561-10.521 0-20.628 6.0464-24.554 14.69-2.4883 5.4783-2.7297 16.905-0.4502 21.313 1.9331 3.7375 8.4124 8.9282 11.588 11.643-2.8652 18.466-3.0706 21.777-7.1953 20.742-3.2739-0.8217-11.544 1.0846-17.396 4.01-6.6375 3.318-15.393 12.25-18.25 18.619-3.7966 8.4628-3.575 21.032 0.5103 28.94 6.0164 11.645 17.213 19.321 30.301 20.771l6.9592 0.7712c2.5515 11.346 1.5964 7.0995 4.1367 18.393l-4.5269 3.76c-20.694 17.19 0.7098 44.376 21.516 33.973zm-15.847-4.1488c-9.2629-4.2797-12.008-15.191-5.6455-22.438 3.5688-4.0648 5.2078-4.6599 7.239-2.6288 0.916 0.9161 0.5227 2.3075-1.5295 5.4088-3.7842 5.7179-2.5535 9.6576 3.7039 11.86 3.9988 1.4072 4.7368 1.3781 7.2781-0.287 4.7837-3.1345 4.927-7.8214 0.4307-14.097-1.1106-1.5505-1.021-2.2258 0.498-3.7449 6.0703-6.0702 17.893 13.401 3.9619 23.976-5.1914 3.9406-10.282 4.5643-15.937 1.9518l2e-4 1e-4zm-16.139-72.061c-11.343-5.2087-14.348-17.161-7.1917-28.608 2.7747-4.4384 3.7815-5.145 9.1731-6.4384 10.465-2.5105 16.972-0.2804 22.191 7.6063 10.449 15.789-5.467 36.03-24.172 27.44h3e-4zm17.983-6.5171c3.8198-3.6339 4.4165-4.834 4.4165-8.8854 0-8.8051-6.7393-15.322-15.845-15.322-3.1206 0-4.8687 0.8269-7.6707 3.6288-6.6472 6.6473-6.1484 14.978 1.2886 21.507 2.939 2.5802 4.7505 3.2728 8.5605 3.2728 4.1118 0 5.4919-0.6268 9.2495-4.2014l3e-4 2e-4zm-5.9773-78.089c-3.5581-3.5581-3.8093-4.2705-3.7925-10.749 0.0129-5.129 0.6553-8.0781 2.4629-11.309 4.582-8.1912 16.93-11.768 24.562-7.1143 1.9531 1.1909 3.551 2.5721 3.551 3.0695s-1.425 2.2695-3.1667 3.9382c-2.6357 2.5254-3.5396 2.8345-5.3911 1.8434-3.7378-2.0004-7.6277-1.3419-11.264 1.9069-4.3792 3.9126-4.5713 8.9303-0.5049 13.175 2.4155 2.5211 2.5933 3.2041 1.4351 5.5089-1.9978 3.9742-3.7063 3.9158-7.8921-0.2697h-3e-4zm50.221-53.014c-1.625-1.4221-8.252-2.0929-13.604-6.6343l-3.8242-3.2455c9.5867 4.6807 10.097 5.3411 23.492 6.7234 0-10.923 0.3328-3.1466 6.0947-10.7 2.3984-3.1445 2.8103-4.5769 2.2778-7.9218-0.8413-5.2841-5.0298-9-10.144-9-5.2361 0-7.9648 1.6857-9.7864 6.0453-1.5632 3.7412-0.8213 8.2247 1.6091 9.7269 0.6116 0.3782 0.8354 1.4093 0.4966 2.2915-0.3384 0.8822-0.0708 1.604 0.5942 1.604 0.6653 0 1.2095 0.5089 1.2095 1.131 0 0.767-0.7039 0.7545-2.1853-0.0385-1.5625-0.8362-2.8281-0.8256-4.4404 0.0374-3.0493 1.632-5.0435-0.1428-6.5825-5.8579-2.2812-8.472 2.3782-17.061 11.61-21.4 2.7339-1.2852 4.6882-2.7944 4.3425-3.3538-0.7849-1.2701-2.2095-0.4384-6.2107 0.4349-7.2473 1.5814-13.936 11.046-14.127 19.989-0.1038 4.8612-0.1714 4.9825-0.95 1.7051-1.844-7.7637 1.9907-17.285 8.7678-21.77 4.7549-3.1465 14.405-4.7986 15.709-2.6893 0.4141 0.6699 0.2476 1.218-0.3699 1.218-1.1199 0-1.6748 2.7787 4.3059 3.5811 14.28 1.9154 21.248 18.874 12.351 30.061-5.2703 6.6273-17.027 11.221-20.635 8.0629l-3e-4 1e-4zm3.0292-18.275c-3.0957-2.1683-3.2502-5.9476-0.2429-5.9476 1.3232 0 2.2153 0.754 2.262 1.9121 0.0657 1.6343 0.1997 1.5981 0.9211-0.2488 0.8257-2.1127 0.8726-2.1083 2.1064 0.1973 1.0127 1.892 0.9231 2.6971-0.4526 4.073-2.0742 2.0741-1.6543 2.0728-4.5938 0.0139l-2e-4 1e-4zm18.266-16.408c-1.7009-2.0495-8.033-5.334-12.226-6.3418-3.7893-0.9108-3.9268-2.8659-0.2014-2.8659 4.5439 0 11.235 4.3942 13.725 9.0143 1.2817 2.3777 0.5993 2.4793-1.2979 0.1934zm-22.083-49.203c-1.3706-1.3705-0.8701-7.0711 0.7644-8.7054 2.3149-2.3149 7.3599-2.0602 6.9548 0.3512-0.1794 1.0684 0.2817 1.7916 1.0449 1.639 1.8201-0.364 1.6577 3.3141 0.397 2.535-0.533-0.3293-1.5764 0.1334-2.3188 1.0281-0.7427 0.8948-2.2327 1.627-3.3108 1.627-1.0784 0-2.1345 0.5225-2.3474 1.1609s-0.7456 0.8024-1.1836 0.3642h-5e-4zm-93.04 291.42c13.814-6.2739 16.458-27.451-0.5703-35.262-3.4573-1.5862-5.4897-3.2489-5.7307-4.688-0.8643-5.1638 1.2341-93.49 2.2668-95.42 0.6074-1.135 4.3984-3.9871 8.4241-6.3379 9.0237-5.2694 12.647-10.298 13.327-18.494 0.7239-8.7292-0.5054-13.237-4.9509-18.158-4.7466-5.254-10.555-8.3988-17.191-9.3085-4.532-0.6211-5.1516-0.3979-8.395 3.0253-3.6404 3.8417-3.4966 3.3536 1.165-3.9526 3.1851-4.9922 2.8203-7.0193 2.9902-21.447 1.124-0.6713 21.396-12.951 22.631-12.963 0.5166-0.0055 3.5708 2.3956 6.7866 5.3348 4.2402 3.8755 7.3472 5.704 11.305 6.6533 6.6223 1.5887 10.337 0.8745 16.813-3.2323 14.26-9.0439 15.03-28.914 1.5386-39.759-3.3948-2.7289-5.3645-3.4045-10.966-3.7612-4.4128-0.2809-8.1665 0.1261-10.613 1.1511-9.1216 3.8216-15.188 12.594-15.7 22.699l-0.281 5.5553c-14.186 8.5209-8.9963 5.4037-23.727 14.252-6.1033-6.9713-9.3142-11.534-21.442-11.597-8.9656-0.0464-16.062 3.7068-20.129 10.646-10.73 18.311 3.3621 39.995 24.309 37.405l6.1995-0.7666-2.322 2.5632c-8.3267 9.1919-6.7744 23.979 6.1206 33.243 2.9009 2.0842 5.6055 4.6385 6.0095 5.676 0.9697 2.4897-1.9182 94.63-2.0361 98.757l-3.886 1.9995c-10.979 5.6493-14.901 16.444-9.8018 26.978 4.7595 9.8319 17.33 13.987 27.855 9.207l7e-4 4e-4zm-16.954-5.3879c-4.7036-2.5227-7.7161-8.071-7.7161-14.212 0-3.9679 0.6248-5.3948 3.7148-8.485 3.5286-3.5284 6.1191-4.7366 6.1191-2.8535 0 0.474-0.9836 2.7906-2.1858 5.1483-3.624 7.1085-0.4932 12.565 7.2097 12.565 3.6035 0 5.0786-0.561 6.3867-2.4285 2.3252-3.3198 2.134-7.6526-0.4846-10.982-2.1255-2.7021-2.8552-5.165-1.5308-5.165 2.4348 0 8.4524 4.0938 9.7739 6.649 2.4089 4.6581 2.0383 12.155-0.7778 15.735-4.6262 5.8813-13.722 7.6678-20.51 4.028h4e-4zm-1.6531-144.52c-4.9958-4.3865-6.7148-10.356-4.9756-17.278 0.6941-2.762 2.0107-5.8514 2.926-6.8652 0.915-1.0138 1.3015-2.4297 0.8584-3.1465-0.5134-0.8308-0.2549-1.1055 0.7126-0.7577 0.835 0.2999 2.3457-0.1747 3.3577-1.0549 12.006-10.443 31.626 2.9016 28.11 19.12-1.9993 9.2202-7.9543 13.35-19.258 13.356-7.2561 0-8.1899-0.2649-11.731-3.3737v-1e-4zm16.632-6.4576c6.5894-4.0175 7.3044-10.527 1.7651-16.066-2.2957-2.2957-3.4521-2.6584-6.7847-2.1281-7.2041 1.1467-8.1946 8.0128-10.109 4.9871-1.438-2.2714-1.2222-0.7798 0.6577 4.5487 1.8596 5.2703 4.3462 8.4722 7.6199 9.812 3.0372 1.2432 2.8751 1.2705 6.8514-1.1538zm-5.4011-2.4597c-2.3457-1.8906-2.9626-4.2091-1.8879-7.0995 1.0583-2.8474 5.4309-3.361 7.49-0.8795 3.1347 3.7771-1.9063 10.957-5.6021 7.979zm-30.838-24.897c-16.511-4.9409-18.817-35.374 4.637-36.818 11.49-0.7078 19.779 7.2472 19.816 19.02 0.0151 4.7092-0.5747 6.4285-3.5371 10.312-1.9551 2.5636-4.0447 4.6414-4.6436 4.6174s-2.0249-1.6433-3.1687-3.5983c-1.957-3.3447-1.9731-3.7352-0.2732-6.613 2.6289-4.4504 2.2629-9.1138-1.022-13.018-7.0884-8.4238-19.919-0.3243-15.684 9.9005 1.4099 3.4032 6.7183 7.4792 9.7717 7.5024 1.3743 0.011 6.5559 7.3029 6.5559 9.2264 0 0.9185-8.8718 0.5396-12.452-0.5316h-4e-4zm4.9904-17.448c-3.2495-2.7084-2.7449-6.002 0.9202-6.002 2.2085 0 2.7373 0.5621 2.8269 3.0049 0.061 1.6526-0.3372 3.0048-0.884 3.0048s-0.6904 0.4917-0.3191 1.0927c0.9746 1.5773 0.3384 1.3021-2.5442-1.1003h2e-4zm63.733-15.727c-6.8381-3.0138-12.594-11.196-12.542-17.829 0.0405-5.1712 3.865-11.982 8.3582-14.887 23.06-14.906 41.133 20.696 17.093 33.023-3.1565 1.6187-8.8489 1.4835-12.91-0.3065h4e-4zm12.069-9.893c3.9675-3.9675 3.738-10.634-0.512-14.884-3.6187-3.619-5.3936-3.8945-9.9397-1.5436-13.239 6.8461 0.3707 26.509 10.452 16.428zm-909.07 223.35c10.322-9.6553 7.6729-25.9-5.0537-30.992-17.144-6.8596-30.487 18.578-15.046 31.571 3.1958 2.6891 4.1943 2.9332 10.384 2.5392 5.3906-0.3431 7.4585-1.0067 9.7153-3.1182h5e-4zm-17.657-5.8509c-7.6895-7.6893-3.1733-19.231 7.5249-19.231 8.4102 0 13.476 7.8544 10.169 15.769-3.3457 8.0079-11.544 9.6118-17.693 3.462h-4e-4zm86.429 6.0205c6.8521-3.1625 9.5757-6.8207 10.139-13.619 0.6191-7.4692-1.8442-12.94-7.7563-17.222-5.2373-3.7936-10.266-4.0804-15.911-0.9075-12.869 7.2324-12.62 26.527 0.416 32.282 4.4941 1.9835 7.9653 1.8424 13.112-0.5327h4e-4zm-14.314-8.2058c-2.8862-2.8861-3.7148-4.6169-3.7148-7.7578 0-5.7212 5.7515-11.473 11.473-11.473 5.3843 0 11.473 5.7698 11.473 10.872-1e-4 11.309-11.348 16.242-19.231 8.359zm210.77 7.7007c6.6611-2.7833 12.579-13.683 11.249-20.72-2.0425-10.808-13.578-18.436-24.566-12.831-4.7607 2.4286-6.9902 5.3953-8.9355 11.888-2.2871 7.6334 1.5542 16.374 9.2617 21.074 3.9902 2.4332 8.1274 2.6207 12.991 0.5885v3e-4zm-11.377-6.7169c-6.1836-3.3608-7.0845-15.156-1.5234-19.94 8.5288-7.3362 21.259 3.2629 17.059 14.202-1.2769 3.3248-7.0991 7.3896-10.496 7.328-1.2022-0.0218-3.4698-0.7375-5.0391-1.5906zm82.508 5.5789c8.3574-3.4921 12.812-15.623 8.6416-23.53-4.9771-9.4335-16.029-13.528-23.257-8.6162-6.1343 4.1682-8.7681 8.9994-8.7632 16.075 0.0107 13.407 11.254 21.137 23.379 16.071zm-14.205-7.6553c-2.8232-2.8236-3.7148-4.6417-3.7148-7.5774 0-5.6873 1.6802-9.1505 5.3618-11.055 5.1675-2.672 8.6289-2.1239 12.776 2.0236 3.1294 3.1298 3.7148 4.4937 3.7148 8.6572 0 4.0618-0.5986 5.5409-3.3618 8.3041-4.7573 4.7572-9.7856 4.6371-14.776-0.353v1e-4zm95.299 2.0038c2.7324-3.5823 3.1484-5.0786 3.1484-11.316 0-5.7806-0.499-7.8871-2.5498-10.763-2.7573-3.8654-9.5854-7.8971-13.375-7.8971-3.8213 0-12.281 5.2205-15.075 9.3026-12.545 18.328 13.83 39.057 27.852 20.673zm-20.222-2.179c-3.9683-3.3387-5.3423-8.9009-3.3735-13.654 2.9985-7.238 11.924-8.9174 17.541-3.3002 2.6147 2.615 3.1938 4.1154 3.1938 8.2788 1e-4 10.058-9.8617 14.986-17.361 8.6753zm75.272 7.6305c0-1.4548-8.314-10.737-9.396-16.501-1.6787-8.9507-5.2798 2.4116-4.2627 6.7509 0.7369 3.1435 13.659 12.382 13.659 9.7497zm145.8-13.691c-0.5005-0.8098 0-0.9719 1.52-0.4901 3.1499 0.9999 8.7593-2.1451 9.5669-5.3644 0.7349-2.9263-1.2087-9.9694-3.0681-11.118-0.7039-0.4348-0.8665-0.2201-0.4023 0.5311 0.938 1.5172 0.9722 1.5145-3.3938 0.2622-2.0081-0.5759-3.6252-0.5895-3.8167-0.0317-0.1831 0.5321-1.3916 1.1277-2.6853 1.3232-9.0186 1.3639-6.8877 14.064 2.6895 16.028 0.1858 0.0383 0-0.4751-0.4102-1.1404v4e-4zm-151.26-25.089c0-6.2583-7.666 4.5345-7.6187 8.1582 0.0259 2.0006 0.519 1.7704 3.8242-1.7845 2.087-2.2448 3.7945-5.113 3.7945-6.3737zm144.23 5.9579c0-0.3702-1.7205-3.0171-3.8232-5.8818-3.5542-4.8417-6.8269-7.9797-16.212-15.545-7.3516-5.9253-12.022-28.154-7.3669-35.063 1.7085-2.536 11.584-12.204 25.148-20.962 0.0247-9.4193 0.0459-17.513 0.0706-26.932-10.381-10.883-19.528-18.817-13.034-32.231 5.3362-11.023 20.246-13.252 28.182-4.2133 12.047 13.721 1.6597 24.132-9.6851 36.65-0.0115 12.787-0.0215 23.774-0.033 36.56l-5.6426 2.7317c-11.136 5.3906-14.208 18.869-6.1409 26.937 4.4465 4.4467 9.3735 5.7009 12.362 6.7262 1.0439 26.815 0.751 28.071 3.2673 28.071 3.7646 0 3.5767-6.5415 3.835-28.409 6.2219-4.9642 12.008-8.9369 12.015-18.14 0.0107-6.1907-3.3066-11.553-9.041-14.639l-4.0605-2.1853c0-38.894-0.4587-37.57 2.7332-40.08 4.075-3.2054 8.9072-10.738 10.367-16.16 2.1404-7.9485 0.6631-13.342-5.5007-20.086-6.6902-7.3203-9.9714-8.7349-18.937-8.1639-13.504 0.8599-20.282 8.5737-20.328 23.138-0.0393 12.283 3.3303 14.527 14.181 25.214v20.712l-6.2827 5.8436c-12.436 11.566-22.427 14.246-20.548 21.879 1.8325 7.4406 1.8582 9.2031 0.1851 12.729-3.1008 6.5338-2.3848 9.6156 3.207 13.805 8.0254 6.014 20.093 22.067 25.326 26.184 2.6724 2.1022 5.7615 2.9131 5.7615 1.5125l-5e-3 -3e-4zm-6.5559-50.148c0-9.2034 12-13.921 19.454-7.6483 8.2429 6.9359 3.0613 20.261-7.8555 20.202-7.797-0.0425-11.599-5.6231-11.599-12.554zm391.44 43.986c7.344-3.3622 12.467-8.5089 16.03-16.104 2.4146-5.1467 2.8225-7.5165 2.8225-16.396 0-9.1573-0.3606-11.114-3.0598-16.611-10.822-22.037-38.865-26.084-56.169-11.273-8.4927 7.2693-13.838 22.763-11.214 32.504 0.5298 1.9662 1.1929 4.8986 1.4736 6.5162 0.6763 3.8959 8.5784 15.433 12.468 18.202 2.979 2.1211 9.3599 4.9008 13.887 6.0494 5.0813 1.2894 18.092-0.2916 23.761-2.8872h3e-4zm-23.761-14.907c-3.1155-1.3927-7.8557-6.6838-9.2178-10.289-4.448-11.773 4.1445-25.879 15.764-25.879 18.258 0 25.95 23.236 11.31 34.166-3.1143 2.3251-14.322 3.582-17.856 2.0024zm14.514-6.1871c9.7051-6.7977 6.1143-23.724-7.5825-23.724-11.583 0-16.805 13.336-8.6433 22.073 2.6707 2.859 3.9246 3.3562 8.4631 3.3562 3.0598 0 6.3647-0.726 7.7627-1.7052zm-994.76 17.822c0.9736-6.9062-0.1592-6.25-0.3232-11.868-0.0713-2.4397-0.48-2.7777-2.8154-2.3312-2.6323 0.5032-2.7319 0.8276-2.7319 8.9539 0 8.9084 0.3311 9.8885 3.3364 9.8885 1.3794 0 2.0527-1.2346 2.5342-4.6438v2e-4zm415.48 1.7796c0.6621-2.6385-0.1675-19.936-0.9961-20.764-0.1992-0.1995-1.5615-0.4961-3.0264-0.6592-3.3022-0.3677-2.6611-0.455-2.2861 16.639 0.1621 7.3691 0.2671 7.6486 2.8789 7.6486 2.0132 0 2.895-0.7366 3.4292-2.8641h5e-4zm-145.45-9.155c0-9.7432-0.1416-10.4-2.3159-10.711-4.0181-0.5734-3.6636 4.9178-3.6938 21.782l6.0093-0.6914v-10.38h4e-4zm66.509-10.926c-3.0439 0-2.5889-0.1652-2.5889 21.853h6.5562c-0.0371-20.543-0.8515-21.853-3.9673-21.853zm-264.36 18.839c0.6655-2.0986-0.0723-16.628-0.8867-17.442-0.2769-0.2771-1.5244-0.1798-2.772 0.2161-2.0386 0.647-2.2671 1.5765-2.2671 9.2051 0 4.667 0.3271 8.8134 0.728 9.2139 1.4258 1.4257 4.5972 0.6978 5.1978-1.1926v-2e-4zm1987.1-6.3856c19.674-5.8042 23.711-33.743 6.6128-45.761-4.3503-3.0576-5.3828-3.2966-14.237-3.2966-8.5859 0-10.003 0.3024-14.089 3.0063-2.6646 1.7631-5.9026 5.3774-7.8315 8.7412-2.7168 4.7368-3.2908 6.9585-3.2993 12.765-0.0176 11.791 6.136 20.74 16.885 24.556 5.8601 2.0807 8.873 2.0785 15.959-0.012v-1e-4zm-18.104-8.3787c-8.2539-4.6174-11.56-16.098-7.1326-24.776 6.9785-13.679 26.12-14.265 32.884-1.0079 2.9795 5.8401 2.5925 15.789-0.7913 20.357-5.9844 8.0785-16.235 10.307-24.96 5.426h-2e-4zm15.928-9.4541c3.5698-3.5697 4.0593-7.2601 1.5955-12.025-2.8259-5.4647-10.5-6.257-15.188-1.568-4.2188 4.2186-4.0134 10.176 0.481 13.958 4.5537 3.8315 9.0403 3.7065 13.112-0.3653zm-10.386-2.8936c-5.6008-5.6007 3.73-12.067 7.8984-7.8984 4.1849 4.1846-2.3076 13.488-7.8984 7.8984zm2148.6 16.463c10.482-5.4205 10.502-24.061 0.0317-29.476-3.2562-1.684-5.2603-7.515-3.367-9.7965 1.2119-1.46 3.2675-277.32 3.3261-320.75h11.772c3.619-161.04 4.3036-511.54 7.0287-573.24 39.27 0.8041 47.959 1.1913 49.046-0.5262 1.2634-1.9947 0.9887-98.04 0.9901-102.25-25.537-1.5625-34.333-1.4247-104.54-1.4247-1.1786 63.646-1.5353 71.632-0.0192 104.89h24.964c-9.4041 991.68-5.1802 660.78-8.1136 895.07 3.2179-0.4548 2.0118-0.2843 5.2122-0.7369 3.2292-332.79 2.8274-322.33 5.4633-322.33 2.6054 0 2.4755-18.441 1.2973 184.11-0.8878 152.63-0.6778 147.6-5.9631 142.82-2.6836-2.4286-4.6217-2.3746-4.6217 0.1285 0 1.0973-1.276 3.1869-2.8354 4.6438-14.912 13.931 0.3165 39.216 20.327 28.868h0.0024zm-14.913-6.5076c-3.0685-2.1493-5.1726-7.5554-4.2975-11.042 1.0656-4.246 5.803-8.1229 9.9256-8.1229 9.3484 0 13.773 12.114 6.7986 18.612-2.7564 2.5682-9.1439 2.8522-12.427 0.5529zm65.165-936.01c0-14.692-0.327-32.334 1.2783-33.326 0.8716-0.5386 1.0454-0.183 0.5463 1.1175-0.9364 2.4407-0.732 28.44-0.732 33.416l-12.566-0.4042c4.0126-0.2808 7.4603-0.5219 11.473-0.8026zm-74.914-31.026c0.4211 18.711 0.2549 11.327 0.6745 29.977 8.5768 0.2436 15.946 0.4529 24.523 0.6965-8.9804 0.1634-16.697 0.3037-25.677 0.4671 0.299-19.435 0.1812-11.782 0.4793-31.14zm38.583 30.332c8.9978-0.5111 25.268 0.3879 6.829 0.3879-7.512 0-10.585-0.1746-6.829-0.3879zm-35.371-23.229c0-16.896 0.9208-2.11 0.3942 6.2827-0.2169 3.4555-0.3942 0.6283-0.3942-6.2827zm70.005-22.946c0-42.579 0.9326-14.786 0.3292 17.756-0.181 9.7655-0.3292 1.7755-0.3292-17.756zm-69.957-15.297c0-28.4 0.8935-5.8626 0.3541 11.2-0.1948 6.1599-0.3541 1.12-0.3541-11.2zm72.747-0.4294c0-18.314-0.2345-21.28-1.7284-21.853-2.2826-0.8759-70.608-0.6632-73.55-0.6632-0.5216 6.7108-0.329 4.2333-0.8504 10.939 0.0665-4.0168 0.1236-7.4683 0.1901-11.485 9.3541-0.0697 67.643-0.5043 77.032-0.5743 0 61.364-1.0927 50.022-1.0927 23.637h-1e-4zm-1491.2 1001.2c8.6649-2.4065 14.982-11.834 13.608-20.306-1.3337-8.2197-10.48-16.828-17.82-16.772-4.8558 0.0372-11.817 3.7145-14.71 7.7703-2.2238 3.1177-2.6235 4.9602-2.6235 12.086 0 8.1168 0.1312 8.5427 3.797 12.325 5.2978 5.4661 10.516 6.9058 17.749 4.8971zm-9.8195-6.7c-4.214-2.1287-7.1617-8.0681-6.49-13.077 0.7045-5.2518 3.0338-8.0785 8.0111-9.7211 4.796-1.583 9.3226-0.5305 12.565 2.921 3.8547 4.1031 3.7247 13.427-0.2422 17.394-3.2383 3.2382-9.9617 4.4437-13.844 2.4825v2e-4zm-1383.5 0.7992c6.7368-0.9108 11.983-4.2205 11.983-7.5593 0-1.4375 0.8181-3.2886 1.8181-4.1134 1.6545-1.3649 1.6958-1.2704 0.4578 1.0525-2.1816 4.0939-0.1506 4.3296 3.1711 0.3683 7.0159-8.3674 8.156-21.107 2.7192-30.384-4.7988-8.1888-17.611-15.69-26.741-15.656-4.4946 0.0164-15.803 4.021-12.019 4.2562 0.9016 0.0558 2.708 1.7529 4.0146 3.7709 2.3311 3.6002 2.5142 3.6661 9.8337 3.5375 26.702-0.4696 24.198 30.216 8.2129 35.492-5.498 1.8145-17.691-0.3596-17.691 1.1714 0 0.5671-0.4915 0.7273-1.0925 0.356-2.2153-1.3691-1.01 1.4331 1.3657 3.175l2.4585 1.8025-2.7317-0.6787c-5.1096-1.2693-10.376-4.4904-11.983-7.3296-1.4302-2.5261-1.4006-3.2561 0.2732-6.7665 2.9268-6.1375 0.7288-11.253 4.125-16.823 4.5945-7.5354-0.5974-3.8289-2.7109 2.8549-1.0525 3.3291-2.4324 3.0906-4.4263-0.7651-2.1013-4.0634-2.1233-7.7747-0.062-10.499 3.4646-4.5807 0.9302-5.2192-3.1692-0.7985-3.2693 3.5258-5.5122 13.008-4.5298 19.151 1.4788 9.2491 7.7705 17.921 16.143 22.251 3.6042 1.8639 11.473 3.6227 13.99 3.1271 0.9014-0.1774 3.8679-0.6239 6.5918-0.9921l-0.0013-1e-4zm22.211-7.2236c5.1868-5.7688 8.3479-13.41 8.3479-20.178 0-8.5951-5.8354-20.206-12.484-24.84-2.9895-2.0836-2.8667-1.7988 1.114 2.5845 6.3206 6.9602 8.4424 13.149 7.896 23.033-0.5471 9.8962-2.8716 14.948-10.329 22.448-4.262 4.2861-4.9231 5.3237-2.6396 4.1429 1.6755-0.8663 5.3181-4.1018 8.0945-7.1901zm-1378.4 4.4048c4.1797-2.5482 7.8101-9.6467 7.8101-15.27 0-13.2-13.811-22.296-24.537-16.159-8.8018 5.0364-11.509 16.686-5.9883 25.765 4.6162 7.5902 15.219 10.234 22.715 5.6642v-2e-4zm-10.717-3.9637c-6.2939-2.0736-9.8379-6.2292-9.8296-11.526 0.0107-3.7267 3.9453-9.5079 7.3716-10.819 4.0635-1.5547 10.41 0.4023 13.326 4.1091 2.4478 3.1121 3.0171 9.9987 1.1191 13.545-1.9956 3.728-7.8975 6.0376-11.987 4.6902v2e-4zm1153.5-8.495c-0.7598-1.9803-11.463-1.719-121.73-1.719-1.3074 10.023-1.384 11.015-2.7085 16.409 14.102-0.0684 102.38-0.4967 116.57-0.5656 2.0724-3.0149 8.7079-11.933 7.867-14.124zm-802.81 9.9176c5.6401-2.7985 9.9072-9.6569 9.9072-15.923 0-8.8114-8.8594-17.865-17.482-17.865-15.61 0-24.335 23.53-10.898 33.098 6.6602 4.7425 10.049 4.8691 18.473 0.6898zm-13.671-4.8993c-9.8462-6.1691-5.8779-22.034 5.5117-22.034 13.132 0 13.258 15.77 7.2856 21.176-3.231 2.924-8.895 3.3041-12.797 0.8591v-1e-4zm-252.43-24.926c-17.106-13.048-35.749 14.302-19.971 28.556 3.6011 3.2534 5.0361 3.8369 9.4341 3.8354 19.764-0.0065 22.852-22.999 10.537-32.392zm-14.358 25.806c-2.7808-1.118-6.8257-7.1476-6.8315-10.184-0.0107-3.9137 3.6108-9.6486 7.1543-11.338 4.4697-2.1311 8.5103-1.1886 12.649 2.9504 2.4458 2.4456 3.1377 4.1368 3.1377 7.6644 0 5.661-1.3706 8.2761-5.4414 10.381-3.5518 1.8368-6.9873 2.0062-10.668 0.5262zm211.14 3.3902c8.0933-4.5428 10.71-15.796 5.7217-24.604-8.7026-15.364-31.395-8.7474-31.395 9.1536 0 13.943 13.057 22.532 25.673 15.451zm-16.455-6.7084c-6.1709-6.4413-3.4819-18.056 4.6528-20.098 6.7764-1.7007 14.537 4.2261 14.537 11.102 0 7.4274-4.5488 12.284-11.542 12.322-3.5454 0.0195-5.0859-0.6505-7.6489-3.3254h5e-4zm162.43 6.0116c5.334-5.0712 6.7563-8.7141 6.2319-15.961-0.396-5.472-0.9976-6.9449-4.1777-10.226-6.4507-6.655-15.376-7.434-22.642-1.976-9.9858 7.5013-8.627 23.118 0.9312 29.695 3.0991 2.1324 4.7534 2.4823 9.9976 2.1156 5.1167-0.3582 6.9102-1.0354 9.6582-3.6478l4e-4 -1e-4zm-15.396-2.9153c-3.8672-1.9858-10.682-12.644-2.064-19.895 10.895-9.1676 24.52 7.4178 14.208 17.296-3.5796 3.4299-8.4824 4.4789-12.144 2.5984v1e-4zm3447.1-1.0275c-0.4804-6.5192-3.0676-6.8979-3.0676-0.4491 0 3.8052 0.4087 5.0079 1.7018 5.0079 1.3225 1e-4 1.6269-1.0163 1.3658-4.5588zm189.86-9.0838c5.0071-2.9343 9.2153-9.8511 9.2153-15.146 0-4.333-2.5317-9.5516-6.3971-13.186-4.4021-4.1393-13.081-5.1456-19.227-2.2292-8.5807 4.0719-12.404 14.848-8.4447 23.8 4.1844 9.4593 15.156 12.444 24.854 6.7613zm-16.171-5.9916c-7.3685-5.796-2.351-19.701 7.1091-19.701 7.3669 0 12.832 6.6692 11.105 13.551-1.8098 7.2107-12.343 10.767-18.214 6.1498zm-2660.9-5.4901c-4.4324-8.5713-16.759-2.679-14.363 6.8658 3.1719 12.637 19.663 3.3826 14.363-6.8658zm2713.4-15.709 11.47-11.332c2.527-266.55 1.8087-226.77 5.2551-759.13-71.964-74.849-43.64-46.376-87.537-92.329-139.23 0-139.87-0.439-139.87 2.1853 0 3.6551 2.9745 0.8748 137.78 3.6333 42.923 44.263 13.579 15.314 84.291 88.696-4.7754 775.6-4.6104 690.72-4.6348 754.05-11.674 12.488-17.767 19.541-20.018 18.677-6.0245-2.312-0.8622-6.6425 12.203-19.894 3.7859-336.68 3.2814-535.24 5.7071-749.56-67.484-69.768-78.351-82.707-80.216-83.744-1.674-0.9314-131.12-1.4561-135.66-1.4825-0.4211 2.9583-0.2633 1.8497-0.6819 4.7921 131.24 0.6666 131.7 0.2994 134.57 2.8564 3.377 3.0135 51.075 52.97 76.592 80.126-4.0255 587.85-4.5654 740.9-5.6772 743.73-0.4725 1.2019-4.3696 6.0492-8.6602 10.772-10.081 11.096-6.5658 9.7413-6.5658 12.65 0 1.9093 5.5308 6.6261 7.7694 6.6261 1.5933 0 6.2988-3.8414 13.88-11.332l2e-4 1e-4zm513.75-82.664c-9.3575 0.0698-67.643 0.5044-77.032 0.5743-0.1814 28.294-0.3895 60.757-0.5709 89.051h77.603c0-28.527 1e-4 -61.098 1e-4 -89.625zm-70.775 8.1566c1.2761-1.2737 61.249-1.8014 63.127-0.5552 1.4033 0.9313 1.639 6.4215 1.639 38.186 0 20.404-0.4093 37.508-0.9095 38.01-1.2027 1.2047-62.852 1.6267-65.302 1.655 0.0208-2.4368 0.3981-76.25 1.4459-77.296zm18.4 71.596c2.4244-1.2974 2.1135-2.3032 2.1135-66.358-6.1002-1.6349-7.5109-2.3375-10.653 2.2786-2.3876 3.5071-2.4583 4.3972-2.4544 30.86 0 25.237 0.164 27.511 2.1692 30.8 2.2621 3.7099 5.0078 4.4629 8.825 2.42zm38.268-1.9949c1.9362-2.391 2.0875-4.6256 2.0727-30.594-0.012-20.364-0.3929-28.761-1.3959-30.746-1.6007-3.1693-1.5488-2.736-25.904-3.3495v65.296c2.1135 1.0665 3.3834 2.524 14.028 2.2269 8.0934-0.2258 9.3444-0.5423 11.2-2.8336zm-4693.4 7.2234c1.4097-1.8721-0.0913-68.273-0.2153-75.666-37.171-0.3477-61.976-0.8314-62.907 0.6747-0.7773 1.2576-0.1392 72.419 0.6729 74.991 0.3311 1.0497 7.4878 1.3657 30.925 1.3657 23.118 1e-4 30.744-0.3303 31.524-1.3657zm-56.487-68.564h48.938c1.0142 19.834 0.9009 24.335 0.7778 61.735-17.405 0.2056-32.311 0.3817-49.716 0.5873v-62.322zm42.179 10.347c-1.4028-1.9196-3.1572-2.1927-16.231-2.5282-12.55-0.3219-14.92-0.1143-16.478 1.4438-1.5635 1.5634-1.8198 4.5928-1.8198 21.481 0 11.63 0.4683 20.536 1.146 21.803 1.3057 2.4392 2.1885 2.1228 34.365 1.5391 0.4643-32.656 0.8163-41.279-0.981-43.739zm469.18 34.307-6.0098 0.6914c-0.082 2.8209-0.7812 21.303-0.0757 23.141 0.6626 1.7272 4.3491 1.4435 6.0859 1.4435-9e-4 -15.591-4e-4 -9.7561-4e-4 -25.276zm73.579 23.698c0.333-0.8676 0.3101-6.7924-0.0513-13.166-0.6211-10.969-0.7783-11.571-2.9473-11.261-2.624 0.3746-2.3076 1.0316-2.9062 26.004 1.9043 0 5.1973 0.2645 5.9043-1.5778h5e-4zm-415.58-8.8024c0-9.1783-0.0312-9.2875-2.7314-9.2875-2.6997 0-2.7319 0.1091-2.7319 9.2875 0 9.1782 0.0317 9.2875 2.7319 9.2875 2.6992 0 2.7314-0.1092 2.7314-9.2875zm71.88-1.9121c-0.2881-10.367-0.4736-11.2-2.4966-11.2-1.998 0-2.2124 0.8346-2.5039 9.7474-0.3677 11.25-0.0293 12.652 3.0537 12.652 2.1558 0 2.2441-0.5081 1.9463-11.2h5e-4zm199.1-13.931h-5.4634v25.131h5.4634v-25.131zm3582.5 4.6384c-2.582 0.8502-2.367 8.4734 0.2389 8.4734 1.3285-1e-4 1.821-9.152-0.2389-8.4734zm140.95-5.2247c6.3337-4.4363 4.9131-24 0.9754-28.414-3.7328-4.1841-7.2171-1.7806-85.53-4.9711-6.0017 6.0018-5.8602 4.401-5.8602 17.741 0 10.566 0.2444 12.091 2.2084 13.782 3.0383 2.6161 10.774 3.1202 51.362 3.3475 29.433 0.1648 34.798-0.0514 36.846-1.4861h-3e-4zm-81.368-6.2937c-0.4689-0.7231-0.9162-5.3569-0.9941-10.297-0.1243-7.8867 0.1082-9.0616 1.9024-9.6312 2.1403-0.6792-3.5748 0.4939 38.864 0.6417 19.21 0.0667 35.525 0.4904 36.254 0.9412 1.4332 0.8856 2.0834 16.43 0.7757 18.546-1.105 1.7878-75.639 1.5935-76.802-0.2004v1e-4zm10.62-8.9633c0-3.9061-0.4514-7.1022-1.0029-7.1022-0.989 0-1.3794 11.794-0.4429 13.385 1.1111 1.8883 1.4458 0.4336 1.4458-6.2828zm-3919.6 14.308c10.779-5.608 13.012-19.337 4.6104-28.344-3.5688-3.8254-4.729-4.3813-9.9521-4.7686-7.1885-0.5326-12.385 1.8124-15.998 7.22-2.9053 4.3495-3.3589 12.742-0.939 17.375 1.7124 3.2767 6.853 8.3624 9.3853 9.2838 3.1752 1.1554 9.976 0.7513 12.893-0.7663zm-11.254-4.9705c-12.004-4.9653-8.9761-24.56 5.2129-22.658 12.264 1.6447 14.703 17.462 3.4204 22.177-4.0884 1.7084-5.4795 1.7859-8.6333 0.4813v-1e-4zm4051.5 4.0247c11.836-6.6211 12.522-25.481-1.2652-31.58l-4.7444-2.0986c0-16.546-0.5952-15.93 3.5511-18.026 4.6121-2.3311 8.2944-5.7235 10.211-9.4067 1.9929-3.8303 1.9617-11.084-0.0645-15.002-1.8238-3.5266-7.1686-8.3315-10.414-9.3615-2.5075-0.7959-2.1912-2.1825-2.1912-19.943l3.0338-0.6068c14.865-2.9729 16.43-25.556 2.3115-33.34l-5.3138-2.9298-0.0306-20.185c6.4604-2.6993 10.623-3.9944 13.896-10.323 2.1495-4.1567 2.1133-12.475-0.0721-16.703-1.9328-3.7377-7.2126-8.5494-10.54-9.6053-2.5064-0.7955-2.1852-2.1058-2.1123-19.67l4.6026-2.1853c13.944-6.6205 13.914-27.092-0.0481-33.822l-4.6332-2.233c0-20.372-0.2661-22.401 1.9122-22.406 3.0795-0.0066 8.8539-4.0591 11.268-7.9077 1.7949-2.8618 2.1631-4.9794 1.875-10.784-0.6153-12.399-6.814-15.387-15.346-19.74l0.692-6.6197c1.6691-15.972-1.3411-14.513 5.8851-18.318 5.9384-3.1274 10.12-9.9091 10.08-16.348-0.0491-7.9425-6.9377-17.58-13.796-19.301-4.2305-1.0618-1.6523-2.1225-1.5261-18.045 0.0448-5.593 0.2944-6.2259 2.6964-6.8287 3.5184-0.8831 9.064-5.6418 11.05-9.4822 2.0018-3.8712 2.0643-11.996 0.1279-16.622-1.8592-4.4403-8.7387-9.6852-13.006-13.348-2.0511-1.7603-2.4547-10.05-0.9969-20.476 0.6669-4.77 1.1063-5.371 5.5928-7.6486 8.9232-4.5298 12.654-17.341 7.8127-26.827-3.3704-6.6036-6.5687-7.839-13.228-11.212v-27.086l3.3041-0.7257c4.3835-0.9628 9.7495-5.5975 11.595-10.015 4.1174-9.8544 0.2841-21.411-9.163-27.624l-5.7364-3.7726v-25.524c8.407-4.1132 16.39-6.9915 16.39-19.729 0-3.0341-0.5219-6.9007-1.1596-8.5924-1.5072-3.9978-7.0297-9.6844-11.003-11.33l-3.1345-1.2983v-28.114c8.6978-3.6342 15.609-6.6743 15.609-19.136 0-5.6333-2.9283-13.042-6.2418-15.792-1.9859-1.6482-1.7189-7.0213-1.7189-27.434-26.955-28.323-33.068-34.913-35.069-34.913-3.0448 0 0.7993 6.5356 7.7119 13.112 8.7186 8.2943 17.425 17.898 22.985 23.924 0 17.664 0.3024 21.698-3.3871 19.723-2.3665-1.2664-2.076-3.3402-2.076-21.511-1.8351-1.979-22.593-24.764-24.642-25.222-8.1973-1.8308 13.764 20.102 19.592 26.231-0.3725 14.804-0.222 19.839-2.2659 21.106-18.268 11.326-13.904 33.327-1.8275 38.373l3.6803 1.5377-0.118 26.741c-7.3704 4.7758-14.587 8.4617-14.593 21.322 0 7.5345 3.9984 14.968 9.7148 18.047l3.9042 2.1026v27.856l-3.0048 1.5632c-8.9188 4.64-13.619 17.077-10.038 26.557 1.4308 3.787 6.027 8.7553 10.038 10.85l3.0048 1.5695v25.747c-11.375 8.0176-12.449 8.9817-14.783 22.657-11.017-0.3994-15.028-0.7634-14.468 0.9033 0.3286 0.9781 2.7328 1.4847 7.4365 1.567 6.6252 0.1159 7.0048 0.2696 8.1002 3.278 2.9554 8.1177 5.3173 8.8229 13.715 13.744v25.611l-3.7156 1.7719c-7.2541 3.4592-12.549 14.275-11.051 22.572 1.0732 5.9405 5.3376 11.657 10.344 13.866l4.4226 1.9512c-0.0061 3.8815 0.1755 20.6-0.8359 21.988-0.4416 0.6063-2.6599 2.3272-4.9296 3.8243-10.219 6.7397-14.911 27.004 1.0214 34.051l4.7444 2.0987c0 30.129 1.3437 19.442-8.6782 27.875-10.578 8.9003-8.0837 26.986 4.436 32.172l3.1495 1.3046v22.636c-6.3148 3.2216-11.838 5.4609-14.268 14.483-2.2415 8.3243 2.1579 17.789 9.8448 21.181l4.4226 1.9512v18.842l-3.7156 1.7719c-4.4949 2.1435-8.862 7.6465-10.187 12.837l-0.9764 3.8242c-6.7156 0.514-15.706 0.9083-13.21 2.0808 1.077 0.506 4.4045 0.6849 7.3944 0.3976 5.1387-0.4938 5.4727-0.3667 6.1038 2.3239 2.195 9.3559 9.2136 11.911 14.893 14.66-0.903 14.089-0.9509 19.682-3.1192 20.966-12.666 7.4987-15.93 20.642-7.4565 30.021 10.057 11.132 9.1817-4.0955 9.1817 24.994-6.7877 3.7583-12.558 6.1211-13.761 17.268-0.7414 6.8685 1.8805 12.076 7.7158 15.324 6.4389 3.5846 5.8773 5.0474 6.0452 19.855-7.6382 4.2675-13.003 6.6152-13.934 16.309-0.6803 7.0797 2.5534 14.631 7.577 17.694 4.9943 3.0449 13.214 2.9308 18.922-0.2625h-7e-4zm-19.104-11.657c-2.7381-10.168 6.2592-18.389 15.114-13.81 4.2564 2.2012 5.6284 4.7554 5.6284 10.478 0 11.414-17.203 16.477-20.742 3.3322zm2.9449-48.156c-5.9202-4.6567-4.2858-14.739 2.9484-18.188 11.283-5.3804 21.134 8.6392 12.517 17.812-3.2019 3.4083-11.358 3.6068-15.465 0.3764zm1.6144-54.067c-4.0519-3.4094-5.2424-8.8645-3.0695-14.065 1.866-4.4659 4.5643-6.1551 9.8323-6.1551 5.9514 0 9.5793 3.779 10.241 10.668 0.4951 5.1521 0.262 5.9001-2.7879 8.9501-4.2799 4.2799-9.5788 4.5045-14.216 0.6026zm-0.7995-58.772c-4.0128-3.4517-4.7839-10.844-1.6517-15.835 6.3113-10.057 19.727-5.074 19.727 7.3269 0 7.3094-3.4461 11.002-10.267 11.002-3.5358 0-5.7192-0.6975-7.8082-2.4944zm0.0688-55.84c-3.3153-3.3154-4.5334-9.4852-2.7315-13.835 4.5042-10.874 19.221-9.6878 21.361 1.7216 0.8707 4.6415-0.1765 7.9739-3.6823 11.718-3.8016 4.0603-11.09 4.253-14.947 0.3953zm0.1529-60.34c-10.458-10.459 3.404-29.296 15.231-17.469 3.2251 3.2251 3.7151 4.429 3.7151 9.128 0 7.7104-3.3387 11.195-10.725 11.195-4.3287 0-5.9183-0.5519-8.2204-2.8541l-5e-4 -1e-4zm1.857-59.93c-5.4578-3.8228-6.1898-15.013-1.2947-19.794 4.0917-3.9958 10.145-3.9235 15.022 0.1796 3.0019 2.5259 3.3618 3.4706 3.3618 8.8252 0 5.1708-0.4398 6.4363-3.1939 9.1904-3.6327 3.6326-9.9527 4.3596-13.895 1.5984zm0.4259-61.866c-3.0128-1.7548-5.1901-7.002-5.1901-12.508 0-9.2697 8.0961-14.093 16.426-9.7856 8.1721 4.226 8.7313 17.866 0.8985 21.916-3.4866 1.8031-9.3717 1.9858-12.134 0.377zm1.9121-66.454c-6.1292-2.6514-8.939-11.964-5.5736-18.472 3.4077-6.5898 11.361-7.7974 17.17-2.6071 2.7675 2.4728 3.5386 4.1422 3.9655 8.5851 0.4724 4.9164 0.1901 5.8926-2.5988 8.9874-3.3334 3.6991-8.9843 5.2277-12.963 3.5068zm-2.7354-69.876c-3.3566-3.3566-5.0383-9.3598-3.8964-13.909 2.0987-8.3616 12.783-11.076 19.026-4.8335 5.3469 5.3469 5.7985 13.112 1.1094 19.074-1.8247 2.3198-3.0991 2.7829-7.6571 2.7829-4.5543 0-5.988-0.5201-8.5815-3.1136zm10.725-9.1946c0.4349-2.2581-2.7194-3.7796-4.3842-2.1148s-0.1432 4.819 2.1148 4.3841c1.0466-0.2015 2.0679-1.2227 2.2694-2.2693zm-9.3824-57.98c-3.3149-3.644-4.6166-6.7725-4.6166-11.096 0-7.4273 4.246-12.583 10.362-12.583 10.758 0 16.738 13.89 9.4787 22.015-4.0725 4.558-11.821 5.4049-15.224 1.6642h-3e-4zm0.1472-67.888c-8.9329-6.2572-4.2061-23.536 6.4389-23.536 2.3309 0 5.184 0.5063 6.3402 1.125 5.8178 3.1136 7.3028 15.024 2.574 20.644-2.4181 2.8737-3.5725 3.3618-7.9518 3.3618-2.8176 0-6.1481-0.7179-7.4009-1.5955l-4e-4 1e-4zm9.9865-10.305c0-0.8359-0.8469-2.0541-1.8821-2.7071-2.3616-1.4897-4.7394 0.5098-3.7311 3.1375 0.8313 2.1662 5.6132 1.7995 5.6132-0.4304zm-2859.4 691.41c1.8462-0.5583 4.894-2.6039 6.7734-4.5457 9.7878-10.113 8.8445-26.14-2.0542-34.898-4.1624-3.345-4.252-3.568-4.252-10.594 0-5.6055 0.6375-8.4369 2.9114-12.931 1.6013-3.1649 2.5659-6.0999 2.1438-6.5222-0.4224-0.4224-2.2861-0.1947-4.1421 0.5057l-3.374 1.2736c1.5107-27.321 1.926-27.766-0.7231-30.415-3.3647-3.3647-11.201-3.4138-14.845-0.093-1.8718 1.706-2.3875 1.7704-3.594 0.449-2.2607-2.4753-8.5649-1.9459-10.548 0.8858-3.4189 4.8809-0.9783 13.108 3.3308 11.228 3.0374-1.3243 3.2761-0.8403 4.2712-1.8356 0.4092-0.4093 1.4573-0.4706 2.3289-0.1361 0.8713 0.3345 2.1885-0.2179 2.9268-1.2274 0.7529-1.0295 2.0859-1.5502 3.0361-1.1855 1.3796 0.5294 1.9431 4.5281 3.0393 21.567 1.2756 19.825 1.2402 21.058-0.6748 23.624-1.1113 1.4886-2.8867 2.8336-3.9448 2.9889-6.3599 0.9335-12.935 9.3542-13.604 17.423-0.6948 8.3809 0.4829 13.116 4.3613 17.533 7.073 8.056 15.554 10.254 26.633 6.9044zm-17.032-6.275c-8.2253-4.371-11.308-15.032-6.5867-22.775 2.5935-4.2538 7.0815-7.3583 9.3684-6.4806 0.9656 0.3704 1.9551-0.0459 2.3108-0.9727 0.6909-1.8003 4.7588-2.2516 4.7588-0.5278 0 0.601 1.1917 1.0927 2.6477 1.0927 5.3804 0 12.649 8.8861 12.649 15.464 0 4.1559-4.3638 11.67-8.1282 13.997-4.5488 2.8114-11.946 2.8997-17.02 0.2034l-2e-4 -1e-4zm14.495-9.0709c2.3315-2.7554 2.4434-6.5625 0.3137-10.681-4.2261-8.1729-15.884-4.6532-15.884 4.7957 0 3.4243 2.8721 7.1841 6.5559 8.5818 2.6675 1.012 6.9634-0.273 9.0142-2.6967zm-1.3997-29.07c-4.3564-0.8662-7.6838-36.738-2.2397-42.182l2.2739-2.2738v9.5303c0 13.581-2.1853 9.7485-2.1853 6.2524 0-1.803-0.5398-3.278-1.2-3.278-1.9165 0 0.011 13.344 2.156 14.928 1.5229 1.1248 1.864 0.8168 2.3958-2.1647 0.5991-3.3584 0.6492-3.304 1.4746 1.6129 1.1931 7.1047-0.4675 18.014-2.675 17.575h-3e-4zm-830.38 41.393c20.222-14.631-3.667-45.357-21.049-28.84-4.5352 4.3096-6.2676 8.1813-6.2676 14.007 0 8.8602 4.3447 14.959 12.565 17.639 3.9697 1.294 10.909-0.0263 14.751-2.8058zm-15.556-4.0324c-1.645-0.8926-3.7349-3.0612-4.644-4.819-6.7856-13.122 10.635-25.308 18.834-13.175 7.4253 10.987-2.9229 24.108-14.19 17.994zm-256.12 5.6671c7.3076-3.0533 11.661-13.421 9.271-22.078-1.3745-4.9802-8.4189-12.473-11.726-12.473-1.2725 0-2.314-0.4242-2.314-0.9429 0-2.2343-10.04 2.5454-13.582 6.4657-12.699 14.056 1.6123 36.022 18.35 29.028zm-14.686-8.2433c-4.0283-4.0278-4.4658-11.285-0.9502-15.754 3.3521-4.2617 9.5811-5.8123 14.055-3.4988 6.9287 3.583 8.4282 14.208 2.8003 19.837-3.9688 3.9686-11.633 3.6871-15.905-0.5843zm211.08 8.5059c8.2847-2.775 12.362-9.2242 11.692-18.492-1.2627-17.458-20.389-23.503-30.624-9.6785-4.4238 5.9747-4.5679 15.951-0.3237 22.429 1.9556 2.9846 9.4473 6.9222 13.246 6.9619 1.2621 0.0131 3.9667-0.5357 6.0097-1.2199zm-12.997-8.0222c-5.3735-4.5211-5.4009-13.087-0.0605-18.771 3.543-3.7716 11.589-3.6172 15.503 0.2975 5.0967 5.0966 5.1792 13.548 0.1812 18.547-3.7144 3.7145-11.165 3.6798-15.624-0.0721v-6e-4zm161.49 6.8076c5.0854-3.4713 7.6489-8.87 7.6436-16.1-0.0103-7.5107-2.6733-12.221-8.6504-15.27-20.437-10.426-36.528 18.787-17.599 31.95 4.0957 2.8479 14.038 2.538 18.606-0.58v-1e-4zm-14.464-4.7152c-8.2495-4.4762-8.1309-17.76 0.1899-21.206 9.8232-4.069 19.136 5.6545 14.969 15.629-1.626 3.8909-6.4648 7.3273-10.201 7.2443-1.0815-0.0241-3.3124-0.7742-4.9575-1.6668zm716.68-2.1943c11.864-9.4403 12.012-25.744 0.3237-35.748-14.159-12.12-36.028-1.6229-36.028 17.292 0 6.6012 1.9141 11.829 5.9097 16.14 4.4321 4.7825 8.9343 6.288 17.775 5.9447 6.8506-0.2662 8.3696-0.7248 12.019-3.6287zm-18.599-2.0596c-5.428-1.9354-9.0789-5.4225-10.645-10.167-4.8457-14.682 11.906-29.075 24.144-20.745 6.2043 4.2227 8.1836 7.8563 8.1836 15.024 0 7.7402-2.2908 11.437-9.3098 15.024-5.5383 2.8297-6.6453 2.907-12.374 0.8646h3e-4zm9.4629-8.4185c10.087-5.3726 3.4956-20.518-7.0322-16.157-6.7886 2.812-7.4634 12.324-1.1184 15.771 3.5674 1.938 5.1001 2.0106 8.1509 0.3859h-3e-4zm-311.76 8.6465c14.661-7.4664 12.285-30.11-3.7686-35.915l-3.5618-1.2881c-1.5254-24.93-1.4048-24.843-1.4048-35.941-23.492-24.298-25.768-26.673-49.424-50.892 7.4001-7.1627 16.663-14.749 13.547-29.675-2.6226-12.559-10.886-19.963-23.049-20.65-8.1396-0.4599-12.72 0.9796-18.426 5.7916-8.8672 7.4765-8.3479 16.365-9.2839 33.354 7.2361 0 7.1711 0.4854 6.1411-3.5511-2.3552-9.2288 0.3269-21.282 5.8064-26.092 8.6428-7.5859 20.52-7.0112 28.458 1.377 4.3779 4.6259 5.8035 8.3763 5.8035 15.269 0 8.9122-4.5713 15.694-14.067 20.868-1.8787 1.0237-3.4158 2.7419-3.4158 3.8181 0 2.8641 50.767 51.089 52.418 55.433 0.6167 1.6223 1.1213 9.7412 1.1213 18.042 0 16.714-0.2712 16.059 7.908 19.081 6.7485 2.493 9.9946 6.9624 9.9946 13.761 0 6.4595-3.1921 11.142-9.2468 13.565-5.7568 2.3036-10.482 1.4264-15.762-2.9266-5.915-4.8754-7.0979-8.634-7.0979-22.551 0-6.5906-0.4373-13.133-0.9717-14.539-1.2808-3.3691-61.638-63.416-64.463-66.251-12.218-1.46-13.914-1.3417-46.562-0.7191-0.4167 3.6016-0.2483 2.1456-0.6704 5.7908 15.348-0.1147 28.494-0.2129 43.842-0.3276 37.225 37.079 48.524 48.482 63.346 62.281 1.1418 26.664 0.9087 28.892 3.9214 34.074 6.0957 10.486 18.278 14.205 28.867 8.8125l-4e-4 -4e-4zm-175.15-1.8641c9.6829-5.9041 10.346-19.586 1.2173-25.151-6.7148-4.0939-15.511-1.7822-20.258 5.3237-3.0444 4.5571-3.1255 7.923-0.3293 13.698 3.8222 7.8938 12.152 10.53 19.37 6.1294zm-11.566-3.7582c-9.2368-5.1198-5.717-19.236 4.7969-19.236 4.6182 0 10.38 4.8358 10.38 8.7113 0 3.729-3.0566 8.6006-6.5203 10.392-3.8669 1.9996-5.2502 2.0208-8.657 0.1327v-1e-4zm3399.1 3.1638c0-1.2888-1.5176-1.639-7.1022-1.639s-7.1022 0.3502-7.1022 1.639 1.5176 1.6389 7.1022 1.6389 7.1022-0.3501 7.1022-1.6389zm-3215.2-9.5306c2.1958-3.135 2.1875-10.04-0.0142-12.243-2.2361-2.236-6.3347-3.2227-10.186-2.4523l-3.0803 0.6161c-1.1885-15.262-1.387-16.636-1.4785-31.023-8.1453-8.2542-62.566-63.567-68.52-68.833-4.5881-4.0579-12.721-6.835-13.992-4.778-1.731 2.8016 75.318 75.868 76.565 80.838 0.3738 1.4885 1.02 7.8469 1.4365 14.13 0.7039 10.62 0.9241 11.447 3.1326 11.762 2.2832 0.3252 2.3127 0.4883 0.7651 4.193-1.3291 3.1803-1.3621 4.1724-0.1902 5.6713 2.7427 3.5082 4.7393 4.4791 9.28 4.5135 3.52 0.0262 4.9758-0.5278 6.2827-2.3937h-2e-4zm3055.3-21.077c-0.3429-0.894-1.1309-1.6256-1.7506-1.6256-1.2851 0-1.5552 9.0409-0.3074 10.29 1.0654 1.0666 2.8727-6.5418 2.058-8.6644zm-3840.8 0.9969c6.3545-13.391-14.894-27.142-25.109-18.373-2.3091 1.9822-2.6318 2.5873-1.0923 2.0476 4.3613-1.5294 12.608-1.8408 15.557-0.5874 5.1001 2.1676 9.1729 9.6968 7.0244 12.984-1.0664 1.6317-18.939 3.1384-23.537 1.9843-2.5625-0.6432-2.8687-1.2424-2.8687-5.6162 0-5.2719-1.3535-6.3065-3.356-2.5651-2.8618 5.347 1.8301 16.244 6.9932 16.244 2.0708 0 2.0815-0.0918 0.252-2.1129-1.8774-2.0746-1.7021-2.1193 9.667-2.4585 6.3687-0.1901 11.578-0.0371 11.577 0.3402 0 0.3771-0.7397 1.2977-1.6411 2.0459-5.0986 4.2316 3.0723 3.3639 6.5347-3.9333h-5e-4zm3773.3 2.483c0.258-3.0525-0.0688-4.0129-1.3658-4.0129-1.2664 0-1.705 1.1475-1.705 4.4617 0 5.693 2.5837 5.3154 3.0708-0.4488zm-3516.6-4.1495c0.8643-4.3217 0.8613-16.024-0.0107-19.258-0.4497-1.6776-1.4858-2.4585-3.2627-2.4585-2.5933 0-2.604 0.0548-2.604 12.565 0 12.498 0.0142 12.566 2.5947 12.566 2.0322 0 2.7437-0.7404 3.2778-3.4146h0.0049zm68.047-21.952c-2.4673-0.4717-2.5728-0.2164-2.7524 6.7018-0.4707 18.091-4.0195 18.665 5.3184 18.665-0.0016-25.159 0.391-24.801-2.566-25.367zm75.773 0.2357h-6.5562c0 19.017 0.2017 23.876 0.7285 24.402 0.4004 0.4008 1.8755 0.7285 3.2778 0.7285 3.0133 0 2.5499 0.1646 2.5499-25.131zm-342.98 17.209c0.1147-6.8042 0.0908-17.017-0.0435-18.575-0.0396-0.4507-1.2275-0.8195-2.6421-0.8195-2.4712 0-2.5947 0.3932-3.1748 10.125-0.79 13.238-0.2319 16.098 3.1416 16.098 2.4536 0 2.6113-0.3945 2.7192-6.8291h-4e-4zm1147 4.611c5.0776-3.0957 9.4563-12.663 7.8027-17.049-6.0151-15.952-32.734-16.336-32.734 0.6223 0 13.904 13.97 23.109 24.931 16.426v-1e-4zm-13.386-5.3189c-1.594-0.6241-1.7651-1.0421-0.6973-1.702 0.8108-0.5012 1.752-0.3302 2.2034 0.4001 1.0652 1.7234 5.3831 0 8.3777-3.3375 2.4246-2.7051 4.1077-7.4913 2.6343-7.4913-0.4746 0-1.1406-1.1063-1.48-2.4585l-0.6172-2.4584 2.1289 2.5795c3.7195 4.5072 2.2214 12.977-2.0081 11.354-1.2263-0.4707-1.4399-0.2242-0.7842 0.9049 0.4954 0.8531 0.5176 1.2061 0.0491 0.7839-0.4685-0.422-1.5659-0.0535-2.4385 0.8196-1.7175 1.7175-4.0415 1.9086-7.3679 0.606l-2e-4 -2e-4zm-716.79 3.8448c0.3589-1.4298 0.4912-4.0112 0.2939-5.7365-0.2881-2.5219-0.8936-3.1368-3.0903-3.1368-2.1958 0-2.8022 0.615-3.0903 3.1368-1.1157 9.7648 4.8227 9.975 5.8867 5.7365zm66.04-2.9362c0-4.2026-0.1626-4.4246-3.0049-4.0975-2.6089 0.3002-3.0493 0.8859-3.3433 4.4432-0.3247 3.916-0.1914 4.0974 3.0044 4.0974 3.1822 0 3.3438-0.2153 3.3438-4.4431zm3237.8-2.4977c4.3004-1.8071 10.001-7.5057 11.763-11.759l1.306-3.1532c17.023 0 29.236-0.2793 29.236 1.2939 0 0.7117 0.9834 3.3254 2.1854 5.8085 5.4557 11.27 21.35 12.547 30.233 2.429 10.346-11.783 1.7825-29.135-14.39-29.157-6.4399-0.0087-12.575 3.8943-15.843 10.08l-2.7316 5.1693c-3.0778 9e-4 -25.085-0.1525-26.998 0.5818-1.0002 0.3838-2.2592-1.2233-3.7819-4.8275-2.5345-5.999-7.3818-9.3019-15.574-10.612-9.1801-1.4679-19.399 5.4379-21.924 14.816l-1.1718 4.3516c-24.94 0.5731-26.622 0.3253-27.075 2.6866-0.4605 2.4005 0.2902 2.0457 28.076 0.9188l1.2507 3.0192c1.3298 3.2106 6.0189 8.0726 8.7403 9.0629 3.2143 1.1696 13.241 0.7441 16.698-0.7085v-3e-4zm-15.851-5.6299c-3.8838-2.1848-5.2176-4.8402-5.2176-10.387 0-6.5427 4.5228-10.914 11.292-10.914 4.1345 0 5.3476 0.5273 7.7326 3.3617 3.7501 4.4568 3.918 11.64 0.3685 15.766-3.074 3.5739-9.8415 4.6116-14.175 2.1736zm72.702 0.4281c-9.3237-2.6672-10.94-16.04-2.5386-21.003 6.3162-3.7312 13.628-1.6833 16.954 4.7484 4.9277 9.5292-3.7437 19.307-14.415 16.254h-2e-4zm145.33 3.4621c2.4916-2.3993 3.9597-8.5667 3.9933-16.778 0.0306-7.5336-2.0229-12.048-6.2051-13.639-4.0541-1.5422-70.473-2.3379-82.936-2.5551-5.1541 5.1538-5.4868 4.4011-6.2935 15.876-0.4659 6.6293-0.3011 11.236 0.4619 12.911 2.557 5.6121 3.2994 5.7214 43.098 6.3597 41.772 0.6699 45.084 0.5195 47.881-2.174h3e-4zm-82.846-4.9777c-0.3834-14.105-0.5433-15.924 0.58-21.275 3.5336 0.0574 72.939 1.0382 76.179 1.696 2.3136 0.4698 2.4584 1.0374 2.4584 9.6322 0 6.6194-0.4333 9.4926-1.5747 10.44-1.9293 1.6011-15.027 1.1994-77.642-0.4929zm48.79-11.635c-0.2082-2.915-0.8164-5.0294-1.3517-4.6987-0.8066 0.4985-0.7271 11.408 0.111 15.241 0.5864 2.6816 1.5814-5.7728 1.2407-10.542zm-43.767-5.0812c-1.1993-0.4019-1.3933 0.3453-0.8915 3.4374 0.3527 2.173 0.2479 4.194-0.233 4.4912-1.0695 0.6609-0.1546 6.0557 1.027 6.0557 2.1371-1e-4 2.6309-13.136 0.0975-13.984zm-3407.2-28.083c-7.1729-6.7096-7.4736-6.0928-7.4736-13.602 0-3.6364-0.2139-6.6116-0.4751-6.6116-0.2617 0-1.7368 0.4795-3.2783 1.0656-3.187 1.2119-2.8022 2.3522-2.8022 9.861h-27.053c-2.7671 3.3768-5.145 6.2784-7.9121 9.6552v29.309c2.127 2.2616 9.8359 10.74 12.565 12.226 2.7593 1.5024 21.331 1.2443 25.596 1.2565 13.345-13.912 11.46-7.2645 10.832-43.16zm-30.616 9.2595c3.0171-3.726 10.661-3.4616 14.057 0.4862 3.4243 3.9812 3.209 7.7729-0.6636 11.645-9.3403 9.3409-20.013-3.9564-13.393-12.131zm11.973 12.532c4.207-2.9469 2.4434-12.548-2.2939-12.487-0.9111 0.0118-0.936 0.2513-0.0854 0.8195 2.1587 1.4415 3.6162 5.3138 2.9536 7.8479-1.0376 3.9668-9.228 5.4001-5.2183 5.4777 1.2187 0.0234 3.3086-0.7227 4.644-1.6583zm621.66 16.856c11.43-5.48 17.266-20.425 13.233-33.885-2.5032-8.3542-13.268-17.328-20.787-17.328-2.3247 0-2.8904-0.6178-3.3914-3.7053-0.7778-4.7924 0.3018-13.003 1.845-14.034 1.7625-1.1782 9.7627 0.9304 14.065-0.7263l3.0291-1.1663c-0.208-14.343-0.387-26.667-0.595-41.01-16.707 0-18.587 0.26-18.484-1.9121 0.3933-8.2542 0.4614-8.468 2.6948-8.468 5.6558 0 12.519-6.4096 15.092-14.094 3.3843-10.108-0.5237-22.764-8.7007-28.176-6.3674-4.214-19.125-5.0011-25.807-1.5921-9.3853 4.7879-14.752 16.262-12.33 26.358 2.3728 9.8913 10.763 19.06 15.706 17.163 2.5806-0.9902 2.1479-2.1074-1.7708-4.5765-12.557-7.9119-12.402-25.586 0.3005-34.215 5.4661-3.7133 15.46-3.0779 21.269 1.3522 4.6379 3.5377 8.1475 10.338 8.1831 15.855 0.0359 5.6567-3.9761 12.907-8.9719 16.214-4.2312 2.7999-4.4058 2.8241-5.8774 0.8118-2.5781-3.5261-1.7935-7.3744 2.3193-11.37 5.7529-5.5898 5.0474-12.5-1.6287-15.952-3.6074-1.8654-5.7896-2.1963-3.2998-0.5004 1.1858 0.8076 0.5225 0.9237-2.3979 0.4194-9.1643-1.5826-13.601 10.713-6.1934 17.165l3.3193 2.891c-0.5454 7.6941-1.0142 14.305-1.5596 22l-18.846 0.6273c0.0952 32.622-0.1184 40.969 1.699 42.184 1.9893 1.3295 14.033 0.5461 16.876 0.4299 0.3291 2.8972 0.8484 5.6093 0.0168 12.26-0.6279 5.0252-1.0352 5.7688-3.1597 5.7688-3.6621 0-12.039 5.7737-14.757 10.171-10.441 16.894-0.8181 39.309 18.606 43.339 6.4108 1.3297 14.693 0.3927 20.303-2.2972zm-23.195-3.6861c-5.8782-2.0804-13.158-9.9243-14.772-15.915-2.3921-8.8828 1.4365-19.773 8.4819-24.127 3.9326-2.4305 15.055-3.6429 22.531-2.4564 5.9438 0.9434 14.236 9.092 16.004 15.727 1.9978 7.4976-0.0635 15.051-5.8213 21.33-4.0479 4.4143-5.3213 5.1044-11.127 6.0287-8.4341 1.343-10.018 1.2822-15.297-0.5863h5e-4zm11.473-4.9129c0-3.64-0.4558-5.4646-1.3657-5.4674-0.7512-0.0022 0.219-0.9703 2.156-2.1514 3.8057-2.3206 5.3162-6.059 4.2173-10.438-3.3792-13.463-23.807-5.5419-14.405 8.296 4.7847 7.0417-0.7573 7.354 4.3157 12.427 4.0503 4.0503 5.0815 3.5092 5.0815-2.6664v1e-4zm-1.6311-13.124c1.3906-2.25-0.7524-3.4248-2.8252-1.5488-1.8977 1.7173-2.1064 1.7217-2.7454 0.0573-1.0115-2.6364 1.5798-5.2467 4.3511-4.3828 3.9424 1.229 5.3301 5.121 2.2476 6.304-0.9724 0.373-1.4111 0.1898-1.0281-0.4294v-3e-4zm14.743 0.7219c0-8.7705-4.0813-16.856-10.072-19.954-4.2529-2.1993-15.059-1.2175-15.059 1.3683 0 1.225 0.6155 1.4152 2.4585 0.7601 4.1199-1.4645 9.4641-0.862 12.597 1.4202 4.1475 3.0214 7.8901 10.835 7.8901 16.474 1e-4 6.3004 2.1854 6.1614 2.1854-0.0685zm-13.051-73.748c2.1787 0.3075 2.7305 1.087 2.9954 4.2318 0.281 3.3396-0.011 3.8824-2.1853 4.0605-8.1113 0.6647-6.7283-9.1276-0.8101-8.2923zm-57.427 95.87c5.8694-1.4779 12.921-7.329 16.137-13.389 1.8896-3.5613 2.4058-6.39 2.4209-13.268 0.0161-7.7887-0.3523-9.3961-3.385-14.751-2.6162-4.6187-4.6472-6.661-8.7759-8.8245-2.9546-1.5482-6.4624-3.1002-7.7959-3.4489-2.1572-0.5641-2.4221-1.3362-2.4072-7.0189 0.0276-10.662 0.7258-9.5698 18.012-10.756v-41.521c-6.728-0.2214-12.509-0.4117-19.237-0.6331 0.4087-6.1709 0.2554-3.8584 0.6624-9.9963 7.0356-0.3333 12.481 0.1815 17.952-9.6155 7.0623-12.648 0.1541-30.401-13.596-34.938-6.4436-2.1265-16.985-0.967-22.123 2.4335-5.7827 3.827-10.096 12.358-10.096 19.97 0 10.4 8.623 22.399 16.097 22.399 3.4546 0 3.1375-2.8785-0.5269-4.7851-6.3706-3.3141-11.2-11.291-11.2-18.5 0-2.0281 1.1321-5.8286 2.5161-8.4455 6.417-12.135 24.398-12.964 33.122-1.5261 2.7544 3.611 3.1511 5.0607 3.1511 11.512 0 5.7499-0.4978 8.0469-2.2529 10.398-2.9856 3.9987-6.957 6.7681-10.303 7.1844-2.4492 0.3047-2.7854-0.128-3.3525-4.3143-0.5928-4.3759-0.4167-4.7792 2.96-6.7714 5.6743-3.348 6.2727-10.642 1.2563-15.315-3.144-2.9292-10.594-2.996-14.137-0.1268-3.7131 3.0067-3.6345 10.784 0.1521 15.049 3.1414 3.5383 2.717 3.5853 2.1096 25.395-7.0432 0.2194-13.095 0.4079-20.138 0.6273 0.0332 2.2946 0.4326 40.004 1.0784 41.794 0.6133 1.7018 9.9194 1.3658 19.136 1.3658 0 7.2538 0.459 16.39-3.7361 16.39-1.3037 0-5.0388 1.5981-8.3003 3.5511-24.24 14.516-11.665 59.007 24.6 49.875l-5e-4 2e-4zm-18.574-5.2359c-18.642-8.6312-17.928-35.496 1.1375-42.744 1.8879-0.7177 4.2402-0.7495 6.6306-0.0894 2.24 0.6185 3.7048 0.6257 3.7048 0.0183 0-2.7187 21.146-1.3162 21.158 21.941 0 7.8311-1.6328 11.943-6.5825 16.538-7.1433 6.6315-17.402 8.339-26.048 4.3359h2e-4zm16.337-7.1235c5.8352-2.438 8.9724-9.1985-0.0952-4.4698-6.6333 3.4595-15.02 0.377-4.9014-0.9651 15.874-2.1058 7.5012-19.456 4.4829-17.59-0.4517 0.2791-2.3611-0.0294-4.2434-0.6855-2.7539-0.96-3.9417-0.8525-6.084 0.5511-3.4067 2.2322-4.6323 8.176-2.5469 12.354l1.53 3.0653c-10.758-0.8448-13.182-0.3405-12.397-8.5089 0.4016-4.1781 1.2314-5.9739 3.8782-8.3913 1.8523-1.6916 3.6826-2.7604 4.0679-2.3752s0.5366-0.0181 0.3362-0.8964c-0.4849-2.1266 6.292-3.852 11.38-2.8975 6.625 1.2427 14.402 8.7598 10.111 3.9735-9.1948-10.256-31.143-6.0572-31.143 11.209 0 14.576 14.124 20.433 25.624 15.628zm-7.6027-12.02c-3.0862-3.0861-3.3667-4.8054-1.2554-7.6927 1.0762-1.4718 2.2366-1.8163 4.3391-1.2886 5.3547 1.3439 6.4707 8.0505 1.7593 10.572-1.7044 0.9119-2.6514 0.6009-4.843-1.5907zm-2.4812-62.435c-3.1248-2.1887-3.3777-9.1204-0.4302-11.788 2.5024-2.2647 7.1279-2.3386 8.9502-0.1429 1.8857 2.2722 0.6809 3.1582-2.1992 1.6169-3.2314-1.7295-5.4714-0.627-5.4714 2.6929 0 3.2205 2.6182 3.7474 4.2429 0.8538 1.0098-1.7988 1.1201-1.7908 1.8618 0.1353 0.531 1.378 0.1978 2.3782-1.019 3.0591-2.771 1.5508-2.1616 3.4109 0.9238 2.821 6.6208-1.2657-0.3601 5.3036-6.8591 0.7518h2e-4zm136.32 83.65c-0.011-2.7803-0.2917-3.3864-1.0293-2.2201-0.8594 1.3591-1.9619 1.4055-7.2156 0.3035-17.723-3.7173-24.323-21.335-13.559-36.194 4.9346-6.812 8.9966-8.8645 17.554-8.8694 8.658-0.0044 14.948 2.874 20.027 9.1657 3.3254 4.1198 3.3616 4.301 3.1482 15.801-0.1921 10.379-0.061 11.291 1.2168 8.459 1.2988-2.8787 1.5356-2.9894 2.5442-1.1879 1.0552 1.8854 1.147 1.8748 1.8083-0.2087 0.3831-1.2075 0.7593-5.5916 0.8359-9.7424 0.1689-9.1399-2.1074-14.297-9.1941-20.829-5.7551-5.3049-11.089-7.2746-19.941-7.3636-24.036-0.2418-37.089 32.343-19.495 48.664 5.5232 5.123 13.655 8.5024 19.766 8.214 3.2986-0.1556 3.5479-0.4373 3.5344-3.9917h-2e-4zm2848.6 0c0-1.4469-15.297-1.4573-15.297 0 0 1.4469 15.297 1.4571 15.297 0zm-4011.8-4.1801c4.7905-2.7704 7.4692-7.105 8.0024-12.948 1.1406-12.515-10.606-22.204-21.772-17.958-7.4756 2.8423-12.773 13.413-10.624 21.198 3.0674 11.108 14.268 15.565 24.394 9.7087l-4e-4 -1e-4zm-16.049-4.5782c-9.4844-7.4608-2.6802-22.811 8.832-21.525 2.5786 0.288 5.6489 1.393 6.8232 2.4556 5.0527 4.573 4.6406 14.782-0.7695 19.037-3.791 2.9822-11.115 2.9982-14.886 0.0326zm367.92-12.358c-0.0415-3.1094-0.9009-7.226-1.9111-9.148-3.688-7.0209-12.802-11.488-19.835-9.7227-4.6328 1.1627-11.348 8.0295-12.676 12.963-3.395 12.61 6.7593 24.542 19.271 22.643 8.21-1.2462 15.28-7.0633 15.151-16.735zm-25.165 7.5678c-3.0933-3.0934-3.7148-4.5154-3.7148-8.498 0-2.6307 0.7183-5.8081 1.5952-7.0609 3.8809-5.5408 13.342-5.9757 18.17-0.8353 2.104 2.2393 2.6333 3.976 2.6333 8.6364 0 7.8931-3.1626 11.473-10.134 11.473-4.0425 0-5.4453-0.6094-8.5508-3.7151h5e-4zm88.526 8.1395c5.5894-3.4542 8.6172-9.9873 8.0781-17.432-0.5762-7.9672-3.7876-12.635-10.986-15.97-5.9297-2.7475-9.8164-2.3635-15.034 1.4856-10.743 7.9253-10.231 25.214 0.9375 31.69 5.1079 2.962 12.419 3.0592 17.003 0.2261h5e-4zm-13.22-5.0947c-3.6675-1.8087-6.9092-7.2162-6.9023-11.514 0.0132-5.328 6.5352-14.172 15.785-10.308 8.9087 3.7221 8.8999 18.263-0.0122 22.324-3.5767 1.6298-4.6743 1.5676-8.8706-0.5017h4e-4zm-129.48 3.1806c12.449-9.2205 9.6235-27.688-5.0063-32.724-10.379-3.5724-22.118 5.7379-22.118 17.541 0 7.3224 3.9648 13.683 10.38 16.653 4.3774 2.0264 13.051 1.2645 16.744-1.4707l-5e-4 -1e-4zm-17.546-5.6988c-3.2339-2.8896-3.5679-3.7681-3.5679-9.3772 0-5.609 0.334-6.4874 3.5679-9.3771 11.796-10.539 26.764 7.3907 15.81 18.938-4.0874 4.3086-10.87 4.2298-15.81-0.1836zm-180.58 4.3629c4.25-2.3896 8.1548-9.3583 8.1772-14.595 0.0249-5.8214-2.2617-10.608-7.0972-14.854-3.8081-3.3436-4.644-3.6147-9.8237-3.1853-6.8501 0.5681-11.548 3.6349-14.264 9.3112-7.7987 16.301 7.6466 31.958 23.008 23.322zm-13.302-3.8616c-9.6382-4.1923-9.4014-17.96 0.3784-22.047 5.4526-2.2781 7.8916-1.8235 11.94 2.2251 2.8677 2.8677 3.7148 4.6246 3.7148 7.7028 0 5.6093-2.7759 10.337-7.1396 12.16-4.4604 1.8638-4.5151 1.8635-8.894-0.0414v-1e-4zm3132.9-7.8063c6.583-2.0353 15.202-8.2542 18.763-13.537l2.5365-3.7639c18.816-0.0325 320.35-0.553 339.16-0.5856 40.354-41.432 48.449-49.198 41.236-49.198-2.3643 0-41.476 40.486-43.422 42.471-263.46 2.4301-261.2 2.3375-334.35 2.3276-0.0391-18.018 1.0795-24.648-10.918-36.709-16.845-16.933-47.414-12.43-58.046 8.5514-10.747 21.208 0.5494 46.464 23.329 52.159 5.123 1.2808 14.387 0.549 21.709-1.715l1e-4 3e-4zm-24.15-7.3805c-28.164-13.173-19.642-54.016 11.362-54.456 11.166-0.1583 20.755 5.6862 25.911 15.792 13.038 25.553-14.671 49.236-37.274 38.664v-1e-4zm17.413-5.1684c5.9542-1.4993 12.033-6.4599 14.97-12.216 1.7524-3.4352 2.1677-5.8845 1.8177-10.722-0.6241-8.6296-4.3638-14.082-12.332-17.981-5.2653-2.5761-7.0128-2.9051-12.694-2.39-12.408 1.1251-19.554 9.1401-19.554 21.932 0 10.43 4.8304 17.764 13.808 20.965 5.2047 1.8555 7.9318 1.9358 13.985 0.4115zm595.9 3.4504c0.2529-4.3596-0.0131-5.6474-1.0927-5.2914-0.8721 0.2876-1.5566 2.7103-1.7609 6.2323-0.2529 4.3597 0.0131 5.6475 1.0927 5.2915 0.8722-0.2877 1.5566-2.7103 1.7609-6.2324zm-3132.7-10.067c3.5952-2.222 4.6394-2.3044 20.343-1.6056 19.188 0.8539 22.671 1.5079 27.108 2.0672-0.252-2.2084-0.4685-4.1059-0.7207-6.3142-31.793-0.4238-44.509-0.3763-43.86-1.9351 3.6145-8.6877 3.4478-13.375-0.6111-17.156-4.634-4.3176-14.962-1.8619-16.966 4.034-1.8252 5.3707 0.6226 10.774 6.8049 15.019 2.1672 1.4883 2.1646 1.5231-0.353 4.2027-1.8796 2.0009-2.1636 2.8519-1.0928 3.2797 2.9105 1.1632 5.6436 0.6978 9.3485-1.5919zm-9.9908-10.853c-3.2058-3.8102-3.6433-8.3278-1.1086-11.453 0.9458-1.1666 1.4084-1.5063 1.0281-0.7551-0.3804 0.7512-0.0481 1.3734 0.7383 1.3825 0.8735 0.0098 1.0054 0.3293 0.3379 0.8195-0.9578 0.7036-1.1643 2.9915-0.6846 7.5897 0.2451 2.3715 10.488 2.9985 7.7014 4.7618-2.7861 1.7635-5.1331 1.0766-8.0125-2.3452zm2.8753-3.4902c-1.1663-1.4481 0.1333-6.2598 1.6907-6.2598 1.377 0 3.5317 2.4432 3.5317 4.0043 0 2.1713-3.925 3.8664-5.2224 2.2555zm-647.16-1.3429-0.0645-15.843h-7.5166v31.687h7.6465l-0.0649-15.843h-5e-4zm3733.2 8.6722c0.5695-3.561 0.2816-4.7032-1.6188-6.4231-2.7287-2.4694-2.1813-2.2189-10.996 6.3887 5.2097 5.3753 10.596 12.66 12.615 0.0344zm63.444 3.7582c5.6379-3.7311 6.5297-6.9369 9.1125-14.069h28.379l1.1636 4.3209c2.481 9.2139 9.1771 13.76 19.061 12.94 10.58-0.8774 17.01-7.9047 17.01-18.592 0-13.401-13.859-22.233-25.912-16.513-4.2068 1.9962-10.145 9.3392-10.145 12.545 0 1.863-1.1124 2.0214-14.204 2.0214-7.8124 0-14.573 0.0251-15.024 0.0558-0.4505 0.0306-1.134-1.4841-1.519-3.3661-0.7787-3.8073-5.3904-9.1821-9.8998-11.538-3.8481-2.0104-14.345-1.9769-18.28 0.0583-4.5627 2.3594-8.6696 7.7731-10.047 13.244l-1.2147 4.824c-25.031 0-28.15-0.3846-28.15 3.5067 0 2.5454 0.6299 2.1632 28.616 1.4103 1.5457 2.9885 3.0548 6.9114 8.0891 10.032 5.9229 3.6715 16.712 3.2581 22.965-0.8798l1e-4 -3e-4zm-21.264-5.904c-4.0705-3.4252-5.1556-7.8568-3.1084-12.696 2.055-4.8577 5.1284-7.4484 9.7199-8.1935 2.9958-0.4862 4.4241-0.0479 6.9646 2.1374 2.939 2.528 3.1959 3.3353 3.1959 10.042 0 6.3466-0.3349 7.5645-2.5796 9.3821-3.7584 3.0434-10.135 2.7412-14.192-0.6725zm69.11-0.9539c-2.7495-2.7495-3.714-4.6662-3.7109-7.3754 0.0109-9.0206 8.6612-14.835 16.931-11.38 8.4762 3.5415 9.4158 16.81 1.4812 20.913-5.3599 2.7717-10.531 2.0127-14.702-2.158h-2e-4zm-3249.3 6.4213c20.765-12.169-12.662-43.835-24.79-20.065-7.7636 15.218 9.3807 29.096 24.79 20.065zm-14.384-2.6533c-2.2793-0.9238-5.7512-4.4235-4.3884-4.4235 0.4172 0-0.0142-0.7727-0.9585-1.717-5.9761-5.9762 5.3816-14.699 8.4673-14.584 1.9731 0.0739 1.7805 0.352-1.1235 1.6229-4.1946 1.8361-5.7832 4.4762-5.7832 9.6109 0 13.557 18.864 5.8168 13.05-6.2047-1.0862-2.2452-1.0212-2.2338 1.0925 0.1929 1.3723 1.5756 2.2537 4.1271 2.2639 6.5558 0.0122 2.9696 0.2849 3.5615 1.0759 2.3375 3.3779-5.2271-2.6372-12.442-5.5303-11.685-1.3223 0.3457-1.7698 0.0294-1.3835-0.9771 0.7903-2.0588 5.9329 0.6213 8.3906 4.3729 2.7622 4.2153 2.1902 6.8892-2.4834 11.61-4.384 4.4278-7.7351 5.2963-12.689 3.2883zm3414.1 2.2164c3.13-3.1299 3.1939-3.4266 3.1939-14.823 0-20.062 2.3608-19.134-48.64-19.134-24.007 0-40.807 0.4278-42.006 1.0696-1.0991 0.5883-2.5419 2.6284-3.2061 4.5337-1.519 4.3572-1.5832 22.248-0.0896 25.038 2.4204 4.5226 4.7307 4.8477 38.764 5.4551 52.433 0.9357 47.885 1.9599 51.985-2.1399l-3e-4 -1e-4zm-62.911-4.4546-19.668-0.5463v-21.853c66.677-0.5132 74.443-0.7939 76.35 1.1136 2.6297 2.6298 1.1483 19.723 0.2924 21.071-0.9385 1.4775-10.252 1.5127-56.975 0.2148zm-3518.9-9.5607c-0.0103-12.529-0.0718-12.868-2.666-14.071-3.5757-1.6578-3.8813-0.612-3.8813 13.286 0 9.637 0.2856 11.496 1.9121 12.443 4.3197 2.5155 4.6445 1.6982 4.6352-11.659zm-72.106-1.9122v-13.658l-6.0098-0.0044c0.2349 9.5551 0.4365 17.765 0.6714 27.32h5.3384v-13.658 3e-4zm-269.46 10.837c0.8687-2.2635 0.8545-17.801-0.02-22.173-0.5342-2.6741-1.2456-3.4146-3.2778-3.4146-3.0693 0-2.5947-0.5176-2.5947 27.316 1.9477 0 5.1211 0.2808 5.8925-1.7284zm197.89-25.042h-5.4634c-0.2144 9.3625-0.3989 17.407-0.6133 26.77h6.6904c-0.2148-9.3626-0.3989-17.408-0.6137-26.77zm2278.2 9.8338h-14.205c-0.873 12.201-2.0657 11.428 14.865 11.473-0.231-4.0124-0.4295-7.4603-0.6604-11.473zm-51.916 7.3754c-0.033-6.6302-0.9915-7.9217-5.8789-7.9217-10.186 0-9.4033 5.799-9.4033 10.926 15.685 0 15.3 0.4843 15.282-3.0048zm1519.9-1.3658c0-1.4433-13.112-1.4474-13.112 0 0 1.4433 13.112 1.4474 13.112 0zm-3513.3-7.8218 7.0078-6.7291v-29.41c-4.5532-4.4966-8.4653-8.3605-13.018-12.857l-27.956 0.0088c-3.248 4.2059-6.0391 7.8198-9.2876 12.026v30.881c4.7769 4.4641 8.8813 8.2999 13.658 12.764 13.857 0.0283 8.7417 0.0179 22.588 0.046l7.0078-6.7291v-3e-4zm-23.367-16.247c-8.6465-8.0552 1.9478-22.635 11.104-13.479 8.0674 8.0675-2.7803 21.234-11.104 13.479v1e-4zm11.191-2.3982c0.9355-1.3356 1.7012-3.2361 1.7012-4.2232 0-3.0138-4.3159-7.5528-7.1812-7.5528-5.751 0-9.3423 8.4514-5.3062 12.487 2.6119 2.6116 8.7422 2.2073 10.786-0.7114zm-8.5093-0.6623c-3.4854-3.8509-1.6152-8.9283 3.2886-8.9283 2.3164 0 4.7363 2.7545 4.7363 5.3914 0 1.3826-3.9717 5.5351-5.2939 5.5351-0.5078 0-1.7373-0.8992-2.7319-1.9982h9e-4zm150.89 15.929c7.0984-6.9943 8.7378-6.598 2.0681-0.7267-5.8284 5.13-6.2625 6.4631-2.1074 6.4631 3.7009 0 8.0359-4.9784 12.333-9.1962v-30.325c-4.5686-5.1404-8.4941-9.5573-13.063-14.698-9.3796 0.0714-17.439 0.1326-26.819 0.2039-4.2817 4.3421-2.6133 2.6502-6.9343 7.0313h-26.04c-2.4819-2.7275-6.311-7.6486-9.665-7.6486-1.4883 0-2.7051 0.3004-2.7051 0.6674 0 0.4795 2.5586 3.2341 13.093 13.801 24.433-0.9297 25.835-0.5854 29.275-3.6684 14.954-13.401-2.8372 5.5901-6.2231 5.5901-1.179 0-2.468 0.5246-2.8643 1.1658-0.3965 0.6412-0.7012 6.6644-0.6777 13.385 0.0569 16.043-0.5334 10.509 9.9487 20.172l3.886 3.5823c7.4243-0.2129 13.804-0.3958 21.228-0.6088l5.2668-5.1901 3e-4 1e-4zm-20.441-16.997c-4.2058-4.2055-4.4458-9.021-0.6396-12.827 5.5801-5.5801 14.8-1.5713 14.8 6.4349 0 4.7151-2.7952 8.1602-7.3315 9.0364-2.9356 0.5668-4.0491 0.1356-6.8292-2.6443zm9.9773-0.9275c2.4451-2.2128 2.5881-6.8713 0.2988-9.7288-1.6145-2.015-1.6357-1.9913-0.4338 0.4757 2.5376 5.2071-3.9727 11.331-8.261 7.7717-1.9788-1.6425-2.1267-6.6284-0.2588-8.7551 1.5894-1.81-3.551 1.6575-3.551 5.1119 0 5.7345 7.8779 9.0418 12.206 5.1246h-5e-4zm-51.992 16.559 4.7764-5.4633 0.0459-23.417-18.072-18.65c-3.2661 0.0056-16.803-0.1408-19.903 0.6901-3.1045 0.8322-10.545 12.216-12.599 15.153 0.834 18.872 0.5215 11.809 1.3525 30.594 2.7427 2.5395 5.0996 4.7216 7.8428 7.2611 11.115-0.2466 20.666-0.4586 31.782-0.7052l4.7759-5.4633-5e-4 1e-4zm-22.058-14.126c-4.7158-2.0529-4.7583-5.0949-3.9756-4.6104 1.0928 0.675 0.5742-4.403 1.9092-7.4874 0.8428-1.9481 0.7456-2.0226-0.8975-0.6857-3.0034 2.4425-1.6646 9.7309-2.6226 4.72-1.1772-6.1595 6.394-10.624 12.586-7.4219 3.6689 1.8974 4.583 3.6639 4.583 8.861 0 2.6478-0.7939 4.2799-2.8789 5.9202-3.3413 2.6285-4.1357 2.6927-8.7031 0.7043l-4e-4 -1e-4zm140.35 15.303c4.6162-2.387 10.799-9.7866 12.104-14.485 3.458-12.453-1.8047-26.461-12.168-32.388-16.025-9.166-37.264 1.1416-39.595 19.472-0.894 7.0319 0.9849 16.709 3.8335 19.741 2.699 2.873 12.196 8.1568 16.8 9.3466 4.4419 1.148 15.026 0.3131 19.025-1.6865zm-23.437-5.4321c-8.0273-3.7379-10.818-8.136-10.818-17.052 0-8.8582 2.7434-14.557 9.2061-19.121 4.0469-2.8586 5.582-3.2779 12.002-3.2779 9.0056 0 13.926 2.8618 18.101 10.528 3.928 7.2127 3.9202 17.52-0.0176 22.858-6.5323 8.8537-17.478 11.185-28.474 6.0655zm16.371-4.3628c10.024-4.188 11.88-17.811 3.4792-25.528-12.53-11.51-32.252 5.6981-22.895 19.978 1.9338 2.9512 9.6726 7.0632 13.296 7.0645 1.3714 4e-4 4.1253-0.6811 6.1201-1.5145zm-12.657-7.2766c-2.8757-2.876-3.241-3.8789-2.6843-7.3754 0.7542-4.7378 5.0244-8.9637 9.0579-8.9637 4.2546 0 9.1423 5.5315 9.1423 10.346-1e-4 8.7426-9.2093 12.3-15.516 5.9933zm-321.21 6.9318c12.504-9.2607 9.9224-28.55-6.0605-33.963-9.5654-3.2392-20.972 6.8759-21.04 18.657-0.0415 7.1331 5.1426 14.708 11.995 17.529 3.1312 1.2887 12.157-0.0395 15.105-2.2231zm-13.467-3.5529c-4.8428-2.0031-7.6484-6.4957-7.6484-12.247 0-4.7916 0.4399-5.8577 3.5684-8.6531 9.9443-8.8853 23.684 2.0865 18.412 14.703-2.3345 5.5877-8.9209 8.4354-14.332 6.1971h4e-4zm82.854 5.0153c4.6582-1.9463 9.2061-7.4405 10.099-12.2 2.0249-10.793-3.7676-14.848-11.797-22.612-10.504 0.7598-12.407 0.4931-16.242 4.1389-15.421 14.661-1.0214 38.596 17.941 30.673zm-12.028-5.6917c-7.0864-3.5844-8.7358-14.034-3.104-19.666 5.2695-5.2693 13.155-4.265 17.082 2.1759 6.3413 10.398-3.5449 22.767-13.978 17.49zm-404.56-16.711c6.1616-2.0333 6.7725-1.6747 14.13-10.055 0-125.75 0.2358-189.37-1.2852-190.89-0.9858-0.9854-0.8765-1.7376 0.4678-3.2233 2.5752-2.8472 2.1533-17.496-0.5479-19.006-3.7451-2.0936-0.1846-167.13-3.3628-451.12-3.4399 0.0787-13.805 0.1149-16.852 1.2254-1.4814 0.5401-2.4585 0.4727-2.4585-0.1694 0-0.5861-1.4751-1.0656-3.2778-1.0656h-3.2778c0 331.28 0.2007 449.92-1.3154 450.43-2.1201 0.7067-0.1602 15.411-0.6743 23.236-0.1182 1.8029-0.4785 44.826-0.7998 95.607-0.6851 108.2-2.0854 96.482 11.531 105.26v22.718l7.1021-0.6848c0.373-13.381 0.2314-8.3074 0.6206-22.255zm-11.431-13.892c-0.7847-2.0456-0.9077-27.289-0.1284-26.51 0.4556 0.4556 1.3887 28.243 0.9478 28.24-0.0865-6e-4 -0.4547-0.7788-0.8194-1.7295zm-0.6631-92.786c0-35.957 0.3018-65.075 0.6704-64.706 1.6777 1.677-0.6709 241.85-0.6709 64.706h5e-4zm3.6821-11.995c-0.4761-1.2418 0.0273-1.9807 1.6392-2.4021 1.2798-0.3347 2.3271-1.1523 2.3271-1.8169s0.7656-0.1155 1.7007 1.2201c1.9629 2.8019 7.374 3.4754 6.3433 0.7895-0.3457-0.9015-0.0845-1.639 0.5806-1.639 1.5454 0 1.2095 4.4581 1.2095 6.2827 0 0.4507-1.1064 0.8195-2.4585 0.8195s-2.52 0.6146-2.5952 1.3658c-0.4604 4.5963-0.0659 6.8566-1.519 4.6437-0.9023-1.3748-1.2324-1.3963-2.0464-0.1332-0.5337 0.8282-1.4751 1.1939-2.0918 0.8127s-1.3706-0.0753-1.6748 0.6795c-0.7745 1.9192-0.4264-8.0496-1.4147-10.622zm4.418-74.421c-6.6626-3.3643-9.7104-10.922-4.0771-5.8298l2.9307 2.6489-2.2168-3.8764c-3.4751-6.0768-0.5439-10.993 6.6772-11.197 10.62-0.301 12.761 13.196 2.9028 18.294-2.6435 1.367-3.4419 1.362-6.2168-0.039zm82.04 212.72c11.066-6.2965 11.032-24.533-0.0601-31.844-1.7681-1.1655-4.1353-2.1223-5.2607-2.1263-1.479-0.0054-1.7495-0.3857-0.9756-1.373 1.3086-1.67 1.6304-13.362 0.7231-26.284-0.7749-11.042-0.3823-9.6555-6.4434-8.9534-0.0728 12.417-0.1353 23.086-0.208 35.503l-4.624 3.3495c-4.9092 3.5564-8.7622 10.359-8.8032 15.542-0.0283 3.6111 2.5894 10.243 5.2075 13.191 1.0283 1.1585 3.8369 3.0157 6.2412 4.1271 4.8164 2.227 8.8652 1.9046 14.201-1.1309l0.0025 2e-4zm-15.438-5.3202c-9.0337-7.3176-3.8271-23.194 7.6055-23.194 3.6855 0 9.0474 4.6788 10.538 9.1951 1.4976 4.5369-0.9634 11.626-4.9404 14.232-3.4337 2.2498-10.287 2.1291-13.203-0.2325zm213.76 5.2157c4.9429-3.5194 8.064-10.92 7.1562-16.97-2.0254-13.504-17.573-21.135-27.367-13.431-6.2881 4.9463-9.0947 16.85-5.5688 23.626 1.9194 3.6896 5.8262 7.3853 9.3921 8.8845 4.2637 1.7929 12.374 0.7495 16.387-2.1085l5e-4 1e-4zm-16.151-3.8919c-5.8706-4.1118-7.3555-12.991-3.2056-19.167 2.1714-3.2312 3.1689-3.7561 7.6963-4.0477 4.6841-0.3017 5.5762 0.0402 8.978 3.4419 3.2275 3.228 3.7769 4.5176 3.7769 8.8748 0 6.2272-1.2778 8.7997-5.4414 10.953-4.1055 2.1231-8.7256 2.1016-11.804-0.0549zm480.01 4.5201c9.1775-6.0133 8.1519-21.142-2.0164-26.146-5.8037-2.8561-10.958-1.6746-16.389 3.7571-4.1865 4.1865-4.272 4.4286-3.8115 10.795 0.5166 7.1437 2.4438 10.224 7.9861 12.767 3.9168 1.7971 10.53 1.252 14.231-1.1731zm-13.768-6.0086c-6.0291-6.0289-2.7236-15.381 5.436-15.381 8.5767 0 12.689 10.471 6.2786 15.985-4.0484 3.4822-7.823 3.2876-11.715-0.6038zm669.56 5.9022c28.96-12.1 20.052-50.37-9.0481-52.706-8.3811-0.6727-13.636 0.9974-19.353 6.1504-9.3416 8.4207-12.142 21.767-6.8108 32.464 2.8296 5.6788 10.371 12.309 16.413 14.43 4.8858 1.7154 14.289 1.5459 18.799-0.3388zm-23.443-5.9744c-3.6558-2.2288-3.9216-2.8176-3.585-7.9296 0.1523-2.3121-0.448-3.2462-2.616-4.0704-2.3459-0.892-2.8135-1.764-2.8135-5.2488 0-6.1948 2.353-4.8286 2.7654-10.069 0.5149-6.5457 7.446-11.251 16.455-11.17 9.1367 0.082 15.167 4.4247 17.98 12.948 2.8518 8.6406-2.8579 21.171-11.024 24.193l-3.7766 1.3975c4.3789-0.4509 9.8542-1.2858 8.4221 0.1464-1.7112 1.7112-10.53 2.3864-13.113 1.004-1.4998-0.8026-2.5105-0.845-2.9561-0.124-0.9454 1.5303-1.69 1.3904-5.7381-1.0777zm9.3025-3.1119c1.0435-0.5031 3.8635-1.8558 6.2664-3.0062 4.7778-2.287 9.7698-9.666 7.5293-11.13-1.7927-1.1716-4.7959-7.4497-4.7959-10.026 0-3.0602-2.49-2.5229-1.6392-1.147 0.405 0.655-0.9917 1.0953-3.4863 1.0994-7.2256 0.0103-8.8491 4.0558-12.465 2.1206-1.7542-0.9388-2.2749-0.6565-3.1799 1.7241-2.2961 6.0388-1.3787 9.2761 4.2119 14.867 2.9116 2.9117 5.0425 5.5458 4.7349 5.8535-0.8611 0.8611 0.7114 0.6633 2.8245-0.3553l-4e-4 1e-4zm14.444-23.276c-3.3318-7.3124-14.513-9.8374-20.66-4.6653-1.8506 1.5571-3.0366 3.3622-2.6357 4.011 0.4414 0.7139 1.0513 0.3101 1.5442-1.0228 0.5237-1.4155 2.6355-2.7124 5.9092-3.629 4.4424-1.2438 5.5813-1.1945 8.8953 0.3859 2.0903 0.9968 4.6262 3.2516 5.636 5.0107 2.1543 3.754 3.0352 3.6932 1.311-0.0905h2e-4zm2391.8 26.922c0-5.2811-0.2649-6.0096-2.1853-6.0096-1.889 0-2.1853 0.7285-2.1853 5.3722 0 4.9263 0.7236 6.2631 3.5511 6.5607 0.2234 0.0235 0.8195-1.0911 0.8195-5.9233zm-172.57-7.1694c2.8567-2.8566 2.3728-6.2202-1.2863-8.9414-2.691-2.0014-3.0582-2.0222-6.2827-0.3547-3.8988 2.0161-4.0228 2.5387-1.8413 7.7595 1.8773 4.4933 5.8113 5.1357 9.4105 1.5367h-2e-4zm176.16-3.5916c5.17-2.1666 10.705-7.2084 12.42-11.314l1.5051-3.6022h28.35l1.7058 4.0825c6.6371 15.885 26.637 16.552 34.497 1.1511 7.154-14.017-5.2945-29.846-20.32-25.838-10.154 2.7084-12.06 8.6998-15.799 16.781l-28.531 1.0926-1.1031-4.1052c-2.3631-8.7949-13.034-15.038-22.864-13.378-5.7267 0.9675-13.85 8.316-14.879 13.46l-0.6954 3.4772c-27.022 0-28.136-0.387-28.136 2.1853 0 2.0723 0.7286 2.1853 14.086 2.1853 13.853 0 14.097 0.0423 14.727 2.5541 2.4604 9.8033 15.031 15.462 25.035 11.27h-4e-4zm-19.013-20.378c3.0396-10.145 14.742-11.999 19.362-3.0665 2.2457 4.3428 1.5021 12.318-1.4211 15.241-7.0228 7.0225-21.588-8e-4 -17.94-12.174zm77.161 14.516c-3.5206-0.847-8.1144-5.8759-8.8243-9.6595-1.379-7.3505 6.2755-15.342 13.638-14.239 4.715 0.7064 9.7131 5.4404 10.571 10.012 0.9224 4.917-2.0807 10.788-6.6204 12.942-3.6923 1.7522-4.8761 1.8797-8.7647 0.9441zm146.6 0.34c2.1958-2.5529 2.5465-4.1331 2.5465-11.478 0-9.3364-1.4351-14.921-4.2171-16.41-2.186-1.1699-88.204-1.9928-89.342-0.8547-1.1132 1.1132-2.4182 10.916-2.5138 18.884-0.089 7.4719 0.4899 7.174 5.5566 11.936 87.695 1.5023 84.411 2.0595 87.97-2.0783zm-83.511-4.2311c-1.3326-1.6923-0.8522-16.563-0.8076-19.914 2.0457 0.0212 77.388 0.6979 78.165 1.1436 0.2691 0.1543 0.582 1.4543 0.5059 19.617-28.799 0.0961-62.072 0.5195-63.084-0.9887-0.5719-0.8524-0.8076-0.8375-0.8195 0.0519-0.0229 1.7494-12.589 1.8311-13.96 0.0907l2e-4 -1e-4zm533.8-0.2465c0.5849-10.728-6.2038-18.029-16.765-18.029-4.6699 0-6.4305 0.5607-9.2744 2.9537-4.3455 3.6564-6.4912 8.6016-6.4912 14.96 0 3.7153 0.4539 4.9941 1.9121 5.3868 2.435 0.6556 25.594 0.2454 30.321 0.1917l0.2979-5.4632zm-1899.7-5.7364c0.4146-6.4668-0.1907-30.681-0.3279-37.423h-13.834l-0.7856 11.528c-0.71 10.416 0.0295 28.198 1.2595 30.266 0.2678 0.4507 3.3811 0.8195 6.9182 0.8195h6.4316l0.333-5.1901h0.0052zm-12.342-12.566c-0.2012-12.64-1.7141 3.3409-1.9675-4.9169-0.0601-1.9531 0.3828-3.5511 0.9839-3.5511 0.6008 0 1.0925-1.1766 1.0925-2.6147 0-2.8926 2.4692-4.3452 5.6631-3.3315 1.687 0.5354 2.0444 1.6177 1.9033 5.7612-0.2532 7.4353-1.9214 13.297-3.7839 13.297-0.8782 0-1.5969 0.4917-1.5969 1.0927s-0.4917 1.0927-1.0925 1.0927c-0.6011 0-1.1418-3.0731-1.2017-6.8291l-3e-4 -1e-4zm-40.4-3.4063-0.0439-20.069c-15.406-1.8246-14.855-3.9695-14.399 17.94 0.4885 23.454 0.0383 22.198 7.9702 22.198h6.5164l-0.0437-20.069h2e-4zm-10.845 10.171c0-0.6364-0.4917-0.8532-1.0928-0.4818-0.6909 0.4269-1.0872-2.2615-1.0776-7.3109 0.022-11.507 0.5657-12.903 5.0293-12.903 7.1855 0 1.6272 5.4105 5.0625 5.498 0.7693 0.0195 0.4397 0.7354-0.7551 1.639-1.1821 0.894-1.5122 1.6042-0.7458 1.6042 2.0195 0-0.0601 3.133-0.3438 7.1022-0.0864 1.2018-0.7505 2.0624-1.4775 1.9121-0.7268-0.1503-1.3215 0.7103-1.3215 1.9122 0 2.9763-3.2778 2.4554-3.2778 1.0281h1e-4zm2104.8 4.8329 5.0694-0.6948v-84.753c-4.7287-0.0481-74.414-1.0687-76.212 0.2112-2.1005 1.495-1.3975 84.443-0.6374 85.203 0.9295 0.9294 65.025 0.9593 71.78 0.0335zm-66.132-6.1342c-0.5471-1.8099 0.3305-72.5 0.3567-75 2.3511 0.0441 61.116 1.0168 62.923 1.5749 1.9337 0.5976 1.9864 71.548 0.0546 73.48-1.9267 1.9267-62.751 1.8742-63.334-0.0546l3e-4 -1e-4zm20.778-3.9747c1.1889-0.7534 1.4639-7.1037 1.4068-32.49-0.0393-17.354-0.0896-31.922-0.1119-32.373-0.0229-0.4507-2.2178-0.8195-4.8786-0.8195-3.9248 0-5.2649 0.5432-7.1022 2.879-2.1535 2.7377-2.2646 4.2155-2.2646 30.12 0 17.185 0.4297 28.044 1.1641 29.416 1.8857 3.5236 8.492 5.3549 11.786 3.2673zm36.219-1.191c1.3731-0.8669 1.692-5.5922 1.9658-29.129 0.3469-29.816-0.1714-33.779-4.5626-34.878-2.9333-0.7339-18.454-0.0534-21.988 0.0621l-0.5789 65.013c3.6185-0.0051 23.089 0.2416 25.164-1.0682zm-4310.7-6.6701c-0.2983-13.132-0.3872-13.58-2.7666-13.918-2.4297-0.345-2.4585-0.199-2.4585 12.474 0 10.768 0.3066 13.124 1.9121 14.704 1.0513 1.0342 2.2969 1.5269 2.7666 1.0945 0.4702-0.4323 0.7163-6.8918 0.5464-14.354zm-462.07-73.81c-1.4106-1.7001-19.696-1.4934-102.59-1.4934 0 18.784-0.1768 86.872 0.7388 87.787 0.9893 0.9892 101.15 0.1791 102.52 0.1715 0.3267-48.534 0.8345-84.656-0.6675-86.465zm78.167 85.294c1.4985-1.4986 1.7168-6.8222 1.7168-41.848 0-29.756-0.3389-40.47-1.311-41.443-1.5425-1.5423-21.916-1.3112-57.381-1.3112-2.1763 20.817-1.3081 80.556-0.728 82.717 0.7759 2.8958 2.7559 3.0908 34.484 3.3957 18.278 0.1755 21.759-0.051 23.219-1.5105zm-51.073-6.6384c-0.4502-0.4501-0.75-11.229-0.75-71.451l46.438 0.5898v71.022c-21.16 0.2775-44.864 0.6627-45.688-0.1606zm39.463-11.6c1.8467-2.225 1.6973-45.013-0.1626-46.556-0.9497-0.7879-6.8066-1.1919-16.346-1.1274-12.045 0.0814-15.135 0.4238-16.281 1.804-2.1421 2.5804-1.6421 45.714-1.2173 46.44 0.8736 1.4957 32.736 0.9703 34.007-0.5608zm538.65 7.1035 0.3091-12.279c-5.5679 0-5.335-1.5014-5.7329 10.465-0.3892 11.705 0.3408 15.008 3.1982 14.46 1.6699-0.32 1.9565-1.9521 2.2261-12.647h-5e-4zm-72.473-17.279c9.4438-5.6687 15.309-8.3523 14.522-20.419-0.6885-10.557-7.6021-17.194-17.91-17.194-5.1787 0-6.3418 0.4493-10.21 3.9442-7.998 7.2258-8.6724 18.734-1.5581 26.607 7.5293 8.3347 16.213 6.4421 12.443 8.8259-0.8848 0.5594-1.1167 1.0396-0.5161 1.0671 0.6006 0.0274 0.2319 0.5511-0.8193 1.1637-2.1787 1.2689-1.9121 4.2587-1.9121 25.044h6.8091c-0.5212-17.811-0.3273-11.184-0.8488-29.038zm-6.6294-6.9565c-1.269-0.5355-3.3247-2.267-4.5679-3.8477-6.8408-8.6964-1.7793-21.346 8.541-21.346 5.1099 0 8.3647 2.561 10.248 8.063 3.5401 10.341-5.2416 20.92-14.221 17.131zm588.28 32.823c18.541-9.5081 15.28-36.706-4.9839-41.567-10.96-2.6293-17.705 3.1732-27.114 9.7739-213.39 0-225.08 0.086-246.54-1.4373 1.4231-12.629 1.3159-12.347-12.736-24.871-11.879 0.1656-22.087 0.308-33.966 0.4736-5.9797 6.2408-4.7434 6.196-14.145 5.4623-4.5605-0.356-9.3801-1.3263-10.712-2.1564-3.1147-1.9429-8.3921-2.0464-7.3174-0.1435 0.6167 1.0927 0.4771 1.0927-0.7007 0-1.9785-1.8365-20.032-1.3658-31.442-1.3658l-8.9268 10.142v27.168l12.407 14.045h29.303c4.9385-4.7426 9.1821-8.8176 14.121-13.56-0.0559-2.5061-0.1333-21.382-1.6609-22.642-0.6472-0.5342-2.5295-1.985-4.1819-3.2241-4.0898-3.0662-3.8018-4.7478 0.4375-2.5555 2.7583 1.4263 5.0925 1.6256 11.746 1.0032 8.1646-0.7639 8.2717-0.7413 6.3916 1.3389-2.1755 2.4073-1.9121 6.3149-1.9121 26.182l13.769 13.222c30.884 2.3155 27.654 2.9622 41.478-10.69h245.29l1.1406 2.9999c4.5549 11.98 19.302 18.024 30.262 12.403l8e-4 3e-4zm-14.225-3.5897c-4.6914-1.259-10.668-7.4254-10.693-11.032-0.0513-7.3776 14.016-6.1228-252.39-6.2448 0-8.0082-0.6499-8.0135 3.8232-7.1745 5.0554 0.9485 237.52 0.8594 245.05 0.864 3.6804-2.9092 10.515-8.7641 15.149-9.6335 8.5049-1.5956 17.821 4.3433 20.102 12.815 3.4656 12.871-7.938 23.926-21.051 20.406h5e-4zm7.8208-9.0417c3.3264-1.7201 4.4487-3.6599 4.4487-7.689 0-4.029-1.1223-5.9688-4.4487-7.689-4.5242-2.3396-7.1104-1.9789-11.05 1.541-2.7756 2.4799-3.5137 4.0016-3.5137 7.243 1e-4 7.1369 7.2049 10.399 14.564 6.594zm-366.42-9.1949c-0.3262-0.5278 0.8818-1.2546 2.6851-1.6152 6.8057-1.3611 7.8838-13.815-3.6104-13.815-3.437 0-4.207-0.3035-3.2363-1.2748 3.6797-3.6795 13.367 0.8942 13.367 6.311-1e-4 6.8501-6.712 14.428-9.2056 10.394zm-3.2671-4.7025c-4.4341-6.3306 1.2422-13.218 6.293-7.6367 3.1753 3.508 2.1162 8.0267-2.1958 9.3715-1.7442 0.5439-2.8209 0.088-4.0972-1.7348zm69.29-0.8937c-3.4546-2.2319-6.5559 0.5436-6.5559-3.7032 0-4.5411 3.3943-7.5212 8.5667-7.5212 9.6345 0 8.8657 5.8284 8.6819 12.864-1.4988-6.6749-1.51-8.8398-5.3196-10.418-3.4685-1.4366-8.6506-0.1191-8.6506 2.1994 0 1.7064 1.8706 1.3274 2.5808-0.5229 1.4463-3.77 9.0679-0.4824 6.2971 5.6014-1.2593 2.7636-2.9456 3.2156-5.5994 1.5008l-1e-3 -1e-4zm-103.8 9.7934c0-23.475 0.6133-22.061-3.8647-28.086-9.686-13.031-6.1538-11.209-38.802-11.209-2.6162 5.9457-2.5972 6.8913-2.9941-0.5463-0.7925-14.841-2.377 1.8309-1.1499-22.098 17.54-20.194 19.495-22.471 29.792-33.081h25.342c3.2168 3.5455 14.958 16.128 17.119 20.307 4.6089 8.913 25.57 22.155 27.424 17.324 1.6514-4.3036-2.1431-10.809-13.532-23.201-22.893-24.91-19.996-23.695-27.458-23.804-7.2349-0.1055-29.472-0.5319-37.229-0.6786-36.614 40.352-36.929 38.427-36.929 44.725 0 3.9341 0.3413 4.6625 2.1851 4.6625 1.6934 0 2.1855-0.7285 2.1855-3.2349 0-1.7792 0.7397-3.8689 1.6445-4.6438 2.1421-1.8352 30.619-33.74 33.469-36.92h36.834c11.002 9.2573 25.299 26.502 25.299 27.49 0 2.8696-9.7568-5.0414-18.634-15.109l-9.9541-11.289h-31.117c-21.944 24.436-23.954 26.67-31.405 35.186 0.0317 4.1088-0.0552 31.903 1.3555 34.412 0.8467 1.5069 0.5874 2.5239-1.105 4.33-2.4814 2.6485-2.1626 3.1191-0.646 26.513l13.739 13.193h24.188c8.5165-8.5168 5.4008-5.4011 14.244-14.245zm-31.157-10.94c-0.793-2.4973 1.9976-7.605 4.1396-7.5783 3.4624 0.0432 6.1011 5.7334 3.8926 8.3945-1.9209 2.3143-7.2094 1.777-8.0322-0.8162zm10.482-6.9466c-1.7485-2.1069-9.9463-2.3643-11.95-0.3753-1.103 1.0948-1.2388 1.0062-0.687-0.4463 0.3794-0.9966 2.1611-2.4214 3.959-3.1661 2.8491-1.1801 3.6465-1.075 6.2041 0.8177 3.9805 2.9449 6.1714 7.603 4.9082 10.434-1.8677 4.1856 0.0615-4.2558-2.4341-7.264zm489.1 22.09c2.9426-2.7645 3.3967-8.9685 0.9155-12.511-2.134-3.0469-7.5479-5.1746-10.977-4.314-3.113 0.7813-7.0957 4.3256-7.0957 6.3145 0 0.7158 0.6973 0.3478 1.5496-0.8177 1.939-2.6517 3.7258-2.0916 0.1143 2.1116-2.7371 3.1855-2.6433 5.1585 0.4146 8.7333 3.8681 4.5219 10.551 4.7361 15.078 0.483zm2809.3-5.1608c0.2924-3.9952 0.0612-4.5989-1.639-4.2764-2.057 0.3903-3.2434 5.1057-2.0605 8.1886 1.1755 3.0635 3.3576 0.7558 3.6995-3.9124v2e-4zm66.311-0.4594c0-5.6863-2.1162-5.5148-2.5269 0.2049-0.2548 3.548 0.0229 4.6361 1.0927 4.2795 0.8361-0.2786 1.4342-2.1486 1.4342-4.4844zm580.52-6.0059c0.2978-7.2665 0.1592-7.8343-1.9121-7.8343-2.4835 0-2.7843 2.2296-1.5329 11.36 1.05 7.661 3.0714 5.5923 3.445-3.5257zm-4018.4-3.0315c9.7993-4.9307 13.226-18.884 6.9785-28.419-4.4561-6.8009-18.352-8.93-25.422-3.8953-8.6675 6.1717-9.2378 21.985-1.0649 29.517 5.6816 5.2358 12.671 6.2381 19.509 2.7975h-5e-4zm-12.929-5.8512c-3.7559-2.2902-6.8823-7.2645-6.8823-10.952 0-4.2194 3.0742-9.6916 6.4155-11.419 4.354-2.2516 7.5947-2.155 11.7 0.3486 7.0996 4.3293 7.5825 13.98 1.0283 20.534-4.1655 4.1655-7.2559 4.5404-12.262 1.4878h5e-4zm-132.37 6.4839c5.0854-1.4125 11.493-8.4138 12.471-13.626 2.2461-11.972-6.127-22.748-17.687-22.762-17.329-0.0214-23.956 25.847-5.3301 35.689 3.9077 2.0646 5.2979 2.1567 10.546 0.699l5e-4 1e-4zm-10.776-7.3718c-3.4614-2.7051-6.0952-9.6928-5.2837-14.018 1.481-7.8957 12.107-11.924 18.4-6.9744 9.0195 7.0949 4.3403 22.972-6.75 22.904-2.1724-0.0132-5.0371-0.8738-6.3662-1.912zm3530.7 6.879c9.7892-2.9071 12.13-9.8087 14.661-15.869 28.347 0.3015 28.06 0.8967 30.903 5.9772 5.1702 9.2421 15.724 12.042 25.863 6.8613 7.1533-3.6552 9.321-7.2579 9.2546-15.381-0.0645-7.8475-2.1655-12.557-7.2036-16.144-4.1938-2.9863-13.646-4.0507-18.418-2.074-4.5315 1.877-9.5087 7.845-10.923 13.098l-1.1807 4.3849h-29.244l-0.7086-3.2266c-3.497-15.923-32.244-18.906-37.41 1.0812l-0.9779 3.7843c-31.308 1.2098-28.143 0.1593-28.988 6.1191 10.083-0.1218 18.748-0.2264 28.831-0.3481l2.3351 4.2167c2.5382 4.5837 9.9731 9.1337 14.925 9.1337 1.5664 1e-4 5.2926-0.726 8.2806-1.6132zm-11.183-5.6959c-3.5923-0.7048-7.0869-5.1522-7.6948-9.7926-1.6238-12.396 16.192-20.37 20.43-4.6309 1.7111 6.3544-0.239 11.64-5.0339 13.644-4.4158 1.8452-4.2182 1.4634-7.7014 0.7798h1e-4zm65.122-4.5699c-10.112-10.112 0.2353-25.588 12.442-20.488 5.1365 2.1461 7.2543 5.6301 7.2543 11.934 0 4.4056-0.5411 5.8452-3.1939 8.498-2.6151 2.6151-4.1155 3.1939-8.2789 3.1939-4.1428 0-5.6666-0.5815-8.2231-3.1379zm-3765.2 1.098c3.6558-3.5679 5.4028-6.2672 5.9199-9.1436 2.3311-12.977-9.5371-25.223-21.09-21.762-14.489 4.3411-17.133 25.269-4.1606 32.925 1.9204 1.1334 3.9395 2.4675 4.4873 2.9647 0.5474 0.4971 2.9443 0.7181 5.3262 0.491 3.3837-0.3228 5.4653-1.5206 9.5175-5.4754zm-18.45-4.0355c-8.8389-7.4374-2.0205-22.865 9.1763-20.765 4.2847 0.8038 8.8276 5.0615 9.5757 8.9739 2.1592 11.296-10.146 19.033-18.752 11.791l4e-4 -1e-4zm3934.7 7.153 3.2929-3.293c-0.8302-25.768 0.2279-22.273-6.8757-28.379-89.274-0.7477-83.306-1.1981-86.416 1.9149-2.1636 2.166-2.5088 3.8142-2.876 13.735-0.4695 12.682-0.4761 11.205 5.087 17.676 91.76 1.5915 83.395 2.7379 87.787-1.654l-1e-4 1e-4zm-83.771-4.9019v-19.668c49.62 0 50.777 0.1928 78.671 1.0927l0.1277 8.1948c0.2066 13.241 2.3932 12.09-22.332 11.76-24.76-0.3304-42.932-0.9566-56.467-1.3796zm527.24-0.8194c6.7554-3.4127 9.801-8.335 9.801-15.84 0-7.902-2.4915-12.836-8.1599-16.157-11.846-6.942-26.805 1.4706-26.805 15.074 0 9.1 5.416 16.395 13.635 18.366 5.3293 1.278 6.4095 1.1428 11.528-1.4432zm-12.298-7.986c-9.0708-4.9227-5.8638-17.964 4.4177-17.964 5.569 0 10.032 4.1585 10.032 9.3471 0 5.0881-0.9237 6.8992-4.4487 8.722-3.8435 1.9876-6.1913 1.963-10.002-0.1046zm-411.95-0.2089c0.324-0.9833-1.2584-1.3658-5.6505-1.3658-4.7855 0-6.1005 0.3656-6.1005 1.6961 0 1.3569 1.1298 1.63 5.6505 1.3658 3.294-0.1926 5.8382-0.8999 6.1005-1.6961zm-3423.8-10.926c3.7617-3.9431 5.1907-7.9533 5.1907-14.565 0-4.5825-0.5422-5.9965-3.5513-9.262-11.352-12.32-29.185-4.5371-29.222 12.753-0.0166 7.8177 13.379 14.748 20.815 10.768 2.8213-1.5098 5.4031-6.7297 5.4031-10.924 0-4.2821-5.4058-10.128-8.8848-9.6078-3.1387 0.4691-6.6226 7.0242-6.1387 11.55 0.4248 3.9713-0.7056 4.6426-2.4204 1.4376-2.9736-5.5561 0.1655-12.467 6.2744-13.812 4.8818-1.0751 5.3203-1.3796 2.1204-1.4704-7.1809-0.2037-11.996 3.6949-14.064 11.386-0.7197 2.6766-0.7998 2.3933-0.4365-1.5443 0.8203-8.894 6.4102-13.59 15.291-12.847 4.3665 0.3657 5.9856 1.109 8.468 3.8877 2.5872 2.8956 3.0698 4.3937 3.0698 9.5325 0 11.586-5.3491 13.064-11.473 15.609 4.1189 0.0693 6.2847 0.5406 9.5601-2.8922h-1e-3zm-98.146-2.3437c4.3569-1.7067-2.6265-2.1962-2.6743-9.1293l-0.0239-3.5511c-4.1245 5.3669-3.8589 5.6748-6.2373 3.5229-3.5156-3.1818-4.6416-2.3138-4.6416 3.5793 0 7.4186 2.1855 6.5332 2.1855 1.639 0-4.8131 2.0068-4.9927 6.5186-0.5831 4.0195 3.9294 4.0718 4.2489 0.5835 3.5822-4.8608-0.9293-3.1172 3.8419 4.2891 0.9401h4e-4zm131.05-5.5781c3.6599-3.5287 4.939-10.919 2.6416-15.264-3.7458-7.0845-16.211-10.29-21.36-5.4937-6.918 6.4453-5.7693 21.488 5.4424 24.01 5.355 1.2043 9.7778 0.121 13.276-3.2518h5e-4zm-13.67-11.544c1.7163-3.7672 6.5239-3.323 8.8367 0.8165 1.4944 2.6741 1.4587 3.1276-0.408 5.1901-4.9802 5.5025-11.148-0.0407-8.4287-6.0066zm-342.93 2.8769c0-7.7079-0.2417-8.7443-2.1855-9.3611-1.5337-0.4869-2.1851-1.6531-2.1851-3.9137 0-2.6418 2.6978-6.0609 15.024-19.04 15.332-16.144 17.05-17.295 22.624-15.156 2.3618 0.9064 4.9658 6.124 4.9658 9.9504 0 7.2608-6.7046 10.185-14.322 6.2463l-3.2871-1.6997c-16.395 15.955-20.591 18.937-14.98 24.909 1.5996 1.7031 3.6167 2.5289 6.1748 2.5289 4.2534 0 5.5576-1.7674 29.565-25.893 0.5005-13.859 1.0244-13.389-3.1968-16.913-2.7534-2.2986-4.855-3.0856-8.2407-3.0856-5.2812 0-6.4419 0.9543-25.47 20.942-10.562 11.095-12.136 13.228-12.136 16.454 0 2.0386 0.7222 4.6609 1.6045 5.8275 1.0322 1.3648 1.6167 4.7504 1.6392 9.4963 0.0312 6.6354 0.2539 7.3754 2.2197 7.3754 2.002 0 2.1855-0.7285 2.1855-8.6676h0.0011zm7.6787-10.417c-1.8149-2.1871-1.4897-2.7662 5.8052-10.344 6.6514-6.9087 8.7866-7.6662 15.966-5.6635 2.582 0.7203 2.3882 1.0547-5.3286 9.1786-6.7832 7.1411-8.5522 8.431-11.56 8.431-1.9531 0-4.1499-0.7209-4.8813-1.6022h-6e-4zm3513.4 13.158c0.7886-6.3115 0.2454-8.2775-2.2866-8.2775-1.2095 0-1.5746 1.6469-1.5746 7.1022 0 5.4257 0.3684 7.1022 1.5603 7.1022 1.0693 0 1.7934-1.8654 2.3009-5.9269zm-3379.5 1.4733c1.9102-1.5852 2.5039-7.537 0.9116-9.1299-1.8486-1.8489-15.956-1.6793-16.582 0.1993-0.25 0.7508 0.0625 1.3651 0.6948 1.3651 0.6318 0 0.8813 0.6992 0.5532 1.5536-0.6372 1.6603 1.3013 6.0824 3.2871 7.4989 1.4717 1.05 9.3462-0.0011 11.136-1.487h-4e-4zm-9.3525-2.0368c-0.8052-1.5042-0.8296-2.2508-0.0732-2.2508 0.6226 0 1.1313 0.4917 1.1313 1.0927s0.7373 1.0927 1.6392 1.0927c1.9678 0 2.2275-2.1522 0.2729-2.2621-0.751-0.0421-0.3823-0.4993 0.8193-1.0158 4.4888-1.9289-7.0762-0.0833-3.8242-2.1853 0.9019-0.5825 2.9419-1.0667 4.5347-1.0759 2.6494-0.0153 2.8813 0.3315 2.7314 4.0807-0.1436 3.5829-0.5317 4.14-3.0957 4.4361-2.0649 0.2384-3.2866-0.3266-4.1357-1.9123zm-327.83-13.322c-7.0591 0.8122-5.9341-1.0375-6.6558 15.442h6.6558v-15.442zm278.35 12.487c1.7568-2.3585 1.3657-21.968 1.3657-40.7l-2.7266-1.7867c-3.6865-2.4155-10.128-1.2527-11.466 2.0698-0.7329 1.8186-0.9829 1.9454-1.0352 0.5244-0.145-3.9279-7.543-5.4485-11.845-2.4349-2.3589 1.652-2.4287 2.2744-2.4287 21.634 0 14.047 0.3872 20.321 1.3115 21.245 1.7227 1.7229 10.985 1.6898 12.72-0.0455 0.959-0.9591 1.5835-1.0071 2.1309-0.1638 1.9937 3.0731 9.5903 2.8561 11.974-0.342l-4e-4 -1e-4zm-24.129-2.1439c-0.4009-0.4006-0.7285-8.4152-0.7285-17.81 0-17.923 0.4448-19.704 4.917-19.704 5.5132 0 4.917 2.3146 4.917 38.243-3.2773 0-8.2685 0.1087-9.1055-0.7284zm14.162-0.9411c-0.377-0.983-0.686-8.8414-0.686-17.463 0-12.794 0.3159-15.992 1.7168-17.393 1.8994-1.8994 3.5806-2.1356 5.6865-0.799 1.6475 1.0458 1.2046 12.15 0.7915 36.778-3.4082 0.3317-6.6656 1.0734-7.5088-1.1232zm89.198 2.5068c4.603-5.2727 2.8916-12.743-0.9961-6.6904-4.1782 6.5046-5.0488 7.0458-8.4756 5.2681-3.9951-2.0726-5.7173-2.0215-6.5674 0.1951-0.8169 2.1281-0.9473 1.9899 3.1865 3.3721 4.5133 1.509 10.541 0.5031 12.853-2.1449zm111.16-3.0783c0-6.512-0.0566-6.6356-3.79-8.1953-6.415-2.6807-17.377-20.658-20.635-22.507-1.6006-0.9078-18.911-1.351-22.257-1.4725-25.542 28.225-30.446 33.117-27.891 35.672 1.6045 1.6047 1.1328 1.7074 29.953-30.758h16.98c7.7563 7.5689 14.421 14.072 22.177 21.642 0 11.95-0.4111 12.231 2.7319 12.231 2.6123 0 2.7314-0.2877 2.7314-6.6116h6e-4zm3168-5.5937c-1.7087-1.8881-1.9539-1.9004-3.842-0.1916-1.8881 1.7087-1.9004 1.9538-0.1917 3.8419s1.9539 1.9004 3.842 0.1916c1.8881-1.7087 1.9004-1.9538 0.1917-3.8419zm-3292-2.1932c0-6.7151 4.0415-9.2581 9.0913-5.7207 1.9609 1.3736 2.8062 1.4594 4.0674 0.4126 2.083-1.7286 2.0508-5.4243-0.0469-5.4243-0.9019 0-1.6392 0.4625-1.6392 1.0278s-1.2808 0.3632-2.8467-0.4492c-7.2202-3.7458-14.931 4.7955-11.769 13.036 1.146 2.9864 3.1436 1.1548 3.1436-2.8824h-5e-4zm-7.3755 1.0022c1.4624-1.1517 1.7964-4.9714 0.6875-7.8615-0.8198-2.1356-6.0063-4.9659-9.1011-4.9659-5.4751 0-8.7861 8.6582-4.6982 12.283 3.3388 2.9608 9.708 3.225 13.112 0.5441zm-9.8335-1.9883c-5.3462-3.1141 2.2964-5.6532 5.292-4.9014 3.3955 0.8523 3.5112 4.4978 0.1709 5.3929-3.1338 0.8399-3.1851 0.8352-5.4629-0.4915zm4036.5-13.024c0-14.569-0.1038-15.297-2.1853-15.297-2.0813 0-2.1853 0.7285-2.1853 15.297s0.1038 15.297 2.1853 15.297c2.0812 0 2.1853-0.7285 2.1853-15.297zm-643.81 12.51c6.0009-2.503 11.085-7.9473 12.438-13.32l1.1718-4.6536 28.696 0.0315 2.9297 5.3137c3.2029 5.8089 9.7938 9.9722 15.717 9.9279 4.1533-0.0311 11.3-3.3524 14.333-6.6609 10.648-11.616 2.39-30.647-13.299-30.647-8.8527 0-16.999 6.3631-18.767 14.66l-0.6405 3.0048c-30.368 0-30.321-0.6328-30.321-1.0088 0-1.7968-5.6345-7.7649-8.9492-9.4789-4.8454-2.5057-16.465-2.2101-20.901 0.5316-4.6772 2.8907-8.4339 9.7537-8.7143 15.92l-0.2249 4.9479c-23.858 0.0443-30.171-0.3597-28.543 3.8832 0.6593 1.7183 2.1561 1.8489 15.398 1.3436 14.24-0.5434 14.736-0.4865 17.025 1.9501 5.4572 5.8088 14.744 7.5537 22.652 4.2558h2e-4zm-15.751-6.798c-7.332-5.9391-6.1443-16.992 2.2005-20.479 7.6791-3.2085 14.335 1.626 14.335 10.412 0 4.3787-0.5595 5.8875-3.2092 8.6531-3.7348 3.8984-9.5028 4.5101-13.326 1.4133zm68.873-6.1491c-3.1445-3.1444-3.715-4.4844-3.715-8.7239 0-3.9544 0.6506-5.7372 3.0908-8.4681 2.5759-2.8831 3.926-3.4774 8.1063-3.5684 5.8606-0.1276 9.8353 2.8347 11.803 8.7965 2.6478 8.0229-2.8085 15.679-11.174 15.679-3.5425 0-5.1172-0.7213-8.1111-3.715h1e-4zm-3774.3-20.367c-1.0088-0.0239 0.0898-1.0035 2.4409-2.1769 9.0874-4.5347 12.02-9.3759 11.343-18.73-0.564-7.7998-2.9814-11.46-9.8403-14.903-4.3721-2.1943-5.6045-2.3737-9.3613-1.3621-16.936 4.5604-19.472 27.582-3.7988 34.489l4.104 1.809c-0.4009 20.762-0.2529 13.097-0.6543 33.843 4.4243-0.4251 2.7905-0.2681 7.2104-0.6929 0.3588-29.562 0.6498-32.227-1.4434-32.277zm-9.9014-9.3868c-3.2983-2.31-5.5488-7.7799-4.8042-11.675 0.3232-1.692 2.1802-4.7649 4.127-6.8287 2.8032-2.9724 4.3867-3.7525 7.6167-3.7525 5.4194 0 11.507 5.7515 11.507 10.872 0 4.2408-2.4639 9.1945-5.7002 11.462-3.166 2.218-9.5259 2.1798-12.747-0.0765h5e-4zm3933.9 38.537c3.6951-2.4211 5.3842-9.2446 4.6696-18.863-0.6326-8.5148-2.0242-11.655-5.9595-13.448-3.5252-1.6062-72.853-2.4104-83.882-2.6043-5.9706 5.2581-5.8921 3.8314-6.6774 17.319-0.7938 13.634-0.9178 11.806 4.8691 18.537 76.127 1.4143 82.782 1.8094 86.98-0.9413zm-54.525-4.8561c-0.4324-0.4326-17.868-0.6185-28.439-0.7585l-0.3458-3.0048c-0.4073-3.5404 2.504-4.2067 4.7801-1.094 1.2756 1.7446 1.4639 1.6453 2.1638-1.1436 0.9513-3.7902-0.0394-4.9136-2.8087-3.1844-3.186 1.9897-4.3358 1.6166-4.3358-1.4072 0-1.6996 0.6191-2.7316 1.639-2.7316 0.9014 0 1.639-0.7977 1.639-1.7728 0-1.4519-0.2967-1.5266-1.639-0.4125-1.9282 1.6003-1.639 0.1198-1.639-6.5558 2.8153 0.0012 76.584-0.251 78.441 0.9275 1.8072 1.1466 1.1066 10.728 0.7761 21.472-40.606 0.0431-49.959-0.062-50.232-0.3341zm-11.665-9.8214c-0.4471-20.689-4.6218 8.0665-0.8316 5.7241 0.5185-0.3205 0.8927-2.8963 0.8316-5.7241zm-215.8 0.6818c-1.7087-1.8881-1.9539-1.9004-3.842-0.1916-1.8881 1.7087-1.9004 1.9539-0.1917 3.842s1.9539 1.9004 3.842 0.1916c1.8882-1.7088 1.9004-1.9539 0.1917-3.842zm-389.53-3.848c2.2249-1.4055 2.4614-2.1543 1.776-5.6227-0.4348-2.2007-0.9944-13.615-1.2433-25.365-0.4299-20.28-0.3398-21.494 1.775-23.932 4.4404-5.1199 1.9257-12.068-4.3677-12.068-4.5374 0-5.4237 2.5668-5.4237 15.707 0 13.193 2.089 17.5 2.3501 4.8446l0.1646-7.9862 0.8995 10.38c1.276 14.728 1.2218 31.859-0.1061 33.186-0.6178 0.6179-1.1233 0.6935-1.1233 0.168s-1.2292 0.1995-2.7316 1.6109c-3.1506 2.9598-3.6003 7.7165-0.9777 10.339 1.8892 1.8891 4.6267 1.5056 9.0074-1.2616h8e-4zm692.31 0.6808c-0.8276-1.339-12.519-1.3218-12.519 0.0184 0 0.5695 2.5814 1.1841 5.7364 1.3658 6.4033 0.3686 7.7019 0.1035 6.7825-1.3842zm-642.7-1.899c2.3104-1.9841 2.4913-6.4994 0.3551-8.866-0.8564-0.9487-1.7169-3.1543-1.9121-4.9013-0.614-5.4937 3.02-2.1628 8.5288-7.3381 2.9996-2.8179 2.5887-1.9484 2.5887-43.191-5.6675-5.3242-3.4126-5.1749-23.425-5.4952-16.595-0.2657-18.085-0.1257-20.72 1.947-2.7816 2.188-2.8391 2.5049-2.8391 15.647 0 7.3776 0.3212 17.213 0.7137 21.857 0.6191 7.3237 1.1261 8.8554 3.8242 11.554 3.7448 3.7447 3.7902 4.3967 0.6814 9.7979-3.2644 5.6723-1.9299 10.254 3.1312 10.749 6.3071 0.6172 8.8618-4.7047 4.7612-9.9178-3.2557-4.1389-2.8406-7.6195 1.1177-9.3716 3.9303-1.7397 6.9633-7.0341 6.0695-10.595-0.7037-2.8035-0.3821-3.1393 4.0125-4.1896 2.9348-0.7015 3.0049-0.6052 3.0049 4.1357 0 3.5834 0.715 5.7036 2.7316 8.1002 1.5024 1.7855 2.7316 4.244 2.7316 5.4633 0 4.9668-10.02 9.568-2.6031 15.402 2.8931 2.2756 3.7941 2.1777 7.2469-0.7877l1e-4 2e-4zm25.045 0.1662c2.6687-2.4152 2.5262-6.1227-0.3333-8.6757-2.2764-2.0321-2.3143-2.5707-1.6055-22.705 0.5436-15.436 1.13-21.2 2.3315-22.916 3.3326-4.7579 1.2412-11.64-3.5371-11.64-6.1921 0-9.2109 7.3827-4.6914 11.473 2.0369 1.8433 2.1853 3.3653 2.1853 22.399s-0.1484 20.556-2.1853 22.399c-2.9556 2.6746-2.8324 7.6176 0.2432 9.7719 3.1091 2.1777 5.0986 2.1495 7.5927-0.1074h-1e-4zm24.038 0c2.8391-2.5695 2.4773-6.3974-0.8524-9.0165l-2.8506-2.2422c0.7679-40.042 0.4038-40.512 3.2427-43.365 3.0504-3.0665 3.1215-5.8176 0.2306-8.9207-2.7734-2.9771-5.8546-3.05-8.6986-0.206-2.761 2.761-2.7902 6.3147-0.0753 9.2171 1.9132 2.0457 2.1328 4.2136 2.3579 23.286 0.2162 18.278 0.011 21.292-1.5631 23.032-5.012 5.5378 2.4246 13.454 8.2126 8.2164h-0.0038zm24.038 0c2.8219-2.5538 2.4794-6.5913-0.8185-9.6476-3.4591-3.2057-3.2872-7.4967 0.3209-8.0097 1.3317-0.1893 3.71-1.8759 5.2852-3.7479 2.8461-3.3823 3.1091-6.1583 1.0428-11.009-0.759-1.782-0.4325-1.9114 3.1354-1.242 2.5768 0.4835 4.5571 0.2704 5.61-0.6033 1.4386-1.194 1.4381-0.8979 0 2.5555-1.7657 4.2261-0.9603 8.1914 2.4232 11.93 2.3184 2.5616 9.1689 2.5002 12.394-0.1113 2.4249-1.9637 2.5078-2.6322 2.7174-21.93 0.2441-22.475 0.5032-19.57-5.1757-26.307h-18.855c-26.571 0-23.223-2.7403-22.472 34.127 5.1786-0.99 5.6064-1.3751 3.7731 1.2423-2.6968 3.8504-1.9961 9.1893 1.6901 12.876 3.8037 3.8036 4.1896 7.4095 1.0927 10.212-2.4469 2.2145-2.9519 8.0839-0.8741 10.162 1.875 1.8748 6.3726 1.6181 8.7098-0.4972l2e-4 1e-4zm26.856-1.1469c1.8938-2.5416 1.7201-3.9484-0.8988-7.2776-2.844-3.6155-5.7985-3.6565-9.3258-0.1292-3.0018 3.0019-2.8125 6.4274 0.5011 9.064 2.2556 1.7947 7.8635 0.8389 9.7235-1.6572zm21.521 2.2803c4.3447-1.6672 4.2241-7.5786-0.2212-10.858-1.3098-0.9662-1.4332-4.5425-0.7638-22.126 0.4391-11.536 1.2111-20.974 1.7155-20.974 1.8031 0 4.4271-5.3552 3.7181-7.5886-3.9373-12.406-17.698-0.6556-10.521 5.8397 1.9261 1.7431 2.0267 3.2678 1.5057 22.842-0.4927 18.517-0.7985 21.238-2.6101 23.23-4.8743 5.3579 0.282 12.28 7.1764 9.6349h2e-4zm25.698-1.4385c2.429-4.5386 0.0109-10.998-4.1251-10.998-1.4153 0-1.5464-2.2652-0.9591-16.572 0.3741-9.1147 1.1881-17.08 1.8087-17.701 1.5553-1.5552 1.418-4.7835-0.2268-5.3318-0.7455-0.2485 0.115-1.1659 1.9121-2.0386 2.84-1.3791 3.2185-2.0827 2.8931-5.3756-0.4854-4.9103-1.9039-6.5205-5.7437-6.5205-4.0073 0-6.8553 4.0034-5.8103 8.1674 0.4052 1.6146 1.3817 3.183 2.1697 3.4854 1.1085 0.4254 1.4512 5.248 1.5134 21.3 0.0743 19.211-0.083 20.958-2.1196 23.548-1.2102 1.5385-2.2003 3.5527-2.2003 4.476 0 4.9752 8.6221 7.7956 10.888 3.5616l-2e-4 1e-4zm22.36 0.3964c3.6952-3.6951 1.027-10.575-4.1013-10.575-3.9496 0-6.2008 2.1028-6.2008 5.7922 0 6.3328 6.7976 8.2877 10.302 4.7831zm24.038 0c3.6434-3.6434 0.3939-11.395-4.777-11.395-2.3037 0-5.5251 3.8224-5.5251 6.5558 0 5.3127 6.6874 8.4537 10.302 4.839zm23.133 0.8808c2.1626-1.4441 3.8506-5.7557 3.1354-8.0089-0.6285-1.9803-4.455-4.2667-7.1404-4.2667-1.7594 0-5.3921 4.278-5.3921 6.3499 0 4.324 6.0664 8.1495 9.3971 5.9257zm28.93-2.3577c3.2231-3.2231 3.8278-5.0942 2.3578-7.2959-1.0853-1.6254-5.1837-3.7147-7.2869-3.7147-2.6174 0-6.0813 4.0453-6.0813 7.1022 0 3.063 3.4657 7.1022 6.0936 7.1022 0.9476 0 3.1603-1.4373 4.9169-3.1939l-1e-4 1e-4zm74.019-3.0888c0.3373-2.3752 0.0503-2.4585-8.468-2.4585-8.7155 0-8.8173 0.032-8.8173 2.7776 0 2.7636 0.0425 2.776 8.4681 2.4585 7.8368-0.2954 8.494-0.5024 8.8172-2.7776zm-3885.1-4.826c1.2305-1.9267 0.4238-85.504 0.4033-88.869-31.71-0.1843-97.277-0.8992-100.04 0.5801-2.522 1.3495-2.1411 2.069-1.5762 89.017 2.6382 0.0593 99.024 2.6978 101.21-0.7285v-1e-4zm79.621-88.047c-1.9482-0.035-58.176-1.2971-59.335-0.2751-1.0479 0.9233-2.5 85.242-1.5127 87.815 0.7837 2.0424 6.1987 1.7819 60.848 1.7819v-89.322zm-53.883 82.059c-2.1597-2.16 0.6802-75.585 0.6875-75.778h46.668c-0.4043 53.409-0.3413 45.097-0.5742 75.939-38.415 0.4912-46.276 0.3433-46.781-0.161h-5e-4zm39.24-9.9628c1.5757-1.0532 2.1709-34.976 2.585-49.566-5.0503-4.6802-4.9907-5.2673-9.5718-3.9946-6.0537 1.6819-20.557-0.7592-24.557 0.7612l-2.625 0.9983c-0.123 16.066-0.2637 34.446-0.3867 50.512l2.4727 0.9935c2.9604 1.1893 30.367 1.442 32.082 0.2957l4e-4 -2e-4zm1331.8 13.777c9.4568-4.7961 12.999-11.444 13.069-24.533 0.0381-7.041-0.3101-8.3859-3.2542-12.576-3.8569-5.4894-9.4216-7.8916-14.982-10.796-47.583 0-90.076-0.0983-218.65 0.7267-111.66 0.7164-113.27 0.7572-113.27 2.876 0 2.5576-0.7134 2.151 330.53 1.3143 10.017 5.3558 14.204 7.0931 14.204 20.407 0 6.7676-0.4351 8.9708-2.2527 11.405-8.7087 11.664-23.748 11.301-31.97-0.7723-2.9978-4.4025-2.5061-8.3825-0.7419-23.996-250.96 0.4736-75.416 0.6981-309.92 1.1508 0.2441 1.694 0.4541 3.1497 0.6982 4.8438 16.837-0.0378 286.09-0.6431 302.93-0.681-0.9004 12.587-2.115 17.408 5.5918 25.709 7.5504 8.1326 18.044 9.9762 28.011 4.9213zm3237.9-0.5962c1.6078-1.1909 4.0732-3.8409 5.4785-5.889 2.1199-3.0895 2.4816-4.7758 2.1234-9.8997-1.5836-22.645-33.886-23.281-35.498-0.6984-0.5506 7.7168 2.7006 13.542 9.5173 17.053 5.907 3.0421 13.837 2.798 18.379-0.5657v1e-4zm-16.265-8.8078c-7.0591-6.3072-3.2047-14.96 6.6639-14.96 5.1146 0 8.3179 2.684 9.3475 7.8321 0.5891 2.9451 0.1712 4.033-2.6211 6.8253-4.308 4.3079-8.7941 4.4092-13.39 0.3024zm-837.97 4.9314c0.0131-1.9531 0.3282-10.435 0.7013-18.848 0.5566-12.555 1.0422-15.764 2.7086-17.903 2.4763-3.1782 2.5625-5.4357 0.3295-8.6239-1.988-2.8384-7.1594-3.2789-9.2285-0.7861-2.1522 2.5932-1.6287 7.2979 1.0537 9.47 2.3379 1.8931 2.4122 2.5811 2.2776 21.1-0.0917 12.62 0.2483 19.143 0.9979 19.143 0.6252 0 1.1473-1.598 1.1599-3.551zm1004.4-74.39c-1.0892-0.6543-74.094-1.2536-76.212-1.2756-0.1563 21.586-0.4837 66.801-0.5735 79.217h77.605c0-24.711 0.1504-77.359-0.8195-77.942zm-68.57 4.039c2.1506-0.8253 59.525 1.1562 62.288 1.2413 0.5738 58.327 0.6928 61.953-0.588 67.198h-63.332c1e-4 -59.318-0.2166-67.73 1.6323-68.439zm54.561 63.444c1.9518-1.9519 1.717-8.7396 1.717-54.942-5.8518-4.6031-3.4263-4.5721-25.959-4.2166-19.624 0.3096-20.252 0.3902-22.248 2.8557-1.8781 2.3193-2.0544 4.7007-2.0544 27.75 0 33.034-2.3548 30.27 25.79 30.27 17.669 0 21.313-0.275 22.755-1.717zm-32.876-1.0753c-0.9198-2.3968 1.0698-10.479 0.9165-14.928-0.1408-4.1255 1.9896-4.6006 1.9896-2.5585 0 0.937 0.5907 1.5806 1.3125 1.4303 1.6872-0.3511 4.0096 6.1801 4.0891 11.5 0.0514 3.4497-0.3969 4.2989-2.7412 5.1901-3.8323 1.4571-4.8067 1.3461-5.5665-0.6341zm-756.72-1.3016c0.3001-9.5198 0.2217-9.9028-1.9122-9.3448-2.0106 0.5258-2.225 1.4473-2.225 9.5598 0 4.9379 0.3381 9.316 0.7512 9.7292 2.1036 2.1036 3.0983-0.8173 3.386-9.9442zm-3271.4 5.29 3.5513-3.2582c0-31.643 0.2764-54.042-1.3115-55.63-2.2251-2.2254-22.33-0.5312-19.449-2.4186 2.0239-1.3259 8.8423-0.0356 11.26 0.313-0.4106-30.701-1.2749-95.26-1.5176-113.39 1.5952-1.8909 37.952-45.345 40.786-45.345 1.5181 0 46.067 45.52 47.809 47.285 0 4.1342-0.3137 105.83 0.9807 109.17 1.2573 3.243 27.034 27.02 31.783 31.485 122.46 0 122.39 0.4068 122.39-2.1853 0-2.5877 0.2666-2.1853-119.68-2.1853l-22.444-22.52c-0.3679-31.961-1.1414-99.172-1.3584-118.05-60.423-61.171-53.993-55.867-63.571-56.658-0.1558-20.523-0.4824-63.672-0.5742-75.783l2.4722-0.75c9.0913-2.7576 13.632-15.838 8.4492-24.338-2.918-4.7855-10.722-8.3277-16.118-7.3155-8.439 1.5831-13.646 11.016-11.166 20.227 1.2876 4.782 6.9487 12.021 9.4009 12.021 1.2646 0 1.5723 5.3848 1.7988 31.414 0.417 48.027 0.5615 45.342-2.709 50.284-5.3965 8.1562-31.171 34.737-43.455 50.808v115.24c-2.1836 0.2928-8.7114 0.9147-10.239 2.439-1.2749 1.2719-2.4614 44.158-1.3452 48.599 0.7095 2.8227 9.0713 11.359 11.038 13.467 19.513 0.3301 19.107 0.8478 23.219-2.9254l-7e-4 1e-4zm-6.5821-2.3977c2.1396-1.3702 3.8774-3.6177 4.4229-5.718 0.4941-1.9033 0.6289-13.148 0.2993-24.989-0.8315-29.91 1.4297-25.511 2.1475 2.7332 0.3086 12.141 0.9067 22.616 1.3306 23.279 0.9937 1.5544-2.354 5.9507-2.4023 3.9059-0.0239-0.9998-0.9219-0.7473-2.9136 0.8195-3.667 2.8842-7.7974 3.1172-2.8838-0.0297l-6e-4 -1e-4zm-22.432-30.148c-0.2939-27.238 1.5029-24.547 1.1392-7.6116-0.5357 24.909-0.9249 27.512-1.1392 7.6116zm17.137-146.21c2.1626-3.1761 19.621-22.478 11.285-12.019-6.0001 7.5292-14.106 16.162-11.285 12.019zm20.845-24.585c7.0542-8.6475 17.529-20.054 17.529-19.088 0 0.9944-32.608 37.573-17.529 19.088zm8.0899-121.46c-0.4917-3.0316-0.0371-4.4506 2.3257-7.2589 3.7036-4.4019 8.8193-4.7381 13.31-0.875 6.6694 5.7366 2.2808 17.052-6.6138 17.052-5.0215 0-8.2607-4.2213-9.0224-8.9181zm2783.6 318.68c-0.2115-9.5967-2.1022-13.32-2.0808-4.0974 0.0175 7.4877 2.5151 23.786 2.0807 4.0974h1e-4zm222.32 7.1492c3.1368-1.1926 6.1331-6.2603 6.1331-10.373 0-1.7479 0.6108-2.7859 1.639-2.7859 2.1906 0 2.1801-2.3244 0-1.4878-1.8448 0.7079-2.2626-1.2758-0.4983-2.3661 2.3942-1.4797 6.1863 2.5089 6.8105 7.1636 0.8035 5.9896 4.4 9.8022 9.2472 9.8022 11.87 0 10.907-5.924 11.29-43.652-4.6353-5.0608-2.9238-3.1923-7.5559-8.2493-22.978-0.405-29.698-0.7814-32.609 1.126-1.3903 0.9108-2.5276 2.3297-2.5276 3.153s-0.772 1.7932-1.7155 2.1552c-2.0472 0.7855-1.6528 5.7284 0.4225 5.2963 1.0624-0.2212 1.1088 0.2303 0.1985 1.9313-2.1351 3.989 1.0776 17.353-1.6782 22.636-2.6056 4.9952-2.0284 9.8777 1.5959 13.502 3.4293 3.4294 4.9495 3.7825 9.248 2.1482h4e-4zm-3081.4-5.2872 4.5625-4.5625c0.9883-57.304 2.4536-52.418-7.7915-52.478-1.5127-33.071-1.4282-42.956-1.4282-225.89l-21.853-0.2997c0.0229 216.06 0.2285 204.2 1.4321 225.09 3.6245-0.0687 12.718-0.4983 16.056 0.8531 2.0439 0.8275-0.5093 1.0667-10.144 0.9504-10.346-0.125-13.096 0.1665-13.992 1.4835-1.4956 2.196-0.5005 39.999-0.314 51.637 3.2686 3.0488 6.0767 5.6685 9.3452 8.7173 6.8462-0.3273 12.728-0.6086 19.575-0.936l4.563-4.5624h-0.0108zm-0.2813-6.2326c-0.2832-1.2822-0.1074-1.2937 1.8418-34.965l0.105 13.658c0.0884 11.535-1.1367 24.962-1.9448 21.307h-2e-3zm-29.512-22.27c0-26.793 2.1855-29.923 2.1855-1.3506 0 26.793-2.1855 29.923-2.1855 1.3506zm772.16 26.997c6.7974-6.3857 0.7676-25.015-11.687-17.658-5.9895 3.5381-7.448 12.674-2.7698 17.351 3.5801 3.5802 10.809 3.7334 14.457 0.3063zm2408.5 0.6541c0.0109 0.5555 1.194-0.0961 2.6331-1.4479 2.6841-2.5217 4.4938-1.7315 3.2799 1.4321-0.7834 2.0418-0.4446 2.1033 3.4437 0.6249 2.3409-0.89 2.8226-1.6549 2.4081-3.8243-0.2852-1.4915-0.0951-2.7117 0.4227-2.7117 0.5176 0 0.941-0.7375 0.941-1.639 0-2.1791-3.1671-2.1068-4.0106 0.0916-0.4534 1.1811-0.9073 1.3368-1.4305 0.4904-0.5679-0.9189-1.5194-0.8972-3.6722 0.0838-2.1956 1.0004-3.5703 1.0212-5.6245 0.0853-1.4952-0.6813-3.4675-0.9514-4.3831-0.6001-1.1625 0.4462-1.473 0.1404-1.03-1.0143 0.8226-2.1438 3.9309-2.9276 11.683-2.946 5.3162-0.0125 6.2827-0.3175 6.2827-1.9817 0-2.6267-2.1025-4.5891-4.9169-4.5891-1.2621 0-2.8291-0.5345-3.4824-1.1879-1.9686-1.9683-0.9775 1.1879-5.3577 1.1879-1.5178 0-3.0088 0.8012-3.4032 1.8286-0.3859 1.0057-1.5997 2.7267-2.6973 3.8243-2.5387 2.5387-2.5703 7.6927-0.0613 9.9636 2.9552 2.6744 7.2052 4.0021 8.1556 2.5477 0.4415-0.6755 0.8103-0.7738 0.8195-0.2183l7e-4 1e-4zm180.46-12.658c6.108-1.8301 12.68-7.8522 14.027-12.852 2.2979-8.5336-1.5599-17.115-9.4005-20.91-10.321-4.9963-23.529-0.7176-27.609 8.9442l-1.7565 4.1594c-27.347 0.597-28.409 0.2703-28.409 2.8055 0 2.5353 1.0485 2.2075 28.694 2.7932l0.6189 3.0946c0.8093 4.0468 5.7706 9.8683 9.9679 11.697 4.1702 1.8165 8.4262 1.8989 13.867 0.2689zm-14.877-8.8646c-3.1859-3.186-3.8532-4.648-3.8532-8.4424 0-13.02 20.76-18.657 20.76-0.6569 0 7.3971-2.8733 11.332-8.9854 12.305-3.61 0.5746-4.5027 0.2134-7.9218-3.2056zm-3001.2 6.1772c3.6924-2.389 5.0112-6.6843 3.5542-11.575-2.3696-7.9547-11.659-10.18-17.618-4.221-3.8071 3.8071-4.1177 7.843-0.9976 12.96 3.5196 5.7727 8.9439 6.794 15.062 2.8359zm-9.1899-6.361c-0.3323-0.8663-0.4331-2.4643-0.2239-3.5511 0.5173-2.6868 5.6453-2.6962 6.1624-0.0114 0.7514 3.9026-4.5804 7.1012-5.9385 3.5625zm-8.0681 7.1722c0-3.9022-5.9365-3.4459-128.39-4.8311-22.318-23.094-28.955-30.681-28.955-23.936 0 2.3755 24.745 26.632 27.832 29.725 13.915 0 129.51 0.2862 129.51-0.9589h-2e-4zm99.453-0.6914c4.0186-2.0781 5.4414-4.7168 5.4414-10.091 0-9.8364-12.365-13.495-18.072-5.3474-2.5164 3.5925-2.053 10.828 0.8628 13.481 4.2857 3.8988 7.106 4.3679 11.768 1.9572zm-6.5661-7.6233c-1.8157-2.1876-0.6062-4.9308 2.1738-4.9308 1.2395 0 2.5393 0.7438 2.8882 1.6529 0.6279 1.6362-1.2964 4.903-2.8882 4.903-0.4538-1e-4 -1.4321-0.7313-2.1738-1.6251zm2378.5 1.0073c4.8466-3.3945 1.6096-12.494-4.4441-12.494-7.722 0-9.8075 7.9344-3.7942 14.435 5.4427 5.8832 2.6192 1.9954 8.2383-1.9405zm634 2.5298c6.813-3.4419 9.8016-8.3227 9.7993-16.005 0-10.39-4.7191-16.677-14.09-18.783-15.68-3.523-27.669 12.683-20.282 27.415 2.7671 5.5181 9.6934 9.8138 15.841 9.8245 2.1262 0.0033 6.0557-1.0996 8.7323-2.4517zm-13.886-5.8067c-7.541-3.8351-8.9012-14.697-2.5568-20.417 10.875-9.8036 26.52 6.8656 16.684 17.776-3.7081 4.1134-9.2092 5.1416-14.127 2.6407h-1e-4zm148.02 4.6217c2.1649-2.165 2.6971-4.0467 3.1749-11.225 0.6871-10.324-0.4716-15.44-4.0853-18.038-3.0632-2.2022-9.4307-2.052-86.074-3.4483-5.5728 5.5728-6.236 4.11-5.6826 24.335 0.2943 10.75-1.4943 10.28 41.845 11.013 46.183 0.7811 47.471 0.7142 50.822-2.637v-1e-4zm-82.866-4.243c-1.1719-0.4313-2.1306-1.799-2.1306-3.0391 0-2.9677 3.2054-4.1653 4.9099-1.8344 1.5018 2.0538 2.7386 1.3173 2.7386-1.6307 0-1.5899-0.7317-1.9496-3.5189-1.73-3.5094 0.2766-3.5194 0.2625-3.7072-5.186-0.1038-3.0048 0.343-6.1165 0.9924-6.915 1.8934-2.328 76.728 0.0325 77.45 0.4789 0.4944 0.3055 0.899 4.9424 0.899 10.304 0 9.204-0.1374 9.7819-2.4584 10.346-3.5631 0.8665-72.646 0.1367-75.174-0.7941zm-3840.7-14.513c0-8.4107-0.4214-13.658-1.0967-13.658-1.395 0 0.3979-2.2435 6.873-8.6001 5.6689-5.5648 7.4141-9.1523 7.4111-15.236-0.0103-12.979-14.699-21.239-25.14-14.133-6.0146 4.0933-8.106 7.8008-8.106 14.369 0 6.7079 2.8267 11.799 8.8379 15.918 7.1099 4.8723-0.0444 6.4855 8.5664 6.7282-5.6943 2.2915-4.8486-0.8489-4.8247 28.27h7.4795v-13.658h-4e-4zm-8.9224-26.295c-3.2812-1.7803-6.2969-6.7172-6.2969-10.309 0-3.2073 2.8081-8.2881 5.7002-10.314 1.3394-0.9379 4.0952-1.7054 6.125-1.7054 5.0239 0 11.121 5.9598 11.121 10.872 0 4.7591-2.707 9.5375-6.52 11.509-3.9604 2.0479-6.2798 2.0357-10.129-0.053v2e-4zm3553.6 38.86c0.5381 0 1.7401-1.1629 2.6713-2.5841 3.1049-4.7385-1.8706-11.643-7.1764-9.959-3.2466 1.0305-5.756 5.4844-4.9342 8.7582 0.7181 2.861 4.4189 5.1128 7.0062 4.263 0.8004-0.2629 1.8953-0.478 2.4332-0.478h-1e-4zm398.48-5.7365c-0.2715-0.8232-2.9122-1.496-6.6469-1.6935-5.0091-0.2649-6.1964-0.0033-6.1964 1.3658 0 1.344 1.3718 1.6935 6.6469 1.6935 4.8294 1e-4 6.5237-0.3734 6.1964-1.3658zm-3181-65.32c-20.602 0.2329-26.617 0.3009-51.355 0.5805 0.0269 1.6586 0.6301 48.901 1.2917 50.009 0.5769 0.9671 33.832 0.4451 50.063 0.2528 3e-4 -24.188 3e-4 -26.668 3e-4 -50.842zm-32.233 30.517c-1.3035-0.931-1.1116-1.0541 0.9368-0.6012 3.3516 0.741 7.3137-0.8032 8.2375-3.2106 1.1299-2.9445-1.1086-4.3609-2.5718-1.6271-1.9189 3.5856-6.8176 2.5513-7.2527-1.5312-0.7075-6.6349 3.3704-8.9702 9.104-5.2135 2.8357 1.858 2.8931 1.8507 2.144-0.2732-0.7578-2.1489-0.7444-2.1499 0.8721-0.0614 0.9031 1.1665 1.6418 4.0189 1.6418 6.3385 0 3.7798-0.3933 4.3818-3.7896 5.8007-4.4815 1.8727-7.0834 1.9784-9.3221 0.379zm407.46 13.271c21.093-10.761 15.289-42.661-8.28-42.661-9.2048 0-13.325 4.6887-19.371 10.926-317.43 0.014-315.35-0.725-315.35 3.4348 0 2.3879 5.2275 1.9959 318.51 0.6524 3.7898-4.685 7.1248-9.5505 15.843-9.5505 14.939 0 21.673 16.974 11.294 28.464-8.2585 9.1411-20.929 7.7531-26.403-2.8922-4.3313-8.4239 32.096-8.0891-124.78-8.0891-206.3 0-194.53 1.6785-194.24 3.5174 0.3181 2.019 3.8613 2.067 146.17 1.9807 80.217-0.0486 149.84-0.3849 154.73-0.7474 9.8486-0.7311 8.7739-1.329 15 8.3445 5.2864 8.2134 17.741 11.281 26.877 6.6204h-5e-4zm2578.9 1.318c0.0917-0.4507 0.2687-4.6529 0.3933-9.3382 0.192-7.2192-0.0349-8.4684-1.4849-8.1891-0.9412 0.1813-2.0526 1.5562-2.4698 3.0555-1.0016 3.5997-1.1724 13.638-0.2478 14.563 0.9869 0.9869 3.6021 0.9244 3.8092-0.0911zm-83.181-12.566c7.2994-3.692 11.052-9.8047 11.716-19.083 0.6185-8.6439-1.554-14.369-7.2816-19.188-10.854-9.1334-22.818-7.4036-31.191 4.5097-3.0116 4.2849-3.3186 5.513-3.3186 13.275 0 7.7407 0.3113 8.995 3.278 13.207 6.4217 9.1176 17.314 12.077 26.797 7.2802h1e-4zm1.8216-8.4939c-2.4982-8.8027-1.6458-8.139-10.902-8.4883-8.9509-0.338-8.6836-0.4852-9.9971 5.5095-0.9172 4.1851-2.2659 3.7519-4.3224-1.3879-2.2842-5.7087-2.2276-11.612 0.1562-16.303 2.5282-4.9751 4.642-5.5844 4.642-1.3381 0 6.2721 0.633 6.7363 9.1859 6.7363 8.9102 0 10.482-0.9475 10.482-6.3192 0-4.6424 1.9861-4.254 4.7107 0.921 4.8061 9.1283-2.8737 24.478-3.9547 20.669l1e-4 -1e-4zm-2934.7 6.1174c6.4648-3.343 7.3596-11.128 1.907-16.581-7.1621-7.1622-17.045-3.6016-17.045 6.141 0 5.53 1.3511 8.1955 5.2175 10.294 3.7912 2.0574 6.1574 2.0924 9.9209 0.1461zm-7.8079-6.7738c-0.426-0.426-0.7749-1.9545-0.7749-3.3966 0-2.2158 0.4656-2.5685 3.0049-2.2763 2.3845 0.2744 3.0049 0.9097 3.0049 3.0773 0 1.9173-0.6648 2.8268-2.2302 3.0509-1.2266 0.1756-2.5789-0.0293-3.0047-0.4553zm93.277 5.137c2.6089-2.6088 3.1938-4.1191 3.1938-8.2446 0-6.5237-3.478-10.415-9.3096-10.415-5.3779 0-8.0667 1.6644-9.9429 6.155-4.7977 11.482 7.5028 21.06 16.059 12.504zm-9.5554-6.1784c-0.3638-0.9481 0.1433-2.5284 1.1272-3.5121 1.656-1.6561 1.9229-1.6538 3.6064 0.03 1.5022 1.5021 1.5737 2.1129 0.4128 3.5121-1.812 2.1832-4.3027 2.1688-5.1462-0.0298l-2e-4 -2e-4zm358.63 5.6186c2.8513-4.3514 1.6858-8.4955-3.0383-10.804-4.9534-2.4207-7.9551-1.6624-10.14 2.5618-2.1042 4.0696-2.0627 4.5911 0.6377 8.0244 3.1325 3.9823 9.9958 4.1016 12.54 0.2179zm-451.88 0.7488c-0.0793-3.8517-3.2629-3.35-89.574-4.0974-23.468-23.468-14.423-14.422-37.704-37.703-0.0608-9.4897-1.0322-161.5-1.0928-170.99-6.3259-0.7221-6.4021-1.1412-5.6516 2.6099 0.916 4.5779 0.7275 162.02 1.5542 167.29 0.697 4.4398 8.146 11.462 39.981 43.714 34.626 0 92.505 0.1293 92.486-0.8195h3e-4zm3041-6.9488c18.054-9.0607 8.931-36.261-13.56-33.168-6.3178 0.869-13.053 6.1327-15.101 11.802l-1.2488 3.4572c-44.604-0.6185-45.281-0.9925-45.941 1.5342-0.3112 1.1899-0.2914 2.4377 0.0438 2.7731 0.1738 0.1738 0.2621 0.6096 45.963 0.6096l0.7087 3.2266c2.2402 10.2 15.441 16.639 29.136 9.7654h1e-4zm-21.38-7.6126c-4.2651-5.0688-3.931-11.052 0.8863-15.869 8.3914-8.3914 20.205-1.4078 17.609 10.41-1.9343 8.8076-12.943 12.057-18.495 5.459zm221.32 2.368c2.3959-1.9381 2.6056-2.9844 2.9457-14.708 0.3564-12.286 0.2924-12.695-2.4088-15.396-3.7906-3.7906 2.4291-2.2034-88.715-4.2056-5.1251 6.0911-5.5123 5.2616-6.2786 17.84-1.1804 19.375-3.6469 18.456 49.658 18.511 39.96 0.0414 42.357-0.0678 44.799-2.0427h-2e-4zm-76.638-4.4695-9.2875-0.5463c-0.2222-12.57-0.6485-18.769 1.2841-20.373 2.0918-1.7361 76.634-1.3703 78.753 0.3865 0.8929 0.7405 1.3658 4.2882 1.3658 10.248 0 7.8792-0.2853 9.268-2.1036 10.241-2.116 1.1324-50.985 1.1628-70.011 0.0437v-1e-4zm21.743-16.39c-0.7689-2.6422-0.8024-2.6511-1.0253-0.2732-0.7094 7.5659-0.7346 9.8704-0.1406 12.839 0.5343 2.6699 0.7769 2.0618 1.3083-3.278 0.3589-3.6058 0.2947-7.7852-0.1423-9.2875h-1e-4zm28.821-0.5463c-0.6023-2.0022-0.7158-1.9564-1.3546 0.5463-0.8468 3.3178 0.0678 11.335 0.3715 14.751 0.3824-3.0564 1.7985-12.588 0.9833-15.297h-2e-4zm-3410.3 15.843 0.3423-4.9169c7.1069-0.4076 4.4829-0.2571 11.584-0.6644-0.0425-2.1295-1.2783-68.913-1.7002-70.358-0.4775-1.6337-39.755-2.0536-41.693-0.4458-2.9482 2.4466-1.0547 3.5944 4.0332 8.0186-4.3359 3.271-4.6084 2.4507-3.7783 11.38 0.71 7.6381 0.8467 7.9449 3.2646 7.338 1.8076-0.4537 2.8462-0.0308 3.6602 1.4898 2.1626 4.0416 1.4141 5.545-2.7607 5.545-3.6064 0-3.8711 0.2239-3.5508 3.0048 0.3145 2.7336 0.7153 2.9831 4.4429 2.7643 5.2075-0.3057 5.7915 2.6879 0.7217 3.7018-2.8296 0.566-3.2959 1.0916-2.8828 3.2506 0.3223 1.6855-0.022 2.5756-0.9951 2.5756-1.7876 0-2.1514 12.573-0.395 13.658 0.6011 0.3714 1.0928 0.1546 1.0928-0.4818 0-0.6365 0.6147-1.0342 1.3657-0.884 0.9663 0.1932 1.3662-1.5661 1.3662-6.0098 0-5.3451 0.2964-6.2829 1.9868-6.2827 1.7798 2e-4 1.9556 0.9108 1.6885 8.7414-0.1641 4.8077-0.6895 8.7412-1.1675 8.7412s-0.8691-0.4917-0.8691-1.0927-1.4751-1.0927-3.2778-1.0927c-2.729 0-3.2778 0.4379-3.2778 2.6147 0 4.3494 2.5142 3.9412 24.938 3.9412l0.7666 4.6437c1.4585 8.8433 4.501 9.3328 5.0933 0.8195l2e-4 -1e-4zm6.769-59.549c0-17.556 0.9136-1.5482 0.3926 6.8719-0.2163 3.4319-0.3911 0.3396-0.3892-6.8719h-0.0034zm-31.975-1.9121c0.1118-3.756 0.0107-7.5052-0.2358-8.3315-0.2422-0.8263 0.1743-1.7277 0.9258-2.0032 1.021-0.3745 1.3657 1.7271 1.3657 8.3315 0 11.815-2.3267 11.069-2.0557 2.0032zm3328.1 66.104c12.612-6.3364 12.807-26.056 0.3297-33.343-4.3621-2.5476-14.097-2.7291-18.7-0.3487-12.55 6.4899-11.649 28.384 1.4019 34.069 4.6954 2.0453 12.492 1.8721 16.968-0.3769h2e-4zm-17.377-8.0041c-2.8922-2.8923-3.3619-4.1559-3.3619-9.0444 0-6.5432 1.7484-9.6406 6.569-11.637 4.3621-1.8068 11.294 0.0876 13.687 3.7408 6.4909 9.9065 1.9119 20.303-8.9426 20.303-3.6684 0-5.2647-0.6749-7.9518-3.362zm-2545.4-4.139c12.248-5.5639 16.28-19.764 8.3953-29.565-5.2051-6.4698-9.5615-8.8252-16.323-8.8252-11.726 0-18.874 6.6988-19.726 18.486-1.1446 15.822 13.476 26.345 27.654 19.904zm-12.028-4.2262c-7.283-1.8235-12.727-11.21-10.469-18.051 4.1545-12.588 20.415-14.213 27.411-2.7382 4.7825 7.8438 0.5615 17.93-8.5637 20.464-4.2271 1.1742-4.8841 1.1996-8.3782 0.3247zm9.2082-9.7269c2.7852-3.5408 2.8276-4.9246 0.2498-8.1086-2.394-2.9564-8.1384-3.3655-10.739-0.7649-2.5198 2.5198-2.1572 7.4449 0.7195 9.7743 3.4651 2.8059 7.1191 2.469 9.77-0.9008h-3e-4zm2718 10.528c-0.8412-1.3611-12.979-1.5526-12.019 0 0.841 1.361 12.979 1.5526 12.019 0zm-4207.2-97.198-2.8799-0.7228c-2.5884-0.6496-97.258-0.6382-98.852 1.8798-1.0747 1.6968-1.3906 86.104-0.333 88.86 0.7671 1.9985 9.104 1.6916 101.5 1.1712 0.3716-59.31 0.4942-78.958 0.5703-91.189zm78.647-0.0476h-60.096v90.69h60.096v-90.69zm-53.54 7.6485h47.012l-0.5742 75.939-46.438 0.5898v-76.529zm39.408 63.335c1.9883-1.0642 2.1133-2.5146 2.1133-24.546 0-22.604-0.0786-23.457-2.2749-24.632-3.168-1.6954-28.223-1.8024-32.242-0.1376l-3.1792 1.317c0.1362 43.675-0.1538 45.916 2.1929 47.632 2.499 1.8271 30.095 2.1305 33.39 0.367zm4721-24.128 0.2858-42.195c-2.0864-0.0439-76.396-1.8619-77.397-0.8626-0.414 0.4134-0.8976 19.633-1.0745 42.71l-0.3218 41.958c42.654 0.5178 51.36 0.6665 78.222 0.5847l0.2859-42.195zm-71.387 35.828c-0.306-0.7973-0.4135-17.287-0.2389-36.644 0.2694-29.861 0.5658-35.351 1.9564-36.224 2.034-1.2768 60.206-0.1034 61.674 1.244 1.2082 1.1086 1.5555 68.27 0.3681 71.162-0.722 1.7581-3.2989 1.9121-31.994 1.9121-24.922 0-31.321-0.2921-31.765-1.4497zm56.818-4.6378c1.4739-1.4739 1.717-5.7881 1.717-30.473 0-25.763-0.199-29.001-1.9121-31.106-2.2513-2.7667-3.0769-2.3619-46.633-2.8091-1.9945 3.9243-2.7748 2.081-2.793 32.905-0.0207 35.507-1.7173 32.818 20.778 32.934 26.536 0.1371 13.834 1.6711 20.562 0.8627 4.5672-0.5488 6.1371-0.1695 8.2818-2.3142zm-3745.6-37.775c-0.7632-1.2354-46.54-0.9356-48.526-0.9356v48.076h50.549c-0.0698-2.2291-1.2619-45.909-2.0232-47.141zm-23.992 34.133c2.1658-0.8472 1.9629-0.9324-6.8777-2.8931-2.1824-0.4839-2.6743-1.2793-1.7329-2.8023 0.615-0.9955 1.0686-0.7929 1.6714 0.7468 0.6096 1.5565 0.8477 1.0169 0.9041-2.0491 0.0471-2.5323-0.354-3.8956-1.0234-3.4819-1.6057 0.9924-2.6311-2.5123-1.2292-4.2014 0.6587-0.7936 3.8157-1.5433 7.0498-1.6741 6.9834-0.2825 8.6191 1.1369 8.7893 7.6257 0.095 3.6192-0.4636 4.9706-2.9329 7.0944-1.6775 1.4429-3.8828 2.589-4.9011 2.5468-1.5259-0.0633-1.4763-0.2235 0.2832-0.9117l-6e-4 -1e-4zm3.9431-12.492c-0.8472-2.2285-1.8484-2.9095-4.2776-2.9095-1.7441 0-3.6821 0.6146-4.3062 1.3658-2.1985 2.6457 6.7495-0.0549 7.0242 3.0048 0.3167 3.5264 0.4175 3.6966 1.5327 2.5818 0.7727-0.7728 0.7812-2.0588 0.0271-4.0428h-2e-4zm2976.4 17.031c0.0543-3.7379 0.9957-15.019 1.2994-18.848h-5.7132c0 8.4512-0.0966 20.3 0.7285 21.124 1.7286 1.7286 3.6447 0.5449 3.6852-2.2763h1e-4zm-3014.1-9.511c6.4478-6.4478 1.5637-18.141-7.6868-18.403-8.7922-0.2493-13.818 11.606-7.7119 18.194 3.7175 4.0113 11.491 4.1169 15.399 0.2092h-2e-4zm-11.103-5.4492c-1.0764-2.8046 0.0908-5.5187 2.5225-5.8665 3.0813-0.4407 5.4915 3.54 3.5559 5.8726-1.6812 2.0256-5.3 2.022-6.0784-0.0065v4e-4zm94.144 5.4492c6.4932-6.4934 1.2639-18.078-8.1606-18.078-4.7717 0-8.7334 2.7855-8.9358 6.2828-0.3794 6.5525 0.4006 9.7216 2.9585 12.019 3.861 3.4678 10.552 3.3621 14.138-0.2235zm-11.522-7.6982c0-2.2843 0.5178-2.7316 3.1611-2.7316 1.8816 0 3.4307 0.7033 3.8279 1.7375 0.9885 2.5767-0.1755 3.7257-3.7754 3.7257-2.6995 0-3.2134-0.4371-3.2134-2.7316h-2e-4zm2858.2-2.2983c6.6281-3.3029 10.393-7.782 12.178-14.488 5.5941-21.02-19.397-38.646-34.916-24.626-4.7916 4.329-6.5577 9.5027-8.2185 13.541l-32.233 0.0088v5.7062l31.687-0.8193 0.024 2.7466c0.0667 7.5873 7.6488 16.706 16.069 19.326 6.3055 1.9613 9.2007 1.6993 15.41-1.3948l-1e-4 -6e-4zm1.2616-8.7676c-0.0439-9.2826-0.2178-8.1797-19.106-7.5092l-2.3175 9.6123c-3.9377-5.0061-4.7865-5.28-4.7686-13.311 0.024-10.557 4.3488-17.558 6.0201-9.7443 1.2314 5.7558 2.2381 6.3406 10.917 6.3406 8.7668 0 9.2706-0.3958 9.2706-7.2827 0-4.7769 1.9841-4.4384 4.642 0.7918 3.4227 6.7348 1.9192 18.799-2.8338 22.741-1.6104 1.3358-1.8097 1.1566-1.8231-1.6389zm99.446-11.88c0-6.6001-2.9091-11.817-8.3674-15.005-4.4305-2.5875-16.23-2.8282-20.876-0.4258-3.3547 1.7348-8.9988 7.6962-8.9988 9.5046 0 0.4211-1.3659 1.0089-46.984 1.0089v6.5931c15.2-0.4884 30.351-0.9753 45.551-1.4637l0.6739 3.1717c4.5644 21.483 39.001 18.316 39.001-3.3842zm-29.522 8.4681c-12.643-11.398 7.5768-28.012 15.348-15.268 7.2151 11.833-5.8983 23.786-15.348 15.268zm85.28 1.6389c14.363-7.2562 14.34-27.079-0.0414-34.489-5.9969-3.0897-12.652-2.6074-18.632 1.3502-17.64 11.673-2.7435 43.958 18.674 33.138l-3e-4 1e-4zm-12.598-5.089c-9.7906-4.2776-10.687-18.914-1.4513-23.69 9.0552-4.6826 20.13 4.4248 17.874 14.698-1.4438 6.5737-10.548 11.559-16.423 8.992zm147.05 3.2609c3.1426-3.1426 3.1939-3.387 3.1939-15.2 0-11.918-0.0229-12.026-3.1815-14.683-2.9459-2.4788-4.3417-2.7285-18.848-3.3716-8.6168-0.382-27.467-0.7874-41.89-0.9009-28.731-0.2261-30.107 0.0334-32.214 6.0764-0.6118 1.7547-1.1122 8.5083-1.1122 15.008 0 19.061-5.3936 16.04 90.858 16.265l3.1939-3.194zm-83.125-4.3879c-2.6528-0.6918-2.7316-0.9898-2.7316-10.326 0-5.2874 0.3109-10.117 0.6907-10.733 0.9697-1.5718 77.393-1.1624 79.306 0.425 1.7269 1.433 1.9336 16.447 0.2695 19.556-1.0936 2.0435-2.5222 2.1171-37.97 1.9567-20.258-0.0917-38.062-0.4872-39.565-0.879zm-436.43-0.6078c17.079-5.7332 16.401-9.7759 23.951-8.267 15.533 3.1049-4.4108 4.59 42.502 3.6622 17.489-0.3459 32.985-1.0688 34.435-1.6064 15.527-5.7575-60.868-1.8917-70.064-6.5093-2.2297-1.1196-4.8159-2.0356-5.7476-2.0356-1.2618 0-0.7238-1.4627 2.1102-5.7364 8.0853-12.192 10.877-28.67 6.795-40.112-0.9563-2.6808-1.6306-4.9823-1.4984-5.1145 0.2075-0.2075 55.538-0.4744 164.96-0.9377 1.9673 6.7341 2.287 9.5966 7.9616 14.592 15.003 13.206 35.494 3.044 35.409-17.561-0.0951-22.767-32.54-37.111-42.993-3.9006-0.6857 2.1786-8.5869 1.8641-167.53 1.7282l-1.8031-3.0526c-7.431-12.58-27.04-22.968-43.29-22.933-22.535 0.0483-43.863 17.089-49.656 39.674l-1.4513 5.658h-175.66c-0.4113 3.548-0.2571 2.2184-0.6663 5.7475 100.55 1.2454 112.22 1.3163 176.41 2.9937l1.4537 6.4094c2.7156 11.973 12.628 26.797 21.647 32.371 12.492 7.7206 28.798 9.6029 42.715 4.931l-1e-4 -1e-4zm-29.2-5.2678c-39.102-13.328-41.721-68.66 1.5638-84.72 32.89-12.203 70.345 23.651 52.963 60.253-4.5153 9.5076-8.8068 14.652-16.159 19.37-11.914 7.6456-25.569 9.4595-38.368 5.0971zm26.878-18.321c6.6346-3.1187 12.126-9.4772 14.192-16.431 3.3448-11.263 1.5588-18.642-6.4664-26.717-14.78-14.872-36.929-11.111-45.518 7.7291-2.2953 5.0352-2.6912 15.77-0.7897 21.417 1.7382 5.1617 8.2803 12.98 12.263 14.654 1.8284 0.7688 7.3956 1.4551 12.371 1.5251 7.1122 0.1 10.095-0.3655 13.948-2.1769zm207.68-35.911c-2.4351-4.709-2.1655-15.067 0.5062-19.449 2.6024-4.268 4.3826-4.5718 4.3826-0.7477 0 5.8495 1.176 6.5157 10.816 6.1277 12.437-0.5006 7.3054-0.7546 9.8591-7.2922 0.7526-1.9266 1.1315-1.6407 3.2012 2.415 2.8514 5.5872 3.0226 12.617 0.4337 17.799-4.548 9.1042-4.4445-2.4252-6.4843-4.4646-1.274-1.274-15.262 0.4392-17.279 0.6403l-0.3392 4.0975c-0.4158 5.0252-2.7428 5.4241-5.096 0.8737zm108.69 19.906c0-11.161-1.048-6.8487-3.9136-6.8487-0.2513 0-0.457 5.1473-0.457 11.438 0 9.3076 0.2825 11.33 1.5164 10.857 3.0189-1.1584 2.8542-11.762 2.8542-15.446zm-3015.4 6.2069c4.3772-4.7433 4.1265-9.967-0.7102-14.804-4.8394-4.8397-9.3623-5.0099-13.851-0.5211-9.4771 9.4766 3.8345 26.949 14.562 15.325zm-11.156-4.8083c-0.7241-0.8726-0.9971-2.5935-0.6064-3.8243 0.8933-2.8146 5.5347-3.0121 6.9878-0.2974 2.2487 4.2021-3.3265 7.803-6.3814 4.1217zm92.431 6.206c5.5559-4.5007 5.9812-11.909 0.9546-16.632-3.5212-3.308-11.314-3.6685-14.622-0.6764-4.6624 4.2185-3.9172 13.96 1.3499 17.649 3.0725 2.1521 9.4575 1.9754 12.317-0.3409zm-9.0088-6.2367c-1.6465-1.2233-1.8186-1.9316-0.8513-3.5088 1.7605-2.8709 6.3486-2.5944 6.7764 0.4084 0.469 3.2947-3.1292 5.1774-5.9251 3.1004zm-675.39 5.8396c-0.9263-0.9261-0.7988-1.6829 0.5015-2.9832 2.6279-2.6279 0.3027 10.32 0.3027-426.28-2.9287 2e-4 -1.8867 2e-4 -4.917 4e-4 0.2495 468.28-0.5078 430.5 2.9502 430.5 1.7944 0 2.0894-0.3148 1.1631-1.2409l-5e-4 -1e-4zm-46.396-17.769c10.046-5.1951 11.558-19.176 2.895-26.782-3.2817-2.8814-4.7124-3.3777-9.7349-3.3777-4.7573 0-6.5405 0.5493-9.2886 2.8618-6.4722 5.4461-8.2783 12.861-5.0273 20.641 2.9692 7.1067 13.735 10.494 21.156 6.6566h-4e-4zm-14.072-7.13c-6.6636-6.6635-1.5142-18.069 8.0356-17.797 3.9146 0.1113 6.166 1.9445 8.1152 6.6072 4.3423 10.388-8.2373 19.104-16.151 11.19zm113.65 5.5679c9.7529-5.2309 10.327-21.762 0.9521-27.477-13.735-8.3741-30.382 8.626-21.372 21.826 4.8438 7.0962 13.34 9.4479 20.42 5.6514zm-12.198-5.1257c-6.0254-3.3593-7.1807-11.377-2.3364-16.221 4.8647-4.8651 11.958-3.5858 15.233 2.7477 4.6196 8.9331-4.3087 18.261-12.897 13.473zm3580.1 4.8511c2.3104-0.6416 5.998-2.8136 8.1948-4.8269 3.8687-3.5453 3.9943-3.9012 3.9943-11.313 0-8.2773-1.4942-11.442-7.5269-15.94-2.3982-1.7882-4.6479-2.2529-10.908-2.2529-9.071 0-12.214 1.5233-16.857 8.1701-1.6235 2.3242-3.9351 4.5032-5.137 4.842-1.2019 0.3389-11.65 0.6229-23.219 0.6311-20.055 0.0142-21.034 0.1131-21.034 2.1266 0 1.2062 1.0151 2.4339 2.3674 2.8631 3.037 0.9639 36.594 0.0656 42.752-0.0579l1.4991 4.3221c3.6611 10.557 13.452 14.884 25.872 11.435h-1e-4zm-16.85-8.5712c-7.1207-7.1206-1.8878-19.752 8.183-19.752 6.8509 0 11.122 9.022 7.9095 16.71-2.9476 7.055-10.628 8.5069-16.092 3.0422zm551.73 2.3645c5.0242-4.7795 6.5605-10.258 4.6573-16.61-2.9481-9.84-8.7534-10.732-14.346-12.408v-38.446c6.9542-3.3517 14.149-5.7259 14.186-19.993 0.0109-3.941-0.6658-8.2057-1.5817-9.9768-1.7783-3.4389-7.1462-8.3245-10.217-9.2992-2.2747-0.722-1.9605-2.3074-1.3432-32.626l4.3305-1.9388c7.3586-3.2945 11.009-13.344 8.2368-22.678-1.9513-6.5709-8.3252-12.821-14.198-13.923-11.461-2.1501-23.416 8.6708-23.446 21.221-0.0164 6.7006 7.8481 15.466 15.354 17.115l3.2147 0.7061v30.364l-3.5511 1.7894c-9.7517 4.9138-15.279 15.426-12.852 24.441 1.6034 5.9542 6.8791 11.746 12.134 13.32l4.2693 1.2791c0 36.6 0.3622 37.917-2.2818 40.731-1.7747 1.8891-2.4135 4.3505-2.8745 11.077-0.6806 9.9303 0.9812 14.943 5.982 18.044 5.0453 3.1284 9.4421 2.4564 14.326-2.1899zm-10.701-5.0827c-3.5059-4.2242-2.1725-13.756 1.9243-13.756 3.0399 0 4.5507 2.2728 4.5507 6.8463-1e-4 7.1489-3.3286 10.701-6.475 6.9093zm-9.2714-76.12c-3.494-4.1523-3.6293-8.7068-0.3703-12.458 6.1008-7.0214 16.415-3.3594 16.415 5.8283 0 6.2082-3.4578 9.9911-9.1324 9.9911-3.2182 0-4.6825-0.7122-6.9119-3.3618zm-0.7275-70.854c-4.3451-4.3452-4.2986-8.9813 0.1347-13.415 2.8761-2.876 3.8789-3.2411 7.3754-2.6844 8.2827 1.3185 11.93 10.963 6.2817 16.611-3.8754 3.8754-9.6176 3.6622-13.792-0.512zm-443.52 149.34c5.8419-3.976 7.9915-7.7385 8.509-14.894 0.8319-11.502-3.4548-18.35-13.114-20.951-8.1123-2.1844-16.214 1.1538-21.425 8.8275-2.198 3.2371-2.5215 4.851-2.1897 10.925 0.4551 8.3291 3.1669 13.018 9.4484 16.336 5.7018 3.012 14.149 2.9022 18.771-0.2438zm-17.644-7.1919c-2.9017-2.5925-3.5435-4.0627-3.9583-9.0648-0.4366-5.2637-0.1502-6.3804 2.4193-9.4339 3.741-4.446 8.8165-5.4991 14.197-2.9458 4.8945 2.3226 7.1604 6.4667 7.1604 13.096 0 4.1305-0.5842 5.6395-3.1939 8.2491-4.4891 4.4891-11.664 4.532-16.624 0.0995h-2e-4zm154.28-23.23c-3.6439-3.6437-2.3109-2.3107-6.0945-6.0944-89.354-1.4453-87.801-2.3758-91.187 3.9509-1.364 2.5486-2.8073 23.794-1.868 27.496 1.8771 7.3979 10.183 7.0147 91.399 7.5278 7.4477-7.0111 6.2274-2.9284 7.7504-32.88zm-78.192 25.232-12.019-0.5463v-24.038c45.854-0.3358 78.089-0.8433 79.943 0.6955 1.7968 1.4912 1.3492 8.0539 0.9128 24.435-14.743 0-54.058 0.1255-68.837-0.5463h1e-4zm-4115.6-4.7702c1.6074-1.9365 0.9463-48.45 0.668-93.022h-100.52v92.875c2.8759 0.0854 97.372 3.1391 99.855 0.1466zm3428.4-0.7314c11.557-5.5947 15.128-23.179 6.6151-32.574-7.3826-8.148-22.366-8.8796-30.536-1.491-7.6399 6.9089-8.1301 22.056-0.9747 30.123 5.7576 6.4905 16.212 8.1461 24.896 3.9425zm-16.034-6.8306c-9.2494-6.2244-7.5421-22.113 6.5818-23.47 4.928-0.4736 5.759-0.2132 8.6965 2.7242 6.2513 6.2514 5.1475 16.513-2.2623 21.031-4.7142 2.8743-8.4423 2.7926-13.016-0.2851zm-3332.5-84.914c-52.635 0-58.676-0.2443-59.433 1.7283-0.9077 2.3657-0.8452 89.508 0.0654 90.418 0.312 0.312 3.3638 0.7285 59.368 0.7285-5e-4 -60.562-5e-4 -80.134-5e-4 -92.875zm-52.994 7.1022 47.818-0.5898c-1.1343 43.693-1.314 48.178-1.3809 78.714h-45.792c-1.0889-6.0656-1.3252-1.5126-0.645-78.124zm40.724 39.959c0.1626-12.878-0.1406-23.851-0.6738-24.384-1.6313-1.6317-27.589-1.4981-31.598 0.1626l-3.5347 1.4641c-0.0054 7.1593 0.1348 40.092-0.6631 43.068-1.0391 3.8722 0.7104 3.451 36.174 3.1044l0.2954-23.415h5e-4zm4142.5 41.444c0-1.4433-13.112-1.4474-13.112 0 1e-4 1.4432 13.112 1.4474 13.112 0zm576.66-41.649c0.25-33.92 0.071-39.096-1.3936-40.312-1.9667-1.6323-23.596-1.4638-75.379-1.6273-0.0647 9.0536-0.5051 70.735-0.5733 80.276 50.607 0.5392 59.772 0.6682 77.059 0.5804l0.2869-38.917zm-70.018 32.196c-0.9457-0.9457-0.9563-63.399-0.012-66.93l0.7036-2.6295c40.755 0.9114 61.058 1.1141 62.117 2.7678 1.1814 1.8429 0.3907 63.854 0.3656 66.958-40.422 0.3751-62.478 0.532-63.175-0.1656h5e-4zm45.163-3.9809c0.012-0.9309 0.2845-0.8943 0.9307 0.1248 0.5717 0.9016 2.4999 1.3108 5.1482 1.0926 6.5997-0.5436 6.9814-2.1523 7.0001-29.506 0.0164-23.882-0.5842-28.446-4.0788-31.001-1.2705-0.929-8.1934-1.3706-22.824-1.456-17.751-0.1036-21.266 0.1433-22.718 1.5956-2.5197 2.5197-2.5837 56.266-0.07 58.779 2.1654 2.1654 36.611 2.5162 36.611 0.3709zm-777.59-6.9324c0.9579-6.9888 0.8743-21.158-0.1247-21.138-2.7701 0.0566-3.6335 2.5312-4.2715 12.244-0.7296 11.108-0.2845 13.963 2.1765 13.963 0.9855 0 1.7703-1.7925 2.2195-5.0694h2e-4zm-3665.2 2.3642c10.183-5.2658 10.28-23.146 0.1538-28.382-9.2236-4.7695-20.302 0.6832-22.461 11.055-1.418 6.8077 3.2554 15.991 9.2466 18.171 3.2329 1.1764 9.9999 0.7393 13.06-0.8436zm-13.316-6.0026c-3.5005-2.7533-4.5337-7.8423-2.5547-12.579 4.2949-10.28 18.108-7.1205 18.108 4.1414 0 9.0953-8.71 13.82-15.553 8.4375h-5e-4zm115.43 3.19c7.2871-6.3981 7.8169-16.595 1.2349-23.778-3.1494-3.4367-4.2749-3.9208-10.086-4.3412-6.1138-0.4423-6.8008-0.2449-10.523 3.0234-6.8867 6.0466-7.7979 16.319-2.0537 23.146 3.4458 4.0948 5.9106 5.1243 12.48 5.2126 4.24 0.057 5.823-0.5204 8.9471-3.2633zm-16.778-5.1879c-4.5493-4.5494-4.6011-10.045-0.1367-14.509 6.6436-6.6437 16.474-2.0518 16.474 7.6954 0 5.6524-2.7563 8.7698-8.4268 9.5303-4.057 0.5442-4.9599 0.2342-7.9101-2.7164zm2554.6 5.2407c5.1381-1.4274 12.525-7.8569 15.51-13.501 3.7218-7.0357 3.3478-17.995-0.879-25.749-5.3339-9.7856-15.752-15.362-25.866-13.846-6.781 1.0169-15.657 6.4625-18.896 11.594-7.5747 11.999-5.0876 30.002 5.1525 37.293 6.9511 4.9497 16.512 6.5606 24.978 4.2088zm-16.461-6.6861c-3.4904-1.3877-8.4958-6.127-10.478-9.9208-2.0856-3.9919-1.9541-14.425 0.24-19.048 3.8232-8.0569 14.716-13.421 22.749-11.202 17.763 4.9045 21.611 28.493 6.2384 38.242-5.3125 3.3692-13.11 4.1716-18.75 1.9295zm13.952-1.5592c18.176-7.5944 15.796-31.369-1.7516-36.626-7.868-2.3574-18.361 2.8038-21.636 10.642-6.2325 14.917 7.2524 32.726 23.388 25.984h2e-4zm1510.1-13.892c2.3247-1.5385 5.0411-4.5133 6.0364-6.6108 2.1945-4.6247 2.351-13.731 0.3194-18.594-1.7135-4.101-7.291-9.1688-11.159-10.14l-2.6474-0.6645 0.0896-35.274c8.0521-3.7766 17.061-6.7964 16.108-21.774-0.3428-5.3837-1.1373-7.9531-3.5249-11.398-3.3122-4.7797-10.366-8.8953-15.246-8.8953-5.4978 0-11.37 3.9933-14.885 10.122-6.4481 11.243-3.3801 25.385 6.4949 29.938l4.3517 2.0065c0.0204 6.3285 0.1418 12.749-0.6556 24.792-0.6922 10.452-0.7428 10.604-3.946 11.931-4.4537 1.8448-9.2882 8.8882-10.179 14.83-2.5808 17.211 14.744 29.061 28.844 19.729h-2e-4zm-14.553-7.5898c-9.6404-5.5288-3.3305-19.441 4.2256-19.441 4.3447 0 8.3814 4.2228 9.0905 9.5096 0.5457 4.0682 0.2374 4.9675-2.7151 7.92-3.4851 3.485-6.9009 4.1331-10.601 2.011zm0.6666-74.505c-5.953-3.2994-7.3196-11.541-2.804-16.908 11.466-13.626 24.583 9.9895 11.447 16.782-3.8525 1.9923-5.2384 2.0124-8.6427 0.1256zm-461.18 77.856c11.125-6.2523 11.326-22.872 0.368-30.38-9.4871-6.5007-25.728-2.5239-29.786 7.2936l-1.2513 3.0269c-25.838-0.6658-26.19-1.0324-26.19 1.5747 0 2.6726-0.2602 2.6299 13.922 2.2896 11.945-0.2866 11.414-0.5243 12.785 5.7239 0.9107 4.151 7.7727 11.494 11.938 12.776 4.9855 1.5337 13.245 0.4888 18.214-2.3042zm-20.663-6.5063c-7.1963-6.7044-4.6901-17.864 4.5258-20.152 9.7474-2.4195 15.894 10.764 8.8961 19.08-3.5146 4.1768-9.5699 4.6602-13.422 1.0715zm80.956 1.1496c8.8547-2.4592 13.965-9.6716 13.965-19.709 0-11.228-7.3956-18.486-18.835-18.486-10.713 0-17.388 6.5876-18.107 17.87-0.645 10.13 3.458 16.638 12.527 19.872 5.1593 1.8394 5.4173 1.8506 10.45 0.453zm-11.439-7.6881c-4.8188-2.8067-6.6658-12.464-3.5398-18.509 2.0745-4.0115 4.7163-5.4414 10.054-5.4414 12.158 0 16.806 15.94 6.921 23.73-2.0514 1.6166-10.792 1.76-13.435 0.2204zm-119.17 5.478c10.606-4.0183 12.813-16.913 4.2423-24.785-3.037-2.7898-4.8181-3.5511-8.3069-3.5511-11.643 0-18.276 10.332-13.686 21.318 2.7839 6.6627 10.567 9.74 17.75 7.0183zm271.32-17.827c0-13.19-0.0863-13.697-2.698-15.751-4.5934-3.6133-28.066-3.4636-89.047-4.0339-7.024 7.0227-5.9572 2.8626-6.8099 33.011 9.3259 6.6407-0.8747 5.4226 93.191 5.7661 5.4484-5.4481 5.364-3.703 5.364-18.992zm-85.227 11.472-3.8242-0.6748c-0.43-15.462-0.8642-22.383 0.7812-22.492 0.1118-0.0074 77.198-0.295 79.247 1.4051 1.8375 1.5251 1.8907 19.587 0.0634 21.415-1.6944 1.6945-25.956 1.3112-48.951 1.3112 0-2.1632 0.3418-7.989-1.1566-7.0627-1.4218 0.8786-0.193 5.1023 0.1666 6.7397-5.3939 8e-3 -21.584 0.1954-26.326-0.6413l-3e-4 1e-4zm60.096-13.787c0-7.9917-2.127-8.0052-2.031 0 0.0951 7.9885 2.031 7.999 2.031 0zm-3466.1-13.658c0.3965-37.089-0.5562-63.169-1.1323-82.966-13.851-0.2394-48.057-0.6292-61.922-1.9828-18.046-1.7618-6.7246 1.0535-41.091 1.2411l-21.853 0.1193v114.73c122.73 1.2843 114.36 1.1512 125.65 1.0927l0.3437-32.233zm2197 29.633c4.9658-2.2556 9.8861-7.5573 12.25-13.199 2.5265-6.0299 1.444-17.285-2.1906-22.777-11.272-17.033-40.106-13.372-43.096 11.874-2.0615 17.407 17.062 31.359 33.036 24.102h-2e-4zm-13.403-2.2517c-5.3768-1.3283-12.982-6.6867-11.539-8.1298 0.3721-0.372 0.0743-0.6764-0.663-0.6764-0.7365 0-1.067-0.4405-0.7341-0.9789 0.3326-0.5384-0.127-2.3823-1.0214-4.0974-3.3925-6.5043-0.6885-14.886 6.7965-21.068 10.64-8.7883 24.554-5.45 29.322 7.0349 5.9418 15.558-6.868 31.694-22.161 27.916h-2e-4zm10.841-12.617c4.905-3.3329 5.7009-5.5747 3.9062-11-1.8873-5.7048-7.0999-8.8344-11.917-7.1552-5.6167 1.958-8.0535 5.4538-8.0062 11.486 0.0327 4.1724 0.5721 5.706 2.5792 7.3314 3.4935 2.8289 8.6753 2.5733 13.438-0.6627l3e-4 1e-4zm-2575.8 12.525c3.8462-2.345 7.8101-9.5407 7.8101-14.178 0-5.0623-3.7852-11.515-7.9004-13.468-14.302-6.7868-28.356 7.9961-21.045 22.136 3.7607 7.2728 13.906 9.9176 21.135 5.5101h4e-4zm-13.693-5.1878c-10.802-8.394 1.8374-25.337 12.475-16.187 2.5454 2.1897 3.0659 3.5032 3.0659 7.7431s-0.5205 5.5535-3.0659 7.7432c-3.6362 3.1279-8.9668 3.4272-12.475 0.7006zm113.01 4.166c10.892-6.6406 9.125-27.612-6.6328-29.208-15.607-1.5804-23.497 19.565-10.827 29.016 4.0566 3.0255 12.658 3.1202 17.46 0.1923zm-14.865-5.2343c-3.269-2.6928-4.5327-7.8921-2.875-11.833 1.7749-4.221 3.9463-5.896 8.6304-6.6561 8.667-1.4065 14.285 11.281 7.8467 17.72-3.2779 3.2777-10.089 3.6632-13.602 0.7698zm3805.6-1.3658c0-1.4432-13.112-1.4475-13.112 0 0 1.4432 13.112 1.4475 13.112 0zm-225.2-16.793c0.7724-0.9307 1.1979-5.8814 1.1266-13.109-0.1071-10.884-1.0107-14.251-3.2239-12.016-1.16 1.1718-2.6981 22.534-1.7924 24.894 0.8143 2.1221 2.2492 2.207 3.8898 0.2303h-1e-4zm-1019.4-6.4631c13.2-6.7929 17.777-23.131 10.318-36.834-9.2715-17.035-34.952-17.243-44.874-0.3641-2.7076 4.6065-3.1006 6.3825-3.1006 14.016 0 7.4934 0.4138 9.4431 2.8981 13.658 7.1253 12.089 21.905 16.138 34.758 9.5238zm-20.445-5.2013c-20.91-10.649-11.678-38.195 8.0778-38.195 11.672 0 20.056 8.1656 20.056 19.534 0 15.163-15.201 25.246-28.134 18.66h-4e-4zm16.867-1.7616c7.4816-3.5502 11.86-14.356 9.1481-22.575-1.6564-5.0182-8.6971-11.348-13.659-12.278-6.6001-1.2382-11.592 0.3733-16.567 5.3477-16.715 16.715 3.3237 37.931 21.078 29.506zm787.55 3.1867c4.9879-5.3794 1.0505-13.192 4.1517-31.954-10.99 0.185-20.434 0.3439-31.424 0.5289-0.3829 17.49-0.2305 10.531-0.6123 27.965 6.4637 6.4637 5.2314 6.4539 15.781 6.4539 8.7631 0 9.4952-0.1812 12.103-2.9936zm39.081-31.971c-24.276 0-28.637-0.2299-29.382 1.7124-0.3613 0.9418-0.1006 2.2694 0.5806 2.9502 1.6777 1.6777 1.2378 22.955 1.2378 29.21 33.665 1e-4 23.511 2.2501 27.564-33.872zm44.929 32.279c0.7832-2.0412 0.8953-27.984 0.9473-32.825-9.6349-0.2139-17.914-0.3977-27.548-0.6116 0 33.276 0.4574 34.03 0.7285 34.302 0.4006 0.4006 6.2484 0.7284 12.995 0.7284 9.7391-1e-4 12.392-0.3283 12.878-1.5933zm37.919-33.918c-2.2802 0.0698-24.447 0.4447-25.308 1.8376-0.8782 1.421-1.0694 31.609-1.0974 33.744 9.025-0.2157 16.78-0.401 25.805-0.6167 0.3712-21.602 0.4752-27.664 0.6006-34.965zm-3552.6 28.246c9.8398-4.6693 11.52-18.659 3.1631-26.333-3.1831-2.9229-4.749-3.5511-8.8545-3.5511-9.7856 0-15.806 6.1308-15.806 16.098 0 6.1003 2.3433 10.013 8.0977 13.522 4.1616 2.5378 8.4297 2.6218 13.399 0.2638h5e-4zm-15.5-9.8535c-1.4443-3.0438-1.5396-4.4153-0.5205-7.5038 3.0503-9.2415 14.783-9.6318 18.518-0.6159 4.668 11.269-12.02 20.717-17.998 8.1197zm112.19 10.53c4.6699-1.297 10.222-7.127 11.252-11.814 1.1284-5.1382-1.1704-11.587-5.479-15.37-3.2158-2.8235-4.7539-3.3777-9.377-3.3777-3.29 0-6.8574 0.7747-8.8071 1.9121-3.8838 2.2659-7.4399 8.6689-7.4399 13.396 0 6.2655 5.4292 13.4 11.603 15.249 4.2139 1.2616 3.7246 1.2613 8.248 0.0055l5e-4 -5e-4zm-11.56-8.7924c-3.7861-4.5-3.7666-9.6067 0.0513-13.425 6.3599-6.3597 16.787-2.0406 16.787 6.9532 0 9.3144-10.916 13.51-16.839 6.4721h5e-4zm3500.3-89.24c0.1331-147.77 0.5443 14.986 1.4127-328.61h-11.876c-2.6527 248 0.0034 149.71-3.0859 421.22h13.466l0.0842-92.602h-9e-4zm19.596-97.764-4.0833 0.7661c-11.357 2.1306-6.749-14.696-9.3993 189.72 4.52-0.233 8.4041-0.4331 12.924-0.6661 0.031-10.547 0.5274-179.27 0.5585-189.82zm67.583 179.37c5.8622-3.3335 8.1735-7.0963 8.6493-14.081 1.4408-21.147-25.095-27.64-35.488-11.936l-2.8047 4.2382h-31.396v5.4633h30.335l1.1718 4.6536c1.1353 4.5088 5.6968 9.9737 10.56 12.652 3.7994 2.0921 14.538 1.532 18.972-0.9896zm-18.699-6.5414c-1.0517-0.628-2.6932-2.6521-3.6478-4.4981-3.8174-7.3822 1.9403-16.203 10.577-16.203 3.6819 0 4.6152 0.5125 6.468 3.5511 2.8534 4.6801 2.7437 9.4809-0.3208 14.043-2.0524 3.0551-3.262 3.7602-6.829 3.9807-2.3844 0.1473-5.1955-0.2459-6.2472-0.8738zm84.03 0.452c12.732-6.0418 13.746-25.849 1.7208-33.617-8.4741-5.4742-17.207-4.4606-23.724 2.7535-14.993 16.596 2.9877 39.888 22.004 30.864h-1e-4zm-17.11-7.8767c-8.4551-8.455-3.2623-22.017 8.4301-22.017 3.8791 0 5.4787 0.6252 7.9672 3.1136 5.4109 5.4109 5.6612 14.266 0.5478 19.38-2.1017 2.1017-3.7745 2.6375-8.2345 2.6375-4.6964 0-6.098-0.501-8.7106-3.1136zm144.77 9.0524c2.0684-0.388 5.0057-1.8595 6.5278-3.27 2.676-2.48 2.7671-3.0133 2.7671-16.186 0-7.4915-0.3054-14.417-0.6788-15.39-2.0455-5.3305-5.2256-4.7151-92.384-5.5122-4.4916 5.2206-4.8344 3.9945-5.6717 19.658-1.0875 20.34-2.5071 19.502 34.269 20.224 34.969 0.6856 50.287 1.3919 55.171 0.4756h-1e-4zm-80.207-8.0653c-1.6973-1.0489-0.8628-16.179-0.6414-24.644 70.04 0 80.246-0.2292 81.426 1.639 1.6662 2.637 1.3365 21.364-0.4016 22.806-1.6562 1.3745-78.174 1.5636-80.383 0.1986zm-3025.8-0.2758c4.3042-1.3073 10.622-6.5916 12.671-10.599 3.8979-7.6205 2.9106-18.124-2.3579-25.086-2.7297-3.6073-12.12-8.8652-15.871-8.8861-1.7048-0.0099-1.9121-1.3173-1.9121-12.068 0-19.67 0.3459-17.444 22.946-17.444 0-61.918-0.1985-59.053-1.3896-67.744-48.414 0-47.635-0.4631-48.286 2.4584-0.717 3.2197 0.9463 60.612 1.0522 64.74 20.961 0.866 19.058-1.9545 19.121 29.741-9.9023 5.8982-17.482 9.208-17.482 23.625 0 17.542 13.582 26.707 31.507 21.263l4e-4 1e-4zm-16.21-6.1095c-5.9431-3.2486-8.7419-8.1865-8.7371-15.415 0.0107-13.828 11.159-21.16 23.592-15.514 11.618 5.2763 12.984 22.056 2.4355 29.918-4.215 3.1416-12.505 3.6261-17.29 1.0105zm1.2832-97.819c-6.6079-7.0339 2.4058-16.732 10.368-11.155 4.1421 2.9014 4.104 10.061-0.0688 12.847-2.5533 1.7048-7.9396 0.8196-10.299-1.6926zm10.666-3.1329c1.4939-2.6739 1.458-3.1277-0.4084-5.1901-1.125-1.243-3.0752-2.2288-4.3342-2.1907-2.2568 0.0683-2.2556 0.0828 0.0984 1.031 5.5557 2.2383 4.9719 9.3994-0.6975 8.5642-3.7605-0.554-5.323-3.5967-3.418-6.6559 1.4036-2.2542 1.3799-2.3355-0.2812-0.9626-2.1421 1.7703-2.376 5.6967-0.4541 7.6186 2.3062 2.306 7.6692 1.0553 9.4956-2.2145h-6e-4zm68.669 106.68c4.6689-1.9474 10.646-7.3403 12.897-11.636 0.8608-1.6431 1.5459-6.0269 1.5459-9.8931 0-5.7719-0.5303-7.7789-3.1455-11.902-3.5444-5.5888-9.1008-9.4921-14.838-10.423l-3.8691-0.6278c0-32.518-2.2515-29.216 20.48-29.216 2.0974-44.848 0.5732-9.5046 0.2795-67.787l-47.53 0.589c-0.6375 14.411-0.8267 12.983 0.7908 67.198 17.856 0 18.33-1.8318 18.33 17.652 0 11.847-0.1624 12.847-2.1912 13.49-6.2087 1.9706-12.191 10.235-13.474 18.615-2.5315 16.528 15.26 30.391 30.725 23.941h6e-4zm-23.8-21.305c0-16.754 20.079-23.555 29.206-9.8917 3.6946 5.5299 3.509 15.111-0.3813 19.735-11.259 13.381-28.825 5.1623-28.825-9.843zm7.0524-81.299c-5.198-5.1981-2.0034-12.615 5.4336-12.615 4.0923 0 8.2742 3.9654 8.2742 7.8456 0 3.01-4.8845 7.4515-8.1948 7.4515-1.5571 0-4.0381-1.2069-5.513-2.682zm9.3372-1.6886c2.5488-2.5488 2.7361-4.2923 0.7529-7.0047-1.2634-1.7278-1.3799-1.5057-0.9844 1.8801 0.3562 3.0528-0.022 4.0907-1.8455 5.0667-2.5264 1.352-6.6643-0.1059-6.6643-2.3479 0-0.68-0.3247-0.9115-0.7217-0.5146-1.1155 1.1154 2.9968 5.1057 5.2617 5.1057 1.1088 0 2.9996-0.9833 4.2013-2.1853zm2614.4 85.841c-3.7825 0.086-22.597 0.4023-27.043 0.4781v15.379c10.509-0.2197 19.539-0.4085 30.048-0.6282 0-15.634 0.5149-15.309-3.0048-15.229zm37.97-0.0683c-7.7592 0.2241-27.295 0.7585-27.423 0.9408-0.0923 0.1308 0.2218 4.9198 0.8844 14.533l27.182 0.4065c-0.2247-5.5541-0.4179-10.327-0.6428-15.881zm46.984 7.6486c-25.067 0-27.23-0.2948-27.667 1.976-1.1237 5.8348 0.5424 5.1263 28.352 5.1263-0.2395-2.4841-0.4453-4.6184-0.6848-7.1023zm36.604 0.5463h-25.131v6.5559h25.131v-6.5559zm337.63 2.7316c0-1.2747-1.4568-1.639-6.5559-1.639s-6.5559 0.3642-6.5559 1.639 1.4568 1.639 6.5559 1.639 6.5559-0.3642 6.5559-1.639zm-3888.9-4.9436c3.8447-2.3444 7.7935-9.5105 7.834-14.219 0.0132-1.5253-1.0825-4.9308-2.4346-7.5677-4.2607-8.3093-13.425-11.136-20.498-6.3219-8.0933 5.5079-10.386 12.605-6.7373 20.852 3.9111 8.8421 13.829 12.138 21.836 7.2565zm-13.601-4.8467c-3.7119-2.5997-5.1997-7.4323-3.6943-11.995 3.7144-11.255 19.094-8.9694 19.094 2.8374 0 7.9551-9.2578 13.46-15.4 9.1576zm113.5 4.1485c3.3667-1.6927 7.3862-8.6953 7.3862-12.868 0-4.5051-3.3105-11.413-6.5879-13.747-6.7651-4.817-14.924-3.6885-20.673 2.8594-2.7676 3.1519-3.3325 4.7249-3.3325 9.2751 0 13.743 11.011 20.613 23.208 14.48l-5e-4 -1e-4zm-15.02-6.1059c-1.8799-1.6174-3.061-3.962-3.4482-6.844-0.502-3.7451-0.1519-4.8194 2.4019-7.3737 3.9443-3.9441 10.022-4.0991 14.361-0.3663 3.9751 3.4188 4.1172 10.302 0.2979 14.368-3.3361 3.5514-9.6193 3.6512-13.613 0.2163zm3429.8 1.9139c0-2.0458-0.8315-2.2051-13.021-2.4947-13.165-0.3128-15.704 0.3102-14.462 3.5477 0.5728 1.4926 2.6172 1.7016 14.076 1.4393 12.575-0.2879 13.406-0.4424 13.406-2.4922zm37.696-2.7316h-26.224v5.4632h26.224v-5.4632zm-857.84-0.2732c0.6727-1.7783-0.1917-147.21-0.8865-149.15-0.1636-0.4562-65.821-0.693-86.964 1.0933 0.5248 134.7 0.4927 140.79 1.7729 150.51h85.147l0.9303-2.4585zm-71.826-11.305c-3.183-2.2294-2.8357-6.9887 0.6357-8.7094l2.4554-1.2172c-3.374-1.5372-5.457-1.9207-5.457-5.5692 0-4.1504 1.8248-5.7052 6.6964-5.7052 4.4219 0 7.5081 2.2457 7.5081 5.4632 0 2.2441-2.7146 5.4246-4.7217 5.5325-0.7083 0.0381-0.1964 0.5085 1.1379 1.0453 3.7021 1.4896 4.5016 6.4262 1.4421 8.9036-3.0421 2.4634-6.4182 2.5526-9.6968 0.2563l-1e-4 1e-4zm22.984-0.6592c-1.6058-1.6061-3.3884-8.5226 5.3854-8.5226 4.3522 0 7.5079 2.2374 7.5079 5.3228 0 6.1611-11.364 4.7287-12.893 3.1998zm23.351-0.4058c-2.0135-2.0135-2.1227-3.132-0.5858-6.0034 0.8467-1.5823 2.3021-2.1135 5.791-2.1135 5.1466 0 7.2823 1.4419 7.2823 4.9169 0 1.262-0.5901 2.8846-1.3112 3.6057-1.882 1.882-9.1525 1.618-11.176-0.4058l-2e-4 1e-4zm-21.385-9.9678c-2.0479-0.7318-4.3706-3.5922-4.3706-5.3821 0-4.1179 10.688-6.7733 13.986-3.4749 4.7248 4.7248-2.5157 11.394-9.6155 8.857zm21.853-1.427c-2.6302-2.6302-2.7703-4.7222-0.47-7.0225 2.4269-2.4268 6.0754-3.1186 9.5267-1.8063 2.4401 0.9277 2.9622 1.7983 2.9622 4.9391 0 2.6514-0.6437 4.1574-2.1135 4.944-3.3209 1.7773-7.5211 1.3302-9.9056-1.0542l2e-4 -1e-4zm-47.257-11.014c-1.2444-0.7249-1.9121-2.4485-1.9121-4.9364 0-3.2678 0.5154-4.0468 3.551-5.3662 2.7355-1.189 3.0254-1.5533 1.2621-1.5862-2.6484-0.0495-5.9058-3.2415-5.9058-5.7871 0-2.8945 3.2014-5.1821 7.2521-5.1821 5.6034 0 8.045 1.6858 8.045 5.5544 0 2.6693-0.672 3.5843-3.5511 4.8357-1.9532 0.8489-2.7257 1.5627-1.7169 1.5862 2.6561 0.062 5.2681 3.0706 5.2681 6.0684 0 4.7292-7.437 7.6413-12.292 4.8133zm24.617 0.1165c-2.8055-1.1877-4.4075-6.1223-2.8132-8.6661 1.5664-2.4994 10.446-2.9358 12.755-0.6268 1.8984 1.8985 2.2986 5.6487 0.8469 7.9368-1.1671 1.8393-7.7059 2.6611-10.789 1.356h-2e-4zm22.228-1.6897c-3.6429-3.6429-1.2-9.0812 4.2365-9.4298 7.1848-0.4607 10.348 2.7938 7.7697 7.9936-1.62 3.266-9.2621 4.1803-12.006 1.4362zm-23.383-12.059c-2.642-1.8505-3.2035-5.8282-1.1172-7.9144 0.7211-0.7212 3.573-1.3112 6.3374-1.3112 5.5551 0 7.6486 1.3844 7.6486 5.0574 0 5.3745-7.6219 7.8432-12.869 4.1682zm25.163 0.9022c-2.8956-0.525-4.2606-4.5782-2.592-7.6963 1.9268-3.6003 10.144-4.1779 12.407-0.8722 1.3112 1.9149 0.9452 7.2169-0.5295 7.6713-3.0478 0.939-6.9668 1.3176-9.2857 0.8972zm-48.046-12.335c-3.363-1.3532-4.3794-6.029-1.9049-8.7633 2.3915-2.6425 9.4319-2.8935 11.901-0.4243 5.5243 5.5244-1.9738 12.416-9.9963 9.1876zm21.348-2.7096c-1.6362-3.5912 0.2489-7.8882 3.6882-8.4066 2.4108-0.3633 2.3777-0.4505-0.7578-2.0043-4.2808-2.1213-5.005-6.6669-1.4584-9.1512 5.5963-3.9199 13.939-0.4467 12.519 5.2119-1.3651 5.4376-9.5662 4.9559-4.1698 5.8881 3.4508 0.5961 5.319 4.8827 3.6882 8.462-1.0881 2.3881-1.9377 2.7316-6.7546 2.7316s-5.6665-0.3436-6.7546-2.7316l-2e-4 1e-4zm24.862 1.0145c-2.0378-2.0378-2.2445-6.0596-0.4058-7.8983 1.3794-1.3793 8.2239-1.7765 11.165-0.648 2.578 0.9893 2.2953 7.6978-0.3851 9.1322-3.1246 1.6722-8.4146 1.3734-10.374-0.5859zm-47.39-11.613c-2.1353-2.1352-1.6204-8.2803 0.8024-9.5769 7.2145-3.8611 15.808 3.7364 10.374 9.1711-2.0239 2.0238-9.2942 2.2878-11.176 0.4059h-3e-4zm47.858-0.8742c-4.3519-4.3518-1.6107-9.8339 4.917-9.8339 4.5044 0 7.1022 2.4123 7.1022 6.5955-1e-4 5.3764-7.7839 7.4737-12.019 3.2384zm-48.583-13.068c-2.594-2.8663-1.4307-7.4256 2.2517-8.8257 3.0522-1.1605 8.1776-0.3055 9.4377 1.5745 1.254 1.8708 0.9742 6.6321-0.4751 8.0813-2.1132 2.1132-9.013 1.6025-11.214-0.8301zm23.671 0.83c-2.3136-2.3136-1.5559-7.2192 1.4158-9.1663 5.698-3.7336 14.055 0.9672 11.865 6.6741-1.3819 3.6012-10.467 5.3061-13.28 2.4922zm25.156-0.3897c-4.8646-3.4074-1.9999-10.318 4.2775-10.318 5.3181 0 7.4987 1.7666 7.4987 6.0751 0 3.0875-0.5332 4.0156-2.8029 4.8785-3.923 1.4915-6.163 1.3329-8.9733-0.6354zm-49.438-13.643c-1.7275-3.2277-0.4985-7.2065 2.4718-8.0024 7.4509-1.9965 11.041 0.084 10.467 6.0659-0.3398 3.5421-0.4735 3.6298-6.0162 3.9504-4.8623 0.2813-5.8472-0.0055-6.9219-2.0139h-4e-4zm24.282 0.9212c-2.0778-2.0776-1.593-7.2023 0.8025-8.4842 3.925-2.1007 9.6935-1.3779 11.544 1.4466 1.7054 2.6027 1.2528 5.9615-1.0126 7.5126-1.8857 1.2911-9.9036 0.9551-11.334-0.475zm24.444-0.4059c-1.9962-1.9961-2.1725-4.1316-0.5858-7.096 0.8467-1.5824 2.3021-2.1135 5.791-2.1135 2.5631 0 5.2499 0.59 5.9712 1.3112 2.0778 2.0776 1.5931 7.2023-0.8024 8.4842-3.1246 1.6722-8.4146 1.3734-10.374-0.5859zm-47.549-11.87c-2.2074-2.6599-0.9657-8.5816 2.1261-10.137 2.6372-1.3271 2.6478-1.3752 0.3115-1.3907-4.6976-0.0312-6.3232-7.484-2.2538-10.334 8.5272-5.9727 16.081 6.2224 8.5371 9.9641-2.542 1.2607-2.5724 1.3801-0.5464 2.1309 1.1804 0.4374 2.5076 1.3229 2.9493 1.9677 1.2551 1.833 0.9736 6.6075-0.4751 8.0561-1.8195 1.8197-9.0706 1.6451-10.649-0.2565zm23.105 0.2564c-0.7211-0.7212-1.3112-2.8354-1.3112-4.6984 0-4.4691 1.7365-6.0096 6.7744-6.0096 4.36 0 8.5227 2.9353 8.5227 6.0096 0 0.9015-0.9833 2.6223-2.1853 3.8243-2.4736 2.4736-9.6681 3.0065-11.801 0.8741zm24.639 0.131c-2.2252-1.2962-2.6174-7.5114-0.601-9.5278 0.7211-0.7212 3.327-1.3112 5.7911-1.3112 5.2385 0 7.1022 1.4747 7.1022 5.6198 0 5.1307-7.1975 8.1867-12.292 5.2192zm-25.498-13.421c-2.3021-5.9993 2.5967-11.278 8.9017-9.593 3.7758 1.0093 6.0184 5.7016 4.1495 8.6813-1.5769 2.5137-12.153 3.2525-13.051 0.9117h-2e-4zm25.42-0.1103c-3.9644-3.9642-0.7107-10.42 5.2513-10.42 5.7799 0 9.0441 5.1046 6.1665 9.6436-1.5165 2.3921-9.2745 2.9195-11.418 0.7762zm998.34 119.33c0.3624-1.3521 0.6656-8.0054 0.6737-14.785 0.012-10.112-0.288-12.443-1.6711-12.974-0.9274-0.3559-1.9958-0.3374-2.3742 0.041-0.3785 0.3784-0.913 7.3228-1.1881 15.432-0.4821 14.215-0.421 14.744 1.7003 14.744 1.3582 0 2.4526-0.9409 2.8593-2.4585h1e-4zm-3670-28.022c6.561-2.9799 9.2026-6.8987 9.1973-13.646-0.0107-9.9126-6.7666-17.05-16.155-17.058-3.9321-0.0033-5.4136 0.6743-9.2061 4.2127-4.1455 3.867-4.5601 4.7589-4.9937 10.753-0.4453 6.1576-0.2612 6.7773 3.1768 10.693 3.5483 4.0417 8.5557 7.0116 11.885 7.0497 0.9019 0.0099 3.6446-0.892 6.0957-2.0052zm-11.173-5.496c-4.3818-2.6721-9.0386-10.992-0.7407-17.518 6.2432-4.911 15.652 0.068 15.652 8.2828 0 5.2411-1.686 7.9651-6.0625 9.7936-4.6821 1.9564-4.7295 1.9534-8.8491-0.5583zm111.7 4.7201c5.7227-2.7154 8.4683-8.0443 7.8691-15.271-0.3872-4.6611-1.1724-6.6748-3.5884-9.1964-10.62-11.085-28.265-3.0876-26.489 12.666 0.583 5.1673 4.5249 10.643 9.0059 12.509 3.5504 1.4782 9.2403 1.1735 13.203-0.7069zm-13.833-6.9018c-5.4155-5.4152-4.0161-13.144 2.9033-16.035 3.2383-1.3531 4.2344-1.3531 7.4727 0 4.4346 1.853 6.0977 4.5577 6.0977 9.9189 0 8.7903-10.064 12.526-16.474 6.1157zm3587.2 2.9207c7.9096-4.0416 11.097-10.798 9.389-19.903-0.8995-4.795-6.4329-11.309-11.352-13.365-3.1867-1.3315-3.4707-1.7548-2.2024-3.2825 1.6992-2.0469 1.7515-23.664 2.5488-82.822 4.7562-7.5995 11.95-19.195 19.335-30.279 5.8002-8.7053 8.0284-15.066 5.2778-15.066-2.6901 0-26.949 39.401-29.573 43.591-0.4468 76.725-0.2774 86.421-2.1422 86.435-4.4791 0.0327-10.74 2.835-14.305 6.4025l-3.9743 3.9774-33.075-0.6558v5.5728h31.687v3.2068c1e-4 14.007 15.432 22.807 28.387 16.188zm-17.059-7.1265c-5.7183-4.6321-6.4037-11.897-1.5776-16.723 5.5126-5.5127 13.112-4.0606 15.425 2.9474 3.4153 10.348-6.2308 19.945-13.847 13.775zm83.129 3.5294c10.648-5.0529 13.352-20.496 5.2697-30.101-11.189-13.298-33.075-4.7365-33.075 12.938 0 8.4746 3.686 14.236 11.473 17.933 5.0151 2.3808 10.208 2.1359 16.332-0.7703zm-12.947-5.4469c-2.2521-0.7742-4.2211-1.576-4.3757-1.7816-2.9139-3.8779-3.9269-6.602-3.9269-10.56 0-3.9827 0.6215-5.4047 3.715-8.4981 8.1785-8.1785 20.323-1.979 20.323 10.374 1e-4 8.2044-7.6034 13.261-15.736 10.466zm150.13-14.276c0-14.216 0.2486-12.384-6.0741-18.706l-43.283-0.8054c-54.31-1.0105-51.167-2.2496-51.167 20.17 0 10.985 0.1998 12.12 2.6337 14.953 2.6285 3.0599 2.6665 3.067 19.941 3.7039 20.226 0.7458 52.364 0.2619 71.932 0.0519 6.2162-6.957 6.017-5.2009 6.017-19.366zm-91.236-11.918c46.822-0.338 79.179-0.8453 81.037 0.6965 1.793 1.488 1.3454 7.8753 0.9116 23.342l-81.462 0.5322c-1.5856-4.2122-1.9523-3.3559-0.4869-24.57zm64.474 10.623c-0.5599-5.3169-0.3614-8.4482-1.315-7.4947-0.8632 0.8632-1.4106 10.635-0.6674 11.914 1.1646 2.0045 2.3748-0.6933 1.9824-4.4189zm-3141.1-58.153c-24.051 0-24.834 0.153-45.651 1.4267 0.1843 20.238 0.3948 43.348 0.5789 63.586 11.47 1.1123 10.633 1.2442 46.438 1.639 0-55.803 0.0911-59.367-1.366-66.652zm-27.589 41.326c-1.2019-0.6713-2.2683-1.272-2.3696-1.3348-0.1016-0.0628-0.5425-1.5417-0.9805-3.2863-0.7107-2.8312-0.5542-3.1088 1.4558-2.5832 1.6062 0.42 2.4109-0.0173 2.8047-1.5246 0.4116-1.5735 1.343-2.0296 3.6455-1.7852 3.9368 0.4179 4.7976 1.6513 3.512 5.0324-1.3867 3.6479-0.5911 4.1419 1.2202 0.7575 1.8191-3.399 3.6731-3.5847 2.7095-0.2715-1.5496 5.3289-7.1936 7.679-11.998 4.9957h2e-4zm217.48 23.96c0.6885-1.802-1.0664-63.092-1.1367-65.832-35.451-0.5029-41.574-0.8174-43.132 1.0595-1.5779 1.9016-0.968 17.769 0.2412 66.138 27.883-1e-4 43.398 0.2804 44.028-1.3659zm-27.827-29.922c-2.6646-3.3872-2.894-5.6892-0.6538-6.549 2.1375-0.8202 5.1125 2.2563 4.28 4.4259-0.5286 1.378 0.0559 1.6584 2.9646 1.4224 2.7996-0.227 3.7944-0.9091 4.377-3.0009 0.7144-2.5641 0.7598-2.531 0.863 0.6255 0.1387 4.243-1.5977 5.955-6.0398 5.955-2.5083 0-4.1804-0.8312-5.791-2.8789zm-868.94 9.4082c3.6528-2.2272 7.8101-9.4828 7.8101-13.631 0-1.2019-0.9146-4.199-2.0322-6.6602-5.2295-11.515-20.613-12.227-27.492-1.2715-3.3257 5.2957-2.4829 13.921 1.8018 18.45 1.7524 1.852 4.1694 3.7767 5.3711 4.2772 3.9813 1.6575 10.81 1.1111 14.541-1.1637zm-12.356-3.4269c-9.2373-5.0798-7.3711-18.567 2.792-20.184 3.1313-0.498 4.5366-0.0694 7.2456 2.2102 1.8486 1.5554 3.6206 4.1855 3.9375 5.8446 0.8223 4.301-1.7783 9.6885-5.6406 11.686-3.8696 2.0009-5.3584 2.0801-8.335 0.4433h5e-4zm113.08 1.6968c5.8491-5.2841 7.4365-10.955 4.915-17.558-4.8813-12.781-21.594-13.702-27.803-1.5323-2.8394 5.5656-2.8257 10.201 0.0459 15.309 3.0156 5.366 6.9761 7.6584 13.292 7.6938 4.4438 0.0249 5.812-0.536 9.5503-3.9129h-5e-4zm-16.46-4.7151c-3.3809-3.381-4.0107-6.9304-2.0083-11.325 1.377-3.0224 6.3384-6.2416 9.6191-6.2416 3.3081 0 8.7607 5.4491 9.5439 9.5379 0.5801 3.0284 0.1309 4.0735-3.1714 7.3754-4.9769 4.977-9.4506 5.186-13.983 0.6532zm2770-15.217c-13.595 0.1336-25.277 0.2484-38.872 0.382-0.3879 11.762-0.2448 7.4196-0.6321 19.172 13.596-0.2088 25.279-0.3883 38.875-0.5971 0.22-6.63 0.409-12.327 0.629-18.957zm65.442 1.5464c-1.5298-1.5336-31.214-1.7244-38.208-1.8547v18.771c13.184-0.2091 24.512-0.3888 37.696-0.598 0.5238-4.7426 2.0307-14.795 0.5119-16.318zm65.594-3.8961h-38.243c0 7.4974-0.1123 18.098 0.7285 18.939 0.2908 0.2908 1.7131 0.7284 37.514 0.7284v-19.668zm-2358.1-4.0849c7.4019-5.5262 9.5642-13.473 5.7805-21.244-1.2637-2.5953-3.781-5.7022-5.594-6.9041-3.8379-2.5445-3.2993-1.6634-3.2993-23.227 2.9246-1.2113 6.1174-2.2088 9.8389-6.4474 4.071-4.6367 4.5103-11.989 1.0547-17.657-4.342-7.1218-15.574-9.6669-22.534-5.1063-8.5215 5.5836-9.083 19.055-1.0574 25.368 2.708 2.13 2.8633 2.7805 2.8474 11.929-0.011 5.3221-0.4175 10.308-0.9075 11.08-0.49 0.7721-2.5564 2.2971-4.5918 3.3888-13.248 7.1051-10.592 26.013 4.3291 30.821 4.1306 1.331 10.97 0.3624 14.137-2.0021h-0.0034zm-14.615-3.9962c-8.0142-3.4918-9.0435-18.543 4.0034-20.013 4.3865-0.4944 5.4307-0.1763 8.541 2.6031 5.9631 5.328 4.5435 14.347-2.7371 17.389-4.4778 1.8708-5.5569 1.8731-9.8076 0.0212h3e-4zm2.1622-55.789c-3.6421-3.6421-3.6841-10.235-0.0918-14.412 3.6294-4.2194 9.7656-4.2194 13.395 0 7.9573 9.2512-4.7246 22.99-13.303 14.412h-3e-4zm3118.6 50.203c4.6799-3.0664 7.1273-8.1482 6.4626-13.42-0.3251-2.5783-1.1208-5.6777-1.7682-6.8875-1.9016-3.5531-7.6911-6.4448-12.912-6.4493-4.0895-0.0033-5.3795 0.603-9.0144 4.238-3.7507 3.7507-4.2421 4.8503-4.2421 9.4931 0 12.188 11.815 19.355 21.474 13.025v-1e-4zm-3734.3-2.5641c4.3696-2.3436 8.751-9.7657 8.751-14.825 0-7.6928-8.1494-15.868-15.86-15.91-4.585-0.0251-10.434 3.3376-13.465 7.7416-2.0723 3.011-2.4712 4.7655-2.1099 9.2766 0.9971 12.437 12.312 19.279 22.685 13.716h-5e-4zm-12.282-4.6162c-2.5449-1.4824-5.1904-6.7558-5.1904-10.348 0-3.9093 6.4346-10.325 10.356-10.325 1.7759 0 4.1792 1.2546 6.1187 3.1939 4.4805 4.4805 4.5381 11.499 0.1294 15.723-3.2169 3.0818-7.8996 3.8022-11.413 1.7558zm112.75 3.5585c5.1724-3.8191 7.1699-7.6475 7.1699-13.743 0-14.672-16.06-19.613-24.934-12.633-3.7471 2.9476-6.6597 10.857-5.7617 15.645 2.022 10.777 15.275 16.823 23.526 10.731zm-14.479-6.1095c-3.5942-3.3311-4.6479-7.4312-2.9585-11.51 1.5723-3.796 7.5498-6.9578 11.35-6.0039 7.5552 1.8962 10.11 12.142 4.3569 17.474-3.8017 3.5229-8.9736 3.5395-12.748 0.0409zm737.69-7.9627c4.2986-3.1838 7.8403-8.924 7.8403-12.707 0-13.532-16.936-22.33-26.619-13.828-4.7837 4.2002-7.6099 11.066-6.7041 16.287 0.8015 4.6192 3.1965 7.7915 8.2974 10.99 4.5864 2.876 12.777 2.5222 17.185-0.7424h2e-4zm-18.379-16.182c3.636-11.017 18.571-8.8094 18.571 2.7454 0 15.035-23.416 11.935-18.571-2.7454zm-890.88 5.6558c1-1.0046 0.7705-108.45-0.2349-110.07-0.3652-0.5916-19.986-1.0091-47.426-1.0091-41.67 0-46.875 0.1896-47.465 1.7283-0.8774 2.2851-0.6636 106.76-0.6636 110.91 2.8502-0.0192 94.588-0.3433 95.79-1.5515zm3689.9-5.4346c0.7856-0.7857 1.7918-71.486 1.0589-74.406-0.7158-2.8515-1.0396-3.007-4.7958-2.3023-9.6564 1.8116-7.8928-4.9949-7.8928 80.005 0.8646-0.2243 11.139-2.8065 11.63-3.2968zm-749.17-12.817v-9.8776l-34.168 0.2909c-21.078-20.403-23.579-22.88-46.72-45.548l-189.29 0.7747c-10.979-10.96-20.417-20.381-31.397-31.341 0-68.893 0.4019-69.412-2.1853-69.412-2.5719 0-2.1853 0.1621-2.1853 71.544 10.882 10.898 23.326 23.361 34.209 34.259l189.24-1.1357 22.132 21.516c29.902 29.07 27.472 30.2-0.324 2.8163l-21.141-20.827-194.07 0.059c-25.379-26.109-8.1348-8.3687-33.514-34.478-1.1726-71.383-0.8733-73.754-3.2435-73.754-2.3892 0-2.0319 2.2206-2.0319 75.798 13.181 13.295 24.516 24.728 37.696 38.023 10.753-0.0406 183.15-0.6909 193.92-0.7316 47.085 47.039 42.634 40.741 42.634 51.901h40.428v-9.8776h4e-4zm48.077 8.2386c17.204-1.1786 16.896-1.063 17.209-6.4642 0.1984-3.4289-0.3517-5.5087-2.0167-7.6255-2.9257-3.7193-2.8192-3.8862 13.373-20.96 37.549-39.595 61.751-65.385 63.068-67.207 1.8718-2.59 0.8845-5.369-1.9078-5.369-4.1232 0-58.242 60.234-86.947 89.597h-22.445c0 19.644-0.7861 19.949 6.5559 19.105 2.1034-0.2419 8.0037-0.726 13.112-1.076h-3e-4zm84.134-19.121c-3.1964 0-34.282-0.1933-36.514 0.6632-2.0533 0.7879-1.7284 5.2589-1.7284 19.004h38.243v-19.668zm-2991.1 14.096c11.174-3.038 15.431-15.207 8.8394-25.266-3.5059-5.3507-12.915-7.9417-18.472-5.0867-15.394 7.9086-12.273 28.722 4.7158 31.453 0.3003 0.0483 2.5132-0.447 4.917-1.1006zm-13.296-18.74c2.0581-4.9229 4.6729-6.7794 9.5479-6.7794 7.6147 0 12.216 7.1317 9.2231 14.294-5.1054 12.22-23.819 4.5625-18.771-7.5149zm117.84 16.315c2.9385-1.7957 6.0366-7.0976 6.9146-11.833 0.5352-2.8866 0.1284-5.3642-1.4731-8.9852-2.8188-6.372-7.5972-9.4189-14.781-9.4244-4.7041-0.0033-5.7983 0.4757-9.4697 4.1473-15.43 15.43 5.1309 34.454 18.809 26.095l3e-4 1e-4zm-15.578-7.2166c-6.0776-6.0771-2.9307-15.808 5.5474-17.156 7.228-1.1493 13.234 6.2527 10.876 13.401-2.4717 7.4898-10.787 9.3905-16.423 3.7543zm3874.9-14.071c36.114-17.779 32.72-68.46-4.7307-81.111-10.162-3.4328-25.299-2.7892-33.95 1.4435-42.418 20.753-29.025 85.419 22.737 83.466 7.3823-0.2786 10.116-0.93 15.944-3.799zm-29.941-7.204c-6.7634-2.4159-13.674-6.9943-17.059-11.301-6.1644-7.8438-7.3256-11.1-7.3123-20.502 0.0164-11.08 2.9346-18.101 10.445-25.126 10.128-9.4735 21.061-12.133 33.876-8.2409 6.8682 2.0861 8.8091 3.2984 14.642 9.1447 5.8725 5.8858 6.976 7.6721 8.7081 14.098 2.3412 8.6843 1.7615 18.268-1.4904 24.642-3.192 6.2568-11.911 13.787-19.063 16.462-7.1327 2.6687-16.618 3.0117-22.746 0.8225h-1e-4zm14.053-5.9041c1.7763-1.129 1.8488-16.132 1.9603-19.343l18.029-0.6347v-13.023c-9.0907 0-9.5196-0.1485-18.494-1.3786l-0.6271-18.835c-3.0522-0.2498-8.0996-0.8072-11.096-0.0552-2.9251 0.7342-2.5626 0.9088-2.5626 19.177h-18.575v14.204h18.575v19.522c2.9535 0.4475 10.458 1.8492 12.79 0.3668zm-148.72-78.312c2.0328-1.5066 2.0306-1.5723-0.1096-3.1815-2.991-2.249 0.0886-4.4783-74.432 69.369-1.8667 0.0363-21.857 0.1965-22.881 1.2226-0.4349 0.4362-0.169 1.5425 0.5911 2.4585 1.6383 1.9739 7.9274 1.6654 24.218 1.6654 2.7284-2.7074 69.873-69.504 72.613-71.534zm-86.915 63.853c6.4052-3.4279 9.3545-21.438-4.1485-26.142-4.1035-1.4296-4.9535-1.4035-8.4399 0.259-9.9219 4.7314-11.115 20.317-1.936 25.298 3.4802 1.8885 11.487 2.2112 14.524 0.5855zm-103.79-19.134c1.3806-0.8533 1.0197-74.518 1.0197-82.564l-11.473 0.6605c-1.9137 49.816-1.6787 83.184-1.0581 83.804 0.6366 0.6365 9.8738-0.8888 11.511-1.9008zm101.65-16.398c1.7996-0.9306 4.2319-3.2661 5.405-5.1901 1.9452-3.1902 2.1332-5.6232 2.137-27.648 0-23.354-0.0787-24.272-2.4952-27.863-4.9066-7.2889-12.312-7.8572-18.374-1.41-2.5849 2.7491-2.6237 3.1176-2.97 28.104-0.312 22.529-0.1381 25.718 1.5795 28.946 3.3014 6.2063 8.827 8.106 14.717 5.06h-1e-4zm-3842.5-54.579c0.2231 15.378 0.4146 28.588 0.6377 43.966 4.188 0.0965 7.7866 0.1795 11.975 0.2761 0.1538-5.9196 0.2856-11.006 0.4395-16.926 0.2607 5.9232 0.4844 11.013 0.7446 16.936h6.4644v-51.392c-11.96 0.2458-15.277 0.0313-15.424 2.0883-0.106 1.4898-0.2061 1.4676-0.626-0.1383-0.5801-2.2197-3.3086-1.9121-11.266-1.9121v51.354h6.5562c0.3071-27.174 0.1913-16.925 0.4994-44.252zm3130 30.048c2.5842 0 9.3805-5.887 11.477-9.9418 2-3.8676 2.0387-12.01 0.0786-16.59-6.147-14.366-26.033-14.584-32.783-0.3588-2.2179 4.6736-2.2814 12.898-0.1318 17.055 3.0126 5.8255 13.156 11.662 17.846 10.268 0.8004-0.2378 2.3812-0.4324 3.513-0.4324zm-13.819-9.1783c-3.0311-3.0312-3.715-4.5495-3.715-8.2491 0-5.7786 2.4381-10.491 6.5201-12.602 14.462-7.4787 26.757 12.984 13.259 22.068-5.6974 3.8339-11.449 3.3983-16.064-1.2166h2e-4zm838.86-17.522c-1.8414-4.1627-3.1615-5.4775-7.3671-7.3379-4.3203-1.9111-5.7476-2.0796-9.1023-1.0744-6.4369 1.9286-10.172 6.6926-10.755 13.716-0.3997 4.8202-0.0305 6.7193 1.9202 9.8755 9.9493 16.098 33.156 2.5703 25.304-15.179zm-2391.9 3783.5 0.0261-65.239c-5.6663-5.6663-5.2717-6.9854-31.493-7.1082-9.9451-0.0469-18.28-0.2834-18.523-0.5264-0.2427-0.2427-0.4202-17.33-0.3938-37.971 0.0369-29.28-0.2722-38.102-1.407-40.134-2.0955-3.752-114.9-117.83-118.45-123.46l-2.5039-3.9639c0.0181-19.444 0.6191-670.02 0.637-689.46 56.833-0.5251 62.509-0.8291 64.134 1.1851 19.022 23.567 189.07 189.83 192.17 200.26 2.2573 7.5945-1.6785-31.928-2.26 470.06 4.7344 9.239-4.8694 1.1973 165.33 167.38-1.2419 92.658-1.3213 100.18-2.8633 194.22h-51.964c0.4187-24.392 0.8582-45.778 1.4395-114.79 0.4954-58.826 0.4451-60.809-1.6289-64.22-2.7285-4.4866-2.6941-4.7395 0.5334-3.9292 4.0559 1.0178 9.9448-1.418 13.662-5.6511 5.5422-6.312 4.2354-16.662-2.8025-22.198-1.5955-1.2551-3.8472-2.2817-5.0039-2.2817-3.1523 0-191.56-189.67-201.97-201.17 0.0481-166.5-0.0779-188.08 1.4797-279.72l3.1533-1.6306c9.9058-5.1223 9.7341-22.424-0.2659-26.851l-3.2332-1.4312v-72.269l3.8318-1.8271c5.4304-2.5896 8.4265-7.7837 7.8372-13.586-0.8965-8.8203-5.7063-11.16-13.097-15.825 1.1982-35.216 1.0801-39.488 3.2583-40.735 10.128-5.7957 12.154-18.773 4.1155-26.354-10.342-9.7539-25.614-2.436-25.614 12.274 0 4.9233 0.5107 6.3911 3.3452 9.6199 1.8398 2.0952 4.2983 4.1125 5.4631 4.4819 2.457 0.78 2.1182 2.1052 2.1182 41.764-2.6604 1.823-7.1367 4.4573-9.8303 9.25-5.1882 9.2312 1.8191 14.824 9.8303 23.136v70.2l-3.8848 1.8525c-9.4385 4.5007-9.1951 20.552 0.3977 26.212l3.7671 2.2227c-0.0854 14.777-1.5437 266.69-1.6313 281.83 11.09 11.084 188.87 188.77 200 199.89-7.4292 10.54-6.9463 11.05-7.9773 18.281-251.48-247.08-220.14-214.62-241.08-238.33 2.6052-373.76 5.1606-279.3 3.9717-487.85l-2.7131-3.958c-3.2668-4.7668-9.4316-8.4453-14.153-8.4453-6.8147 0-22.468 10.643-16.187 11.005 2.3369 0.135 7.3252 6.9756 6.2983 8.6372-2.0024 3.2402-7.7971-3.0017-10.217-11.006-0.29-0.959-2.8687-3.2944-5.7302-5.1899-5.5007-3.6436-12.613-4.6201-16.908-2.3215-3.0334 1.6235-5.3809 6.7896-5.5459 12.206-0.1331 4.3672-0.2007 4.2498-0.957-1.6675-1.2407-9.7053-2.7981-8.7402-8.7336-7.2507-0.155 90.242-0.2195 92.435-1.1646 141.07-8.4126 8.0027-8.6694 7.3237-8.6694 14.57 0 6.0083 0.2371 6.5601 4.7732 11.096 4.3342 4.334 5.2637 4.7729 10.107 4.769 3.425 0 6.6313-0.7952 8.9595-2.2144 4.7034-2.8677 8.3264-10.729 7.3479-15.946-0.7734-4.1213-6.0901-10.854-9.4019-11.905-2.4592-0.7808-2.1179-2.2629-2.1179-34.691 2.334 2.9673 3.9976 5.7578 7.5911 5.7578 9.344 0 12.25 3.4355 19.178 9.5842v388.69c6.1311 17.352 5.9995 18.244 10.926 21.006 6.657 3.7322 9.0796 1.3687 14.22 4.5027 4.2832 2.6123 57.979 57.104 144.77 144.94-12.952 1.9155-14.197 1.8264-19.282 6.2908-11.985 10.523-11.868 27.623 0.2559 37.558l4.8142 3.9446c-0.0188 37.684 0.1111 42.336-1.3967 61.702-28.476-0.2126-30.443-0.5276-33.77 1.9548-1.6106 1.2021-3.2019 3.1687-3.5361 4.3706-0.8096 2.9114-0.6331 127.04-0.6335 130.57h-15.226l-0.697-24.585c-0.4451 23.436-0.1147 24.585-2.6567 24.585-2.1667 0-2.1892-0.6768-2.1631-65.239l0.0017 4e-4zm5.8323 21.533c0.8247-23.747 0.5566-38.757 1.1816-38.131 2.2949 2.2974 2.6445 150.98 2.7861-155.71-72.909-74.026-91.721-93.149-139.8-142.79 1.0156-66.978 1.031-64.703 2.4072-241.32l3.6826-2.1729c7.4004-4.3665 10.092-13.515 6.3176-21.47-4.8882-10.301-19.644-10.619-26.359-0.5671-4.6042 6.8921-2.4148 16.908 4.7175 21.582l2.9319 1.9209c-0.1096 16.423-1.5125 226.59-1.6221 243.02 52.21 54.85 127.26 130.26 141.19 147.12 0.0022 78.05 1.428 207.13 1.6987 206.83 0.136-0.1514 0.5291-8.3884 0.8735-18.304v-2e-4zm-140.25-586.42c-5.001-1.7874-5.9612-9.7698-1.6887-14.042 4.5554-4.5554 10.411-2.918 12.663 3.541 2.4604 7.0574-3.8132 13.06-10.974 10.501v2e-4zm155.04 497.5c2.3889-3.9326 2.1045-7.6106 2.8474-97.374-1.9771-0.23-3.676-0.4275-5.6531-0.6575-0.2068 11.5-2.6379 128.9-0.2937 117.57 1.5833-7.6542 0.0366-14.496 3.0994-19.539zm36.245-284.8c2.4641-1.3188 2.1179-2.5286 2.1179-85.735 4.0964-7.9927 5.7031-10.257 4.9424-15.182-0.7781-5.0371-3.6772-9.4443-7.5908-11.539l-2.824-1.5115v-175.29l3.7891-2.8901c7.6477-5.8328 7.8677-16.564 0.491-23.94l-4.2798-4.28v-35.941l3.3171-2.7913c11.643-9.7966 6.6689-26.805-8.3323-28.496-8.7542-0.9868-15.931 6.2649-16.082 16.249-0.1443 9.5959 5.6482 12.07 12.35 15.725 0 35.205 0.3145 36.358-2.1152 37.129-1.1648 0.3699-3.6233 2.3867-5.4631 4.4822-2.7227 3.1006-3.3445 4.7693-3.3413 8.9619 0 6.0525 2.9272 11.53 7.5745 14.197 4.8875 2.8047 4.7529-5.3867 3.8945 175.67-9.8152 9.4036-10.38 9.219-10.38 15.121 0 8.4167 4.3403 14.486 11.136 15.573l4.1606 0.6655c0 78.057-0.2981 82.48 1.9121 83.767 2.3992 1.3972 2.2004 1.3953 4.7156 0.0491l0.0075 4e-4zm-12.993-93.18c-8.4734-9.0193 7.6313-21.558 12.423-10.091 3.801 9.0972-5.9302 17.002-12.423 10.091h3e-4zm-1.7675-216.85c1.3181-1.8818 2.7798-2.4282 6.4941-2.4282s5.1755 0.5466 6.4939 2.4282c4.022 5.7417 0.1521 13.961-6.5732 13.961-8.6219 0-9.6372-9.3608-6.4148-13.961zm0.0857-56.047c-5.7126-4.4934-2.0337-14.125 5.3953-14.125 4.9412 0 8.1155 3.2056 8.1155 8.1951 0 7.4009-7.4717 10.68-13.51 5.9302h-3e-4zm-164.6 93.377c5.7935-2.3179 9.1135-7.054 9.1135-12.999 0-15.305-19.927-21.738-27.725-8.9497-5.8477 9.5903 1.5613 28.77 18.611 21.949v-2e-4zm-11.932-7.6716c-4.6497-5.9111-1.5852-14.646 5.1108-14.569 6.0315 0.0698 9.8564 5.9648 7.7642 11.967-2.1145 6.0661-9.0479 7.467-12.875 2.602zm253.7 581.55c-1.2043-21.94 1.1895-19.016-37.984-20.003-0.5767-61.314-0.9629-60.986 1.8118-66.541 2.7427-5.4917 2.4133-6.4119-1.7314-4.8359-9.2666 3.5232-19.682-2.3259-20.375-11.442-0.7097-9.3345 3.2246-15.826 11.003-18.156 9.3567-2.8035 9.6077-2.6216 45.158 32.732 38.271 38.059 43.365 43.763 42.862 47.994-0.4695 3.9539-0.5972 152.13-0.6042 156.51-13.948 2e-4 -25.933 7e-4 -39.882 1e-3 0.1076-18.951 0.789-97.127-0.2594-116.25zm48.181 112.16c0.8401-5.085 0.9636-21.514 1.0544-27.043 0.541 5.7363 1.521 15.104 1.6892 23.765 0.1189 6.1489-0.1536 7.3755-1.6392 7.3755-1.4511 0-1.6562-0.761-1.1044-4.0974zm88.637-132.28c0.4792-0.479 0.0906 120.05-0.4316 133.92-0.0515 1.3521-0.7073 2.459-1.4585 2.4595-2.3786 0.0017 0.8181-135.31 1.8901-136.38zm22.375 135.01c-0.2329-6.8354-0.2622-114.25 1.4714-208.17-101-103.03-162.45-161.51-161.54-163.89 0.9795-2.5522 0.5972-462.54-0.3887-467.6-1.2439-6.386-1.3657-6.7278-76.762-84.36-54.841-56.468-26.366-28.199-57.156-60.738-26.692-28.208-41.036-44.435-40.312-45.605 0.6384-1.033 171.15-0.8406 201.99 1.5879 0.0923 11.238 0.6672 81.354 0.7598 92.64-9.2324 0.0586-10.157-1.6873-10.015 46.437 0.1069 36.234 0.4321 40.974 2.8103 40.974 1.2673 0 1.5173-6.6287 1.5173-40.21 0-39.661 0.2588-42.832 3.4963-42.832 1.425 0-0.021 174.67 2.2781 196.68h31.376c0.9558-42.629 0.9617 12.949 1.0925-293.92h19.182c-0.3616 23.451-0.2966-22.656-1.9319 540.27-4.2695 4.6094-11.46 12.035-16.379 19.641-2.3079 3.5684-4.3701 6.6626-4.5835 6.876-0.1438 0.1438-0.4646 0.3511-8.5732-3.5156 0.6726-7.1184 1.3423-1.762 1.3511-105.11 0.011-90.113 0.0261-90.895 2.2068-91.587 3.7705-1.1968 7.6348-8.1064 7.6348-13.652 0-12.817-12.35-20.512-22.747-14.174-4.7966 2.9243-8.3279 10.721-7.311 16.141 0.6992 3.7268 6.8896 11.288 10.102 12.339 2.2749 0.7441 2.7339 187.8 2.0371 192.42-0.5706 3.7861-1.3521 5.3186-2.9758 5.834-6.8809 2.1838-12.498 23.489 6.6899 26.674 3.7781 0.6274 3.833 0.7153 4.561 7.2954 2.6624 24.068 15.747 40.082 37.506 45.903 21.946 5.8711 47.631-5.9819 57.424-26.5 7.5549-15.83 7.291-38.378-0.6326-54.014-3.292-6.4963-16.291-20.517-22.896-24.696l-4.6758-2.958c-1.2046-192.7-1.3008-202.01-2.9958-537.19l20.76 5e-4c-0.1904 98.941-0.7065 291.73 0.2656 291.81 1.0847 0.0908 31.076 0.459 32.514 0.4773 0.0156-8.2466 0.5388-284.12 0.5544-292.37l19.844 0.6282c0.1326 205.67-0.0249 281.18 1.5042 281.77 1.7166 0.6584 27.407 0.1721 30.544 0.1318 1.2805-39.968 1.2263-55.387 1.6753-281.29-29.207-0.9338-10.578-0.6663 20.178-0.4622l-0.2656 319.46c-15.619 19.651-42.747 50.351-55.418 67.03-0.8042 950.49-1.375 370.76-1.6802 643.17-15.503 0-24.03 0.2456-24.084-1.3657l8e-4 8e-4zm-14.61-277.77c11.378-7.4551 8.239-25.964-4.843-28.553-11.514-2.2791-21.478 9.2671-17.748 20.567 1.3704 4.1519 5.9934 9.0537 9.386 9.9524 3.5869 0.95 10.274-0.0459 13.205-1.9663h2e-4zm-14.529-6.3218c-4.8633-5.3135-3.9497-12.561 1.969-15.622 4.4194-2.2854 6.2214-1.9907 9.8181 1.6064 6.4541 6.4539 2.9871 16.474-5.7004 16.474-2.5835 0-4.5713-0.803-6.0869-2.4585h2e-4zm18.384-29.429c11.607-6.5234 11.315-26.002-0.4836-32.266-5.094-2.7046-15.104-2.5188-18.98 0.3523-7.9333 5.8779-10.861 15.707-7.0325 23.614 4.7395 9.7903 17.006 13.633 26.496 8.2993l-2e-4 -3e-4zm-14.328-3.2117c-9.8186-3.9153-11.476-16.292-3.1216-23.321 5.2148-4.3879 11.022-3.8645 16.361 1.4746 3.7722 3.7722 4.2422 4.8345 4.2422 9.5906 0 6.3357-2.1045 9.8267-7.2102 11.96-4.2024 1.7558-6.4482 1.8205-10.272 0.2961zm-57.49-31.648c4.1721-3.2817 6.1353-7.752 6.1353-13.97 0-12.378-13.767-19.471-23.852-12.29-6.6113 4.7078-8.4983 14.742-4.0491 21.533 4.4866 6.8474 15.915 9.3291 21.767 4.7268l-3e-4 3e-4zm-14.837-7.5962c-2.7776-2.7773-3.2117-3.8962-2.6489-6.8289 0.6978-3.6372 5.123-8.4243 7.7869-8.4243 7.6614 0 11.899 9.4846 7.0134 15.696-3.1709 4.0312-7.8481 3.8611-12.152-0.4429l5e-4 3e-4zm85.363 1.7219c7.7124-3.988 12.248-13.97 9.9045-21.794-3.7888-12.646-19.415-16.384-29.922-7.1592-4.8306 4.2415-6.5232 8.5935-5.8931 15.152 0.5466 5.6887 3.3064 10.158 8.3115 13.458 3.6313 2.395 13.268 2.583 17.599 0.3433l-2e-4 2e-4zm-14.388-4.4197c-3.7412-2.1069-6.2966-6.9246-6.2966-11.871 0-13.176 24.307-19.801 24.525 1.2007 0.0491 4.7539-0.4221 6.1914-2.8167 8.5879-3.5775 3.5801-10.978 4.5803-15.412 2.0827zm25.631-307.19c4.7764-2.4053 7.9236-10.178 6.72-16.595-0.8242-4.3945-6.6873-10.587-10.76-11.366-13.506-2.5818-25.984 14.156-13.867 25.764 5.2671 5.0463 10.881 5.7348 17.907 2.1965zm-13.269-6.4883c-7.2659-6.1135-1.3665-15.785 5.0566-15.712 8.4653 0.0959 11.806 10.995 5.0085 16.342-3.7087 2.9172-6.0212 2.7725-10.065-0.6301h-2e-4zm-92.297-27.666c14.141-6.4219 11.548-31.779-10.607-31.785-8.592 0-13.062 3.113-14.946 10.417-2.613 10.129 0.4556 18.676 7.8625 21.901 4.778 2.0804 12.446 1.8499 17.691-0.5324zm-15.265-7.8279c-5.9236-4.6592-2.5239-14.125 5.0728-14.125 5.541 0 8.4377 2.6199 8.4377 7.6311 0 3.2676-0.6545 4.7444-2.8792 6.4939-1.5835 1.2456-3.9756 2.2646-5.3157 2.2646s-3.7324-1.019-5.3156-2.2646zm123.58 7.0278c17.94-13.304 1.3691-41.904-20.033-32.184-13.188 5.9897-13.181 27.6 0.012 33.576 4.917 2.2271 16.199 1.4431 20.022-1.3916l-3e-4 -3e-4zm-17.793-9.6301c-5.5195-5.5195-1.3557-14.683 6.7092-14.766 4.1108-0.0427 6.8779 2.7471 7.6902 7.752 1.3533 8.3391-8.3484 13.065-14.4 7.0139h3e-4zm65.635-2.1521c14.62-9.5796 3.1675-34.74-13.986-27.572-5.3972 2.2551-8.4307 7.436-8.4358 14.408 0 6.9602 3.1731 11.819 9.793 14.972 2.509 1.1953 9.593 0.1814 12.629-1.8076h2e-4zm-14.134-7.269c-3.5266-4.1912-3.6233-8.7046-0.2703-12.603 5.51-6.4055 14.924-1.9309 14.924 7.0938 0 8.5254-9.2039 11.986-14.654 5.5093h3e-4zm39.785-170.99v-42.141l-6.207 4.4197c-0.0044 0.124-2.8171 77.025-0.7178 79.134 0.949 0.9492 6.3311 0.7288 6.9199 0.7288v-42.142h0.0049zm-160.49-0.4719c-0.2278-21.935-0.6113-40.101-0.8525-40.37-0.241-0.2686-1.7756 0.8484-3.4102 2.4819l-2.9717 2.9705c0.0356 35.119-7e-4 38.052 0.5466 75.484 4.3799-0.4221 2.6858-0.2588 7.1021-0.6848l-0.4138-39.882h-5e-4zm53.463 38.516c0.0308-1.0515 0.2051-19.27 0.3884-40.484 0.3027-35.066 0.1733-38.506-1.4214-37.846-0.9648 0.3997-2.6147 0.9741-3.6663 1.2766-2.2112 0.636-1.9121 4.4348-1.9121 78.965 4.0061 0 6.5449 0.3657 6.6113-1.9121v2e-4zm53.976-78.944c-0.7588 0-5.8831 2.7314-7.0479 3.334 0 23.516-0.1484 75.917 0.7285 76.794 0.949 0.949 6.3311 0.7285 6.9199 0.7285 1e-4 -65.664-0.1754-80.856-0.6005-80.856zm11.053 794.63c1.3047-236.36 1.6511-247.53 2.8816-231.37 0.5671 7.45 0.7356 58.644 0.3899 118.55-1.3052 226.09 0.3362 251.31-2.3237 251.31-1.5496 0-1.6397-13.163-0.9478-138.49zm13.538 133.61c0.5747-0.3552 0.7681-1.3677 0.4297-2.2498-0.8286-2.1589 1.3962-2.0303 1.5776-0.2383 0.5251 5.1533 2.7209 7.3752-0.7393 7.3752-3.4951 1e-4 -2.2539-4.2772-1.268-4.8871zm12.906-626.66c2.5654-5.9827 50.848-57.266 53.746-64.888 1.4646-3.8516 1.1401-195.45 1.1401-331.81-3.9326-1.7366-5.4104-2.2241 0.4255-1.5969 6.2192 0.6685 14.048 0.5745 19.043 0.5745-0.0098 14.848-0.3374 511.39-0.3472 526.22-39.065 42.043-37.422 40.548-44.736 49.884-2.3965 57.382-1.5125 200.39-4.23 453.17h-27.288c2.6929-346.21-0.4914-625.17 2.2462-631.55zm68.222-301.57c-0.1785 0-0.8933 0.2896-6.7805 3.334v78.614h7.8623c-0.2253-24.67-0.6826-81.948-1.0818-81.948zm-33.694 880.4c1.1736-90.524 1.6528-340.14 4.033-318.78 0.9326 8.3679-0.5916 156.65-0.6038 284.91-0.011 83.991-0.0698 86.592-2.061 86.592-1.9888 0-2.031-1.6245-1.3687-52.72h5e-4zm25.324 33.326c0.9587-25.254 1.02-394.28 1.0427-424.1 2.8342-2.8569 42.787-42.497 43.667-46.042 0.8909-3.585 1.1196-525.99 1.1313-539.74h22.54c-1.5703 478.4-1.8672 480.1 0.4077 485.14 3.7983 8.4231 13.826 11.511 21.66 6.6692 10.905-6.74 7.1431 32.023 9.7463-491.81h19.433l-0.3325 282.45h31.44v-282.45h22.032c-0.6157 343.71-0.7505 551.88-2.2234 554.67-3.8154 7.2349-133.22 136.52-138.22 143.99l-2.8706 4.2886c-1.2102 88.779-1.3801 84.864-1.6775 326.32h-28.511l0.7363-19.394 1e-3 -0.0028zm67.653-481.01c5.241-3.239 7.5669-8.3511 6.9102-15.186-0.614-6.3899-3.5076-10.379-9.3269-12.858-3.0508-1.2996-4.0901-1.2876-7.3755 0.0852-2.1033 0.8787-3.8242 2.2058-3.8242 2.949s-0.9475 2.3662-2.106 3.6067c-3.0693 3.2876-3.843 12-1.4368 16.182 1.7778 3.0896 8.7383 7.3022 12.155 7.3567 0.8306 0.0129 3.0825-0.9478 5.0042-2.1355l2e-4 -3e-4zm-10.3-9.7879c-1.5176-2.8357-1.4307-6.9839 0.1802-8.5945 3.5789-3.5789 9.6152-0.4377 9.6152 5.0034 0 4.8641-7.6194 7.6573-9.7954 3.5911zm85.166-203.03c11.347-5.7007 11.684-20.585 0.6125-27.073-7.144-4.1865-13.775-3.4504-18.855 2.0933-3.2056 3.4978-3.5886 4.6018-3.5886 10.341 0 7.1406 2.0425 10.794 8.0981 14.487 4.2166 2.5713 8.8169 2.6223 13.733 0.1523h-2e-4zm-13.689-7.533c-3.5854-3.8691-3.655-10.016-0.1504-13.308 3.5474-3.333 10.468-3.2554 13.67 0.1531 3.333 3.5474 3.2554 10.468-0.1531 13.67-3.6841 3.4609-9.9038 3.2212-13.367-0.5154h-2e-4zm-15.603-211.52c-1.1523-1.1523-4.9192 2.2961-6.198 3.3311-0.1826 21.416-0.5659 66.406-0.6733 79.014 2.5283-0.2427 4.7007-0.4514 7.2292-0.6941 0.0242-3.406 0.8711-80.422-0.3579-81.651zm-51.931 0.7761c1.105-2.8794-1.1235-0.2969-5.2119 0.9451-4.8516 1.4741-2.1912 54.986-2.0601 77.471 0.0181 2.2896 2.5381 1.9121 6.5671 1.9121 1e-4 -3.1757-0.2245-77.907 0.7049-80.329zm103.88 40.678c0.2812-21.508 0.2371-39.82-0.0984-40.695-0.4856-1.2649-1.1492-1.3447-3.2461-0.3892-4.4956 2.0483-3.9939 6.5808-3.9939 80.873 4.2156-0.4226 2.573-0.2578 6.8264-0.6848l0.5117-39.104 3e-4 -2e-4zm-128.24 733.29c0.4077-86.646 0.9807-157.78 1.2732-158.07 2.5605-2.5605 2.3513-2.739 1.8743 198.42-0.2563 108.13-0.4175 117.19-2.0837 117.19-1.6741 0-1.7517-11.47-1.064-157.54h2e-4zm57.945 123.94c3.6194-179.92 0.6042-261.99 3.2153-261.11 2.0698 0.6934 0.072 96.049 0.3069 229.97 0.1118 63.756 0.0808 64.739-2.0422 64.739-2.114-2e-4 -2.1428-0.6523-1.48-33.599zm75.368 29.501c1.0286-6.2241 0.9724-80.103 2.0925-19.121 0.3645 19.841 0.1938 23.219-1.1716 23.219-1.2385-1e-4 -1.4458-0.9217-0.9209-4.0975zm177.86-0.2351c-2.707-4.8164-2.3396-6.6963-1.7917-20.252 2.7908-0.2759 14.454-1.125 16.476-2.803 2.8616-2.375 5.2671 0.5569-5.436 6.0498l-4.198 2.1543c2.1084 19.894 3.7695 19.183 0.052 19.183-1.97 0-3.3037-1.1326-5.1021-4.3325l2e-4 3e-4zm10.49-4.1355c-2.5933-11.54-2.563-11.701 2.5574-13.712 2.6687-1.0483 4.6941-2.6504 5.0444-3.99 1.9456-7.4382 2.5159 17.294 2.5159-79.079-2.8594-4.4558-6.6379-10.572-7.8406-10.572-0.5813 0-0.2842-0.7725 0.6602-1.7168 1.9556-1.9553 1.717-8.8599 1.717-55.598 77.884-77.893 100.41-100.81 101.61-98.934 1.6714 2.6155-40.672 42.617-97.339 101.4 0.6741 39.069 0.8806 72.33 3.3618 72.33 1.8923 0 2.2041-4.5276 2.282-33.142 0.0449-16.327 0.4136-31.714 0.8196-34.194 0.8425-5.1455 5.3286-9.1467 94.371-99.117 18.503-0.1919 16.523 0.2422 23.828-5.1592 0.1665 142.59 0.2585 147.05 1.1494 269.95l-21.364 0.0015c0.1272-8.8792 0.2366-16.509 0.3638-25.388 14.855-8.4844 14.388-4.1216 14.385-46.42 0-36.489-0.1069-37.067-7.9092-43.3-9.5667-7.6428-25.852-3.2615-30.161 8.1143-1.5581 4.1135-2.6663 65.723-1.2751 70.89 1.5249 5.6626 8.1096 11.507 14.032 12.454l4.5547 0.7283c-0.0063 3.7869 0.5808 22.92-2.8748 22.92-0.823 0-1.4958-0.387-1.4958-0.8601 0-1.1182-6.5559-1.7236-6.5559-0.2498 0 1.4626-63.281 1.1099-94.534 1.1099l-1.9028-8.468 5e-4 2e-4zm12.024-51.901c-0.4778-13.402-0.4785 33.615 0 20.214 0.1985-5.5586 0.1983-14.655 0-20.214zm48.102-9.0664c15.505-6.4785 20.537-28.872 9.4082-41.873-5.7664-6.7368-12.073-9.2808-21.36-8.6162-6.1499 0.4399-8.5461 1.1729-12.178 3.7253-15.65 10.999-15.975 37.207 1.9832 46.645 4.3278 2.2746 16.827 2.3417 22.146 0.1191zm-20.867-10.311c-6.7114-5.8928-7.8391-14.644-2.9253-22.7 6.1062-10.012 20.192-10.612 26.033-1.1094 4.9802 8.1021 4.0615 16.306-2.5427 22.707-3.2363 3.1365-4.7283 3.7427-10.186 4.1375-5.9456 0.43-6.6746 0.2168-10.379-3.0354zm16.252-7.07c5.8367-5.8369 1.7388-15.893-6.4766-15.893-6.9856 0-11.029 9.8567-6.6228 16.147 2.4583 3.51 9.4714 3.3743 13.099-0.2534v-2e-4zm-9.3372-2.7813c-2.4548-2.4548-2.7329-4.584-1.0166-7.7905 0.9478-1.7708 1.8257-2.0408 4.6438-1.4297 1.9114 0.4146 3.8364 1.3066 4.2781 1.9822 1.5598 2.3872 0.8062 6.0427-1.5923 7.7224-3.125 2.1892-3.6824 2.1462-6.313-0.4844zm1358.2-12.839c-0.1345-92.267-0.8892-189.43-1.4756-189.97-0.1642-0.1514-12.53-0.5627-53.857-1.7573-11.612 9.771-22.637 23.207-87.138 89.563-17.524 18.028-19.264 20.158-18.161 22.22 0.6713 1.2544 0.978 2.5232 0.6818 2.8196-0.1416 0.1414-0.1051 0.6753-12.845-3.3403 53.297-54.074 61.736-62.935 112.33-115.94 15.636 0.01 538.65 0.3489 554.29 0.3589 77.644 74 86.83 85.021 96.458 91.33-2.6415 0.7065-5.7296 1.8872-7.959 0.3154-3.5866-2.5278-79.343-77.017-91.663-87.184l-145.99 0.1116c-10.151 10.148-73.399 73.376-83.588 83.561 0 83.527 0.3677 83.598-2.1601 83.598-2.579 0-2.1673-1.0198-2.7568-84.68 9.9138-9.9897 71.969-72.521 81.949-82.577-4.6291 0.0085-170.09 0.0276-171.55 1.1978-2.0033 1.6138 3.5654 292.81-0.5222 292.81-1.719 0-1.9004-7.2822-2.5757-103.44-0.8367-119.12-0.7265-152.44-0.7265-189.42-71.401 0.4961-77.104 0.5354-82.495 0.5728-0.2388 79.196-0.0378 97.938 1.0921 292.28-3.9317-1e-3 -4.9793-0.0759-5.1451-0.2742-0.2719-0.3254-1.0614-205.83-1.4108-292.01-51.794-0.4319-69.074-0.7856-69.554 0.8044-0.3643 1.2097 0.6487 245.44 1.8093 291.48h-6.8916l-0.1494-102.44 4e-4 -0.0032zm11.958-184.93c2.537 0 56.498-0.3093 57.29 0.9719 0.7995 1.2939 1.2841 280.96 1.2974 286.4h-58.587v-287.37zm75.136 186.02c-0.2936-115.97-0.2749-147.82-0.2896-185.48h68.807c1.2831 9.3069 1.4518-10.373 2.2153 286.82h-70.476l-0.2565-101.34h-2e-4zm86.263-186.15c1.2855-1.2854 128.69-0.5007 149.46-0.4221l-72.963 73.611c0.1951 10.595 1.4163 76.889 1.6127 87.554-23.923 0-39.246-0.2891-40.269 1.366-0.6345 1.0256-1.2458 112.63 0.9592 125.38h-38.167c-0.1296-22.966-1.9763-286.15-0.632-287.49zm253.9 226.05c-0.1626-41.044-0.6251-61.902-1.3932-62.827-1.3722-1.6536-14.375-1.3855-36.598-1.3855-1.3325-32.129-1.4312-32.448-1.4312-96.418 42.287-43.46 40.625-41.64 47.348-47.812h39.188c6.4205 6.5518 11.937 12.182 18.358 18.733 0 105.82 0.2612 101.58 1.4379 124.65-27.839-0.4521-13.49-0.219-48.815-0.793-1.601 5.6367-1.8483-3.02-2.037 127.29h-15.816l-0.2433-61.442 7e-4 4e-4zm-4440.6 59.522c0-1.3821 36.031 0.3489 11.2 0.6785-6.1601 0.082-11.2-0.2235-11.2-0.6785zm4782-60.425c-0.4408-30.108-0.5126-55.03-0.1597-55.383 0.3529-0.353 0.86-0.4233 1.1269-0.1567 1.0544 1.0544 1.2124 204.38-0.9672 55.54zm-2188.4 18.968c-1.3579-0.3521-1.6414-0.907-0.9128-1.7854 1.3328-1.6069 1.6541-15.064 1.79-18.208l4.1621-0.0012c4.0193 0 4.9385 2.1287 0.9639 2.2327-1.0242 0.0261 0 1.0249 2.3049 2.2397 11.216 5.919 4.3235 18.798-8.3081 15.522zm11.072-5.0584c0.6104-3.2195-0.7385-6.9905-2.7812-7.7742-2.5432-0.9761-4.6819 2.1177-4.6819 6.7727 0 3.4973 0.1804 3.6672 3.542 3.3423 2.3979-0.2317 3.6646-0.988 3.9211-2.3411v3e-4zm108.89 3.6233c-4.3042-4.7559-1.1072-13.098 5.0195-13.098 3.2844 0 7.5583 4.3254 7.5583 7.6487 0 1.0398-1.019 3.1863-2.2644 4.7693-2.7605 3.5095-7.4717 3.8201-10.314 0.6797h3e-4zm7.3022-1.7942c2.4697-2.2351 2.5413-4.5215 0.2217-7.0847-1.3511-1.4932-2.2666-1.7007-3.8242-0.8669-2.3325 1.2483-2.7822 6.4036-0.7366 8.449 1.6917 1.6919 1.9536 1.6616 4.3391-0.4974zm-3.4653-14.452c-4.397-0.7771-3.8457-0.9724-4.4963-9.9631 8.4656 0 8.8647-0.4331 8.8821 3.0046 0.0286 4.3374 1.6375 7.9685 0.3857 7.7781-0.5208-0.0788-2.668-0.448-4.7715-0.8196zm-295.16-5.3195c-0.5864-3.4346 1.2324-120.05 1.2324-32.142 0 18.129-0.2461 32.962-0.5464 32.962s-0.6091-0.3687-0.6863-0.8196h3e-4zm175.6-4.5008c-0.8779-1.4204 0.2808-4.2825-0.3379-3.2092-0.2407 0.4167-1.1436 0.4873-2.0061 0.1562-1.7588-0.675-2.1794-5.8313-0.4758-5.8313 0.6011 0 1.0928 0.5449 1.0928 1.2109 0 0.6938 1.0503 0.9717 2.4585 0.6501 1.3521-0.3086 3.4417-0.1445 4.6438 0.364 2.1152 0.8955 2.1057 0.949-0.2986 1.6692-2.3235 0.6963-2.3586 0.8354-0.5481 2.1597 1.0647 0.7786 1.6909 1.6406 1.3911 1.9153-1.3469 1.2366-5.3394 1.8533-5.9194 0.9146l-3e-4 5e-4zm-576.58-42.301c-0.209-56.328-0.3865-22.295-0.9712-51.468-126.45-126.78-248.04-245.28-251.58-250.49-1.49-2.1934-1.9065-5.1396-1.9121-13.522 0-7.4836 0.3533-10.495 1.1882-9.9788 0.6577 0.4062 0.9685 1.9275 0.6907 3.3801-0.2776 1.4526-0.261 2.3975 0.0371 2.0999 1.0244-1.0242 4.6331 7.4871 4.6331 10.927 0 4.1021 2.9033 7.9016 14.131 18.494 12.342 11.644 64.576 69.545 73.828 75.54 6.0503 3.9204 155.41 154.02 159.54 160.33 1.926 2.9436 2.033 5.6392 1.7815 44.766-0.3604 56.023-1.2048 52.998-1.3652 9.9209h-6e-4zm2370.1-37.256c0-28.286-0.856-55.118-1.4368-75.655 14.157-14.473 43.905-44.887 52.247-53.416l50.298-0.2122c8.5305 8.5984 15.86 15.986 24.391 24.585 0.0858 15.636 0.6188 112.74 0.7047 128.39-3.0589-2e-4 -1.8214-2e-4 -4.9169-2e-4 0-50.215 0.127-53.08-1.3501-127.29l-21.349-21.307-45.59-0.0479-48.951 49.55 0.8746 99.645c-1.7196 0.2444-3.1973 0.4541-4.9169 0.6985v-24.934l-0.0045 1e-4zm-2472.1-51.158h6.5559c0.0503 4.9285 0.7913 59.363 0.0127 62.554-0.7097 2.9038-2.6768 2.4585-7.1475 2.4585 0.0702-7.8633 0.5086-57.097 0.5789-65.013zm1917.4 43.24c-3.9095-2.384-6.3241-8.1873-5.2264-12.562 1.6849-6.7126 11.458-8.3857 16.944-2.9001 5.2152 5.2151 3.8047 12.857-3.0171 16.346-3.2933 1.6843-4.7269 1.5386-8.7003-0.8843h1e-4zm-1729-23.204v-16.567l-37.97-37.565c-48.697-48.178-41.84-43.818-14.394-15.979 21.85 22.164 39.57 39.424 53.456 53.022 0 45.206-1.0925 38.846-1.0925 17.088v2e-4zm2492.8 10.644c-4.1741-1.8174-7.722-6.2119-9.3191-11.542-1.7219-5.7473 1.546-13.091 6.971-15.665 13.603-6.4551 29.286 6.9436 23.041 19.685-3.8731 7.9009-12.566 11.062-20.692 7.5232zm12.036-6.0322c4.6759-3.8804 1.1712-14.171-0.5548-14.404-2.1504-0.2913-2.6958-0.4744-4.1348-1.3857-0.9266-0.5872-1.8043-0.4312-2.3263 0.4133-0.6523 1.0557-0.9701 1.0261-1.4336-0.1331-0.4883-1.2214-0.804-1.1946-1.7545 0.1494-1.519 2.1479-1.5312 15.614-0.0153 17.13 1.3377 1.3379 7.83 0.2136 10.22-1.7693l-2e-4 3e-4zm-2570.6-13.995c-2.6646-3.1021-3.2031-5.8379-1.9167-9.7358 2.0613-6.2454 7.9788-7.731 12.558-3.1526 3.3977 3.3979 3.637 9.4749 0.4966 12.615-2.7488 2.7488-8.8821 2.8992-11.138 0.2732v2e-4zm1258.5-10.876c-2.6904-3.4282-4.7874-6.3201-4.6597-6.427 0.2501-0.2097 15.003-1.0952 25.909-1.7605 0 2.2207-0.303 5.4399 1.9331 6.6365 2.5042 1.3401 38.881 1.5781 43.664 1.6487 6.3817-5.4519 4.0354-3.4475 10.674-9.1182 1.8298-72.224-1.7039-91.847 0.5352-94.545 1.7673-2.1294 0.0139-114.39-1.7305-350.57-0.6078-82.307-0.9523-97.15-2.2664-97.654-4.1143-1.5789-3.1997-29.596-0.077 445.48-7.0198 0-8.1614 0.281-6.9897-1.9121 1.3687-2.5623-0.2715-84.394-2.2825-447.71-3.234-4.2493-19.443-25.048-20.429-28.734-1.7228-6.4414-12.177-0.3347-15.39-12.265-2.1682-8.0525 1.4668-14.664 8.9155-16.216 14.157-2.9502 12.94 8.4219 12.94 28.148 15.317 19.28 16.592 21.16 31.14 36.376 4.0502 559.95 4.1541 343.19 4.9802 542.45-8.027 7.6562-5.0228 4.7908-13.013 12.412h-68.967l-4.8918-6.2324 0.0043 8e-4zm30.947-8.5183c-0.0753-0.3003-0.198-1.1543-0.2732-1.8972-0.0753-0.7429-1.12-1.5068-2.3219-1.6975-1.6045-0.2546-1.798-0.0808-0.7279 0.6523 2.0496 1.4053-1.0482 2.5264-4.4128 1.5969-3.3068-0.9131-85.509-1.4851-89.373-1.522v-6.4197c59.976 0 71.802 0.207 72.469-1.532 0.7916-2.0632-0.1671-2.8357-3.5411-2.8535-3.2256-0.0229-5.7415-0.7969-7.8318-1.3569 0.0887-3.9851 1.1787-58.569 1.7744-61.551 0.2506-1.2546 1.5179-3.6313 2.8165-5.2822 7.2301-9.1917 1.4714 15.955 6.9415 11.415 0.8051-0.6682 5.9784-0.6306 14.305 0.1038 15.034 1.3259 20.589 3.3811 30.107 11.139 11.597 9.4521 14.578 13.048 16.742 20.197 1.9136 6.3198 1.9261 6.9761 0.2209 11.441-2.1691 5.6792-13.597 17.47-21.133 21.803-2.8845 1.6587-5.598 3.0198-6.0298 3.0247-1.6956 0.0195 0.6559-3.4231 3.3732-4.9382 7.6785-4.2805-12.573 3.7007-24.828-2.6011-2.6168-1.3457-4.4318-1.9187-4.033-1.2734 0.4493 0.7271-0.442 1.1858-2.3444 1.2063-2.6787 0.0283-2.8175 0.1794-1.0907 1.1841 1.0881 0.6331 2.7174 0.8672 3.6204 0.521 2.3728-0.9106 5.7758 2.6323 13.434 2.6323 4.425 0 5.3619 0.3164 4.8542 1.6389-1.3087 3.4111 6.7646-0.1548 2.2723 3.2434-2.1001 1.5884-4.7257 2.1816-4.9891 1.1272v-4e-4zm9.5346-11.371c5.5079-2.5015 12.185-9.022 14.216-13.884 1.9661-4.7056 1.9497-16.096-0.0284-19.872-4.1796-7.978-16.844-15.486-26.152-15.505-17.688-0.0364-29.296 22.432-20.341 35.008 1.1808 1.6584 2.147 3.7141 2.147 4.5681 0 2.7827 7.8066 8.408 15.297 11.023 3.5359 1.2346 10.596 0.5986 14.861-1.3384h-3e-4zm-17.593-7.7063c-6.439-2.6812-11.28-12.454-9.4508-19.079 3.5469-12.846 16.079-17.794 26.205-10.347 5.6542 4.158 7.8303 8.1389 7.8303 14.324 0 5.856-3.7936 11.832-9.1128 14.356-3.996 1.8962-11.806 2.2732-15.472 0.7468h1e-4zm-163.83 15.116c-27.005-0.4829-49.677-1.0999-50.383-1.3708-1.5176-0.5823-2.0682-3.4917-2.4753-5.0486 3.583 0 108.32-0.2158 110.61 0.6631 1.0249 0.3933 1.7284 1.95 1.7284 3.8245 0 3.0671-0.1539 3.1558-5.1902 2.9856-2.8545-0.0962-27.285-0.571-54.29-1.054l-2e-4 2e-4zm65.802-2.0488c-0.4027-2.7444-0.1116-3.2778 1.7881-3.2778 1.793 0 2.2693 0.688 2.2693 3.2778 0 2.3066-0.5297 3.2781-1.7881 3.2781-1.1515 0-1.9595-1.1673-2.2693-3.2781zm0.8797-117.19c0.3462-59.044 0.8318-108 1.0791-108.8 0.5281-1.6931 3.657-0.9868 5.3766-0.7429-1.4919 219.27-1.8457 216.89-5.0183 216.89-2.0173 0-2.0516-2.5618-1.4374-107.35zm-502.15 62.297c-9.1038-4.7876-4.2651-18.318 0.8152-18.318 1.0571 0 0.7256 0.7205-0.989 2.1492-2.8452 2.3701-3.1536 2.1934 4.6873 2.6848 3.053 0.1912 6.3914 2.355 6.3914 4.1421 0 0.5828-0.9902 2.3186-2.2004 3.8572-2.9414 3.7393-1.8196 4.5166 2.2141 1.5342 2.3279-1.7212 3.2646-1.9824 3.2646-0.9111 0 4.3062-9.2258 7.469-14.183 4.8618h-3e-4zm-734.79-43.621c-51.952-51.252-54.762-56.428-0.7185-2.5725 58.815 58.61 48.66 49.869 0.718 2.5725h5e-4zm2035.8-65.432c-1.4433-1.6858-1.8538-4.3259-1.8538-11.925 0-8.8462 0.2271-9.9185 2.4285-11.46 1.3356-0.9355 3.3182-1.7009 4.4058-1.7009s2.4221-1.1062 2.9656-2.4585c0.7227-1.7976 1.0069-1.959 1.0574-0.6006 0.0877 2.3416-8.1235 8.6235-9.9856 10.161 0.2892 3.5967 0.8799 14.084 2.4267 16.974 1.6723 3.1248 0.8555 3.6958-1.4446 1.0095zm21.365 1.0501c2.7465-1.5996 2.8248-20.697 0.0961-23.426-1.6932-1.6931-1.6378-1.791 0.8195-1.4436 3.1092 0.4392 2.6342 0.3191 3.2514 26.05-5.2007-0.0562-6.3529 0.0935-4.1669-1.1797l-1e-4 -8e-4zm105.89-2.5071c-0.3665-1.9299-0.2419-1.9456 2.1457-0.2732 3.2123 2.2498 13.07 2.3474 17.279 0.1709 2.9293-1.5149 3.1289-2.0789 3.578-10.107 0.5617-10.042 0.4496-10.5-3.0211-12.357-3.5146-1.8809-2.6892-2.6123 1.034-0.916 3.3486 1.5259 3.6779 2.6794 4.2496 14.893 0.2656 5.6724-0.0186 9.3914-0.7635 10.002-2.2663 1.8574-23.643 3.1079-24.502-1.4121zm-1712.2 0.3667c-2.4719-2.3027-2.9917-3.3303-1.572-3.106 2.7688 0.4373 4.6482-0.3828 4.6785-2.0415 0.0317-1.7319 0.1599-1.7476 1.3667-0.1633 0.9121 1.1973 2.021 1.4802 3.5166 0.8965 11.504-4.4898 0.7695 12.576-7.9898 4.4143zm1671.5-10.32c0-8.5796-0.1785-9.2869-2.879-11.411-4.4045-3.4644-1.6921-2.2866 4.0458-0.1052-0.6899 26.152 0.4551 23.381-6.0839 24.214 4.5704-3.3009 4.9171-2.3394 4.9171-12.698zm-3139.7 8.4507c1.0522-4.8213 3.123-8.2314 2.3374-11.237-0.4922-1.8818-0.2085-2.1223 1.7827-1.5129 3.7405 1.1453 4.9902 2.5879 5.75 6.6382 0.8921 4.7544-2.6572 9.1165-7.4177 9.1165-2.8215-1e-4 -3.0478-0.2774-2.4524-3.0047zm14.967-11.334c-2.2087-5.8523-3.1733-0.405-6.7249-3.5627-2.1064-1.8787-6.6641-2.5896-8.6558-1.3501-2.5283 1.5732-2.8938-0.394-0.5149-2.7727 1.8562-1.8562 3.0591-2.1526 6.2822-1.5479 4.6116 0.8652 12.854 8.5471 11.883 11.076-0.7979 2.0793-0.7861 2.0891-2.2698-1.842l-1e-4 -3e-4zm1547.2-3.7522c-2.5703-1.8003-3.2224-6.3059-1.3357-9.2256 0.8345-1.2913 1.0627-1.04 1.0759 1.1836 0.0479 8.1519 4.9304-0.0374 6.1409 0.7285 0.5964 0.3772 2.6128 0.5818 0.4409-0.791-2.5603-1.6184 0.2368-3.9028 2.8901-2.3606 1.1096 0.6448 1.6375 1.1877 1.1729 1.2058-1.1604 0.0466 2.5613 4.9194 2.845 6.2585 0.1016 0.4822 0.554 0.7542 1.0046 0.604 0.4504-0.1504 0.8193 0.2009 0.8193 0.781 0 3.3118-10.954 4.4873-15.054 1.6155v3e-4zm-1557-13.535-2.4585-2.0508c0.0022-615.83 1.2969-960.03 2.1853-364.78 0.5386 360.57 0.5769 365.88 2.6672 367.4 2.7051 1.9782 0.9763 2.2387-2.394-0.573zm3122.9-144.84c1.0999-223.56 0.3248-454.94 1.8124-457.29 0.6493-1.0239 0.8336 16.755 0.4985 48.091-0.2922 27.344-0.7739 162.51-1.0702 300.38-0.5489 255.33-2.4615 357.54-1.2419 108.82h0.0012zm-573.72 139.36c-3.5629-2.1726-6.882-7.2261-6.882-10.478 0-3.7864 3.5376-9.1082 7.2148-10.853 4.4218-2.0981 7.4111-1.4602 11.62 2.4795 5.5028 5.1516 4.9823 14.059-1.1011 18.844-3.4459 2.7107-6.4146 2.7124-10.851 0.011l-1e-4 -0.0037zm-1463.9-0.6731c-5.0166-2.6157-6.8633-4.6763-8.8479-9.8726-6.772-17.732 11.618-30.062 21.128-28.335 18.131 3.2922 23.572 28.961 5.5273 38.388-3.9216 2.0486-13.723 1.9497-17.808-0.1802h5e-4zm18.348-7.9299c6.3962-6.3965 4.937-18.732-2.6826-22.673-7.053-3.647-14.235-1.5679-18.448 5.3403-8.2786 13.577 9.9409 28.522 21.13 17.333zm1362.6-15.4c-3.9194-2.3899-6.3236-8.1899-5.2189-12.591 0.8719-3.4753 6.7172-7.6619 9.5168-9.8892-1.1522-196.07-1.2457-224.92-2.8521-373.55-8.3004-8.7849-15.384-16.282-23.685-25.067 0.0568-47.152-0.1603-57.802 1.674-60.227 2.3916-3.1621 1.9468-9.3982-1.1737-16.454-3.8489-8.7029-2.2092-7.9507-0.4048-3.5945 5.3519 12.921 26.996 23.268 44.18 21.121 22.596-2.823 41.525-27.549 39.349-51.399l-0.4984-5.4634 1.1849 6.0095c4.0956 20.772-13.344 46.035-35.818 51.889-8.9159 2.3223-14.641 2.0645-24.011-1.0808-12.591-4.2266-11.781-3.3105-17.925 3.9919v52.293l24.038 25.104c0.0342 137.64 0.5172 27.419 2.1931 378.14 6.2363 5.4753 7.6443 6.0669 7.6443 11.078 0 3.5093-0.7295 5.0962-3.715 8.0818-4.3661 4.3662-9.0923 4.8918-14.474 1.6101l-0.0038 4e-4zm-1431.6-5.8872c-4.7432-5.0491-1.9556-12.768 4.6113-12.768 6.8132 0 8.792 3.8982 6.0181 11.856-1.0112 2.9011-1.7529 3.4409-4.7266 3.4409-2.2737 0-4.3711-0.8984-5.9026-2.5288h-2e-4zm2021.9-10.219c-0.8356-0.8357-0.4971-16.072-0.3798-23.856 1.5284 24.484 1.7872 25.264 0.3796 23.856h2e-4zm0.8593-100.89c0-49.163 0.9203-17.407 0.3229 20.487-0.1775 11.268-0.3229 2.0488-0.3229-20.487zm131.07 18.575c0-24.203 0.8616-3.0703 0.3681 9.0144-0.2024 4.958-0.3681 0.9014-0.3681-9.0144zm-126.78-26.224c0-16.896 0.9207-2.1099 0.3942 6.2827-0.2168 3.4558-0.3942 0.6284-0.3942-6.2827zm730.09 4.4712c-0.8146-1.3184-0.6836-663.58-0.6848-674.17-10.875-9.1353-71.099-71.121-70.254-71.121 1.1964 0 68.974 67.545 70.482 70.24 0.7973 1.4246 2.2755 676.04 1.4813 676.04-0.2266-2e-4 -0.6879-0.4467-1.0251-0.9923zm-734.42-62.928c0-25.042 0.8534-3.7634 0.3649 8.9607-0.2007 5.2878-0.366 1.2556-0.3672-8.9607h0.0023zm-2265.2-39.092c-1.0852-106.22-1.6848-140.94-2.4829-143.72-3.0479-10.628-19.572-20.543-18.254-25.584 1.8276-6.9895-9.4646-6.9451-13.807 0.0547-2.3723 3.824-2.4202 0.9116-0.0515-3.0991 2.824-4.7803 6.354-5.9124 11.141-3.5718 3.3044 1.616 4.2988 2.9524 5.8884 7.915 2.3657 7.3867 4.3823 9.7175 6.7246 7.7734 1.353-1.1228 2.3186-0.8508 5.4446 1.5334 4.363 3.3276 7.3364 7.5347 9.5557 10.444l-0.1016 37.28c-0.1606 59.082-1.0398 17.284-1.1648 75.531-0.0601 28.241-0.3977 36.924-1.4673 37.812-1.3513 1.1217-1.4248-0.4696-1.4248-2.369zm241.94-7.4336c-5.2468-3.0564-6.1321-11.475-1.5439-14.689 6.0828-4.2605 13.836-0.073 13.836 7.4714 0 6.7996-6.4788 10.604-12.292 7.2175v-2e-4zm2023.2-27.775c0.0022-31.257 0.8549-4.5896 0.3506 12.353-0.1929 6.4272-0.35 0.8684-0.3492-12.353h-0.0014zm-2193.8-3.9035c-2.2014-1.7314-2.8792-3.2349-2.8792-6.3865 0-5.1394 2.6494-7.7402 8.093-7.9451 5.3362-0.2007 7.7004 2.2515 7.7004 7.9856 0 7.678-6.907 11.072-12.915 6.3457l4e-4 3e-4zm2198.2-51.822c-0.0012-35.831 0.9258-11.695 0.338 14.412-0.1858 8.2991-0.3384 1.8135-0.3391-14.412h0.0011zm-4.3598-37.15c-9e-4 -42.762 0.9435-16.725 0.3289 17.686-0.1804 10.104-0.3284 2.1452-0.3289-17.686zm-2313.9 26.787c-3.658-2.8777-4.5576-6.8787-2.4587-10.938 2.9722-5.7473 11.226-5.7734 14.188-0.0447 2.3447 4.5342 2.0669 7.3782-1.0229 10.468-3.2457 3.2456-7.0045 3.4258-10.706 0.5139zm118.82-40.459c-4.6606-5.1501-0.405-14.19 6.6797-14.19 6.5364 0 10.338 8.3149 6.3826 13.961-2.3079 3.2949-10.163 3.4326-13.062 0.2292l2e-4 -2e-4zm-101.33-20.834c-1.0515-0.6125-1.9121-2.0125-1.9121-3.1111 0-4.584 7.8279-6.6475 10.47-2.7603 3.1098 4.5745-3.27 8.9515-8.5584 5.8714zm32.233 0.0535c-3.3745-1.356-2.5981-2.3662-1.5842-1.74 0.4807 0.2971 0.8743-1.1819 0.8743-3.2869 0-10.326 11.238-2.4087 7.8044-6.8782-0.7744-1.0081-0.3118-0.8582 1.1191 0.3625 3.1914 2.7229 3.0962 6.6487-0.2422 9.9871-2.8687 2.8687-4.1045 3.1096-7.9714 1.5552v3e-4zm1452.4-2.6321c-5.8502-2.3162-5.228 1.9792-18.31-10.17-10.718-9.9541-11.944-11.637-14.941-20.51-2.1763-6.4429-2.2112-7.1604-0.6416-13.187 0.9128-3.5054 1.66-7.2727 1.66-8.3723 0-4.2498 5.0638-11.543 14.717-21.196 11.545-11.545 12.257-11.82 28.74-11.097 13.028 0.5715 18.635 3.114 27.648 12.537 7.5522 7.896 9.1199 10.42 11.449 18.431 3.9194 13.482-0.339 28.064-11.816 40.46-3.3538 3.6226-8.7181 8.0173-11.921 9.7659-5.0176 2.7395-7.1837 3.2205-15.657 3.4749-5.4086 0.1626-10.325 0.1006-10.926-0.1375v-2e-4zm24.58-8.3621c6.1132-2.6296 14.968-11.393 18.491-18.299 4.8644-9.5352 5.0215-20.715 0.4297-30.576-1.0287-2.2092-5.1145-7.2871-9.0795-11.284-5.7628-5.8096-8.3893-7.6179-13.092-9.0144-7.3904-2.1948-18.559-2.249-23.666-0.115-5.4852 2.292-16.36 11.992-19.455 17.355-2.8785 4.9863-7.1688 18.574-7.1521 22.652 0.0262 6.5549 10.072 21.152 18.866 27.413 7.9146 5.6355 23.898 6.4974 34.658 1.8684zm-22.064-6.4633c-2.2222-0.3962-4.8036-1.3542-5.7365-2.1284s-1.7111-0.9788-1.7294-0.4546c-0.0186 0.5242-0.5674 0.0339-1.2203-1.0898-0.9586-1.6499-1.3696-1.7551-2.1354-0.5464-0.8013 1.2646-0.9508 1.2649-0.965 0-0.011-0.8223-1.4919-3.1748-3.2947-5.2283-3.3853-3.8557-4.3507-8.0278-1.8574-8.0278 0.7812 0 1.9839 0.5632 2.6726 1.2522 0.8015 0.8013 0.6725-0.6736-0.3586-4.0974-1.3877-4.6082-1.8567-20.713-0.5671-19.468 0.2397 0.2314 2.2721-1.2385 4.5166-3.2661 4.6982-4.2446 13.031-6.5752 18.094-5.0608 3.7745 1.1292 1.5841 1.011-8.8422 1.408l7.1022 1.0051c19.109 2.7041 25.442 18.884 13.514 34.522-3.4318 4.4993-2.5529 5.9814 1.3988 2.3589l2.8849-2.645-1.9634 3.0676c-2.0771 3.2456-8.2976 6.9543-12.671 7.5547-4.4855 0.616-3.2014 1.8474-8.8423 0.8411l-2e-4 0.0023zm12.937-15.072c1.2874-0.6926 3.676-2.8464 5.308-4.7859 2.5908-3.0789 2.8816-4.1521 2.2916-8.4565-0.913-6.6604-4.8685-12.303-10.361-14.78-3.9597-1.7854-5.0804-1.866-9.1217-0.655-2.5533 0.7649-6.4463 3.2192-8.7319 5.5046-3.6447 3.6448-4.1244 4.7451-4.1244 9.4602 0 3.0823 0.8514 6.9436 2.0161 9.1431 3.454 6.5227 14.838 8.812 22.724 4.5693h-2e-4zm-13.671-6.2734c-4.2738-3.5962-5.0199-6.1826-2.9423-10.2 1.8279-3.5349 4.8109-4.52 9.7518-3.2217 7.438 1.9546 8.1393 11.768 1.0712 14.988-3.6796 1.6765-4.134 1.5864-7.8807-1.5664v3e-4zm-1465.7 25.414c-6.8789-10.754-14.958-15.322-22.623-12.792-4.1812 1.3801-6.0803 3.79-6.8818 8.7327-0.6028 3.718-0.3403-69.812 0.0605-44.252 0.311 19.824 1.2234 26.878 2.4023 18.575 0.8533-6.0061 3.2112-5.6294 6.8376 1.0928 7.0278 13.026 17.07 14.058 23.546 23.42 1.6587 2.3977 3.7947 4.3784 4.7463 4.4009 0.9514 0.0229 2.0178 0.3296 2.3699 0.6814 0.8979 0.8979-3.6453 5.916-5.3562 5.916-0.7747 0-3.0706-2.5986-5.1023-5.7747v2e-4zm22.748-8.7061c-9.4104-6.9011-18.292-6.3386-7.8643-11.406 8.9736-4.3596 14.672-20.659 10.05-28.746-1.8457-3.2285-2.1482-6.9995-0.4788-5.9678 2.4587 1.5195 3.4453 6.9573 3.3389 18.403-0.0776 8.291-0.6162 12.902-1.7812 15.238-1.5056 3.0183-1.4998 3.7104 0.0601 6.9973 1.9976 4.2097 1.332 6.5835 1.0466 8.687l-4.3706-3.2051h-3e-4zm-32.901-18.351c-4.5115-1.6777-4.0234-7.5964 0.626-7.5964 1.6685 0 4.4121 4.0356 4.4121 6.4905 0 1.4787-2.5371 2.0359-5.0381 1.1059zm2290.3-40.376c0-49.163 0.9203-17.407 0.3229 20.487-0.1775 11.268-0.3229 2.0488-0.3229-20.487zm-2262.6 36.668c-1.0825-2.8213-0.8706-8.8188 0.4331-12.248 1.573-4.1375 3.176-1.5581 3.1985 5.1465 0.0186 5.696-2.375 10.377-3.6318 7.1016h2e-4zm65.181-4.9883c-5.1272-2.0657-6.3765-10.07-2.1863-14.006 5.6189-5.2788 13.876-1.6455 13.844 6.0923-0.0198 4.7119-0.6909 6.0117-4.0088 7.7581-2.7666 1.4562-4.342 1.4882-7.6489 0.1559zm-107.84-4.9526c-1.3296-3.4648-0.6433-5.6326 2.1919-6.9246 1.5801-0.72 3.0571-1.1245 3.2822-0.8994 0.7314 0.7314-2.4741 8.8254-3.6504 9.2175-0.6286 0.2095-1.4492-0.4177-1.8237-1.3935zm24.663-1.2093c0.2295-1.1138 1.2585-1.957 2.2871-1.8735 1.0288 0.083 1.8704-0.2852 1.8704-0.8196 0-1.5701 2.8928-1.1133 4.3923 0.6941 1.7532 2.1128 1.5212 2.2908-4.2212 3.2397-4.2539 0.7034-4.7024 0.5747-4.3286-1.241v3e-4zm-8.4309-16.813c-1.1616-1.8796 5.3157-4.8811 10.357-4.7993 5.7559 0.0928 11.168 2.4177 8.6887 3.7319-2.3672 1.2554-18.375 2.1526-19.046 1.0674zm2283.1-141.45c-0.5898-0.3647-20.579-0.8792-44.421-1.1438-115.79-1.2852 29.362-2.9846 70.078-0.9397-3.1589 0.0708-20.399 0.2358-22.118 1.3276-1.6053 1.0198-1.5245 40.816-1.937 139.51-0.0922-24.061-0.1307-137.84-1.602-138.75zm-2296.8 132.16c-1.9363-2.3333-1.5715-7.9673 0.6772-10.452 2.3027-2.5447 8.3611-2.7466 10.749-0.3586 2.6116 2.6116 2.207 8.7424-0.7114 10.787-3.1089 2.1775-8.917 2.1907-10.715 0.0239v2e-4zm38.318-0.2536c-3.4937-2.8291-3.3042-7.6377 0.4275-10.847 3.5322-3.0383 6.2229-3.2007 8.6475-0.5217 3.2346 3.5742 1.4304 12.206-2.551 12.206-2.0177 0-3.0843 1.9478-6.524-0.8376zm3037.2-7.628-16.117-0.334c0-41.133-0.0041-70.596 0.4506-71.055 0.5868-0.593 20.597 0.1768 22.495 0.2361v7.5034h-10.926v54.633h10.926c0 8.7466-1.4751 7.6624 9.2875 7.561-2.1584-1.1704-5.9312-2.842-7.1526-6.0547-1.3855-3.644-1.361-57.872 0.0273-60.467 1.1608-2.1689 6.5005-4.4136 10.499-4.4136 4.4093 0 3.8804 5.884 3.1818 72.019l4.9169 0.3975c5.6909 0.4597-4.6073 0.4502-27.589-0.0261v3e-4zm41.346-1.6064c-2.4931-8.5945-2.9538-15.533-2.4871-37.458 0.2814-13.221 0.8648-25.882 1.2967-28.136l0.7849-4.0974c4.5978 0.0061 23.989-0.1938 25.727 0.9102 1.5984 1.0144 1.2314 18.73 0.8036 69.565-16.659 0.3992-25.636 0.9009-26.125-0.7844v4e-4zm17.687-9.1113c2.3799-1.667 2.4284-2.1648 2.4284-24.922 0-28.068 0.2325-27.463-10.565-27.463-12.203 0-11.288-2.1509-11.288 26.517 0 17.946 0.3679 25.315 1.3112 26.258 1.9671 1.967 15.154 1.6831 18.114-0.3899zm-1418-3.0923c-7.0491-1.4832-11.031-4.0808-17.804-11.614-15.86-17.64-12.173-47.299 13.293-59.363 6.3065-2.988 8.4395-3.4431 16.017-3.4175 10.224 0.0349 15.43 2.2312 22.834 9.6348 7.6289 7.6292 9.9458 13.65 9.9458 25.847 0 9.1187-0.3662 11.126-3.0127 16.515-5.8563 11.925-18.946 21.918-30.313 23.141-2.7043 0.2908-7.6358-0.0437-10.959-0.7424zm17.566-3.9441c2.1311-0.5918 4.8354-1.8159 6.0095-2.7202 1.902-1.4648 1.6918-1.4658-1.9276-0.011-6.4692 2.6016-6.2716 1.8887 0.5341-1.9304 6.8951-3.8687 12.214-8.4673 14.02-12.12 0.6373-1.2896-0.1565-0.7332-1.7643 1.2368-2.4669 3.0222-9.8711 7.8914-12 7.8914-0.3457 0-0.1194-0.9509 0.5027-2.1135 1.7662-3.3 1.4626-4.9851-0.5912-3.2805-1.0543 0.875-2.0078 1.0215-2.4585 0.3772-0.9417-1.3455-5.3259-1.114-9.2758 0.49-2.1583 0.8767-3.707 0.9119-5.1901 0.1182-1.3058-0.699-2.1136-0.7283-2.1136-0.0764 0 1.251-5.0851-0.0408-8.4618-2.1497-2.6372-1.6467-3.5604-0.8647-8.2255 1.2607l2.6072 2.7939c3.6155 3.8748 13.199 7.9224 10.486 7.9927-5.7421 0.1494-14.941-7.6985-19.508-16.642-3.2968-6.4561-4.0035-17.831-1.5133-24.351 2.5536-6.6865 3.3237-5.363 1.1383-0.1333-2.2756 5.4468-2.0702 11.572 0.63 18.789 3.5721 9.5471 2.5745 2.8279 7.6545 4.1567 3.4893 0.9121 9.7297-6.895 9.7297-8.073 0-0.6853 0.7714-0.95 1.7142-0.5881 2.2043 0.8457 5.4897-3.8293 7.3047-5.9861 4.1431 6.0969 6.611 10.609 8.015 5.0159 1.813-7.2231 4.0432 3.0398 9.7574 4.4736 1.4906 0.3743 2.7103 1.3489 2.7103 2.1665 0 0.8242 0.6805 1.2249 1.5283 0.8999 2.2229-0.853 3.129 1.3174 1.7468 4.1836-0.7388 1.5317 0.2673 0.8667 2.6289-1.738 8.3672-9.2283 7.0996-27.802-2.137-31.314-1.4708-0.5591-2.6744-1.7156-2.6744-2.5696 0-2.1467-8.0135-8.335-7.1019-8.335 3.438 0 17.859 14.958 16.003 11.328-2.1654-4.2341-11.726-11.841-17.466-13.898-4.9764-1.7827-6.5244-1.8708-13.016-0.7402-19.022 3.3123-21.955 14.237-24.75 14.237-1.7643 0-4.475 4.918-6.5088 11.809-4.1755 14.148 5.6648 32.681 20.35 38.325 6.2323 2.3955 15.507 2.9209 21.614 1.2241l3e-4 3e-4zm-19.211-41.799c-1.1044-5.1648-2.5337-6.4902-6.144-5.697-2.6768 0.5879-3.1039 0.3503-3.1039-1.7241 0-2.0149-0.2665-2.1848-1.6389-1.0457-6.7368 5.5911 7.3511-13.261 17.72-13.077 1.5699 0.0283 1.3452 0.564-1.1608 2.7678-4.5095 3.9661-1.8008 6.0627-0.7063 5.3862 0.615-0.3801 0.7799-1.2717 0.3662-1.9814-0.4136-0.71 0.1931-0.511 1.348 0.4417 3.2756 2.7019 8.91 4.5879 11.963 4.0044 1.528-0.2922 2.5326-0.2854 2.2323 0.0142-0.3 0.3-0.0753 1.4246 0.4998 2.4993 0.7126 1.3315 0.6475 2.0859-0.205 2.3701-1.6792 0.5601-1.1849 3.3484-2.4368 7.1343-0.6738 2.0376-1.1763 2.2632-2.9399 1.3193-1.9014-1.0178-5.3025-0.8413-12.663 0.6558-1.9436 0.3953-2.5089-0.1584-3.131-3.0679v1e-4zm42.747 14.864c1.9055-6.5547 1.4785-12.76-1.2667-18.414-0.8754-1.8027-1.2598-2.2947-0.8542-1.0925 1.6221 4.8066 1.6644 17.516 0.0732 22.108-2.0359 5.8765-0.3754 5.7324 2.0474-2.6008l3e-4 -3e-4zm-78.098-8.1724c-0.0657-1.5784 1.4911-7.3259 3.4602-12.772 3.4475-9.5359 3.8865-10.164 11.86-16.968 16.157-13.786 22.672-12.686 16.322-9.9302-3.9777 1.7261-11.025 7.0356-17.909 13.493-4.4484 4.1726-11.218 17.304-12.722 24.677-0.6595 3.2329-0.9227 3.6238-1.0114 1.5005h3e-4zm-114.92-5.5745c-1.7721-1.9402-3.512-4.4412-3.8663-5.5581-2.1571-6.7961 4.9192-16.045 12.276-16.045 5.2648 0 11.326 5.8464 11.326 10.925 0 5.2798-2.9821 10.538-7.0786 12.482-5.6314 2.6722-9.0076 2.191-12.656-1.8042zm14.459-1.5585c3.1713-2.8701 2.0824-13.553-1.6213-15.908-2.6583-1.6904-7.4385-0.8264-10.088 1.8232-3.4635 3.4636-3.718 10.487-0.4966 13.708 2.7079 2.7078 9.4021 2.9146 12.206 0.377v2e-4zm-7.5625-3.2859c-1.9919-0.804-1.6705-4.3892 0.467-5.2095 2.321-0.8906 5.2372 1.9246 4.3604 4.2092-0.6594 1.7185-2.237 2.0454-4.8274 1.0003zm731.13-10.749c0-17.556 0.9135-1.5481 0.3929 6.8721-0.2161 3.4319-0.3912 0.3396-0.389-6.8721h-0.0039zm795.03-0.6553c0-48.774 0.2276-55.616-1.639-55.616-1.4131 0-1.639 3.7634-1.639 27.316 0 35.769-2.1853 37.074-2.1853 0 0-23.412-0.2316-27.316-1.6202-27.316-1.8434 0-1.7045 7.4602-2.2433 55.179-0.1612-17.884-0.346-38.387-0.5071-56.272h16.39c-0.1611 17.884-0.3459 38.386-0.5071 56.272-0.6127-54.267-0.2468-55.179-2.7896-55.179-2.5164 0-2.1665 0.3308-2.1665 55.606 6.726 0.5303 10.384 0.8186-1.639 0.8088-10.996 1e-4 -8.2851-0.2438 0.5464-0.798zm-1454.5-20.278c-11.456-12.295-9.7892-32.424 3.7123-44.821 34.21-31.411 68.314 15.096 57.02 36.937-2.0515 3.9673-11.838 14.146-15.47 16.09-4.2731 2.2869-3.6328-0.6057 0.7808-3.5264 5.2559-3.478 13.444-13.564 12.663-15.599-0.3109-0.8103-0.0897-1.4731 0.4929-1.4731 0.582 0 1.0579-3.0732 1.0575-6.8291-7e-4 -5.2539-0.7213-8.3413-3.124-13.385-2.8687-6.0215-7.7456-12.072-7.8427-9.73-0.0714 1.6921-7.5656-8.8401-7.5913-5.957-0.011 0.9875 0.74 2.0854 1.6646 2.4402 1.9521 0.749 7.0419 11.127 7.033 14.34 0 1.8101-0.1877 1.9038-1.0652 0.5461-0.7061-1.0925-1.0647-1.1836-1.0759-0.2729-0.011 0.7607-1.361 1.3657-3.0516 1.3657-4.4978 0-7.9554 2.8486-7.7107 6.353 0.6547 9.3765-11.215 16.725-18.628 11.533-3.0035-2.1038-5.5909-7.7825-5.5909-12.271 0-3.2451-1.5618-4.5227-5.5292-4.5227-1.8314 0-1.9231-0.3281-0.788-2.8191 2.7156-5.96 17.693-10.212 23.219-6.5911 2.7733 1.8171 4.0946 1.4895 9.2444-2.2915 0.2577-0.1895-0.6807-1.936-2.0853-3.8818l-2.5538-3.5378 2.7019 2.4585c4.0713 3.7048 4.1055 1.1116 7.3523 5.4634 2.8114 3.7676 3.8464 2.1921-1.7864-3.6187-2.2535-2.325-3.9623-4.6494-3.7971-5.1658 0.165-0.5166-0.2198-0.6177-0.8556-0.2246-0.6356 0.3928-2.7374-0.2139-4.6708-1.3484-20.239-11.874-56.131 23.624-32.076 49.72 9.24 10.024 16.26 9.6511 30.746 10.834-14.006 0.2222-21.739 1.2202-32.395-10.215zm28.352-16.981c2.5853-2.5854 1.4871-5.8486-2.629-7.8115-3.2513-1.5505-4.2544-1.6338-5.7365-0.4756-3.9503 3.0864-3.1488 3.7378-1.8306 7.9592 0.6284 2.0115 8.2667 2.2571 10.196 0.3279zm80.515 24.236c-0.3784-0.6123-3.2347-2.4167-6.3472-4.0098-6.8112-3.4861-12.384-3.4211-26.419-4.5164 17.684 0.4246 20.016 0.1152 26.292 3.345 4.838 2.4893 9.5402 6.2947 7.7782 6.2947-0.3387 0-0.9254-0.501-1.304-1.1135h2e-4zm-97.233-2.5769c-6.3605-2.9993-9.6108-6.2205-11.967-11.86-2.3741-5.6821-2.1636-5.8245 1.8519-1.2507 6.0629 6.905 19.403 11.787 19.403 7.1008 0-3.321 2.7101-4.9158 4.8011-2.825 0.965 0.9651 1.7548 2.457 1.7548 3.3157 0 0.9783 1.1213 1.5547 3.0048 1.5442 2.1433-0.012 2.5718-0.291 1.4946-0.9731-2.7723-1.7554 3.0792-1.262 3.226-3.7275 0.0425-0.7104 0.4994-0.3088 1.0159 0.8933 0.7333 1.7063 0.9557 1.7917 1.0157 0.3899 0.157-3.6616 7.1669-3.5989 5.8219-0.095-0.4427 1.1538 0.6794 0.7219 3.2828-1.2639 7.0771-5.3984 2.2639-4.0151 9.8062-6.363l-2.0416 3.5134c-7.1949 12.382-28.483 18.196-42.47 11.601v-3e-4zm647.81-18.709c0-17.556 0.9136-1.5483 0.3929 6.8718-0.2161 3.4319-0.3912 0.3396-0.3889-6.8718h-4e-3zm62.63 0.8193c-0.7115-1.28-0.5689-15.768-1.6605-16.863-1.4226-1.4263-16.795-1.8359 2.3309-1.4387 0.2533 18.299 0.4302 20.282-0.6703 18.302h-1e-4zm-512.73-18.342c1.3254-1.0024 2.9738-1.3076 4.3706-0.8096 1.2335 0.4397 10.214 0.7046 19.957 0.5889 22.871-0.2725 27.351 1.9126-3.7185 1.8647-20.264-0.0307-22.506-0.2096-20.609-1.644zm44.763 0.4353c-0.7916-1.281 24.321-0.8345 23.039-0.395-2.6388 0.9038-22.514 1.2446-23.039 0.395h1e-4zm274.35 0.148-21.853-0.6138c53.431-0.4409 57.43-0.1772 57.125 0.1272-0.9855 0.9856-12.063 1.1384-35.272 0.4863l-2e-4 3e-4zm-341.72-1.7439c-6.6449-2.0435-11.704-7.1433-16.254-16.386-8.8397-17.956-3.8391-33.815 13.378-42.428 4.2942-2.1482 8.7252-3.906 9.8462-3.906 2.4727 0 3.4229-2.7354-1.2395-1.8027-3.8149 0.7629-4.2058-0.5471-1.0927-3.6604 2.6365-2.6365 10.249-2.9543 15.745-0.658 5.1823 2.1653 5.9482 3.9497 1.3772 3.2078-2.7084-0.4392-3.8584-0.1516-4.3329 1.0845-0.4617 1.2031 0.2528 1.8799 2.5067 2.375 4.8411 1.0632 11.565 6.4832 14.718 11.863 7.6591 13.069 4.4476 31.477-7.5449 43.247-3.7155 3.6465-5.7062 4.6851-10.406 5.428-10.287 1.626-20.463-2.4229-27.888-11.096-4.3069-5.0317-5.0039-4.5938-1.5592 0.98 4.0239 6.5107 13.302 11.58 23.393 12.781 5.3317 0.6345-4.0237 1.0083-10.649-1.0291h5e-4zm19.032-9.3689c2.2095-2.2097 4.7644-2.7305 3.5206-0.718-1.1484 1.8582 2.3944 0.3318 6.1547-2.6519 5.8292-4.625 10.354-20.218 7.839-27.016-0.8245-2.2288-1.131-1.697-2.2446 3.8901-0.7094 3.5591-1.8109 7.209-2.4478 8.1104-1.0294 1.4568-1.1079 1.4568-0.7058 0 0.2487-0.9014-0.2802-2.1787-1.1752-2.8381-1.6979-1.251-2.6844-8.0884-1.1672-8.0884 0.2711 0 1.0337 0.1531-9.8562-10.033-0.1104 0.0237-10.366 2.3237-10.741 1.9482-0.1555-0.1555 0.6251-1.2271 1.7346-2.3813 2.4049-2.502 1.1711-6.5471-2.3363-7.6604-1.7478-0.5547-1.8734-0.8896-0.6536-1.7415 3.2252-2.2532-7.3835 0.4673-12.376 3.1733-18.682 10.127-16.627 39.247 3.6423 46.555 6.6265 2.3894 18.18 2.0857 20.813-0.5469l-2e-4 -4e-4zm-17.608-13.402c-3.5364-3.7644-1.6111-4.8203-0.8583-14.037 0.2808-3.4319 2.2832-5.1292 5.1635-4.376 1.0675 0.2793 2.2714-0.0273 2.6752-0.6802 2.4395-3.9475 12.624 3.1873 12.624 8.8438 0 3.1475-3.7992 5.0527-4.8121 2.4131-1.2229-3.1868-2.9326-1.5029-2.2373 2.2039 1.3732 7.3196-7.3105 11.215-12.555 5.6328v-3e-4zm28.297-23.521c-4.6731-3.9944-5.7103-4.1362-3.8363-0.5237 3.8154 7.3535 10.496 6.2168 3.8363 0.5234v3e-4zm-6.0364-4.698c0.3419-0.4419 0.2893-0.5535-0.1168-0.2476-0.4061 0.3062-1.7583-0.3582-3.0048-1.4758-4.7085-4.2227-7.6517-3.7356-4.8206 0.7979 1.2545 2.0083 6.6209 2.634 7.9422 0.9255zm103.1 51.926c9.2515-0.5237 23.838 0.394 6.2399 0.3889-7.2114 0-10.02-0.179-6.2399-0.3928v0.0039zm32.08 0.2832c0.7312-0.7312 87.385-0.7944 88.115-0.0645 0.7913 0.7915-88.8 0.7495-88.115 0.0642v3e-4zm122.49-0.289c17.198-0.4639 47.389 0.3459 12.839 0.3459-14.123 0-19.9-0.1558-12.839-0.3459zm-252.7-3.3389c6.1616-4.2239 9.7145-8.157 13.238-14.655 3.5305-6.511 3.7238-7.4346 3.7238-17.794 0-10.624-0.1189-11.149-4.296-18.969-4.1117-7.697-18.102-24.036-22.677-26.485-4.2024-2.2493-13.108 1.6326-21.577 9.4043-13.831 12.692-12.014 8.0691 12.863-13.12 0.1964-29.276 0.6075-90.554 0.7222-107.63l7.1022-2e-4c0 74.536 0.0947 108.17 0.9648 108.17 0.5308 0 5.5072 5.2854 11.059 11.746 13.325 15.507 16.7 22.518 17.289 35.917 0.3975 9.0537 0.161 10.583-2.5831 16.698-4.5378 10.112-16.146 18.671-17.231 18.623-0.7169-0.0317-0.0863-0.8921 1.4023-1.9121l1e-4 5e-4zm69.955-24.386c2.8661 0.2371 5.3287 0.4409 8.1948 0.678v22.946c-6.0647 0.4343-3.5861 0.2571-9.6038 0.6875 1.165-8.5001 1.409-8.7901 1.409-24.311zm1165.9 19.8c2.6676-1.7236-1.6763-0.2671-7.4855-2.292l-3.4409-1.1995c0-4.8049-0.2959-60.054 1.0012-63.466 1.4773-3.8857 4.2388-6.2302 7.5448-6.4053 6.7413-0.3569-12.88-1.6152 3.4731-1.8586 5.1081-0.0767 10.025 0.3384 10.926 0.9209 1.98 1.2795-1.7401 1.072-7.232 1.092 0.035 19.866 0.1085 61.491 0.129 73.106 7.1319 0.5803 9.9478 0.7976 1.639 0.9802-5.6332 0.1238-7.6826-0.1506-6.5559-0.8789l7e-4 6e-4zm-34.236-0.7286c-0.4385-0.4385-0.7285-11.75-0.7285-71.386h21.853c0 8.8713 1.465 7.6484-9.8713 7.6484 0.1855 17.539 0.3982 37.64 0.5838 55.179 10.735 0.7769 9.2875-0.6658 9.2875 9.2874-8.4511 0-20.3 0.0966-21.124-0.7286zm55.712-11.837c0.3466 1.2021 1.188 2.5681 1.8697 3.0364 1.6229 1.1143 16.139-0.2256 17.902-1.6523 1.0174-0.8232 1.3658-7.2039 1.3658-25.01 0-28.781 0.2125-28.275-11.885-28.275-4.9139 0-7.9314 0.5024-8.7189 1.4509-1.6239 1.957-1.7274 36.933-1.8785 47.172 0.314-51.304 0.6361-48.494 2.3058-55.725h26.186v71.022c-8.9145 0.2146-16.574 0.3992-25.489 0.614-1.8674-9.4082-2.2788-14.784-1.6585-12.633zm-1233 5.7366c-1.3688-1.6804-3.4984-7.1289-4.3276-9.1316 11.086-2.5776 12.08-2.6145 43.415-2.6145v13.112c-22.552 0-37.742 0.2859-39.087-1.3657h-2e-4zm3.5763-24.858c3.115-0.7927 34.82-1.5203 23.492 0.0457-8.052 1.1133-27.894 1.0745-23.492-0.0459v2e-4zm34.965-0.0164c-5.6501-1.0327 40.974-1.2991 40.974 0.0935 0 1.1868-34.4 1.1084-40.974-0.0928v-7e-4zm6.822-67.408-0.618-60.868c9.3037-10.18 10.636-11.29 14.415-19.215 35.562-0.0237 34.887-0.2043 48.016-1.4438l45.344 46.786 230.21 1.0925c0.4312 3.0354 0.2696 1.8979 0.6982 4.917-50.181 0.2185-77.759 0.3472-232.52 1.062-31.581-32.157-35.601-36.255-45.002-45.67-4.4608-0.094-36.252-0.8857-38.613-0.3721-2.3363 0.5093-12.686 12.87-15.087 15.633v118.94h-6.2178l-0.6183-60.868 2e-4 0.0034zm363.76 11.14c-10.458-3.5845-15.676-14.623-11.097-23.477 2.4888-4.8123 8.6065-8.9348 14.194-9.5647 15.291-1.7236 26.724 17.413 12.308 29.753-10.498 8.9858-9.164-0.5718-10.178 18.598-1.0565-14.273-0.3604-13.642-5.2277-15.31zm8.4347-8.1301c3.287-1.2498 5.6053-7.9065 3.8777-11.134-5.8894-11.004-24.014 0.032-12.944 9.3462 3.6788 3.0955 4.9626 3.3486 9.0668 1.7881zm787.39-33.05c-0.6896-67.221 1.3208-89.568 0.5459 53.213l-0.5459-53.213zm5.4637 0.4877v-52.179c-14.554-15.153-70.31-76.148-141.77-149.41-31.96-32.768-8.0623-11.54 26.527 25.404 47.876 51.136 61.629 61.996 116.33 123.73 0 18.34 0.1457 104.63-0.5463 104.63-0.3005 0-0.5463-23.48-0.5463-52.179v3e-4zm5.167 39.34c-0.6063-16.072-0.5369-78.48-0.5499-94.605-21.053-21.506 30.925 32.451-157.76-165.72-7.3908-0.1558-13.741-0.2893-21.132-0.4451 3.3983-0.1365 17.969-0.8984 20.909-0.1611 4.8611 1.219 154.87 160.95 159.88 166.14 0.0213 47.672 0.4406 142.01-1.3408 94.787v3e-4zm4.6668-40.155c0-144.18 2.4898 50.867 0.7705 52.587-0.4237 0.4235-0.7705-23.241-0.7705-52.587zm-76.322-49.641c-0.1819-2.9531-4.642-7.7896-42.642-46.239-21.37-21.623-25.003-24.86-27.921-24.874-1.8451-0.011-4.0922-0.5474-4.9936-1.1956-1.3631-0.9807-1.3021-1.0698 0.3625-0.5295 9.2932 3.0151 1.6371-6.4436 28.338 20.044 10.753 10.667 25.939 26.133 33.745 34.368 12.39 13.071 14.136 15.362 13.734 18.029-0.4146 2.7532-0.4762 2.7927-0.6238 0.3984zm57.04-26.834c-109.63-115.14-139.08-147.65-143.2-147.31-3.2907 0.2703-3.5453-1.8447 0.5203-1.8447 3.4597 0 9.1869 5.6399 57.649 56.77 29.357 30.973 105.03 109.21 104.13 111.24-0.1992 0.4526-8.7931-8.0315-19.098-18.854v-3e-4zm89.804 14.816c-0.3457-0.5596-0.2519-1.1897 0.2087-1.4001 1.7761-0.812 17.773 0.4578 17.773 1.4109-1e-4 1.321-17.165 1.3109-17.982-0.0108zm42.778-0.7742c-1.6803-1.6802 0.8761-2.0063 12.519-1.5972 9.8725 0.3469 11.509 0.6128 8.0291 1.3027-5.3241 1.0562-19.582 1.2603-20.548 0.2945zm-4952.6-38.546c0-33.392 0.5815-51.606 2.6021-18.12 0.9312 15.42 3.4795 18.606 0.4712 47.483-0.0908 0.876-0.8184 2.8425-1.6162 4.3706-1.2319 2.3601-1.4512-2.7212-1.457-33.734v3e-4zm4944.7-32.603c-4.5373 0.2415-8.4533 0.1094-8.7021-0.2932-0.5341-0.864 43.22-3.647 44.814-1.0671 0.6165 0.9976-4.8472 1.3171-22.064 1.29-3.3551 0-4.7108 0.4795-5.0633 1.8101-0.4098 1.5469-0.5003 1.52-0.6082-0.1807-1e-4 -2.2567-3.078-1.8409-8.3766-1.5591zm-37.05-0.5408c0.8056-2.1057 23.262-0.2764 24.098 0.5596 0.8277 0.8276-24.93 1.6164-24.098-0.5596zm-234.96-34.692c-2.6501-0.6743-2.8071-0.8586-0.8195-0.9631 2.9993-0.1577 3.314-2.3147 0.3376-2.3147-1.1664 0-2.3946-0.4431-2.7292-0.9844-0.3346-0.5415 1.1115-0.9355 3.2135-0.876 3.4322 0.0972 3.8219 0.4204 3.8219 3.1694 0 1.6838-0.1229 3.0032-0.2732 2.9324-0.1503-0.071-1.7482-0.5046-3.5511-0.9634v-2e-4zm-138.82-2.0791c-0.5709-0.5425-2.0214-1.2231-3.2233-1.5122-1.202-0.2893 3.2233-0.4827 9.8339-0.4302 22.085 0.1748-6.5638 0.0562-5.4356 1.8811 0.817 1.3218 0.186 1.3547-1.175 0.061v3e-4zm24.093-0.1059c-0.9396-1.5205-5.5121-0.8611-4.749-1.6248 1.0709-1.071 114.56-1.9297 114.56-0.8669 0 0.6199-4.2849 0.9197-10.469 0.7322-9.7194-0.2944-10.365-0.1841-9.0144 1.5405 1.2958 1.655 1.2541 1.7009-0.3822 0.4207-2.5442-1.9905-14.007-3.1221-14.007-1.3831 0 0.7603-0.5655 0.9607-1.3473 0.4773-1.875-1.1589-10.722-1.3535-10.022-0.2207 0.8099 1.3103-0.3046 1.1458-2.9932-0.4414-1.4476-0.8547-2.4637-0.957-2.7153-0.2732-0.2465 0.6702-5.0999 0.9482-12.549 0.7195-9.921-0.3049-11.994-0.105-11.314 1.0925 0.671 1.1807 0.5468 1.2002-0.6385 0.0996-1.7466-1.6211-6.9316-1.8591-5.9514-0.2732 0.8984 1.4539-1.639 1.4597-1.639 0 0-1.3494-15.609-1.6135-13.112 0 2.2922 1.4814-0.7656 1.4126-1.639 0-0.8131-1.3152-12.935-1.6504-10.38 0 2.2922 1.4814-0.7656 1.4126-1.6389 0v1e-3zm-829.32-12.939c-10.408-6.363 11.307-5.636-111.52-5.636-78.225 0-105.44-0.323-106.02-1.2583-0.4277-0.6919 0.1289-1.9211 1.2371-2.7317 3.8026-2.7808 197.97-0.3389 204.6-2.6499 1.8566-0.6472 4.6597-2.8606 6.2292-4.918 7.1893-9.4258 19.501-9.342 24.011 0.1633 5.5513 11.699-7.9611 23.498-18.539 17.031v-2e-4zm777.81-39.767c-0.6945-1.123 20.951-1.0471 19.996-0.0918-1.0321 1.032-19.363 1.1164-19.996 0.0918zm21.844-0.0142c-0.7126-1.1545 102.64-0.7458 112.99-1.3064 9.0937-0.4922 11.092 1.5762-1.0365 1.5896-27.983 0.0613-111.31 0.7722-111.96-0.2832zm-662.96-40.974c-38.242-39.236-73.289-74.138-76.691-76.374-6.3964-4.2036-266.02-0.6025-269.71-4.2874-2.0009-2.001-2.4001-13.54-0.5859-16.93 1.1086-2.0713 3.7285-2.1135 131.7-2.1135 106.95 0 131.2 0.2661 134.08 1.4707 4.0571 1.6973 118.79 116.55 118.79 120.67 0 3.1855 3.1174 10.072 4.5596 10.072 1.0648 0 1.2476 2.1853-4.3273 2.1853-3.8234 0-5.5792-1.6108-37.822-34.692v3e-4zm-3864.6 14.295c-0.9604-0.9602-0.9761-20.644 0.0674-19.6 0.6006 0.6001 1.3521 20.329 0.7749 20.329-0.0625 0-0.4419-0.3279-0.8423-0.7285v-3e-4zm4166.9-11.285c-7.0398-4.2917-10.71-16.119-5.3844-7.3223 4.7697 7.8792 11.397 10.2 18.925 6.6277 3.7876-1.7974 5.4599-3.9626 7.0131-9.0813 0.8331-2.7454 0.8499-2.7498 0.9421-0.2327 0.2059 5.6182-7.7928 12.193-14.822 12.184-1.7121 0-4.7154-0.9812-6.674-2.1755v3e-4zm-173.68-21.312c-75.152-76.221-79.82-88.395-117.79-127.29-34.585-35.432-52.774-56.38-85.792-89.045-149.64-4.585-266.74-1.564-270.23-4.1172-1.7412-1.2744-2.0852-3.491-2.5089-16.165-0.3662-10.956-0.1312-15.177 0.9253-16.611 1.6479-2.2373 13.252-1.9763 316.68-3.356-1.7856-8.3757-1.6619-9.7764-1.5869-28.04-17.559-0.0308-298.3-0.5229-315.86-0.5537-0.6525-31.189-0.8844-28.823 2.7819-34.418 119.33 0.2583 110.64-1.0664 114.32 6.7053 1.3207 2.7864 3.9702 6.1836 5.8879 7.5493 3.8381 2.7329 11.685 3.9307 17.995 2.7468 5.4222-1.0173 12.786-8.0369 15.814-15.074 8.0382-18.686-8.6329-39.551-28.579-35.769-3.0123 0.5713-6.7894 1.9243-8.3934 3.0066-5.1975 3.5066-7.2032-0.1802-77.913 0.988l-40.032 0.6611c-2.288-4.2749-2.5402-2.3464-1.8849-34.735 443.9-1.4243 414.39-1.5752 428.01-2.9768 8.861 8.8765 63.914 64.025 72.78 72.906 0.925 22.447 0.5682 13.789 1.486 36.057l-3.6508-3.4958c-7.0383-6.7393-14.504-8.3586-22.271-4.8306-6.2241 2.8271-9.5428 7.2847-11.283 15.154-1.9692 8.9065-0.9866 13.505 4.0035 18.736 8.061 8.4507 21.155 8.8176 28.548 0.8005 1.4569-1.5798 3.0549-2.8726 3.5511-2.8726 0.8239 0 0.8799 35.891 0.8434 94.514l-7.346 3.2722c-13.769 6.1331-26.202 21.192-30.343 36.753-1.8109 6.8042-2.0327 22.276-0.4195 29.275 3.0414 13.196 14.112 27.848 26.316 34.831 9.3281 5.3369 17.998 7.1255 31.506 6.5007 13.573-0.6279 19.644-2.5042 29.758-9.198 9.2875-6.147 15.161-12.912 20.239-23.309 3.5486-7.2664 4.0545-9.3628 4.465-18.502 0.2762-6.1509-0.1342-13.422-1.0176-18.029-2.5368-13.23 0.7463 14.549-2.3929-190.77-10.463-10.418-75.556-75.228-86.036-85.663l5.5276-5.5276c23.675 23.711 74.122 74.236 87.912 88.048 1.5634 90.916 1.6449 114.32 2.9673 299.28-4.8912 0-4.4139-0.6492-18.248 12.878-61.762 0.8652-61.31 0.596-88.742-0.312zm-75.325-215.65c14.842-5.2163 29.488-17.401 35.722-29.718 4.7774-9.4392 6.4885-16.342 6.4848-26.159-0.0197-48.304-48.562-75.925-86.813-56.954-16.104 7.9827-25.904 19.478-31.788 37.286-2.7673 8.376-2.5765 26.429 0.3772 35.698 2.921 9.166 11.176 21.227 18.968 27.711 7.4209 6.1758 19.798 12.452 27.716 14.056 7.7397 1.5671 22.082 0.6287 29.332-1.9194v-3e-4zm-31.024-7.0286c-14.801-3.3718-29.469-15.466-36.274-29.909-3.175-6.739-3.5573-8.6553-3.9248-19.679-0.3419-10.26-0.0372-13.318 1.9047-19.121 2.6426-7.8965 9.9401-18.21 16.753-23.677 14.864-11.928 36.66-14.962 55.863-7.7776 21.23 7.9431 36.02 34.478 32.304 57.958-2.8818 18.21-16.884 34.832-34.34 40.762-7.2017 2.4466-24.491 3.2198-32.286 1.4439zm23.123-5.1479c24.4-4.5537 42.372-30.115 38.164-54.281-3.0549-17.542-14.38-31.212-30.597-36.934-43.602-15.384-79.237 27.29-61.513 64.938 3.3473 7.1101 14.094 18.367 20.802 21.789 9.604 4.8994 21.968 6.5735 33.144 4.4875h1e-4zm-21.445-7.3696c-25.177-8.95-36.617-32.279-27.96-54.171 4.6357-11.724 20.582-24.798 30.16-24.727 2.6279 0.0195 1.653 0.7073-4.917 3.4688-10.818 4.5474-20.533 13.904-23.58 22.709-3.0549 8.8298-2.7682 21.812 0.6377 28.865 3.1536 6.531 13.217 16.965 18.934 19.631 6.1104 2.8496 5.9948 1.5149-0.2673-3.082-11.632-8.5381-16.941-18.496-16.933-31.756 0.0109-10.53 2.9146-17.173 10.632-24.287 3.8755-3.5725 14.44-10.132 16.318-10.132 0.1927 0 0.4121 1.8438 0.4875 4.0974 0.1165 3.4771-0.3859 4.4316-3.318 6.3047-4.1671 2.6621-8.291 11.988-8.3405 18.861-0.0437 6.1265 1.9126 10.585 7.4536 16.988 4.5282 5.2322 4.5321 5.2441 4.5321 14.288 0 11.528 1.3015 13.109 9.988 12.134 6.7091-0.7532 7.7839-2.5676 11.074-5.8274l-3.194-17.638 3.1825-3.0244c8.0444-7.6445 8.6968-18.057 1.7433-27.822-2.2271-3.1277-2.238-3.3633-0.4545-9.7197 2.3936-8.531 1.6801-10.429-4.6537-12.378-2.8163-0.8667-4.27-1.6099-3.2305-1.6516 3.8289-0.1543 10.675 3.3767 10.675 5.5059 0 1.1365 0.4225 2.0664 0.939 2.0664 1.7988 0 11.303 9.1367 14.112 13.567 3.3196 5.2349 5.4425 10.806 6.8796 14.296-1.0142-6.6025-1.6942-13.8-10.079-23.138-2.6034-2.8994-3.5262-4.2878-2.0509-3.0859 4.7498 3.8691 6.6511 6.4136 10.206 13.658 3.1361 6.3909 3.4854 8.0894 3.4854 16.959 0 8.9272-0.3375 10.542-3.5774 17.124-4.0742 8.2759-12.452 16.654-20.694 20.695-7.0117 3.4375-20.33 4.0139-28.19 1.2202h5e-4zm9.7984-6.2329c-2.3993-2.3992-2.6819-3.6008-2.6819-11.398 0-8.5103-0.0808-8.7737-3.4052-11.141-4.0786-2.9043-7.4642-9.8623-7.4972-15.409-0.0677-11.455 9.7683-21.041 19.045-18.56 5.9232 1.584 4.5798 3.4651-2.4749 3.4651-6.0914 0-6.7598 0.2573-9.8711 3.8008-5.8309 6.6414-5.9083 16.85-0.1707 22.587 6.9033 6.9033 19.671 0.7683 19.671-9.4519 0-2.3191-2.6635-9.2424-3.5792-9.3042-0.1349-0.0107-2.2119-0.7249-4.6157-1.5908-3.1676-1.1414-3.679-1.5879-1.8578-1.6226 4.7699-0.0906 11.081 5.4666 7.9861 1.7349-1.3246-1.5967-1.2922-1.7454 0.2511-1.1531 2.1401 0.8213 5.6364 6.4231 6.6239 10.614 0.9419 3.9961-2.356 11.456-6.6681 15.085-1.8066 1.5203-3.5636 3.4709-3.9043 4.3345-0.4678 1.186-0.6404 1.1023-0.7056-0.3418-0.1036-2.301-2.766-1.9121-6.7242-1.9121 0.3856 12.401 0.2433 7.8228 0.6284 20.214 6.1168 0.5967 10.243 1.3713 8.2544-7.2539-1.618-7.0171-1.2017-8.9233 0.5635-2.5801 1.9923 7.1602 1.9537 7.8035-0.6229 10.38-2.8837 2.8838-4.9911 2.7568-8.2446-0.4966l-2e-4 2e-4zm-3.2861-34.532c-1.524-1.6841-1.7528-2.6973-0.9106-4.0325 2.4607-3.9011 4.1035-1.6995 8.0708 1.9963v-2.2925c0-4.4109 4.755 0.636 0.1871 4.7695-2.666 2.4127-4.8854 2.2797-7.3473-0.4408zm580.25 247.61c-14.513-14.841-15.334-15.915-16.021-20.962-0.9366-6.8838-0.8936-94.245-0.9156-105.79 12.852 16.16 104.04 105.96 106.53 107.28 2.8657 1.5146 7.1123 1.6416 33.788 1.0103 16.78-0.397 30.683-0.8948 30.894-1.1057 0.4497-0.45 1.29-115.25 1.6714-163.6-16.53-16.72-10.154-10.271-26.552-26.858-5.0744-0.0461-144.83-1.52-148.79-0.7141-3.3928 0.6904-3.9677 2.9507-1.0927 4.2952 2.536 1.186 142.61 2.0334 147.27 2.071 13.803 14.211 17.627 18.149 22.286 22.946 0.429 69.599 0.325 81.607 0.076 156.8h-57.671c-13.134-13.312-94.724-96.002-107.87-109.32-1.298-19.033-3.2441-36.042 4.2321-33.174 3.4782 1.335 0.1243 21.325 3.4625 28.146 2.2242 4.5447 99.464 102.39 103.76 106.74l46.438-0.0371v-145.92c-6.4207-6.3875-11.938-11.876-18.358-18.263-18.377-0.1384-143.49-0.7556-145.22-2.1343-0.8787-0.7002-2.1459-0.4719-3.7964 0.6843-3.328 2.3311 1.2045 5.2739-111.35-108.63h-21.918c-130.02-133.04-133.04-136.71-188.71-190.12-556.15 0-607.9 0.2628-610.7-1.7009-2.0416-1.4301-2.4285-2.7251-2.4285-8.1304 0-3.5363 0.4269-6.6934 0.9485-7.0156 1.2856-0.7944 291.16-1.0721 706.54-2.9785l21.853 22.148c19.867-0.4911 36.95-0.9133 56.818-1.4043l6.9999 6.3362c9.2708 8.3917 8.1432 5.1489-0.3565-2.274l-6.3286-5.5269c-19.23-0.3646-38.402-0.728-57.63-1.0927-6.9755-6.9315-16.439-16.204-16.439-17.363 0-0.7488 59.355-0.7979 378.99 0.4393 2.8157-3.9542 1.7856-2.5077 4.7094-6.6136-1.2413-2.1182-5.1747-9.5057-7.5555-10.128-1.5025-0.3926-1.4079-0.5272 0.441-0.6267 2.7181-0.1458 4.3963 3.4919 9.2078 12.017l-2.7475 3.2651c-15.796 18.772 12.564 44.56 29.282 23.636 4.297-5.3779 5.2062-14.63 2.0119-20.47-2.7614-5.0485-9.6927-9.8458-15.314-10.6-4.0964-0.5496-4.9626-1.2585-9.1683-7.5056-2.5545-3.7943-5.8861-7.5417-7.4034-8.3278-6.0557-3.137-1088.7 0.2216-1093.7-4.7621-0.6306-0.6312-1.2017-4.7766-1.2693-9.2122-0.0951-6.2534 0.2723-8.3535 1.6364-9.3511 7.3147-5.3486 1115.9-6.9404 1150.1-4.135 13.452 10.315 15.046 11.452 24.51 19.649l0.8206 277.36c-27.394 17.361-31.125 17.292-31.606 21.442-0.1831 1.5793 0.4597 3.6594 1.4312 4.6311 1.5703 1.5703 2.1757 1.5913 5.5225 0.1931 5.1355-2.1458 4.7158-0.7593-1.2901 4.261-15.54 12.99-21.366 46.911 3.0294 68.845 5.8352 5.2463 19.394 12.624 23.2 12.624h2.3116c-0.0418 18.419-0.3035 133.65-0.3456 152.19-13.298 13.344-8.73 8.7595-22.561 22.638l-180.33-0.1443-15.297-15.643h5e-4zm104.53-251.12c1.5802-2.5566-1.2314-5.1624-5.5707-5.1624-3.9863 0-5.5417 1.2617-5.5417 4.4951 0 2.9239 9.3702 3.4864 11.112 0.6673zm16.755 1.3919c2.1275-0.8088 2.7876-1.7354 2.5296-3.551-0.296-2.0847-1.1144-2.5063-5.4013-2.7842-5.9518-0.3857-7.6898 1.7896-4.2103 5.269 2.4733 2.4734 3.1234 2.5713 7.082 1.0662zm-131.33-2.3084c2.8838-4.6084-4.7449-7.5208-9.6887-3.6987-2.0792 1.6072-2.069 1.6836 0.5258 3.8787 3.0157 2.5512 7.509 2.4629 9.1629-0.18zm18.02 0.9988c3.5133-3.5134-1.8358-7.7434-6.8837-5.4436-4.628 2.1086-2.7492 6.7549 2.7316 6.7549 1.5625 0 3.431-0.5901 4.1521-1.3113zm18.782-0.3139c2.4441-2.9451 0.4825-4.9307-4.871-4.9307-4.5074 0-4.9512 0.2366-4.9512 2.6406 0 1.4521 0.6146 2.8884 1.3658 3.1917 2.8071 1.1328 7.1528 0.6694 8.4564-0.9014v-2e-4zm19.504-2.3301c-0.5424-2.8562-9.0426-3.5974-10.086-0.8794-2.1934 5.716 11.228 6.8974 10.086 0.8794zm18.635 2.4546c2.3761-2.8628 0.2279-5.0552-4.9532-5.0552-5.2368 0-7.1766 2.012-4.7541 4.9307 1.6939 2.0412 8.0491 2.1228 9.7073 0.1245zm20.486-0.1524c2.5095-6.5396-16.015-6.5867-10.525 0.0278 1.8197 2.1929 9.681 2.1719 10.525-0.0273v-5e-4zm57.643-0.8696c0.9648-1.5835 0.7699-2.2983-0.9814-3.5991-4.4875-3.333-11.759-0.1409-10.018 4.3977 0.9893 2.5779 9.3101 1.9741 10.999-0.7983l-1e-4 -3e-4zm18.562 0.852c3.3781-3.3782-0.8245-6.4985-7.0704-5.2493-6.8848 1.3772-3.1032 6.9199 2.278 6.9199 1.717 1e-4 3.8736-0.7519 4.7924-1.6706zm17.462-0.6403c2.1894-3.1257 1.106-5.3376-2.6149-5.3376-4.3807 0-6.5284 1.0447-6.5284 3.1763 1e-4 4.5866 6.3869 6.0966 9.1433 2.1613zm-241.89-0.407c5.6394-6.7949-14.493-6.4797-8.0588-0.0454 2.1276 2.1274 6.3113 2.1511 8.0588 0.0459v-5e-4zm17.313-2.3301c-0.308-1.5996-1.3566-2.0544-4.7363-2.0544s-4.4283 0.4548-4.7363 2.0544c-1.0042 5.2148 10.5 5.3354 9.4726 0zm17.761 2.198c1.239-1.4932 1.1456-1.9861-0.6215-3.2781-4.5771-3.3469-12.506-0.4546-9.3105 3.3962 1.8017 2.171 8.0944 2.096 9.932-0.1181zm73.608-6.2678c2.8129-2.0569 1.456-6.9985-2.3156-8.4324-3.7512-1.4263-8.0169 1.2102-8.0169 4.9553 1e-4 4.4204 6.1926 6.5044 10.332 3.4771zm38.201 0.8059c3.8269-1.4685 0.6897-10.263-3.6611-10.263-3.0318 0-6.6297 3.2654-6.6297 6.0171 0 3.9492 5.3317 6.1489 10.291 4.2461zm20.79-1.6492c1.3531-1.2512-0.4669-6.394-2.7755-7.8425-2.6268-1.6479-7.4605 0.0339-8.8477 3.0784-1.0114 2.2197-0.8756 3.0872 0.7666 4.9019 1.5836 1.7498 2.8032 2.0618 5.9097 1.511 2.153-0.3818 4.379-1.1235 4.9469-1.6484v-4e-4zm19.384-0.1628c1.2398-1.9519 1.133-2.3853-1.3741-5.5725-2.6599-3.3813-5.2867-3.6462-8.7056-0.8779-1.8867 1.5278-2.3027 2.6716-1.7593 4.8369 0.3915 1.5598 1.572 3.0781 2.6233 3.3738 2.8564 0.8039 8.2402-0.2244 9.2157-1.7603zm-170.68-0.7781c2.574-2.574 1.8607-5.2595-1.7632-6.6375-6.1925-2.3542-10.8 3.4668-5.6174 7.0972 3.203 2.2434 4.7755 2.1455 7.3806-0.4597zm18.581-0.709c1.7856-1.6992 0.7897-4.2561-2.4553-6.303-2.9853-1.8831-7.8439 0.478-8.2528 4.0107-0.5663 4.8906 6.4091 6.3838 10.708 2.2925v-2e-4zm18 1.4006c2.8341-2.0723 1.4875-7.0066-2.1622-7.9224-3.0965-0.7773-8.1703 1.9788-8.1703 4.4375 0 1.8447 4.1361 4.9539 6.5902 4.9539 0.9534 0 2.6374-0.6611 3.7423-1.469zm17.891 0.5142c1.908-1.2097 1.2219-6.7131-1.011-8.1104-4.4356-2.7754-10.838 2.6323-8.4697 7.1528 1.0679 2.0382 6.8544 2.6224 9.4807 0.9576zm19.632-2.3801c0.2037-1.7478-0.5225-3.5557-1.9451-4.843-4.423-4.0029-10.527 0.905-8.3099 6.6819 0.4467 1.1643 1.9378 1.5278 5.2765 1.2864 4.0701-0.2945 4.6945-0.6864 4.9785-3.1253zm38.246-0.0362c0.9164-7.885-11.801-6.7676-11.801-1.0837 0 3.0884 2.4882 4.572 7.0973 4.2319 3.7919-0.28 4.4193-0.6997 4.704-3.1482zm76.068 2.7083c2.2532-0.8645 2.2111-4.6406-0.0798-7.1724-2.0535-2.269-6.9403-2.6462-8.8997-0.687-1.4023 1.4023-1.7899 6.5869-0.5827 7.7942 0.9104 0.9104 7.2472 0.9536 9.5623 0.0657l-1e-4 -5e-4zm19.679-1.0537c2.1877-2.1877 2.1663-3.6238-0.0918-6.1187-2.5258-2.791-7.5024-2.5679-9.6025 0.4304-0.9355 1.3357-1.7009 2.7754-1.7009 3.2 0 1.8411 3.6858 4.2053 6.5559 4.2053 1.717 0 3.8945-0.7727 4.8389-1.717h4e-4zm17.482 0c3.4941-3.4941 1.3605-8.1167-3.7462-8.1167-3.5213 0-5.4633 1.8379-5.4633 5.1707-1e-4 4.009 6.172 5.9833 9.2095 2.946zm-241.99-0.9622c1.7233-2.0764 0.4981-5.7705-2.1978-6.626-5.0686-1.6089-10.245 3.219-6.9661 6.4978 2.153 2.1529 7.4223 2.2266 9.1639 0.1282zm213.44-62.171c4.5249-1.8906 9.9912-8.1155 11.716-13.342 1.06-3.2117 1.0647-5.3369 0.0219-9.9963-3.9557-17.676-24.21-22.597-35.19-8.55-1.9832 2.5371-2.61 4.9055-2.8918 10.926-0.326 6.9656-0.0579 8.157 2.8547 12.693 5.3326 8.3049 15.139 11.757 23.489 8.2686l1e-4 -4e-4zm-14.197-6.1243c-8.5663-5.2231-10.444-16.415-4.0327-24.034 10.918-12.975 30.148 0.7124 23.919 17.024-3.2399 8.4834-12.257 11.662-19.886 7.0105zm11.722-2.7981c3.453-1.7856 6.5201-6.6602 6.5201-10.362 0-5.5217-6.2021-12.019-11.473-12.019-3.2836 0-8.156 3.3113-9.9352 6.752-2.3319 4.5093-0.6552 10.533 4.0291 14.474 3.8359 3.228 6.3358 3.4937 10.859 1.1548v2e-4zm-9.2614-6.2344c-3.3469-4.7783-1.3397-10.683 3.6314-10.683 3.7425 0 6.6868 3.0105 6.6868 6.8372 0 5.8928-7.0452 8.519-10.318 3.8461zm-18.092-5.5317c0-3.7507-0.1953-4.0305-2.1118-3.0049-2.875 1.5388-176.45 1.1311-250.91 1.1311-9.9697-10.509-18.536-19.539-28.506-30.048l1.6202-3.8242c2.5241-5.9578 2.2257-17.143-0.6002-22.503-4.3187-8.1914-12.648-13.53-21.138-13.549-9.0211-0.0195-20.771 7.0208-24.368 14.601-2.7084 5.7075-2.3107 15.014 0.9135 21.376 6.6711 13.165 21.709 17.611 35.479 10.49l3.0988-1.6023c10.722 10.982 19.943 20.426 30.665 31.408l255.86-0.3406v-4.1357h0.0014zm-311.4-31.147c-5.9753-3.2651-8.7412-8.178-8.7412-15.526 0-10.463 6.4305-17.527 16.618-18.254 17.591-1.2551 26.303 20.7 12.594 31.74-5.3682 4.323-14.608 5.2437-20.47 2.0398zm15.078-2.8564c5.7464-2.99 8.4138-6.9475 8.4138-12.484 0-13.658-16.361-20.516-25.403-10.649-2.0381 2.2241-3.5518 5.0466-3.5518 6.6233 0 1.511-0.4916 2.7476-1.0927 2.7476s-1.085 0.8604-1.076 1.9121c0.0142 1.634 0.1707 1.6738 1.076 0.2732 0.8899-1.377 1.0618-1.3103 1.076 0.4172 0.0109 1.1311 1.0741 3.7673 2.3664 5.8582 3.7995 6.1479 11.982 8.5322 18.192 5.301v5e-4zm-8.3261-8.4356c-1.8106-0.6729-2.4352-1.647-2.1853-3.4077 0.2833-1.9951 1.2355-2.5833 4.9939-3.085 4.1689-0.5564 4.642-0.3889 4.6271 1.6392-0.0328 4.3892-3.1716 6.4382-7.4355 4.8535h-2e-4zm398.62 38.279c-43.583 0.7603-48.077 0.6907-48.077 3.4648 0 2.4482 1.1073 2.0989 48.077 2.0989v-5.5637zm-263.59-21.212c11.242-2.6504 18.488-7.0469 28.178-17.096 37.486-38.879 10.73-95.215-29.1-103.76-8.1062-1.7384-31.583-0.6644-38.697 1.7705-12.17 4.1654-28.433 19.135-34.423 31.686-3.6949 7.7419-6.5029 19.147-6.5328 26.534-0.101 24.621 17.553 54.004 45.624 60.809 8.366 2.0281 26.46 2.0559 34.951 0.0535v4e-4zm-14.307-18.022c1.0016 0 1.6145-0.2065 1.3621-0.459-0.7615-0.7612-14.296 1.644-13.362 0.1338 1.025-1.6582-4.7524 1.2932-3.5999-0.5718 0.3846-0.6221-0.3286-1.4573-1.5844-1.8557-4.4902-1.4253-1.3735-1.509 3.3954-0.0908 10.727 3.189 23.091-2.1594 24.354 1.1326 0.3158 0.8228-0.2523 1.7346-1.2623 2.0261-3.5413 1.0217-7.1266 2.5857-3.4755 0.3459 3.4803-2.135 1.095-2.24-3.8594-0.1699-5.1711 2.1602-4.2707-0.4912-1.9681-0.4912zm12.482-2.6125c-1.0093-1.2161-0.6538-1.7378 1.7784-2.6106 5.6077-2.0117 12.238-7.8096 15.563-13.609 1.8139-3.1638 3.452-6.1995 3.6403-6.7461 0.1902-0.5522 1.288-0.4456 2.4694 0.2397 2.0383 1.1826 2.0244 1.2356-0.3314 1.2673-1.3522 0.0186-2.4585 0.5347-2.4585 1.1475 0 1.1145 4.4459 0.7363 6.5379-0.5566 1.4337-0.886 1.6021 1.5537-0.2551 2.0925-9.3528 2.7134-9.3789 2.7327-3.3842 2.4924 5.0573-0.2026 5.5259-0.0305 4.6053 1.6865-1.4096 2.6299-2.289 2.1057-1.5798 0.9575 0.3244-0.5249-1.6309-0.999-4.3451-1.0535-4.333-0.0874-4.7398 0.0962-3.3351 1.5007 1.8631 1.8633 5.2814 1.6001 7.3854 1.6001-1.2687 1.5989-4.7248 6.2539-6.6035 7.0525-1.2042 0.5117-1.2515 0.322-0.2276-0.9116 0.7109-0.8567 0.9035-1.7708 0.4277-2.0312-0.4758-0.2605-0.2864-0.3374 0.4209-0.1711 0.7072 0.1663 1.8738-0.406 2.5922-1.2717 1.6519-1.9905 0.0634-2.0859-5.4395-0.3271-7.0659 2.2581-7.5892 1.8325-5.5103 3.228 2.7404 1.8394-0.2731 0.0342-3.6096 1.4897-1.5094 0.6584-1.6617 1.1816-0.6863 2.3569 1.0399 1.2532 0.6408 1.3882-2.3408 0.7917-3.0546-0.6108-3.4902-0.4465-2.8992 1.0935 0.8454 2.2031-0.6766 2.3872-2.4152 0.2922h3e-4zm-52.712-8.0408c-23.338-25.406-6.8715-56.48-3.7618-53.899 2.7688 2.2979 4.5984-4.0795 8.363-2.0647 2.7867 1.4912 3.7535-0.8278 1.3146-1.4639-1.4652-0.3822-1.3379-0.5326 0.533-0.629 2.8357-0.1461 3.1831 1.1896 0.8195 3.1512-3.212 2.6655-3.3488-2.6598-5.9876 0.5199-1.105 1.3315-1.0394 1.7629 0.349 2.2957 0.9403 0.3607 2.3478 0.2944 3.1278-0.1475 1.1513-0.6522 1.156-0.5214 0.0251 0.6953-1.1517 1.2391-1.7869 1.2528-3.667 0.0787-3.0229-1.8879-3.2032-0.2593-9.0706 4.4441-0.5605 0.4492 0.6655 0.3337 2.7243-0.2568 4.7223-1.3542 5.697-1.3503 4.8505 0.0184-0.3714 0.6011-1.6586 1.0927-2.8605 1.0927-1.2018 0-1.8814 0.4917-1.51 1.0927 0.3714 0.6011 0.134 1.0927-0.5275 1.0927s-2.2584 0.9835-3.5485 2.1853c-2.9919 2.7875-1.5409 2.8326 2.335 0.0723 1.6319-1.162 4.2686-2.4395 5.8595-2.8386 5.0427-1.2659 0.6779 0.2235 0.4956 13.419-0.0677 4.8752-0.5065 6.8289-1.5347 6.8289-1.9001 0-2.1945 2.1782 0.745 1.4092 1.6458-0.4304 2.1852-0.0337 2.1852 1.6079 0 4.3579 4.5012 10.495 1.7805 9.4517-0.8241-0.3162-1.8148 0.2495-2.2014 1.2573-0.5604 1.46-0.1836 1.7327 1.8558 1.343 3.1003-0.5928 4.1148 1.8845 7.0454 6.355-7.0692 0.3086-8.3383 0.5134-5.3839-0.7036 3.3027-1.3596 2.4249-3.8735-1.2161-3.4824-2.0179 0.2168-3.0051-0.321-3.5102-1.9121-0.3864-1.2175-1.094-2.2139-1.5724-2.2139-1.2515 0-0.8339 4.3064 0.5074 5.2312 0.621 0.428 1.0804 1.5159 1.0208 2.4175-0.0601 0.9014 0.8702 2.7451 2.0661 4.0974 3.1229 3.5308 1.6456 3.042-1.6506-0.5464l-3e-4 5e-4zm23.417-6.8301c-3.1771-1.3059-3.3765-2.5896-3.9363-25.353-0.4238-17.23-0.272-19.529 1.3901-21.034 2.5991-2.3522 30.812-2.4869 32.746-0.1564 1.2755 1.5367 3.5032 41.223 2.4794 44.169-0.2769 0.7971-1.5549 1.8491-2.8398 2.3376-3.2329 1.2294-26.868 1.2582-29.84 0.0363zm51.87-12.53c0.4496-1.2212 0.8176-6.2131 0.8176-11.093 0-8.0469-0.3679-9.5903-3.9506-16.572-5.4647-10.65-0.9664-6.4612-0.9664-5.5782 0 0.5366 1.598 1.0338 3.5511 1.1051l3.5511 0.1292c-1.9545 0.4254-6.8592 1.2352-5.2886 2.2267 0.6969 0.4401 1.9993 0.519 2.8942 0.1755 2.1622-0.8298 3.6749 1.2633 0.6331 2.0585-3.0092 0.787-1.7003 2.9155 1.2161 2.153 1.2013-0.3141 2.1842-0.0568 2.1842 0.5729 0 1.2756-2.8474 1.6926-4.9169 2.0912 1.4636 0.0886 4.9169 0.0481 4.9169 1.5072 0 0.6652 0.7375 0.9265 1.639 0.5806 2.0991-0.8057 2.6311 1.4878-1.0927 1.4878-2.271 0-2.7316 0.522-2.7316 3.0957 0 7.7596 3.3461 1.4509 6.6149 3.5197 2.6866 1.6997-2.9199 0.4067-5.0551 1.8694-1.3416 0.9189-1.4216 5.6077-0.1298 7.6191 0.5989 0.9329 0.3419 1.1511-0.8268 0.7026-2.324-0.8916-2.1641 1.7168 0.2165 3.5317 1.7303 1.3188 1.6265 1.4375-1.0907 1.2478-2.5276-0.1763-2.8735-0.5608-2.1853-2.4297h-2e-4zm8.6804-30.075c-2.224-6.262-9.2807-14.919-16.132-19.79-6.1427-4.3673-7.7975-6.0026-4.2967-4.2457 8.3047 4.1675 19.285 16.428 21.828 24.374 1.9728 6.1635 0.8091 5.8819-1.4002-0.3386zm-18.893-8.9088c-3.1954-3.6002-10.768-8.1482-9.2241-9.1025 1.4802-0.9149 3.5381 0.3744 2.7174 1.7021-0.3501 0.5667 0.8083 1.3191 2.5743 1.6722 2.083 0.4166 3.164 1.2756 3.0772 2.4457-0.0754 1.0201 0.5347 1.6598 1.4052 1.4725 0.8464-0.182 1.9452 0.3097 2.4417 1.0927 2.2967 3.6208 0.0612 4.1567-2.9916 0.7172v1e-4zm-61.631-2.1451c-1.3632-0.9806-1.3023-1.0698 0.362-0.5298 2.2806 0.7399 6.5999-1.8148 5.3674-3.1748-0.4469-0.4932-0.2422-0.5703 0.4548-0.1716 1.637 0.9366 4.913-0.3073 4.1329-1.5692-0.3282-0.5311 0.1871-0.6649 1.1451-0.2971 2.4006 0.9213 1.4969 2.9207-1.4171 3.1354-2.5498 0.1877-4.775 1.6344-2.5142 1.6344 0.7366 0 1.0029 0.5442 0.5919 1.2094-0.5214 0.8436-1.0227 0.7638-1.658-0.264-0.7252-1.1733-1.1867-1.1971-2.2672-0.1166-1.6428 1.6427-2.0929 1.6581-4.1976 0.1442v-3e-4zm36.058-9.6191c-3.4838-0.3718-5.4556-1.0005-4.6915-1.4958 2.0273-1.3142 0.3661-4.1434-3.3937-5.7803-2.6309-1.1454-2.8841-1.4843-1.1335-1.5175 2.4575-0.047 8.6185 5.6565 7.413 6.8619-0.9262 0.9264 1.4186 1.1619 2.3383-0.3264 1.0506-1.6998 3.5818 1.8219 6.6675 0.6375 1.7155-0.6583 1.7796-0.9335 0.4179-1.7946-0.9813-0.6205-1.101-1.0236-0.307-1.0338 3.7015-0.0566 1.9672 5.5564-0.0525 5.2684-0.6869-0.0982-3.9533-0.4666-7.2585-0.8194zm-26.56-1.0278c-1.6616-0.6554-1.3146-1.1466 2.1853-3.0938 4.6307-2.5762 12.694-5.0542 11.814-3.6306-0.311 0.5032 0.0524 1.1692 0.8074 1.4805 0.7549 0.3112-0.3483 0.3116-2.4517 0-7.2423-1.0688 2.2329 2.2467-2.7316 1.6322-3.9366-0.4874-8.4454 1.2218-7.7822 2.9502 0.3362 0.8761 0.5039 1.5586 0.3725 1.5164-0.1313-0.0426-1.1277-0.4275-2.2142-0.8561v0.0012zm29.838-3.4377c-1.191-0.7695-1.248-1.0638-0.2087-1.0759 0.7867-0.011 1.1299-0.5027 0.7628-1.0968-0.3829-0.6194 0.0557-0.8027 1.0281-0.4294 0.9326 0.3579 1.6957 0.106 1.6957-0.5587 0-1.8853 5.5567-1.3712 10.38 0.9603 3.8316 1.8519 3.9663 2.032 1.0927 1.4597-1.8029-0.3593-3.8736-1.1213-4.6015-1.6937-1.6212-1.2748-9.3735 1.038-8.4559 2.5227 0.7842 1.2689 0.3731 1.2476-1.6934-0.0885v3e-4zm212.06 96.237c6.4976-6.4976 1.5445-10.034-2.8156-13.742 0.3746-39.202 0.2363-24.734 0.6109-63.92h-5.4019c0.0833 21.837 0.155 40.618 0.2383 62.455-5.0723 4.0444-6.3241 4.3623-6.3241 9.6533 0 8.4121 7.7079 11.539 13.692 5.5542zm-76.57-2.5059c8.2659-4.0566 16.01-11.968 20.09-20.524 3.0476-6.3918 3.3871-8.1401 3.3943-17.482 0.0109-9.4031-0.3185-11.069-3.4605-17.702-4.4128-9.3148-11.582-16.484-20.897-20.897-6.706-3.1769-8.2401-3.4685-18.248-3.4685-9.5582 0-11.706 0.3652-17.151 2.9175-15.471 7.252-26.541 27.07-24.453 43.778 1.3055 10.449 8.7604 23.833 16.61 29.82 7.0874 5.4058 13.889 7.1448 26.634 6.8091 9.8855-0.2603 12.304-0.7102 17.482-3.2512h-1e-4zm-26.063-6.3501c-28.343-5.8794-33.567-46.488-6.17-60.961 4.5726-2.4155 6.8883-2.8896 14.204-2.9072 7.5469-0.0186 9.4254 0.3812 13.75 2.9233 19.843 11.665 23.86 36.799 8.3132 52.017-7.881 7.7144-19.431 11.141-30.097 8.928v-3e-4zm20.211-6.8635c8.5212-4.4236 15.676-15.757 15.652-24.793-0.024-9.0195-6.0046-18.437-15.104-23.787-4.309-2.5332-6.3118-2.9834-13.27-2.9834-6.9256 0-8.9683 0.4547-13.188 2.9357-19.544 11.49-16.141 40.575 3.8161 49.669 4.3561 1.985 17.454 1.3673 22.095-1.0416zm-23.886-3.9478c-5.5353-3.5103-10.348-10.617-11.209-16.549-0.4173-2.877-0.3459-3.1138 0.307-1.0178 1.2677 4.0693 9.4143 8.2581 12.473 1.5442 1.6566-3.6357 2.644-3.3108 4.1917 1.3787 1.1463 3.4736 1.5005 3.7761 2.6233 2.2407 0.7139-0.9763 1.9419-3.7261 2.7288-6.1104 1.3032-3.9487 1.2218-4.6736-0.9124-8.127-1.2889-2.0854-2.0391-4.5845-1.6672-5.5537 0.7521-1.9597-2.2572-2.4412-4.8788-0.7805-1.2176 0.7715-1.138 1.1492 0.4276 2.0254 2.3593 1.3201 1.3343 3.4285 0.5097 6.7141l-2.6754-2.6753c-2.9211-2.9211-9.0055-3.6558-11.297-1.364-1.8973 1.8972-1.613 0.2827 0.7678-4.3594 4.2671-8.321 9.4606-11.156 20.435-11.156 9.4327 0 14.579 2.6732 19.545 10.151 6.7676 10.193 6.2636 19.806-1.4892 28.405-8.0818 8.9641-20.553 11.149-29.88 5.2344l-1e-4 -3e-4zm19.241-12.74c1.6168-4.2124-0.6903-7.7886 2.5754-3.8657 1.8839 2.2632 3.8788 2.8298 8.7646 2.4888 5.5064-0.384 6.0883-11.767 0.7265-14.21-6.0848-2.7722-7.9689-0.4226-12.298 3.9062-0.3504-1.8335-1.2679-5.0325 0.4362-6.7366 1.7121-1.7119 0.9209-2.8-2.0362-2.8-3.8723 0 0.336 3.4072-2.5632 9.0142-1.397 2.7012-1.3564 3.6565 0.3594 8.4875 2.0341 5.7271 2.9424 6.5635 4.0353 3.7156v4e-4zm-35.7-32.128c9.7257-11.362 21.747-13.17 12.564-8.6245-11.63 5.7565-18.615 16.64-19.902 31.008l-0.7827 8.7412c-0.2097-9.7903-1.2196-20.212 8.1208-31.125zm134.48 50.519 2.9551-3.0046c47.679-0.4116 48.017-0.0312 48.426-2.666 0.3434-2.2139-0.0371-2.251-23.192-2.251-21.604 0-23.836-0.1794-27.119-2.1814-7.0011-4.2686-10.68-2.3879-10.68 5.4595-2e-4 8.0696 4.2305 10.114 9.6102 4.6435zm50.485-55.998c0-2.1251-0.7285-2.1853-26.504-2.1853-14.577 0-28.092-0.4554-30.033-1.0121-4.2036-1.2057-5.1646-0.2069-2.9048 3.0193 1.626 2.3215 2.1684 2.3634 30.549 2.3634 28.165 0 28.893-0.0547 28.893-2.1853zm-61.268-12.713c3.1201-3.9666 2.9404-9.2169-0.4236-12.377-2.2384-2.1028-3.4688-2.4207-7.3526-1.8997-4.5327 0.6079-4.8964 0.4174-12.882-6.7532-15.422-13.847-11.666-12.694-41.36-12.694-100.22 0-156.35 2.1631-56.455 2.699 32.497 0.1743 58.012 0.3165 81.234 1.6716 20.475 18.43 23.061 20.293 23.089 24.232 0.0514 7.1748 9.7682 10.692 14.15 5.1221l-1e-4 -1e-4zm17.145-21.954c8.0514-7.4871 11.337-11.257 11.114-12.753-0.174-1.1681-0.8145-2.2875-1.4232-2.4873-1.6909-0.5552-24.962 23.259-24.097 24.659 0.4115 0.6658 1.2495 1.2103 1.8622 1.2103s6.2577-4.7829 12.544-10.629zm-233.22-16.31c2.2996-2.0811 2.58-4.8213 0.687-6.7144-3.8763-3.8762-8.9135 1.1788-5.8435 5.8644 2.0625 3.1477 2.532 3.2251 5.1565 0.85zm50.543 0.0918c2.6632-2.6633 2.1658-6.8666-0.9823-8.3009-6.64-3.0253-7.3788 6.9454-4.1298 8.8378 2.591 1.5091 3.1219 1.4535 5.1121-0.5369zm25.12 1.0537c2.467-0.9468 2.3087-7.6904-0.2119-9.0394-4.6417-2.4843-8.3602 5.8641-3.7961 8.5226 2.3359 1.3606 1.9419 1.3098 4.0081 0.517l-1e-4 -2e-4zm15.933-4.2146c0-3.0945-2.8562-6.2937-5.2056-5.8304-2.522 0.4972-3.9401 3.4844-3.1494 6.6345 1.2486 4.975 8.355 4.2911 8.355-0.8041zm11.801 3.5663c2.1122-2.1123 1.5899-7.204-0.8741-8.5227-3.2912-1.7615-6.5559 0.4071-6.5559 4.3546 0 4.4613 4.572 7.026 7.43 4.168v1e-4zm12.101 0.3259c3.1262-1.9801 0.9905-9.9413-2.6668-9.9413-2.0751 0-4.7929 4.3037-4.0468 6.4081 1.5156 4.2742 3.7158 5.4322 6.7136 3.5332zm24.851-1.7912c3.2816-5.0082-1.838-10.922-5.9209-6.839-1.9654 1.9653-1.5955 7.1558 0.601 8.4352 2.7916 1.626 3.3108 1.4701 5.3199-1.5963v1e-4zm-151.43 0.0119c1.8367-2.213-0.2673-7.0699-3.0629-7.0699-2.4573 0-4.6125 2.0422-4.6125 4.3706 0 4.0102 5.099 5.8035 7.6754 2.6993zm24.558-2.6988c0-3.5206-0.2602-3.8242-3.278-3.8242-2.5981 0-3.3524 0.5264-3.6375 2.538-0.5912 4.1735 0.5991 5.8372 3.9045 5.457 2.6468-0.3046 3.011-0.809 3.011-4.1708zm12.996 1.9122c1.6515-2.6376-0.3697-5.6376-4.098-6.0829-3.3536-0.4004-4.5771 1.647-3.5145 5.881 0.5627 2.2418 1.2703 2.7302 3.5588 2.4562 1.5712-0.1882 3.3953-1.2027 4.0537-2.2543zm12.287 0.817c0.3465-0.9028 0.3217-2.8696-0.0546-4.3706-1.1357-4.5251-8.2919-3.1085-8.2919 1.6414 0 3.9583 6.9974 6.2462 8.347 2.7292h-5e-4zm26.404-1.7723c0.373-3.2169-2.4351-6.7056-4.9918-6.2015-2.5606 0.5049-3.9359 3.5007-3.1126 6.781 0.6432 2.5625 1.2239 2.9209 4.2583 2.6276 2.8728-0.2778 3.5743-0.8628 3.8461-3.2071zm63.627 1.1553c0.9402-1.757 0.8219-2.849-0.5331-4.917-0.9579-1.462-2.187-2.6582-2.7312-2.6582-1.663 0-4.4235 3.3217-4.4235 5.3228 0 4.4626 5.6232 6.1101 7.6877 2.2526v-2e-4zm24.545-1.993c0-4.4688-2.7115-6.7734-5.3717-4.5657-1.7576 1.4586-2.3727 6.7181-0.9519 8.1389 0.4282 0.4283 2.0262 0.6332 3.5511 0.4554 2.3159-0.27 2.7725-0.8428 2.7725-4.0286zm12.62 2.5474c1.8318-2.2074 0.1348-7.4119-2.5877-7.9362-2.6342-0.5072-5.115 1.7427-5.115 4.6385 0 4.6014 4.885 6.6927 7.7027 3.2977zm12.839-0.6996c2.8575-2.8575-0.0962-7.4301-4.7999-7.4301-3.4474 0-5.8529 4.5356-3.7497 7.0699 1.6531 1.9917 6.7053 2.2046 8.5496 0.3602zm-418.64 478.04c-0.8515-41.785-1.6526-132.82-2.0866-177.89 4.5341 4.3069 2.8754 2.7314 7.5836 7.2036 1.5625 110.58 1.467 114.17 1.65 204.77-3.9901 0.4089-2.4072 0.2468-6.4393 0.6597l-0.7083-34.748h6e-4zm219.42 6.1972-3.1679-3.3064c-0.6628-70.26-1.09-147.51-2.6302-150.38-1.6195-3.0259-51.749-51.51-54.965-54.643l0.9633-3.7175c0.5298-2.0447 1.2646-3.7175 1.633-3.7175 0.7771 0 41.945 40.929 62.019 60.834 0 110.48 1.9517 158.24 0.3804 158.24-0.5862 0-2.4913-1.488-4.2336-3.3066h0.0015zm-366.51-13.111c-23.879-5.0374-41.328-30.941-37.501-55.669 5.4774-35.388 41.213-54.454 73.809-37.46 7.8198 4.0767 16.215 12.221 20.981 20.355 6.5008 11.093 7.701 28.668 2.8262 41.381-5.1777 13.503-18.079 25.899-31.047 29.83-6.9415 2.1038-22.532 2.9426-29.069 1.5635zm21.017-5.9502c8.9651-1.8997 16.314-5.7449 22.553-11.8 11.102-10.776 14.897-20.056 14.011-34.263-2.4717-39.625-51.553-56.498-79.262-29.112-29.724 29.378-4.2123 85.114 42.698 75.175h2e-4zm-18.881-5.9016c-11.482-3.8103-22.039-12.787-27.058-23.007-2.4923-5.075-2.9744-7.45-2.899-14.282 0.1127-10.209 3.324-17.849 10.793-25.677 4.3668-4.5771 4.5517-4.6875 1.1398-0.6809-10.584 12.428-13.64 27.571-8.0061 39.662 3.6631 7.8608 10.537 15.352 16.781 18.287 6.3808 2.9995 7.65 2.8879 2.2121-0.1943-9.2546-5.2451-18.093-20.315-18.093-30.849 0-11.456 9.1053-25.4 19.508-29.875 20.908-8.9946 42.094 3.219 48.441 20.811 1.9111 5.2971 2.0291 5.4216 1.3983 1.4751-1.3604-8.5095-7.5924-17.844-16.354-24.497l-3.2779-2.4888 3.639 1.9897c6.127 3.3501 13.837 12.406 16.404 19.268 2.8597 7.6433 3.1108 18.572 0.6196 26.961-2.405 8.0986-11.572 17.275-20.671 20.693-6.9966 2.6277-20.055 3.906-24.576 2.4055v2e-4zm18.174-6.3037c0.6808-0.8528 1.5928-6.7629 2.0271-13.133 0.6917-10.148 1.1812-12.201 3.9526-16.571 5.4799-8.6409 3.8229-18.927-4.0114-24.903-3.4139-2.604-5.1874-3.1487-10.25-3.1487-7.0192 0-10.978 2.3882-15.077 9.0972-4.7501 7.7742-1.933 20.035 5.4684 23.799 1.9472 0.9902 3.6843 1.9229 3.8603 2.0723 0.1759 0.1492-0.7701 5.0166-2.1022 10.816-1.7361 7.5579-2.0875 10.879-1.2405 11.726 3.1467 3.1465 14.924 3.313 17.372 0.2454l-2e-4 2e-4zm-14.229-3.4749c-0.3424-0.554 1.3157-0.9551 3.6914-0.8926 2.3722 0.0623 4.9435-0.5154 5.714-1.2837 1.7646-1.7593 2.4761-15.09 2.7227-18.232l-0.229 20.76c-1.9159 0.1113-11.116 0.9155-11.899-0.3518v-3e-4zm3.0017-28.057c0.9014-0.9014 2.6297-1.6389 3.8404-1.6389 4.3004 0 7.0618-7.2522 4.5492-11.947-0.747-1.396-1.9401-1.8274-4.0974-1.4817-2.3737 0.3804-2.6828 0.2322-1.4045-0.6738 1.3746-0.9741 1.2733-1.1641-0.629-1.1782-4.3727-0.0327-9.5569 7.656-7.9725 11.823 1.3078 3.4397 0.1353 4.6204-1.868 1.8809-2.8755-3.9326-1.498-11.262 2.7263-14.505 2.1334-1.6379 10.408-1.8057 13.278-0.2695 1.1624 0.6221 2.1136 0.8835 2.1136 0.5813 0-0.802-6.5798-3.7935-4.5345-3.8538 0.8113-0.0242 3.1469 1.6279 5.1901 3.6714 3.1014 3.1013 3.715 4.5105 3.715 8.5322 0 6.585-3.2093 9.0352-3.2431 8.1143-0.0196-0.5198-1.2467-0.1509-2.7279 0.8196-1.4813 0.9705-4.4665 1.7646-6.6339 1.7646-3.503 0-3.7587-0.1821-2.3019-1.6389v-5e-4zm-6.99 21.738c3.0565-9.896 2.6685-13.625-0.4808-4.6206-3.9363 11.254-4.0778 11.838-2.8707 11.838 0.6172 0 2.1255-3.2478 3.3515-7.2173zm522.33-6.6728c-28.556-28.799-58.099-59.048-77.578-78.958-0.0045-5.1006 0.2536-23.638-1.1149-28.564-1.8844-6.7847-19.577-21.386-18.43-22.035 0.2302-0.1299 32.807 0.0547 72.393 0.4104 69.329 0.6233 72.017 0.7236 73.126 2.7317 1.4429 2.6135 10.257 10.465 12.462 12.494 1.4491 20.417 1.3745 22.303-0.0327 138.74-22.376-0.0134-13.99-0.0083-36.246-0.0229l-24.585-24.794h5e-3zm-1038-55.428c0-3.678 4.1937-2.3398 9.0083-1.3767l-2.5919 1.437c-3.4493 1.9121-6.4163 1.8843-6.4163-0.0601l-1e-4 -2e-4zm512.74-170.21c-80.081-80.992-76.581-76.723-74.149-79.411 1.1486-1.2693 1.6055-2.7312 1.1063-3.5388-5.2853-8.5515 52.076 50.086 80.055 78.27 0.0024 0.1152 3.3826 158.96 0.0715 159-1.6529 0.0242-4.4515 0.8433-5.9631 1.249-0.1363-18.899-0.9846-136.63-1.1211-155.57zm884.23 133.58c-1.0363-1.6765 18.357-1.1194 17.914-0.7312-1.2548 1.1003-17.282 1.7546-17.914 0.7312zm33.849-0.0369c-2.9973-1.2881 24.267-1.1699 19.668 0-4.502 1.1453-17.002 1.1453-19.668 0zm-252.71-10.756c-6.9555-2.4651-16.472-8.8457-21.165-14.19-1.8863-2.1484-4.9553-7.1257-6.8199-11.06-2.9647-6.2563-3.3901-8.3193-3.3901-16.441 0-22.48 13.391-37.98 39.667-45.915 10.958-3.3088 11.864-2.311-0.5879 1.6348-19.103 6.0542-27.34 12.245-33.864 25.45-3.851 7.7957-4.1218 8.9946-4.1218 18.254 0 8.9714 0.3336 10.581 3.5222 16.989 15.823 31.801 60.435 37.216 77.968 1.6025 3.5358-7.1819 3.7364-8.2068 3.7364-19.086 0-10.62-0.2612-12.047-3.4289-18.733-5.1335-10.834-14.804-20.146-6.1648-11.18 7.8355 8.1309 10.687 16.255 10.684 30.437 0 10.01-0.2946 11.543-3.4801 18.273-4.6313 9.7842-11.996 17.476-20.96 21.892-6.1405 3.0249-8.5485 3.5837-16.504 3.8311-6.9074 0.2144-10.808-0.2397-15.09-1.7576v-5e-4zm18.142-5.1455c15.175-2.7715 25.564-12.1 30.358-27.258 0.7601-2.4038 1.4103-3.3875 1.4446-2.1853 0.082 2.8755-4.5265 12.686-8.2577 17.578-5.9946 7.8591-18.358 13.733-28.262 13.428-1.8029-0.0557 0.3201-0.7583 4.7177-1.5613zm-19.188-1.7119c-7.6379-2.9355-16.938-11.573-20.446-18.988-3.7222-7.8677-2.8519-10.69-1.7591-7.0974 3.9102 12.854 14.547 23.192 27.424 26.653 7.8139 2.1 2.4726 2.3896-5.2184-0.5667zm-255.97-24.727-23.482-23.765c64.518 63.75 53.959 54.608 23.482 23.765zm-922.19 20.606c0-2.032 0.6123-2.2937 5.1902-2.2175 2.8545 0.0479 4.4524 0.3669 3.551 0.71-2.8464 1.0835-1.2173 1.9224-5.7473 3.0598-2.5542 0.6413-2.9939 0.413-2.9939-1.5523zm1183.2 0.6257c-9.7652-2.7551-19.043-11.757-22.336-21.673-7.1681-21.581 11.361-44.995 34.207-43.226 29.343 2.2734 38.789 35.225 20.958 54.735-8.649 9.4634-21.36 13.399-32.828 10.163zm19.548-6.8117c7.9087-3.3037 14.506-11.966 16.617-21.82 3.2083-14.972-9.0855-28.93-25.481-28.93-8.8901 0-14.212 1.8186-19.853 6.7837-4.8195 4.2427-9.2881 13.256-9.2881 18.737 0 9.3906 7.425 21.054 15.843 24.889 5.4708 2.4917 16.604 2.6633 22.161 0.3416l-1e-4 -4e-4zm-12.327-0.9966c-0.601-0.2229-2.947-0.7156-5.2135-1.095-4.947-0.8281-11.053-5.9126-13.972-11.635-2.051-4.02-3.0297-8.4062-1.2847-5.7576 2.4133 3.6636 12.291 2.2905 14.603-2.0298 1.1738-2.1931 1.2679-2.1555 2.6154 1.0491 2.015 4.792 3.4754 5.196 5.3912 1.4912 4.9977-9.665-2.5123-22.559-2.7215-17.846-0.0084 0.1921 0.1906 0.5476-4.0965 5.6851-7.78-4.2612-8.4133-5.0115-12.2-3.5825-3.7433 1.4131-3.7009 1.1252 0.7137-4.8442 4.0439-5.468 10.496-8.3047 18.897-8.3088 9.489 0 13.666 2.3452 20.733 11.666 1.3778 1.8169 1.2648 1.9211-1.3653 1.2612-3.3681-0.8455-4.5067 0.9194-8.3955 4.8081-1.5053-5.5903-0.9495-3.5264-2.4538-9.1128-2.282 4.2869-6.3711 10.562-2.5449 19.719 0.9136 2.1865 1.3246 5.2244 0.9561 7.0671-0.9279 4.6396 1.7999 3.3635 1.938 1.8662 0.1582-1.7136 0.321-2.5933 1.3965-7.5459 0.8534-3.9297 0.9018-3.9609 2.9505-1.9124 2.3696 2.3696 7.4843 2.7488 9.6733 0.7173 4.1417-3.8445-5.9704 11.222-12.507 15.04-4.2207 2.4651-10.859 4.136-13.112 3.2998v3e-4zm-321.24-54.671c29.193 28.746 39.08 38.896 40.974 37.685 4.0486-2.5881 3.9833 0.3782 0.1436 1.3831-2.3438 0.613-12.652-10.187-41.118-39.068zm284.78 31.066c-0.2619-10.965 4.54-22.542 11.928-28.758 8.9816-7.5576 23.489-11.488 10.326-5.1677-12.367 5.937-19.651 16.764-21.212 31.528-0.8598 8.1323-0.9028 8.2312-1.0422 2.3977zm248.71-13.906c-7.2979-0.3196-9.1671-1.4421-5.4632-3.2808 2.6969-1.3389 77.442-1.7668 78.257-0.4482 2.0674 3.3452-40.302 2.8167-61.594 3.8643-2.1035 0.1037-7.1434 0.0426-11.2-0.1353zm-177.29-4.6065c-2.544-5.6416-10.019-12.525-17.264-15.899-5.7169-2.6619-5.7241-3.666-0.0109-1.4951 5.9624 2.2651 13.978 9.3479 17.127 15.132 4.088 7.5105 2.8379 8.2263 0.1481 2.2615h3e-4zm-613.39-6.8706c0.0928-1.7683 0.2564-1.9121 0.6166-0.5435 0.6335 2.407 4.1397 3.5015 6.61 2.0635 1.1799-0.687 1.3763-1.1392 0.5039-1.1594-0.7867-0.0186-1.1215-0.533-0.744-1.1436 0.8962-1.4502 2.7205-0.2959 2.7205 1.7212 0 0.866-0.7667 1.5745-1.7034 1.5745-0.937 0-1.3996 0.4915-1.0283 1.0925 1.2039 1.948-7.2368 1.3589-6.9753-3.6052zm-610.78-7.7056c-1.5856-1.9102-0.4773-2.8936 3.261-2.8936 2.6173 0 5.2321 1.6948 4.0892 2.6506-1.5797 1.3212-6.3252 1.4782-7.3502 0.243zm1164.8-7.2829c0.6352-1.9055 23.995-13.932 27.943-14.386l3.0087-0.3459c0.0091-5.1248 0.7848-291.36-0.2876-292.86-1.1481-1.6025-25.39-20.357-25.39-21.011s13.626 9.0631 20.974 14.957l6.2235 4.9917c-0.0237 16.354-0.404 278.48-0.4278 294.87l-5.0372 1.2852c-5.317 1.3562-19.02 7.9629-24.343 11.736-1.9961 1.4149-2.9757 1.6947-2.6645 0.7611zm36.415-9.3674v-150.95c0-201.87 1.7381-198.95 1.3696 1.4189l-0.2769 150.73c-7.1217 0.4653-7.4908 0.7055-1.0927-1.1914zm-10.358-295.26c-4.994-3.9288-12.875-10.204-18.597-14.173-4.602-3.1921-15.592-12.664-12.019-10.358 2.1221 1.3693 28.337 20.866 31.687 23.352 1e-4 376.38-1.8353 384.41-1.0707 1.1785zm-1192.1 249.25c0-4.0896 2.1042-4.7061 16.062-4.7061 14.174 0 18.628 1.4263 6.063 1.9412-17.954 0.7361-22.125 7.2576-22.125 2.7649zm627.82-25.193c-125.46-122.08-114.46-112.17-129.35-124.56-536.62 1.2537-493 3.575-493-7.8125 0-3.0892 0.6089-5.8097 1.458-6.5143 2.5505-2.1171 576.61-1.4775 600.49-1.2434 9.8784 9.8539 141.77 140.89 150.93 154.81l4.1837 6.356c-36.676 1.4917-44.714 1.3923-111.41 1.6389l-23.3-22.672v5e-4zm-629.52-39.713c-0.4071-0.6587-0.0677-1.821 0.755-2.5835 1.7288-1.6023 19.088-1.0181 73.61 0.1208-62.866 0.5901-61.336 0.2795-68.283 2.4614-4.7347 1.4868-5.1632 1.4868-6.0815 0v0.0013zm86.05-2.8953c15.658-0.4695 44.62 0.3484 12.353 0.3506-13.221 1e-3 -18.78-0.1562-12.353-0.3491v-0.0015zm633.01-12.258c-1.7068-1.7817-3.5319-2.9744-4.0558-2.6504-0.5239 0.3237-0.8173-0.0374-0.6523-0.8025 0.1889-0.8748-0.9159-1.4116-2.9777-1.447-2.2784-0.0393-3.1759 0.4167-2.9431 1.4949 0.2855 1.3223 0.0677 1.3286-1.4805 0.0437-1.6423-1.363-1.4894-1.6165 1.6024-2.6575 3.317-1.1169 3.3608-1.2148 1.4832-3.3223-2.4445-2.7432 12.811 11.856 12.811 12.275 0 0.7732-0.9117 0.0667-3.787-2.9346v8e-4zm468.47-51.394c-0.1996-42.981 1.7932-57.246 0.1653 35.511l-0.1653-35.511zm-4567.1-27.58c-0.7085-1.8464 1.0601-49.357 1.1353-51.604 15.552-2.7509 42.893-1.5486 44.405-0.3063 1.8965 1.5575 1.5093 7.5917 0.3931 52.72-33.368 0.4344-45.312 0.8109-45.934-0.8099zm42.071-7.3132c1.4253-2.6638 1.4761-36.078 0.0581-38.314-0.8647-1.3632-4.0117-1.599-18.705-1.4014-9.7158 0.1305-17.951 0.5237-18.301 0.8739-1.1802 1.1799-1.2891 36.667-0.1191 38.852 1.0386 1.9407 2.4702 2.103 18.531 2.103 16.09 1e-4 17.491-0.1597 18.537-2.1134zm4525.2-43.231c7e-4 -46.613 0.9085-14.101 0.3255 19.465-0.1794 10.328-0.3259 1.5687-0.3255-19.465zm-85.236 12.005c-1.7682-4.6301-1.7682-5.1763 0-9.8064 7.9791-20.893 35.798-4.1963 25.789 12.219-6.5228 10.698-20.938 10.288-25.789-2.4128zm20.361 2.8294c6.7854-6.7853 2.2343-18.659-7.1518-18.659-6.6401 0-11.653 6.9344-9.9422 13.752 2.0313 8.0937 11.258 10.742 17.094 4.9069zm-10.56-3.9003c-3.7028-5.6511 1.3797-12.304 6.7245-8.8016 3.4243 2.2438 3.7615 8.6726 0.5448 10.394-3.3343 1.7845-5.3451 1.3439-7.2693-1.5926zm-946.69-126.14c0-10.076-0.1647-10.905-2.3016-11.583-1.2659-0.4017-36.053-0.4053-77.305-0.011-81.549 0.7863-79.334 0.9287-81.505-5.2433-1.2576-3.5759-0.0109-4.9518 2.214-8.9167 19.665-0.1392 154.17-0.9119 155.03-1.7728 0.646-0.6467 1.3203-10.934 2.233-25.543 28.743-0.9689 22.036-3.9268 49.053 23.492 108.73 0 109.24-0.3831 111.57 2.1853 1.975 2.1824 1.9043 2.1855-51.731 2.3218-29.54 0.0754-54.201 0.2596-54.802 0.4098-5.2576 1.3138 0.1045-5.1816-37.696 35.476l-14.751 0.035v-10.853 0.0042zm28.601-11.72c5.5197-4.9952 7.0093-15.195 3.2444-22.216-2.2217-4.1422-9.6948-8.7513-14.19-8.7513-7.7366 0-15.963 7.4784-17.302 15.728-0.7426 4.5756 2.6696 12.23 6.7749 15.198 5.74 4.1501 16.908 4.1715 21.472 0.0415v-5e-4zm-16.231-3.2282c-4.9637-2.4479-7.5229-8.2611-5.9493-13.514 1.6321-5.4473 4.5519-7.8196 10.442-8.4834 4.5231-0.5098 5.2512-0.2366 8.7856 3.2979 2.9637 2.9637 3.8538 4.7505 3.8538 7.736 0 10.266-8.0718 15.431-17.132 10.964v-3e-4zm483.15-5.7361c-9.2032-4.1858-10.539-16.904-2.4874-23.679 7.1708-6.0339 19.019-1.385 21.683 8.5074 2.7797 10.323-5.1437 21.562-19.195 15.172h-1e-4zm-468.65-37.3c-13.077 0-38.593-0.343-39.105 1.1931-0.5166 1.549-79.841 1.868-144.77 2.4197l-2.3528-2.3528c-2.7388-2.7386-3.1348-8.5137-0.8026-11.705 1.5082-2.0635 4.3124-2.1421 103.36-2.8988 114.67-0.8761 105.07-0.0667 112.24-9.4661 5.4114-7.0947 4.6062-14.326-2.3149-20.792l-2.8116-2.6266c-207.88 1.5813-207.89 1.9966-210.21-0.5688-2.2847-2.5244-2.6652-7.4722-0.8375-10.887 1.8334-3.4257-13.353-2.1012 227.94-3.7037 10.213 10.247 73.805 74.054 84.049 84.333h-101.4c-14.228-14.211-18.171-18.149-22.973-22.945zm783.42-106.82-5.3724-6.2689 5.9532 5.7363c5.2909 5.0985 9.9998 7.7667 8.0022 4.5347-0.4786-0.7744 0.1783-0.7218 1.8477 0.1481 3.894 2.0291 3.8507 2.1475-0.7786 2.1324-3.8494-0.012-4.8196-0.6439-9.6521-6.2827v1e-4zm54.699-7.3459c-0.3894-1.0148-1.2388-1.4525-1.9572-1.0087-0.8046 0.4972-0.9737 0.3063-0.4622-0.5215 0.444-0.7183 1.7491-1.007 2.9005-0.6416 1.5825 0.5023 2.0933 0.1354 2.0933-1.5034 0-3.6125-3.8221-2.9337-1.3658-4.08 1.628-0.7599 1.8286-5.5037 0.2732-6.465-1.4527-0.8976-1.4379-3.0741 0-2.1853 1.5768 0.9745 1.347-3.1133-0.2732-4.8586-1.0927-1.1772-1.0927-1.3173 0-0.7003 2.0079 1.1335 1.6003-3.7284 0.2732-3.7284-1.3956 0-1.5851-3.7112 0.1721-2.6252 1.2881 0.796 1.0218-1.073-0.7802-5.4756-0.6031-1.4738-0.4785-1.858 0.4224-1.3014 3.7558 2.3213-2.4093-5.8597 0.0765-4.3232 1.5152 0.9364 1.552-1.0608 0.071-3.8287-0.7798-1.4569-0.7798-2.1135 0-2.1135 1.514 0 1.4505-4.0442-0.0787-4.9891-0.8426-0.5206-0.7598-1.027 0.2732-1.67 3.0868-1.921-3.0128-4.6873-0.0536-6.5159 1.027-0.6348 1.0792-1.2462 0.1977-2.312-1.3699-1.656-0.5525-7.7438 0.9177-6.8351 1.6515 1.0206 1.0645-1.566-0.9444-4.1622-2.8182-3.6416-15.79-16.129-14.592-16.129 0.4775 0 1.7477 0.9718 2.8226 2.1595 2.1848 2.4143 4.7071 1.8315 2.6741-0.6178-3.1938-3.8485 0.4756-0.9443 5.9906 4.741l6.0943 6.2827c-0.4754 65.937-0.2914 73.438-2.2941 75.44-1.6214 1.6204-1.8178 1.6178-2.4507-0.0317l-4e-4 2e-4zm-37.817-2.4158c-6.73-0.5205-6.722-1.1703-17.046-10.934-586.79-3.0344-580.62-1.4987-579.15-5.323 0.3231-0.8417 0.0426-1.4133-0.6238-1.2703-0.6661 0.1431-1.6255-1.2596-2.1322-3.1169-0.5287-1.939-3.6149-5.906-7.2467-9.3159-5.1886-4.8713-6.5515-6.9159-7.5826-11.374-2.4253-10.484-2.9552-11.216-8.7361-12.057-7.1138-1.0354-9.6967-2.5463-16.719-9.7803-7.5657-7.7938-51.844-50.678-62.466-60.988-268.19 1.3304-281.13 1.7322-283.89-0.4991-3.3225-2.6904-4.1506-9.9054-1.4935-13.013l2.0216-2.3645c255.85-1.3445 249.76-1.4406 313.59-2.5555 59.74 59.581 65.89 65.918 99.868 97.462l544.21-0.0219c12.822-11.036 14.068-11.868 23.971-23.118 12.316 0.3466 25.546 0.3513 27.806 2.2313 1.5963 1.3275 1.8031 4.9745 1.8031 31.791 0 29.331-0.0721 30.356-2.2819 32.356-2.4063 2.1777-11.171 2.8679-23.905 1.8829l2e-4 0.0079zm187.82-59.969c-1.9936-2.1221-2.6489-4.0364-2.6489-7.7382 0-4.1746 0.5397-5.4006 3.5684-8.1068 1.9626-1.7535 4.7235-3.1884 6.1353-3.1884 5.6178 0 11.478 8.0127 10.043 13.731-1.9766 7.8755-11.815 10.926-17.098 5.3022v2e-4zm-800.76-65.389-3.7587-3.8922 338.59-0.5601 9.4549 7.1022c-8.1403 0-333.21-0.2037-337.39 0.6212-2.5901 0.5121-3.801-0.0624-6.9001-3.2711h-1e-4zm358.48-3.9882c-9.3645-1.8406-19.76-10.259-23.815-19.288-2.4903-5.5439-2.5602-22.228-0.1154-27.614 3.5043-7.7191 8.1662-12.801 14.676-15.997 5.4185-2.6606 7.6591-3.1194 15.104-3.0916 10.141 0.0383 16.403 2.5022 23.255 9.1512 7.0024 6.7957 9.4778 13.226 9.5031 24.688 0.0196 8.7194-0.31 10.398-2.9059 14.814-3.5067 5.9648-11.708 13.764-16.533 15.723-4.8956 1.9872-13.559 2.7168-19.168 1.6143v2e-4zm20.173-4.6183c10.903-5.525 16.754-15.152 16.792-27.631 0.1249-40.603-61.164-44.482-61.164 0.8783 0 22.36 24.222 36.964 44.372 26.753v1e-4zm-20.203-13.098c-4.3023-1.0308-5.0471-1.7074-7.3739-6.6979-4.2896-9.2002-5.933-9.0566-3.9413-10.3 0.7602-0.4747 2.4811-3.038 3.8243-5.6965 4.3143-8.5386 12.973-12.006 20.395-8.1685 4.4033 2.277 8.6116 7.6659 9.4416 12.09 0.3914 2.0857 1.1484 3.7922 1.6824 3.7922 1.2673 0 1.3317 3.278-0.0995 3.278-0.5887 0-2.05 1.9202-3.2474 4.2673-4.2863 8.4019-9.23 10.179-20.682 7.4354h7e-4zm11.591-13.598c0.8531-2.2233-2.7439-4.9025-4.9355-3.6759-3.305 1.8495-5.694-1.9047-5.694 2.5386 0 2.4497 0.439 2.6927 4.9887 2.7616 3.5555 0.0535 5.1759-0.4128 5.6407-1.624v-3e-4zm-365.8 26.211-13.716-0.34c-12.114-12.217-26.012-26.232-38.126-38.449-155.85 1.1375-171.66 1.2086-323.54 2.7964-5.6249-7.1508-6.2622-7.6005-1.6205-14.228 216.67-1.109 269.16-1.2202 342.65-2.7429 6.2332 5.6333 8.5548 7.9634 23.074 22.174 205.73 0.6134 314.35 0.7919 326.35 1.5571 3.7642 15.594 4.4195 19.618 11.846 30.048-18.717-0.0283-308.96-0.37-326.91-0.8148zm-2754.5-29.829c76.527-2.5353 121.32 0.3502 28.657 0.6029-36.776 0.1006-44.792-0.0678-28.657-0.6029zm90.304-0.2069c-1.7327-1.1101 49.834-0.6681 10.926 0.5099-5.3206 0.1611-10.238-0.0689-10.926-0.5099zm68.473 0.531c25.359-0.4529 65.754 0.33 17.686 0.329-19.832-3e-4 -27.79-0.1484-17.686-0.329zm82.912 0c15.658-0.4695 44.62 0.3484 12.353 0.3507-13.221 9e-4 -18.78-0.1564-12.353-0.3491v-0.0016zm3312.9-93.682c-4.2913-1.8942-7.2617-7.9398-6.2235-12.667 0.8934-4.067 6.3874-8.6575 10.362-8.6575 7.3518 0 12.894 9.415 9.4562 16.064-3.1191 6.032-7.7699 7.8317-13.594 5.2609v-2e-4zm4.3851-13.463c-3.3095 0.6373-3.1259 7.4355 0.2008 7.4355 4.8211 0 2.3876-7.9341-0.2008-7.4355zm61.95-5.5924c-4.7843-4.7842-4.7198-11.126 0.159-15.654 3.6699-3.4061 6.2778-3.731 10.873-1.3545 3.8498 1.9908 5.4414 4.7039 5.4414 9.2761 0 10.028-9.6493 14.557-16.474 7.7326zm-1163.4-162.71c-7.9565-2.8275-13.302-7.4567-17.072-14.782-3.6276-7.0498-4.7426-15.399-2.9469-22.068 2.5159-9.3428 13.264-21.38 17.39-19.476 1.0222 0.4718 5.7922 0.8986 10.6 0.9485 18.69 0.194 31.14 11.312 31.14 27.807 0 11.431-8.2477 23.428-18.419 26.792-8.5446 2.8262-14.319 3.0433-20.692 0.7786h1e-4zm16.166-9.0029c15.572-7.0492 19.692-23.2 8.9556-35.109-9.2935-10.308-22.751-11.212-32.272-2.1678-4.787 4.5472-6.5497 8.8324-6.6056 16.059-0.0841 10.85 5.1277 18.252 15.442 21.933 5.6708 2.0238 8.7678 1.871 14.48-0.7146l2e-4 -2e-4zm279.72-51.398c0-0.3513 4.7682-5.3379 10.596-11.081 9.7476-9.6061 10.469-10.603 9.0144-12.453-1.4821-1.8843-1.4441-1.91 0.6035-0.4082 1.2019 0.8817 2.292 1.644 2.4226 1.6943 0.2849 0.1098-22.637 23.12-22.637 22.249zm-296.08-7.2293c-6.9995-2.4703-15.575-11.384-18.012-18.724-5.0225-15.121 1.8517-31.966 15.704-38.481 18.592-8.7444 41.883 6.8309 41.886 28.011 0 19.168-20.179 36.041-39.578 29.194zm21.056-10.91c2.3933-1.6697 5.3584-3.6191 6.5895-4.3322 3.5956-2.0819 5.4906-6.9181 5.4863-14.001 0-7.6385-1.8864-11.874-7.4434-16.753-5.9958-5.2643-10.136-6.9648-17.117-7.0305-26.135-0.2462-29.625 37.493-5.7238 45.118 5.283 1.6854 13.412 0.3456 18.208-3.0011l2e-4 2e-4zm525.21 5.2989c-3.9503-3.9501-4.9888-7.9608-3.1876-12.309 1.5571-3.7592 6.818-7.4877 10.574-7.4941 6.5236-0.0109 11.976 10.369 9.0979 17.319-2.5876 6.247-11.395 7.5747-16.484 2.4849zm-2207.5-142.91c-1.2446-1.2445 0.0061-11.858-2.0942-12.839-1.0925-0.5099-1.0925-0.7648 0-1.2748 1.9329-0.9021 1.0859-7.5408 2.3582-10.796 0.7522-1.9242 0.9182-1.8289 1.6094 0.924 0.4236 1.6882 0.3401 3.6371-0.1853 4.3308-1.2075 1.5931-0.168 15.112 0.0076 18.197 5.7471 0.1287 7.1929 0.012 4.678 1.0926-2.7173 1.1677-5.416 1.322-6.3738 0.3642l1e-4 1e-4zm185.37-1.0789c0.8137-0.8135 10.663-0.4242 17.096-0.2364l0.022-391.43c-35.075-32.838-131.39-126.17-137.56-129.33-5.3845-2.76-14.941-1.8942-20.627 1.8688-11.265 7.4547-13.544 26.893 3.1101 35.6 5.5393 2.8967 7.1458 2.3887 19.787 1.565 28.095 26.796 26.46 25.208 103.89 99.699-2.3711 384.54-1.311 371.22-3.0691 354.02-0.6362 3.6304-1.1829 6.7498-1.8191 10.38h-19.179c-1.0835-37.095-1.1741-21.992-2.5837-286.82-36.569-34.305-17.995-16.973-125.5-120.94 0-438.1-0.3618-440.6 2.085-445.4 8.6255-16.907 7.6948-39.441-2.2751-55.089-4.7136-7.3984-14.049-15.51-22.539-19.585-22.592-10.844-54.128-0.9066-66.26 24.666-6.1667 12.999-7.5144 24.433-4.4238 37.54 2.2529 9.5559 6.0129 16.443 13.238 24.247 14.726 15.906 25.828 15.735 45.756 16.98 0.9846 386.12 0.8704 428.26 2.7317 430.51 0.0098 0.0117 96.483 92.162 123.47 118.32-0.0164 11.379-0.1704 278.74-1.0928 267.92-0.3843-4.5072-0.7874-7.6996-0.8958-7.0944-0.1106 0.6177-2.365 0.928-5.1394 0.7074-8.1196-0.6458-10.355 0.3561-10.355 4.6413 0 4.1649 1.5815 4.9833 9.6792 5.0087 4.5366 0.0142 4.7295-0.1145 4.0764-2.7167-0.9011-3.5907 1.5415-4.4178 1.5415 2.1852v4.9169c-9.5439 0-18.575-0.3047-18.575 1.3112 0 0.8388-0.3782 0.9329-1.05 0.2609-1.3984-1.3984-2.2729-206.28-2.5842-258.55-68.366-66.278-79.084-76.928-123.11-120.33 0-420.89 0.4805-393.02-3.1665-401.75-22.437 0-23.929-0.2678-25.204 2.1135-1.4294 2.6711-1.1311 210.18-1.1311 373.14-8.7893-9.1046-16.342-16.928-25.131-26.032 0-296.04 0.3982-295.57-2.1841-299.8-3.5754-5.8645-24.17-26.739-57.911-61.349 0-78.647-2.7461-72.204 12.295-72.204 21.117 0 38.714-11.955 46.857-31.836 2.8535-6.966 2.4067-4.4811 1.8218-136.43h138.98c0.0029 12.156 0.1001 418.89 0.1028 431.05 170.44 166.45 198.05 189.55 232.63 224.35 0 253.23 0.7959 411.15-2.7324 362.41l-14.456-0.6395c-0.2627 1.6437-1.5984 8.7004-0.7998 9.9933 0.3489 0.5645 4.0474 1.0263 8.2185 1.0263 6.0129 0 7.584 0.3395 7.584 1.639 0 1.8528-3.498 1.639-18.379 1.639-2.009-26.326-2.1199-225.12-2.3811-376.37-56.261-53.132-186.2-179.29-192.07-182.37-8.1697-4.2829-21.032-0.491-27.002 7.9601-4.345 6.1511-4.6589 15.863-0.7178 22.218 5.0842 8.1978 15.173 11.53 23.886 7.8893l3.9768-1.6617c18.623 18.061 161.2 157.79 161.35 157.93 5e-4 0.1205 1.2085 299.28-1.616 301.28-0.7297 0.5178-0.6465 0.8087 0.2344 0.8195 0.9084 0.0111 1.366 1.8467 1.366 5.48 0 10.646-1.8042-4.6912-1.2971 26.484 0.3811 23.411-0.6218 24.466-2.3047 30.477-7.1492-0.2408-13.292-0.4478-20.441-0.6887v19.121c-0.6357 0-19.169 0.2301-18.225-0.7147l0.0042 3e-4zm-20.564-32.611c-15.963 0.12-14.751-0.6138-14.751 11.473h15.411c-0.8515-14.79-0.3151-5.475-0.6604-11.473zm58.066 0.5463h-15.999v10.594c5.7698 0.1097 10.727 0.2039 16.497 0.3135-0.1741-3.815-0.3237-7.093-0.4978-10.908zm-117.98-63.1c-1.2554-1.7222-10.028-1.3658-12.747-1.3658v17.482h12.925c0.1416-2.5548 1.0793-14.392-0.178-16.117zm-8.3765 8.0386c0-8.568 2.8367-6.8997 2.9668-5.1771 0.0745 0.9911 0.2334 2.2893 0.3528 2.8848 0.7307 3.6437-0.2017 8.1849-1.6804 8.1849-1.2544 0-1.6392-1.3832-1.6392-5.8926zm68.342-0.1149-0.0515-8.1929-14.339-0.0044c0.0474 5.7301 0.0879 10.654 0.1355 16.384l14.308 0.0065-0.0515-8.1929-1e-3 -2e-4zm47.869-9.2747c-6.428-0.0212-5.8533 1.0226-5.8533 17.468l14.751-1e-4c0.5447-17.573 1.8069-17.432-8.8974-17.467zm62.457 9.2673 0.021-8.1896h-6.303c-3.4666 0-6.3032 0.4515-6.3032 1.0033 0 2.3616 1.3806 4.2809 2.7117 3.7702 0.791-0.3035 1.7761-0.0055 2.189 0.6631 0.9055 1.4649-1.4685 4.6212-2.8389 3.7744-0.533-0.3293-1.0063-0.201-1.0522 0.2852-0.6484 6.8716-3.4946 6.8973 11.556 6.8828l0.0198-8.1896-6e-4 2e-4zm-110.69-15.565c0.6162-4.7989-0.1199-9.3687-0.4778-12.292h-13.966v15.183c1.9575 0.137 11.156 0.7502 12.695 1.0048 0.6721 0.1111 1.4585-1.6417 1.748-3.8953l3e-4 -1e-4zm-6.4287 1.0295c-3.8491-0.5494-4.6492-5.6732-0.886-5.6732 1.5667 0 4.2197 3.8742 3.5959 5.2513-0.1889 0.4178-1.4086 0.6076-2.7099 0.4219zm-52.97-1.9149c-2.3835-8.6345 2.0959-9.7438-4.3293-9.8063-2.2209-0.0216-4.7585-0.8561-5.8147-1.9122-1.0303-1.0306-2.0842-1.8738-2.3418-1.8738-0.1794 0-0.4685 0.5997-0.4685 17.482h14.029l-1.0743-3.8901zm-8.875 0.5961c-2.0264-1.6408-2.1575-2.1743-0.9053-3.6829 2.2983-2.7694 5.5671-2.2484 5.5671 0.8873 0 1.6416 0.7283 2.8068 1.9121 3.0591 1.3062 0.2784 0.9431 0.6053-1.146 1.0314-2.0391 0.416-3.8477-0.0155-5.4277-1.2949h-2e-4zm126.14-4.0788-0.3525-7.3779c-5.2944-0.1306-9.8438-0.2428-15.138-0.3734v15.124l15.844 0.0045-0.3528-7.3779v6e-4zm52.247 5.7267c-2.4985-3.0107 1.3127-12.461-1.322-12.669-1.7397-0.1375-7.604-0.676-9.5981-0.8578v4.3086c0 4.1302 2.0938 6.3389 2.2715 2.3964 0.144-3.1892 0.4045 0.8186 2.7039 2.1827 1.7258 1.0239 0.7432 5.1926-1.2246 5.1926-2.7925 0-3.655-5.9918-3.718-1.3658-0.0308 2.2619 0.4578 2.4584 6.1101 2.4584 5.3491 0 5.9668-0.2128 4.7771-1.6462l1e-4 2e-4zm-41.788 101.36c11.998-0.4899 33.295 0.3682 9.0144 0.3682-9.9157 0-13.972-0.1657-9.0144-0.3682zm56.369 0.0779c0.9014-0.9014 21.379-0.8244 22.288 0.0837 0.8511 0.8511-23.268 0.896-22.288-0.0837zm303.58-4.8739c-0.1626-5.1461-0.553-6.249-2.3799-6.7267-1.2021-0.3143-2.1853-0.2089-2.1853 0.2343 0 0.4431-1.2463 1.4728-2.7698 2.288-1.5286 0.8181-2.5232 2.1249-2.2195 2.9163 0.9792 2.5519-0.3577 1.5195-2.0342-1.5709l-1.6304-3.0048c-0.2102 5.7179-0.1101 6.8608-1.1802 4.3706-0.5164-1.2019-1.0178-1.6936-1.1145-1.0927-0.0959 0.601-0.8501-2.595-1.6748-7.1022-3.2493-17.757 0.5955-302.61-2.7124-306.15-1.5793-1.6904-4.8616-1.4377-7.4204 0.5712-1.0273 0.8068-1.6965 0.7374-2.2998-0.2389-1.0588-1.7133-6.261-0.86-8.2703-0.6682l-1.1221 72.115-1.0632-72.115c-2.866-0.2372-5.3286-0.441-8.1948-0.6782 0 272.57 0.3708 311.23-2.7751 296.56-1.3193-6.1525-2.3203-7.4736-5.8665-7.7438-4.5669-0.348-7.7441 1.4766-7.7646 4.4595-0.0229 3.3324-1.802 5.9728-3.0964 4.5963-1.5432-1.6407-1.4758-294.37-2.9729-296.73-1.4153-2.2361-0.7334-3.1914-1.8354-3.1914-7.376 0-7.8484 0.0799-6.292 1.0639 1.3757 0.8698 1.397 1.2504 0.1367 2.4417-1.1831 1.1183-1.5974 1.1277-1.9941 0.0455-0.6665-1.8178-6.2886-1.7496-7.8193 0.0948-1.5522 1.8708-1.5623 46.368-1.8154 78.849-0.5823-89.303 0.9514-83.072-8.7124-80.76-2.2942 151.46-0.9197 298.74-2.7317 298.74-0.6011 0-1.0925-1.2615-1.0925-2.8034 0-5.3704-1.7815-7.0304-7.5439-7.0304-5.2546 0-5.2854 0.0211-5.9592 4.0974-1.3062 7.9026-1.5745 7.6495 7.4934 7.0676 7.7996-0.5006 8.1951-0.4136 8.1951 1.8031 0 2.7319-0.7046 2.329-19.536 2.329-1.0442 10.17-0.8167 29.361-1.2351-326.19l125.66-125.88v-73.574l-38.243-38.356c0.0083-42.529 0.0178-91.125 0.0261-133.65-6.5886-6.4317-51.54-50.313-58.483-57.091-0.0945-11.323-0.6809-81.615-0.7756-92.937l3.9771-1.8871c15.303-7.2617 16.946-32.258 2.7385-41.66-6.6023-4.3692-17.027-4.8926-23.969-1.2035-7.2209 3.8375-12.019 12.192-12.019 20.927 0 9.022 2.937 14.71 10.166 19.689 3.1328 2.1578 6.4949 3.9232 7.4712 3.9232 0.9766 0 2.0718 1.1063 2.4343 2.4585 0.8677 3.2363 0.6875 78.192 0.689 81.898-2.1584-2.1118-74.173-72.766-75.49-73.248-0.5479-0.2003-0.9958 2.1275-0.9958 5.1728 0 8.5468-11.514-6.1239 134.4 138.04v135.31c23.538 22.243 24.046 22.975 37.118 36.525l0.0217 66.652c-108.92 109.68-124.54 127.38-124.54 126.16 0-0.8797 60.512-63.535 123.46-126.13l0.0657-66.676c-11.811-11.46-25.356-24.604-37.167-36.064-0.0718-16.449-0.5229-119.52-0.5952-136.08-14.437-14.202-125.97-124.49-129.75-124.5-0.4509-0.0022-0.8196 2.088-0.8196 4.6446v4.6483c64.047 62.082 66.058 64.144 121.28 118.64v137.24c11.819 11.548 25.331 24.749 37.15 36.297l-0.0417 57.467c-42.069 43.456-43.884 45.473-123.41 126.2-0.0715 12.229-0.5188 88.764-0.5908 101.07-0.0635-12.328-0.46-89.054-0.5239-101.41 71.488-72.148 61.33-61.634 123.47-126.95l0.0261-55.725c-17.753-17.243-19.738-19.171-37.482-36.404l0.4451-135.36c-11.585-14.105-99.482-98.724-120.98-119.49-9.0088-75.854-21.409-150.07-33.973-223.93h47.735c0 104.79-0.1934 126.32 1.4915 127.72 1.9331 1.604 50.907 0.9479 98.486 0.6687l0.564-128.39h16.372c0 72.307 2.2188 135.75 0.1711 137.02-2.7371 1.6917-0.467 69.85 0.4878 18.567 0.1863-10.002 0.5571-18.404 0.824-18.671 0.2671-0.267 1.5183 0.1596 2.781 0.9481 1.7126 1.0695 2.7798 1.1278 4.2039 0.2296 1.79-1.1292 1.8835-5.452 1.5112-69.648-0.2852-49.791-0.0623-68.444 0.8235-68.444 1.4597 0 1.3655 25.234 1.2161 261.96l-5.6963 2.049c-9.7512 3.5074-17.23 16.757-15.599 27.634 1.3005 8.6714 6.5242 16.126 13.958 19.918 6.761 3.4493 18.322 2.6053 24.427-1.7834 18.126-13.03 11.135-36.439-1.7097-44.423l-5.2317-3.2523c-1.0344-77.196-1.3984-85.17 0.5962-88.92 2.6445-4.9715 2.2473-20.104-0.7432-28.307-2.6392-7.2385-3.1978-18.548-0.9871-19.978 1.8081-1.1703 81.421-0.884 84.407-0.884-0.238-33.303-0.7419-103.83-0.8862-124.02h21.07c0.6538 167.82 0.6846 202.51 1.1636 444.16l-6.0898 3.1701c-25.911 13.488-34.498 53.679-9.6233 77.204 30.371 28.723 80.805 8.718 83.141-30.708 1.2683-21.409-7.6143-38.194-24.57-46.431l-6.5979-3.2051c-1.3589-80.998-1.3469-96.373-2.47-444.19h32.821c0 101.9 0.2083 116.39 1.4565 266.02 5.9312 6.0834 42.774 43.872 48.708 49.958 1.0232 52.723 1.7178 208.18-0.238 236-45.896 48.125-48.328 50.286-142.16 147.5 0.1775 328.45 1.1074 335.26-3.9956 335.26-0.6284 0-0.8657 0.4473-0.5281 0.9941 0.8093 1.3098-0.4343 4.4692-1.7593 4.4692-0.5723 0-0.7407-0.4843-0.375-1.0762 0.4155-0.6724-0.6489-0.8134-2.8372-0.3757-2.7764 0.5553-3.3127 0.3942-2.5886-0.7777 0.5024-0.8129-0.6145-0.3899-2.4824 0.94-3.3584 2.3915-3.4036 2.394-4.092 0.2247-0.3828-1.2064-0.3894-2.6895-0.0151-3.2958 0.3748-0.6064 0.0195-1.1025-0.7881-1.1025-3.2324 0-1.9585 11.216-3.0305-307.03-1.9565 0.0092-6.802-0.157-8.4609 0.8964-1.5808 1.004-1.5083 44.049-1.9331 166.83l-0.5325-166.63h-8.7412c-0.0295 16.524-0.5049 281.22-0.5344 297.75-0.0613-16.633-1.043-282.75-1.1045-299.39-2.0952-0.2976-4.9167-0.8512-4.9167 0.4703 0 0.6428-0.6851 1.1687-1.5222 1.1687s-1.7915 0.7025-2.1211 1.561c-0.8723 2.2736-0.7263 293.59-1.7859 309.3-0.5237 7.7593-0.7939 9.1423-0.9321 4.7712l1e-4 1e-4zm51.817-16.537c0.7012-0.7012-0.1399-6.472-0.8623-11.726-6.8071 0-9.29-0.4383-12.41 2.6819-3.1304 3.1301-3.5022 7.6309-0.77 9.3133 1.916 1.1797 12.802 0.971 14.042-0.2691h3e-4zm-52.012-4.5854c0-3.7049-0.5085-5.1506-2.1135-6.0096-2.7271-1.4596-3.6667-1.4353-2.7358 0.0706 1.3477 2.1802-3.8916-2.1098-3.8916-0.1475 0 0.6221-1.1768 1.131-2.6147 1.131-4.4333 0-3.9412 4.7687-3.9412 9.8339h15.297v-4.8785l-3e-4 1e-4zm-1.3103-56.143c-0.3171-4.9036-0.4597-5.096-4.031-5.4371-5.8547-0.5593-8.8655 0.5909-8.8464 3.3793 0.0229 3.3923 1.6338 5.6288 3.3079 4.5941 0.8613-0.5324 1.1111-0.4143 0.6619 0.313-1.4299 2.3137 4.429 2.098 9.2366 2.2343l-0.3286-5.0835-4e-4 -1e-4zm52.32 3.8705c1.8113-1.1193 0.4678-4.8742-2.6101-7.2953-2.2202-1.7465-3.0601-1.884-4.8433-0.7932-1.792 1.0962-2.3411 0.9958-3.2437-0.5925-1.2354-2.1747-3.6016-2.6273-2.8555-0.5463 0.7434 2.0723-1.8181 3.9473-0.427 7.6081 0.8618 2.267 1.6499 2.5508 6.8606 2.4708 3.2375-0.0497 6.4412-0.433 7.1184-0.8518l6e-4 2e-4zm-155.73-17.149h-13.285v17.482h11.867c-0.3398-8.9513-0.5571-9.7404 1.4185-17.482zm52.547 1.0927h-13.385v16.39h12.019c0-8.1551-0.1352-8.8854 1.3657-16.39zm-52.93-7.2337c-1.4053-1.4053-1.5425-2.4241-0.6655-4.9398 1.4907-4.2766-0.3989-6.4016-5.6931-6.4016-3.8066 0-4.1667 0.2757-4.8049 3.6776-0.7703 4.1049 0.0391 7.193 1.9294 7.3578 0.6868 0.0599 0.0195 0.5026-1.4827 0.9838-1.9651 0.6293-0.5962 0.9054 4.8779 0.9837 7.0151 0.1005 7.4712-0.0294 5.8391-1.6615h-2e-4zm46.915-1.6521c0.2935-1.1224 1.1846-2.0407 1.9807-2.0407 2.1558 0 3.1667-2.2948 1.4722-3.342-2.2349-1.3813-9.2324-0.6662-8.9106 0.9107 0.1504 0.7363-0.2183 1.3387-0.8193 1.3387s-1.0928 1.3899-1.0928 3.0887c0 2.8385 0.2771 3.048 3.418 2.587 2.1469-0.3151 3.6163-1.2607 3.9518-2.5424zm57.58-4.9126c0.3965-1.5795 0.4221-4.2321 0.0569-5.8946-0.5205-2.3692-1.4182-3.1353-4.1533-3.5435-5.1685-0.7714-8.4065 0.8033-8.4065 4.088 0 1.5173-0.4917 2.7587-1.0928 2.7587-0.6008 0-1.0925 0.9834-1.0925 2.1853 0 1.7691 0.7285 2.1853 3.8242 2.1853 2.1035 0 3.8242-0.5517 3.8242-1.2259 0-0.7613 0.9319-0.5759 2.4585 0.489 3.3611 2.3446 3.7537 2.2553 4.5813-1.0423zm51.024 0.6866c1.6321 0 2.0325-0.8343 2.0325-4.234 0-4.4747 0.6206-5.5999-15.297-5.5999 0 1.6956-0.2129 9.2538 0.8193 10.302 1.1406 1.1587 9.0618-0.4685 12.445-0.4685zm-108.45-9.5896c2.9172 0.2231 3.9502-0.1266 3.9502-1.3369 0-1.2787-1.5007-1.6457-6.8291-1.6697-6.3655-0.0286-6.8291 0.1365-6.8291 2.4314 0 4.3611 1.8286-0.0276 9.708 0.5752zm113.78-620.88c7.043-3.5931 12.93-13.237 13.046-21.373 0.0261-1.844-0.74-6.0234-1.7029-9.2875-2.0164-6.8338-9.0955-14.551-14.422-15.721-5.3779-1.1811-4.5876 1.2835-4.5876-82l5.1899-3.8222c18.527-13.644 12.772-40.806-9.396-44.351-12.841-2.0533-26.52 11.457-24.957 24.65 1.176 9.9296 8.7747 20.051 16.164 21.528 1.7661 0.3532 3.4219 0.9832 3.6794 1.3999 0.6216 1.0063 0.8025 78.807 0.8127 81.219l-4.0784 1.402c-20.538 7.0608-22.119 41.06 1.4011 48.614 4.3307 1.391 13.957 0.2374 18.851-2.2592zm-20.879-4.7167c-12.788-6.7462-13.091-26.71-0.5171-34.079 18.03-10.566 36.758 10.517 25.083 28.237-5.2248 7.9307-15.827 10.452-24.566 5.8418zm13.652-7.7243c12.163-5.082 7.7717-22.515-3.7168-22.515-3.2073 0-8.2883 2.808-10.314 5.7001-2.2136 3.1604-2.1865 10.609 0.05 13.803 3.1111 4.4417 8.0244 5.5001 13.98 3.0117h5e-4zm-14.687-125.55c-5.4907-2.9036-9.79-9.8388-9.79-15.792 0-11.64 12.202-20.382 23.325-16.711 7.9958 2.6388 13.963 13.45 11.783 21.347-3.2858 11.9-14.537 16.858-25.318 11.156zm15.728-7.8119c5.5962-5.1864 2.9622-16.446-4.512-19.288-6.3032-2.3965-14.887 3.7489-14.887 10.658 0 3.1313 0.8171 4.6773 4.0266 7.6187 5.1243 4.6958 10.98 5.0809 15.372 1.0107zm163.71 874.61-0.1943-4.9169c-6.3074 0.0938-11.727 0.1744-18.034 0.2682 15.437-1.1912 18.682-1.3729 18.913-1.2414 0.4006 0.2278-0.2546 7.7805-0.4905 10.807l-0.1946-4.9169h5e-4zm-63.899 0.367c0.4438-1.1566 0.2666-1.5518-0.4873-1.0859-0.6519 0.4028-1.4355 0.1147-1.7415-0.6402-0.4209-1.0385-0.8386-0.9736-1.7156 0.2664-1.0303 1.4568-1.1694 1.4568-1.2527 0-0.0635-1.1041-0.3999-0.9258-1.0327 0.5463-1.1821 2.7513-0.9783 0.3707-1.0923-4.9169h15.258c-4.5414 4.6766-9.7062 10.443-7.9362 5.8303zm-260.22-1.5453c1.3044-2.1105-6.0215 0.6142-6.9155-1.9786-0.3186-0.9244-0.0405-1.2196 0.7112-0.755 0.679 0.4196 1.2344 0.2253 1.2344-0.4316 0-1.5753 3.9524-0.252 10.107-0.117 3.3391 0.0732 4.0974 0.4943 4.0974 2.2751 0 1.8657-0.7285 2.1853-4.9814 2.1853-3.2842 0-4.7332-0.4015-4.2532-1.1783l2e-4 1e-4zm202.09 0.0822c0.3704-0.5991-0.0928-1.0894-1.0303-1.0894-2.5461 0-2.054-2.1147 0.7551-3.2439 2.4004-0.9649 2.3906-0.9898-0.4189-1.0574-2.0278-0.0488-3.072-0.795-3.5366-2.5277-0.458-1.7075-3.1616-274.1-0.4841-319.6 73.949-76.475 144.24-148.43 145.79-151.43 1.5684-3.0537 0.5564-24.81 0.1375-39.13l-2.8586-1.0869c-7.1714-2.7265-3.0217-5.001-12.793-3.1948-3.4731 0.642-6.4702 1.1674-6.6604 1.1674-0.2034 0-0.3459 5.4139-0.3459 38.388-0.1443 0.1478-138.96 142.54-143.68 147.41l-1.1389 93.375c-0.0608-11.25-0.439-81.272-0.5-92.55 22.209-23.935 128.93-133.46 144.58-149.47-2.7922-104.53-0.1965-219.42-2.8372-244.69l-46.414-47.839c-1.1145-101.95-1.2395-107.5-2.1975-262.54h35.805v109.69c42.794 43.496 46.834 47.766 92.57 95.184 0.8149 117.39 1.9312 256.87 1.3977 384.77-174.71 176.57-164.47 166.53-178.1 182.03-0.1018 238.93-0.1836 266.37-5.0366 264.51-0.8357-0.3207-1.5195 0.0186-1.5195 0.754 0 0.7913-0.8765 1.1077-2.1479 0.7753-1.1814-0.3089-2.0417-0.059-1.9121 0.5555 0.3145 1.4908-2.4958 2.483-2.4958 0.9621 0-2.0291-6.1406 1.8611-4.9148-0.1213l1e-4 -5e-4zm13.02-10.494c2.5583-0.9816 1.9241-2.4133-0.5596-11.356-8.4451 0-12.654-0.3153-13.438 1.7283-0.8884 2.3152-0.8455 8.6519 0.0657 9.5623 0.9106 0.9107 11.599 0.9608 13.933 0.0652h-8e-4zm-0.4568-63.306c-0.9014-0.0273-1.5369-0.5792-1.4124-1.2264 0.1479-0.7679-1.5244-0.9793-4.8137-0.6085-4.0574 0.4573-5.3269 0.1763-6.5093-1.441-1.686-2.3057-1.4692-0.7104-1.4692 10.524l15.844-0.6421c0-2.4943 0.4429-6.5423-1.6389-6.6055zm-13.466-19.853c-1.0017-1.6207 0.7712-2.6666 6.2046-3.6602 5.2786-0.9653 7.1438-0.3682 8.376 2.6813 0.6819 1.6875 0.9504 0.6307 1.0012-3.9378 0.1035-9.2966-1.8789-8.3715-15.774-6.8675l-0.5896 5.8723c-0.7615 7.5857 0.0503 20.622 1.1587 18.604 1.0984-2.0007 0.6275-11.066-0.3767-12.692zm171.96-455.57c-1.1121-4.9697-2.3743-7.1654-6.4565-11.23-14.789-14.725-37.762-6.8697-40.195 13.744-1.3086 11.086 4.1963 20.492 15.251 26.059 15.495 7.8025 36.313-6.6238 31.401-28.573zm-30.521 22.884c-2.031-1.0005-5.1042-3.7675-6.8291-6.1486-2.6506-3.6592-3.1362-5.3785-3.1362-11.106 0-7.443 2.2451-12.022 7.9775-16.269 4.2727-3.1656 14.722-3.1837 18.942-0.0329 18.929 14.132 2.9056 43.34-16.955 33.556zm12.638-6.8178c4.7014-2.8666 6.1614-5.9809 5.5105-11.755-0.7534-6.6841-4.1931-10.163-10.002-10.116-7.0137 0.0573-11.555 4.9965-11.555 12.566 0 3.0983 0.8413 4.8467 3.7148 7.7204 4.2505 4.2506 7.3135 4.6441 12.332 1.5841h3e-4zm6.7371-52.811c7.1082-4.704 10.408-10.607 10.912-19.52 0.7085-12.538-5.0942-21.593-16.391-25.579-25.916-9.1436-45.81 30.084-18.397 45.938 6.813 3.9404 17.206 3.5748 23.877-0.84h-2e-4zm-21.113-4.3051c-10.77-6.2583-13.426-18.891-6.0974-29.007 7.5056-10.362 21.832-9.8346 29.932 1.1008 3.1248 4.218 3.7637 14.534 1.231 19.871-4.4517 9.3815-16.244 13.162-25.066 8.0356zm16.988-8.413c5.5476-5.5476 4.0029-15.897-2.8591-19.153-4.4478-2.1107-6.3362-2.1214-10.325-0.0589-7.4255 3.8399-8.8396 12.094-3.1768 18.543 2.9329 3.3403 4.0518 3.8623 8.2788 3.8623 3.9455-1e-4 5.5036-0.6159 8.0818-3.194zm2.2329-51.214c21.866-11.423 13.553-46.116-11.05-46.116-18.506 0-29.5 18.29-21.422 35.639 5.9043 12.68 19.721 17.138 32.472 10.477zm-18.16-3.9588c-17.261-7.7044-14.046-34.348 4.3955-36.427 17.295-1.9494 28.125 21.081 15.235 32.398-5.8936 5.1744-13.546 6.7449-19.631 4.0287zm15.092-10.257c7.4175-7.742-0.5081-21.996-10.795-19.414-8.3452 2.0945-11.149 13.064-4.928 19.285 4.4805 4.4805 11.499 4.5382 15.723 0.1293zm0.2657-49.258c11.975-5.4394 18.062-21.551 12.645-33.474-8.6912-19.132-34.366-19.814-44.135-1.1719-3.2241 6.1519-3.2026 15.948 0.0481 22.154 6.241 11.915 20.36 17.525 31.441 12.492h2e-4zm-18.814-7.2423c-10.398-6.2331-12.128-20.457-3.533-29.053 7.4104-7.4103 17.643-7.8878 25.156-1.1742 6.2134 5.5517 7.4426 18.576 2.4727 26.197-4.6069 7.0646-15.886 8.9508-24.096 4.0296h3e-4zm18.291-8.0952c6.0818-6.0818 2.8071-17.37-5.5732-19.211-3.8108-0.837-10.112 0.9992-12.179 3.5493-1.0195 1.2577-1.0491 1.5502-0.0994 0.98 1.981-1.1898 0.2461 2.6831-0.6748 2.1141-0.9409-0.5816-0.9902 9.1975 0.2053 9.2022 0.4863 0.0022 0.6045 0.4558 0.2627 1.0086-1.2703 2.0554 5.0339 5.5508 10.011 5.5508 3.9078 1e-4 5.4761-0.6224 8.0474-3.1939zm-419.62 676.81c-0.8081-123.57-1.1338-499.57-2.7747-502.16-2.5681-4.0491-185.08-180.19-185.2-180.31v-304.75h20.76c0.0239 169.83 0.2234 176.1 1.4524 297.38 50.266 49.613 234.91 228.15 262.18 254.25-1.4536 13.904-1.0767 14.638 0.2588 24.741l9.0286-8.7412-1.0999-21.148c-67.838-65.378-194.52-188.12-260.57-253.8-1.8284-25.759-2.3521-645.77 0.8101-0.4084 32.224 32.594 213.69 208.06 261.11 254.44 0 14.667-0.7058 21.982 6.3384 15.93 3.5527-3.0522-13.284 13.355-16.286 16.294l0.6606 12.709c3.2861-3.0712 27.62-25.373 28.575-28.288 0.4116-1.2554 0.7234-7.7555 0.6934-14.445-0.0491-10.828-0.323-12.525-2.4993-15.468-4.4443-6.0114-184.82-177.58-259.02-249.9-0.0139-8.0003-0.4756-275.55-0.4893-283.54l46.078 3e-4c0.052 5.8268 2.8411 276.24 0.4226 286.66-1.1978 5.161 1.0015 14.576 4.5144 19.328 5.4819 7.4149 19.411 10.895 27.756 6.9343 4.5564-2.162 10.816-8.4656 12.54-12.627l1.282-3.0952h103.42c16.784 16.255 31.165 30.182 47.949 46.438l0.2451 140.22 37.696 36.194v46.94c-57.499 58.689-119.72 123.32-121.68 125.83-4.8213 6.1738-1.3547 334.26-4.5215 334.26-0.6008 0-1.0928-2.4585-1.0928-5.4633v-5.4633c-12.681 0-12.777-0.4557-13.432 3.0048-1.5601 8.2541-4.3679 7.7298 5.9309 8.1448 6.6204 0.2667 8.0881 0.6579 8.3894 2.2354 0.4194 2.1985-1.3843 1.9122-17.278 1.9122l-0.1929-3.5511c-0.4453-8.2097-1.4634 33.672-1.9495-40.701l-2e-4 -3e-4zm15.408-18.302c0.1897-3.0532 0.4448-11.804 0.5452-15.024h-12.308c-0.1299 6.1143-0.2417 11.368-0.3718 17.482 11.315 0 11.961 0.3242 12.134-2.4584h2e-4zm0.8613-21.725c-0.7021-1.3119-0.9612-4.1215-0.5925-6.4266 0.6001-3.7523 0.3896-4.2056-2.5115-5.4072-1.7415-0.7214-4.3193-1.1483-5.7288-0.9488-2.3682 0.3353-2.5403 0.8077-2.2749 6.2435 0.158 3.2344-0.271 6.5533-0.9534 7.3754-1.0283 1.2391 0 1.4948 6.0339 1.4948 7.0872 0 7.2424-0.0599 6.0271-2.3309v-2e-4zm103.9 89.781c-0.8879-0.5615-3.7258-0.7315-6.3066-0.3777-4.0442 0.5543-4.5974 0.3957-4.0049-1.1476 0.9963-2.5974 6.3696-1.5218 10.56-2.324 1.3936-0.2668 1.9121 0.3484 1.9121 2.2689 0 2.984 0.0271 2.9642-2.1609 1.5806l-2e-4 -2e-4zm194.06-5.7747c-0.8711-3.249-0.688-238.6-0.689-247.16 48.941-48.975 153.18-153.29 181.69-181.82-0.0283-7.1851-1.3784-408.94-2.3296-410.65-1.564-2.8176-80.317-81.55-89.565-93.773-0.0906-11.871-0.6558-85.895-0.7466-97.792l61.735 3e-4v106.69c15.481 15.914 48.26 49.61 57.645 59.257 2.7869 353.16 1.345 24.113 3.884 486.19-42.866 44.619-40.324 40.94-135.28 138.94-0.825 8.735-1.4043 2.532-1.2925 126.41 0.1167 129.68 1.5742 116.15-12.514 116.15-8.2329 0-8.5769-0.1025-9.2437-2.7598-1.0818-4.3098 0.854-181.54-0.5969-214.68-20.666 0-20.555 0.1847-29.346 1.3896-0.0359 9.1539-0.1741 98.42-1.0928 89.3-1.1609-11.526-0.2329 119-2.4585 123.79-1.3181 2.8386-1.6748 2.9412-10.252 2.9494-8.2958 0.0077-8.9306-0.1549-9.5458-2.4499zm18.198-3.8242c0.2422-0.4507 0.2251-2.8524-0.0383-5.3369-0.449-4.2343-0.7292-4.5583-4.4734-5.168-2.2454-0.3656-4.1543-0.1816-4.3589 0.42-0.5315 1.5616-3.5281 0.4832-5.427 2.3818-1.4023 1.4023-1.79 6.587-0.5828 7.7942 1.0042 1.0041 14.335 0.9225 14.88-0.0911zm44.356-12.292c-8.0605 0-7.5176 3.2553-7.5176 13.112h16.39c0-8.4074 0.5791-13.112-8.872-13.112zm-44.668-45.853c0-9.2972-8.5635-5.2935-11.473-7.4305-1.3887-1.0201-1.0928-16.211-1.0928-19.378l12.565 0.6697c0-3.946 0.1123-8.6664-0.8823-9.2809-1.7703-1.0942-11.72-1.8308-12.994-0.9621-1.6941 1.1545-1.3474 11.92-1.4524 27.412-0.1035 15.15-0.6108 13.301 15.329 13.301v-4.3322h3e-4zm53.54-6.5943c-3.2185-0.0117-13.583 0.3135-12.406-2.7539 0.3052-0.7952-0.0449-2.5671-0.7788-3.9375-2.2551-4.2138 1.1653-1.7087 1.1653-4.9369 0-0.8868-0.4917-1.3085-1.0925-0.9371-0.6445 0.3984-1.0928-0.8116-1.0928-2.9506 0-4.7957 2.5642-6.3738 8.5715-5.2753 5.3101 0.971 6.1172 0.222 5.1743-4.8033-0.6577-3.5062-0.8501-3.6182-7.3906-4.3018-3.6931-0.386-6.9011-0.5161-7.1279-0.2889-1.2656 1.2653-1.5906 10.054-0.8904 24.063 0.9563 19.13-0.5439 16.578 15.868 17.049-5e-4 -6.745-5e-4 -4.2173-5e-4 -10.926zm-49.449-89.87c-0.488-11.953-0.488 29.982 0 18.029 0.2023-4.9578 0.2023-13.071 0-18.029zm-718.94 159.58c-0.1438-0.1801-0.5125-54.114-0.8196-119.85-0.5491-117.52-0.5945-119.55-2.7129-120.74-1.1851-0.6664-8.2937-6.9728-15.797-14.014-10.953-10.278-14.113-12.684-16.032-12.203-1.9507 0.4897-6.3708-3.1628-24.085-19.902-75.847-71.673-145.68-138.17-219.78-211.33-1.0994-33.69-1.1919-0.1554-2.6616-534.29h55.965c0 110.17-0.2217 124.11 1.6392 125.65 3.2246 2.6761 0.0771 54.024 3.064 129.75 33.608 35.516 35.208 37.21 57.495 61.086 0.0728 16.736 1.239 284.67 1.3118 301.4 159.92 158.56 100.16 96.563 180.89 171.18 1.2197 100.78 1.4458 107.59 1.448 242.67-2.8958-0.1859-15.726-1.2919-17.924-0.0623-0.9592 0.5369-1.8618 0.8287-2.0051 0.6486v2e-4zm18.836-7.293c0-0.5258-0.3074-2.4926-0.6829-4.3706-0.7893-3.9451-0.481-3.4145-13.522-3.4145v8.7412h7.1023c3.9062 0 7.1023-0.4303 7.1023-0.9561zm-4.6228-55.764c1.3333-0.905 0.1323-2.81 2.6292-16.488h-13.304v17.5c1.7007-0.0643 9.4712-0.1954 10.674-1.0123l2e-4 -1e-4zm-7.5811-4.8195c-0.5938-5.0882 1.0491-9.066 1.1685-7.5709 0.0601 0.7512 0.8464 1.3658 1.7478 1.3658 1.2141 0 1.6389 1.2748 1.6389 4.9169 0 4.0936-0.3459 4.9169-2.0657 4.9169-1.5261 0-2.1765-0.9478-2.4895-3.6287zm8.2278-18.497c-0.6536-4.1387 0.7625-9.3489 1.5176-12.658-12.834-0.7159-13.306-0.4464-13.48-0.2714-0.2976 0.3-0.4519 3.1181-0.4519 16.481h12.974l-0.5605-3.5511h1e-4zm-9.7068 0.2331c-0.8669-1.4031 0.7542-11.373 1.4299-8.1548 0.7009 3.3342 3.856 4.9335 2.8748 7.4905-0.773 2.014-3.2359 2.394-4.3047 0.6643zm271.82 76.526c-0.3438 0-0.8196-21.376-0.8196-380.99-4.7849-4.5989-226.99-220.23-231.01-225.81-1.7581-2.4431-1.6504-56.964-2.3159-415.92h22.986v409.37c80.406 76.768 115.06 110.19 233.01 222.72-0.0454 12.152-1.281 392.38-2.0498 396.36-0.6726 3.4816-0.0918 3.0048-18.982 3.0048 1e-4 -4.0718 0.0873-8.7413-0.8192-8.7411zm18.869 2.7315c-1.7363-8.3655-0.4578-8.1094-8.2156-7.7646-3.6018 0.1602-6.7268 0.4976-6.9443 0.7499-0.5017 0.5825-1.4294 7.1657-1.6436 8.5533 2.5317 0.1447 13.003 0.7173 15.438 0.9824 1.5168 0.1652 1.8108-0.3776 1.3657-2.5211h3e-4zm-8.645-70.476c-2.6621 0-4.8511 3.1306-2.9946 4.2833 2.8013 1.7396 1.3083 7.9319-2.3364 9.691-2.7666 1.3353-1.0979 1.1932 8.4922 1.3242-0.6998-14.763 0.2164-15.298-3.1612-15.298zm3.4406-11.978c0.3052-7.1142-1.3425-9.3002-6.0764-8.0622-3.3733 0.8821-3.9839 4.2186-1.5208 8.3105 1.1704 1.944 1.9023 4.1492 1.627 4.9004-0.3262 0.8892 0.5793 1.3657 2.595 1.3654 3.022-5e-4 3.1025-0.1562 3.3755-6.514h-3e-4zm40.273 82.727c-2.0244-20.067-1.8394-389.37-1.8457-408.92-196.14-187.78-50.482-48.413-232.62-222.9-0.033-197.85-0.2051-207.86-1.4814-393.9h69.197c0.0254 311.06-0.408 315.22 3.2219 319.6 4.6008 5.5509 128.8 127.05 183.82 179.29-2e-4 0.171 0.2424 572.95-2.2295 526.95-0.085-1.5883-0.9438-3.1904-1.9075-3.5603-0.9639-0.3699-1.5159-1.2891-1.2266-2.0427 0.3718-0.9692-1.1504-1.4622-5.2024-1.6843-5.6484-0.3097-5.738-0.2658-6.4221 3.1551-1.1851 5.9263-0.9292 6.6321 2.311 6.379 7.0264-0.5488 11.2 0.0974 11.2 1.7338 0 1.9366-4.0564 1.639-16.232 1.639l-0.5789-5.7364 3e-4 -1e-4zm14.101-57.227c-2.2144-4.2684 0.1069-3.9188-1.5889-8.4169-1.7034-4.4795 1.0205-1.6894 1.0205-4.559 0-1.2383-1.3352-1.639-5.4631-1.639-4.9473 0-5.46 0.2321-5.4287 2.4585 0.0298 2.1243 0.2158 2.2303 1.366 0.7797 1.6577-2.0906 4.8845-1.5397 5.426 0.9265 0.4824 2.1955-2.5557 11.132-3.7844 11.132-0.6104 0-3.1812 2.1853 4.5415 2.1853h5.3984l-1.4875-2.8676h2e-4zm-0.0361-26.221c2.1389-5.1188 2.1436-5.0944-1.2893-6.6885-2.4209-1.1242-3.3621-1.0728-5.4546 0.2984-4.8828 3.1994-2.4753 8.3208 4.8318 10.279 0.1421 0.0381 1.0024-1.7117 1.9121-3.8884v-1e-4zm143.7 87.545c0-1.3112 1.6392-1.639 8.1951-1.639s8.1948 0.3278 8.1948 1.639-1.6389 1.639-8.1948 1.639-8.1951-0.3278-8.1951-1.639zm398.23-48.076c5e-4 -55.253 0.9624-23.957 0.3162 24.386-0.1743 13.03-0.3167 2.0564-0.3164-24.386h2e-4zm-254.57-29.502c0-85.617 0.9321-39.819 0.302 38.05-0.166 20.539-0.3022 3.4165-0.3022-38.05h2e-4zm-668.47 69.646c-0.4885-0.7566-0.582-2.3392-0.208-3.517 0.7917-2.4939-0.0498-2.158-26.216-2.7559l-0.6008-34.207c2.6587-1.6432 7.2498-4.1545 9.9971-8.0133 6.8755-9.655 7.5398 3.0807 7.5398-19.515h6.5559c8.6921 0 8.5608 2.1852 0.5461 2.1852h-6.0095v8.6271l5.7366 0.3302c7.5205 0.433 7.355 2.3428-0.2732 3.157l-6.0098 0.6414c7.7087 0.2185 4.8628 0.1378 12.566 0.3562l-0.094 16.663c-0.1016 18.097-2.0796 38.295-3.5303 36.048l2e-4 -1e-4zm2063.1-1.7176 2.3927-2.5469-4.4384-4.0167 4.4384-4.7245-4.4384-4.0167 2.2122-2.3549c1.2169-1.2951 1.88-2.6871 1.4739-3.0933s0.1731-0.7384 1.287-0.7384c4.402 0-5.1624 4.8033-2.5329 7.4326 0.7197 0.7198 1.9479 1.3087 2.7291 1.3087 2.0977 0 1.7264 1.4686-0.7648 3.0244-2.5203 1.574-2.8203 3.8295-0.7388 5.557 1.0589 0.8788 1.8469 0.8415 2.9412-0.1394 0.8221-0.7369 0.048 0.4685-1.7197 2.6787-4.4486 5.5612-5.8297 4.8099-2.8415 1.6294zm-1180.7-86.504 0.1873-86.319c1.5269 228.24-0.425 195.76-0.1877 86.319h4e-4zm-11.828 7.6486c0-86.857 0.9307-40.401 0.3015 38.596-0.166 20.839-0.3015 3.471-0.3015-38.596zm-908.51 50.48c0-17.494-0.3696-24.736-1.311-25.677-1.8286-1.8287-7.0916-0.8212-11.183-2.3768-3.2783-1.2463-2.803-1.0771-2.803-21.574 2.0813-0.2148 11.668-1.0526 13.084-1.9274 1.4768-0.9128 1.1206-50.768 1.1206-72.586-14.839-16.058-10.323-11.552-100.52-103.82-0.4089-12.682-0.3958-14.11-0.5469-30.285-1.7991-1.8604-46.696-48.104-47.713-49.919-0.9702-1.7338 3.813-14.224 4.8311-17.081 9.9087 7.8486 7.0703 6.9812 25.723 7.8333 42.4 43.495 112.04 112.87 111.42 114.74-0.2583 0.7757-1.1836 1.5491-2.0566 1.7185-0.8845 0.1718-25.75-24.043-56.19-54.72-58.701-59.157-55.506-56.437-66.331-56.48-3.3284-0.0133-3.6035 0.756-1.7368 4.8535 1.0098 2.2159 2.0671 2.7909 5.1902 2.8218 2.157 0.0213 4.9485 0.6359 6.2031 1.3658 3.0142 1.7537 102.24 102.26 106.44 106.5 0 9.9853-0.8469 23.217 15.283 23.217 10.55 0 18.043-6.8323 18.043-16.452 0-4.7109-0.4834-5.8483-3.9661-9.3307-2.1809-2.1812-6.3606-4.7779-9.2874-5.7703-9.7534-3.3073-79.019-78.342-121.84-119.23-15.758 0-15.802 0.4527-20.672-3.4608-2.9688-2.3856-4.3184-4.3375-4.3447-6.2827-0.0896-6.6589-3.312-20.35-6.2671-26.628-4.2874-9.1093-12.022-17.402-20.845-22.35-8.0378-4.5076-18.922-7.7706-26.242-7.8673-4.74-0.0626-4.9521-0.2414-35.082-29.554-34.572-33.635-33.191-33.681-35.956-37.707-0.0442-15.056-1.5176-518.7-1.5618-533.76h38.581c0 36.371-0.5452 514.44 2.3127 542.84 176.72 171.88 160.12 155.1 268.68 262.97-0.0684 15.464-0.4949 112.29-0.5635 127.86-16.777-0.7659-16.896-0.2347-21.307-4.475-2.1035-2.0223-4.8076-4.3839-6.0095-5.2479-2.4993-1.7968-2.1963-2.5886-2.8303-61.841-55.513-56.999-81.321-83.419-99.332-102.34 0-3.9309-0.2854-19.147 1.1338-22.878 1.0032-2.6389 0.7273-3.4007-2.3999-6.627-1.9434-2.005-3.9285-3.6454-4.4116-3.6454-0.188 0-0.8782-1.9775-0.8782 35.153 44.1 45.408 65.876 67.217 100.37 103.18 1.1001 53.218 1.6084 74.267 2.0269 74.73 0.625 0.6916 7.0854 2.3967 8.5093 2.7964 0.2185 6.9494 0.4062 12.921 0.6248 19.87-3.4666 0.8729-6.4456 1.623-9.9121 2.4959v51.323h-5.4634v-24.366l0.0048-3e-4zm7.4055-31.967c2.9075-2.0364 3.2727-7.5342 0.7405-11.149-3.355-4.7899-13.297-4.9272-15.817-0.2186-1.6519 3.0864-1.2668 8.8542 0.7385 11.07 2.2923 2.5331 10.892 2.7114 14.338 0.2973zm-9.6228-4.3475c-1.9854-2.3921-0.0679-5.4243 3.4292-5.4243 2.1743 0 2.6125 0.5497 2.6125 3.278 0 2.4913-0.5474 3.3561-2.2808 3.6038-1.2546 0.1793-2.9468-0.4766-3.7607-1.4573l-2e-4 -2e-4zm1135 51.322c-3.3002-1.7906-6.2966-6.7221-6.2966-10.362 0-3.9843 3.2816-9.5165 6.415-10.814 3.1923-1.3223 12.286-1.1516 11.444 0.2147-0.2777 0.4507 0.2865 0.8195 1.254 0.8195 1.7646 0 4.9258 6.007 4.9258 9.3605 0 3.4249-3.5979 9.3239-6.649 10.902-3.8613 1.9968-7.2599 1.9602-11.093-0.1196zm966.16-19.88c0-0.8008 1.9526-2.0493 4.5997-3.7025-4.7419-5.0475-5.0023-4.5986-2.4571-6.902 1.1971-1.0833 1.9132-2.3956 1.5915-2.9163-0.9772-1.5807 4.5396-1.6433-0.465 2.8857-2.059 1.8634-2.0815 2.11-0.3657 4.006 1.7622 1.9471 1.98 1.8714 6.0061-2.0894 2.5202-2.4795 3.94-4.7601 3.5789-5.7489-0.4751-1.3006-0.3185-1.361 0.7581-0.2924 1.0785 1.0704 0.0273 2.7809-5.1254 8.34-6.222 6.7128-8.121 8.214-8.121 6.4197h-1e-4zm-2473.9-68.568c-32.059-32.159-58.042-58.449-57.742-58.422 2.738 0.2469 218.14 219.32 57.742 58.422zm1394.6 46.784c-7.5081-3.6992-11.434-13.696-8.9133-22.699 4.7109-16.826 26.494-18.519 35.199-2.7365 3.0234 5.4815 2.2299 13.823-1.8209 19.134-5.6012 7.3435-16.6 10.176-24.465 6.3012zm13.503-4.6897c-0.3671-0.5941 0-0.8254 0.8075-0.5142 0.8112 0.3113 2.6807-0.7173 4.1543-2.2858 3.5863-3.8176 3.8717-14.221 0.4938-18.009-12.672-14.211-32.635 6.1196-18.46 18.565 3.0247 2.6556 4.7793 3.3237 8.7289 3.3237 2.979 0 4.678-0.4291 4.2758-1.0801zm-177.56-163.72c33.73-34.853 30.958-32.147 136.84-139.41-2.343-323.36-1.1121-138.01-3.8027-489.68-19.35-19.737-41.568-42.399-60.918-62.136 0-80.407-0.2061-105.76 1.3657-105.24 1.5981 0.532 1.6719 29.628 2.4585 104.59 45.594 46.524 57.745 58.886 58.542 60.402 1.8303 3.479 3.3772 477.41 3.4419 493.06-51.289 52.049-90.357 91.694-136.28 138.31-0.0623 9.4316-1.0571 160.39-1.1194 169.82-0.029-9.4344-0.4909-160.28-0.52-169.72zm-975.33 159.61-55.862-0.2932c-70.553-74.011-71.543-74.397-71.014-74.926 0.5876-0.5877 7.7168 7.4092 70.195 72.623 101.1 0.1229 113.09-0.0928 113.09 1.7764 0 0.9014-0.1228 1.5206-0.2732 1.3759-0.1501-0.1447-25.411-0.395-56.135-0.5562h3e-4zm73.886-1.3661c0-1.356 1.6033-1.5779 9.29-1.2855 12.32 0.4688 12.324 2.1021 0 2.571-7.6868 0.2925-9.29 0.0706-9.29-1.2855zm846.81-14.66c0-9.8313-0.3762-13.719-1.366-14.118-0.8157-0.3293-0.5959-0.5859 0.5464-0.6374 1.7275-0.0779 1.9121 1.2857 1.9121 14.118 0 18.767-1.0925 18.899-1.0925 0.6373zm170.97-55.816c5e-4 -73.964 0.9514-35.269 0.3059 33.131-0.1685 17.835-0.3059 2.9264-0.3059-33.131zm-1142.9 59.522c-21.38-21.19-117.65-121.6-118.59-122.9-6.5872-9.0895 85.807 88.062 117.55 121.03 80.783-0.1799 108.65-0.4435 108.65 1.1 0 1.8229-6.823 1.4936-107.61 0.7679zm125.1-0.5184c0-1.3284 1.7605-1.639 9.2876-1.639s9.2876 0.3106 9.2876 1.639c0 1.3283-1.7605 1.639-9.2876 1.639s-9.2876-0.3107-9.2876-1.639zm74.3 0c0-1.2582 1.3962-1.639 6.0095-1.639 6.5461 0 8.0505 1.504 2.595 2.595-5.6926 1.1386-8.6045 0.815-8.6045-0.956zm2079.9-7.9445-4.3366-4.8314-2.3801 2.767c-1.3091 1.5219-2.6154 2.5319-2.9026 2.2445-0.4855-0.4854 9.8499-11.357 10.797-11.357 0.2351 0 0.4276 0.5759 0.4276 1.2798s0.8243 2.1906 1.8317 3.3038c1.5123 1.6711 1.5795 2.2577 0.386 3.364-1.1498 1.0657-1.2791 1.0463-0.632-0.0946 0.4681-0.8257 0-2.3368-1.1099-3.56-1.8025-1.9918-2.05-2.0106-3.9401-0.3001-1.8749 1.6967-1.8905 1.9647-0.2229 3.8074 0.9866 1.0901 2.2198 1.7189 2.7405 1.3972 0.5206-0.3218 0.9467 0.1216 0.9467 0.9851 0 0.8636 1.0735 2.283 2.3856 3.1542 2.9605 1.9658 1.9291 4.4358-3.9905-2.1596l-2e-4 -2e-4zm-1359.8-159.77c74.427-75.282 79.306-80.133 179.74-182.68-0.7334-152.77-0.9817-177.67-2.7107-392.46-13.2-14.739-67.008-69.183-91.803-94.336 0-137.49 1.8984-145.76 2.7314-0.6703 56.818 59.067 58.269 60.434 90.982 93.772 1.2588 144.04 1.3027 146.46 2.6023 394.45-10.006 10.125-170.32 172.35-180.33 182.47-0.0457 11.022-0.6328 152.77-0.679 163.9-0.4179-128.73-0.4594-141.7-0.5331-164.44zm-1120.5 126.64c-11.418-11.342-20.46-20.631-20.094-20.642 1.856-0.056 76.68 76.849 20.094 20.642zm1332.6-23.94c-0.4749-45.716-1.5344-60.646-0.7385-65.068 0.7354-4.0878 19.338-23.358 150.22-155.6 171.18-172.97 182.86-184.7 183.79-184.7 0.5098 0 0.9266 0.9158 0.9266 2.0351 0 2.5139 4.6776 7.9209 6.2386 9.8851-85.747 86.391-264.09 265.79-315.37 318.33-20.219 20.721-21.379 19.743 3.2954-5.4301 159.38-162.6 310.42-312.06 309.47-314.54-0.6659-1.7355-6.7828-0.7877-12.924-0.2187-75.439 75.778-248.04 249.09-323.42 327.62-0.7747 70.289-0.8955 124.24-1.4824 67.687l-5e-4 -1e-4zm1138.9 30.507c-0.8834-1.4294 2.6578-3.5523 4.0378-4.5189-3.0384-3.2344-1.9165-2.0402-4.9528-5.2721 3.0386-2.1282 1.9167-1.3425 4.9528-3.4691-4.2683-4.5435-4.8072-4.7301-2.9276-6.29 0.9214-0.7647 1.6754-1.9858 1.6754-2.7136 0-2.1567 5.967-1.9787-0.2756 2.5207-1.931 1.3917-1.942 1.5939-0.1941 3.5254 1.0198 1.127 2.1984 1.8364 2.619 1.5765 1.033-0.6385 0.9262 2.8709 0.2158 2.1606-0.3019-0.3018-1.4532 0.2697-2.5584 1.27-1.8681 1.6906-1.8833 1.9584-0.2158 3.8009 0.9866 1.0901 2.1378 1.7695 2.5584 1.5096 1.0184-0.6295 1.02 2.7711 0 2.1407-1.0786-0.6666-4.4968 3.3201-3.6085 4.2084 0.9194 0.9193-0.3229 1.1744-1.3266-0.4492h2e-4zm-1284.4-9.8488c0-1.64 3.666-0.42 1.0928-2.083-1.0928-0.7061-1.1836-1.0648-0.2732-1.0759 2.499-0.0306 1.4451-3.2919-1.0928-3.3809-1.5889-0.0557-1.8787-0.2934-0.8193-0.672 0.9014-0.3222 2.2534-1.3607 3.0046-2.3079 2.0242-2.5521 1.075 0.483 1.8149 7.0854 0.1716 1.532-0.4448 2.5663-1.73 2.9025-1.0984 0.2872-1.997 0.0766-1.997-0.4682zm-1065.5-20.539c-0.7058-1.8873-43.003-44.484-44.89-45.208-1.8838-0.723-2.7017-2.9877-1.0791-2.9877 1.0398 0 49.95 49.169 47.58 49.169-0.6863 0-1.4114-0.4382-1.6118-0.9737h2e-4zm409.31-26.889c0.0012-36.593 0.8467-6.1532 0.3408 14.542-0.1875 7.6267-0.3406 1.0828-0.3398-14.542h-1e-3zm601.57 10.558c0-18.389-1.0366-62.406-1.4409-80.855 163.77-165.94 156.69-158.8 180.76-183.43-1.238-202.21-1.3171-221.58-2.8772-400.92-11.239-11.526-81.07-83.141-92.309-94.667-0.0078-15.132 0.135-77.12-0.7241-91.21-0.6062-9.9394-0.481-11.2 1.113-11.2 1.6382 0 1.8081 4.374 1.9329 49.716 0.0754 27.344 0.1982 50.173 0.2732 50.732 0.3391 2.5249 90.832 94.311 91.108 94.591 2.4919 92.31 1.3301 270.69 3.6892 403.42-10.081 10.142-171.53 172.56-181.61 182.7 0.6125 38.727 1.6235 96.235 0.8003 96.235-0.3967 0-0.7212-6.8036-0.7212-15.119h5e-4zm52.318 6.651c-0.071-0.4507-0.0515-1.2474 0.0437-1.7703 0.0952-0.523-2.5034-0.6164-5.7754-0.2077-4.1843 0.5229-6.1914 0.3497-6.7683-0.5838-0.4966-0.8031-0.3633-1.0445 0.3376-0.6113 1.9851 1.2269-0.7527-12.397 1.0176-12.397 0.5769 0 0.9353 1.8439 0.7966 4.0975-0.478 7.7692 0.0886 8.5137 6.1553 8.0894 2.9775-0.2082 5.2021-0.7208 4.9436-1.139s0.5444-0.8368 1.7842-0.9302c2.2388-0.1686 2.2383-0.1544-0.0994 2.0236-1.2949 1.2064-2.0688 2.6558-1.7192 3.2209 0.8635 1.3978-0.5481 1.273-0.7163 0.208v1e-4zm-1860.7-46.164c0.6006 0 1.0928 0.6208 1.0928 1.3795 0 1.819 31.35 32.68 32.804 34.132 81.36 1.2637 88.834 1.1287-1.6633 2.2504-24.59-25.418-37.153-37.762-32.233-37.762zm124.88 36.337c11.355-0.4977 29.926 0.3802 7.8718 0.3765-9.0144-0.0011-12.557-0.1708-7.8718-0.3761v-4e-4zm130.04-0.0044c23.226-0.445 62.096 0.333 16.594 0.332-18.63-5e-4 -26.098-0.1499-16.594-0.332zm1596-7.6275c-2.4888-0.9473-3.1802-2.5969-2.1853-5.2132 0.4951-1.3022 0.4592-3.0642-0.0798-3.9155-0.7493-1.1838-0.9836-1.2114-0.9963-0.1174-0.0232 1.663-2.7351 1.032-0.8516-1.9837 0.9451-1.5136 1.5381-1.7259 2.146-0.7688 0.4939 0.777 0.8474-0.1161 0.8572-2.1662 0.0132-2.7789 0.4207-3.4106 2.0024-3.106 1.092 0.2104 2.52-0.4734 3.1733-1.5196 0.948-1.5181 0.823-1.9086-0.6201-1.9352-2.2991-0.0422-4.5134 1.7072-5.7563 4.5479-0.6965 1.5916-0.8635 0.7487-0.5884-2.9669 0.5073-6.8479-1.2202-7.16-1.7595 0.5463-0.5007 7.1539-0.6606-7.2297-0.8054-14.478 7.1719 0 22.728-0.1671 23.251 0.8195 0.4707 0.8868-1.8086 5.7438-2.8521 6.0784-0.3506 0.1124-1.2893-0.6873-2.0862-1.777-2.5466-3.4828-7.5759-0.2043-12.207 0.2057-1.9563 0.1733-0.9207 2.8832-0.7266 4.7803 0.1592 1.5585 2.6853 0.81 5.4763-1.6226 1.5413-1.3431 2.2471-1.7958 1.5681-1.0059-0.6787 0.7899-0.9995 3.1768-0.7129 5.3041 0.7864 5.8325-1.1426 1.534-2.4128 3.5893-0.3972 0.6426 0.501 1.1105 2.1313 1.1105 2.3552 0 2.7417-0.4182 2.3552-2.5495-0.3047-1.6796 0.061-2.5495 1.0713-2.5495 2.0103 0 1.9727 3.3745-0.0569 5.0584-1.2727 1.0563-1.3293 1.7372-0.2837 3.4117 1.2878 2.062 3.0891 2.87 2.8369 1.2726-0.3413-2.1607 0.3069-3.0995 2.2412-3.2451 1.9915-0.1501 1.9761-0.0231-0.2703 2.2259-2.3103 2.3135-6.7761 3.6349-5.5435 1.6403 0.9888-1.6001-1.7222-4.0543-3.9951-3.6166-1.1506 0.2216-1.9795-0.0098-1.8416-0.5134 0.2944-1.076-1.8047-2.0455-2.2764 0.9506-0.3057 1.944 0.0176 2.0689 3.0815 1.1902 3.2981-0.9459 3.4114-0.8689 3.0996 2.1053-0.5398 5.1432 3.9294 6.6758 0.7478 6.2088-0.9517-0.1396-1.6746-0.6599-1.6067-1.1559 0.2087-1.5284-3.7896-2.7396-1.4287-2.7686 1.8572-0.0216 1.322-4.1526 0.6953-2.634-0.2739 0.6639-1.5874 0.9987-2.9187 0.7441-2.157-0.4125-2.4202-0.0087-2.4202 3.7099 0 2.3892 0.7004 4.7418 1.6389 5.5039 1.7656 1.4339 1.489 1.5869-1.0928 0.6042l0.0012 3e-4zm-1682.4-1.1037c8.3938-0.5267 23.18 0.3942 6.2827 0.3942-6.9109 1e-4 -9.7383-0.1773-6.2827-0.3942zm-150.6-13.67c-14.589-14.885-17.728-19.176-3.1895-4.4701 19.128 19.347 19.128 20.732 3.189 4.4701h5e-4zm1632.4-20.487c0-40.401 0.824-7.0869 0.3357 15.57-0.1846 8.5637-0.3357 1.557-0.3357-15.57zm305.8 29.832c-1.3167-0.2557-4.4514-2.2907-6.9656-4.5222-4.0068-3.5555-4.6389-4.7554-5.1147-9.707-0.2983-3.1075-0.2371-6.8679 0.1367-8.3566 1.6533-6.5876 11.314-13.825 18.392-13.778 1.9768 0.0132 5.5613 0.9317 7.9651 2.0412 7.7009 3.5541 11.473 9.3826 11.473 17.728 0 6.1065-2.5725 10.402-8.4692 14.141-4.9844 3.1611-10.079 3.8785-17.417 2.453l-3e-4 -1e-4zm15.775-6.0462c3.675-3.4517 0.3687-2.293 3.1538-5.3702 1.3132-1.451 1.6255-3.1919 1.175-6.55-0.7886-5.8792-3.78-9.824-8.9382-11.787-3.5598-1.3549-4.6934-1.355-8.5249-7e-4 -6.364 2.2495-9.021 6.3516-8.8457 13.658 0.1655 6.9145 2.4097 10.967 7.1851 12.975 4.1946 1.7636 11.299 0.3595 14.795-2.9239zm-1823.3 5.3174c2.4209-2.1208 286.57-0.278 88.505 0.1891-48.928 0.1153-88.755 0.0302-88.505-0.1891zm266.32-0.4205c100.81-0.6166 156.88 0.2965 47.721 0.2964-52.884 0-74.359-0.1334-47.721-0.2964zm-770.98-99.704c1.0889 0 1.0015 98.338 0.3062 98.338-0.6192 0-1.2891-98.338-0.3062-98.338zm394.21 97.519c-7e-4 -1.1671 216.92 0.0526 71.296 0.5674-39.212 0.1387-71.296-0.1168-71.296-0.5674zm205.96-0.3098c-10.327-1.2002 27.862-0.9015 27.862 0.2226 0 1.0463-18.194 0.901-27.862-0.2226zm1239-34.382c-0.0012-45.542 0.7749-6.5029 0.332 16.595-0.1819 9.5025-0.3313 2.0349-0.332-16.595zm1678.1 29.446c-1.3246-0.9278-2.2692-2.5991-2.0991-3.7141 0.38-2.49 2.9021-5.67 3.9722-5.0086 1.0718 0.6625 8.8008-8.6064 8.8008-7.2361 0 1.5647-3.5436 3.2274-2.6384 4.6922 0.3386 0.5477-0.036 0.8608-0.8315 0.6957-1.0038-0.2083-1.512 1.175-1.6594 4.5168-0.2765 6.2712-2.214 8.3868-5.5445 6.0541h-1e-4zm-3510.8-11.964c-0.5562-9.74-0.2681-18.029-1.585-18.029-0.5625 0-0.4111-0.7375 0.3374-1.639 1.0972-1.3214 1.0698-1.6423-0.1392-1.6558-2.7246-0.0305 1.4189-1.1065 1.4189-2.7148 0-1.6088-4.1445-2.6844-1.4189-2.7149 1.0366-0.0116 1.1724-0.4382 0.438-1.3826-1.5518-1.9967-1.7793-12.839-0.2695-12.839 1.9863 0-0.0732-77.707-0.1338-78.671-0.2832-4.4965-0.082-4.9443 2.356-5.2375 1.7266-0.2076 2.1875 0.0055 1.3091 0.6054-2.1279 1.4518-1.667 135.61-2.3125 124.28h-5e-4zm12.37-49.716c0-60.97 0.9468-27.1 0.3135 26.497-0.1723 14.573-0.3135 2.6496-0.3135-26.497zm3500.3 46.998c-3.4112-2.1754 4.6382-3.0681 2.1749-6.0361-2.1808-2.6279 2.5047 0.5248 3.7759-1.5313 0.4037-0.6533 1.4755-1.1879 2.3813-1.1879 1.8818 0 9.1501 5.2618 9.1501 6.624 0 1.3121-6.3552-5.544-8.7115-5.501-2.2944 0.0417-8.0647 6.1086-7.1768 7.5455 0.8809 1.4252 0.5346 1.4441-1.594 0.0868h1e-4zm-1956.5-22.413c-0.0027-28.212 0.8704-5.6224 0.3547 10.595-0.1953 6.1918-0.3557 1.4239-0.3567-10.595h2e-3zm-954.84 17.629c-2.7673-1.6035-4.9631-3.6187-4.9631-4.5552 0-0.4072 1.4727-2.5997 3.2727-4.8724 5.2163-6.5864 12.727-6.8821 17.737-0.6982 2.1345 2.6351 2.5247 7.3148 0.7573 9.082-1.7585 1.7582-11.36-0.3755-13.345 1.222-0.864 0.6951-2.0571 0.6336-3.4583-0.1782zm11.945-5.8098c-0.4756-1.092-0.8027-2.3072-0.7263-2.7003 0.2205-1.1364-3.0864-3.5241-5.3613-3.8713-2.8384-0.4331-2.228 2.3675-1.3887 1.5286 0.9861-0.9863 4.9531 1.3358 4.2434 2.484-0.9746 1.5773 1.8616 6.7807 3.0488 5.5934 0.5769-0.5769 0.6597-1.9424 0.1838-3.0344h3e-4zm-247.07-51.339c-0.5239-1.4832-0.3779-1.6994 0.5654-0.8351 1.6494 1.5114 0.9565 29.347 0.6489 56.744-0.0317-3.3697-0.29-53.292-1.2143-55.909zm2348.8-232.13c2.3561-1.3974 10.166-1.5305 56.818-0.968 53.633 0.6466 53.784 0.6547 18.029 0.966-41.524 0.3615-56.583 0.2204-72.017 0.15-38.079 36.849-280.3 279.28-285.83 282.89-4.995 3.2591 279.4-280.9 283-283.04zm-1650 279.84c-7.7874-2.2401-12.776-9.8774-11.365-17.399 3.5779-19.071 30.05-16.608 30.48 2.8359 0.2063 9.3437-10.063 17.167-19.115 14.563zm327.36-1.7812c-2.5569-2.5569-1.6631-7.134 1.7676-9.0507 2.5784-1.4406 3.177-1.4131 5.7363 0.2639 3.0984 2.0301 3.9102 6.888 1.5464 9.252-1.8784 1.8785-6.968 1.6169-9.0503-0.4652zm2119.1 0.2916c-5.6535-2.8036-2.9323-11.627 3.5859-11.627 2.2938 0 3.4706 0.7429 4.3967 2.7756 2.6801 5.882-2.4654 11.587-7.9825 8.8514h-1e-4zm-3327.7-19.276c0-18.338 0.9072-2.318 0.3877 6.829-0.2134 3.756-0.3877 0.683-0.3877-6.829zm168.94-6.0096c0-23.868 1.6392-24.207 1.6392 0.0011 0 23.868-1.6392 24.207-1.6392-0.0011zm1329.2-31.687c-5e-4 -51.096 0.968-24.227 0.3196 22.053-0.1756 12.51-0.3194 2.5862-0.3196-22.053zm-9.24-88.028c-143.16-139.11-165.97-162.47-166.97-160.98-0.4114 0.6101-3.605 1.9943-7.0974 3.076-6.0261 1.8665-6.5994 1.8714-11.245 0.0972-5.4468-2.0801-7.8811-5.0302-8.7939-10.657-1.1348-6.9931 5.2573-13.943 12.824-13.943 4.1162 0 11.874 4.3798 13.572 7.6617 0.8726 1.687 2.2112 3.3188 2.9753 3.6261 1.0862 0.4371 1.0913 0.5776 0.0229 0.6451-2.4233 0.153-0.8076 9.4031-2.5647 1.9331-1.446-6.1468-2.6824-7.9215-6.9163-9.9307-4.5103-2.1402-8.7102-1.4185-11.032 1.8959-3.3003 4.7119-1.2341 12.911 3.7185 14.755 3.8735 1.4425 12.033 1.0409 13.074-0.6435 0.6343-1.027 1.6565-0.7571 4.1379 1.0927 3.0552 2.2776 92.848 89.301 165.42 160.89l-0.5901 132.21c-0.3253-80.756-0.2057-50.99-0.5296-131.73zm107.08-34.02c-31.189-31.318-76.669-72.938-233.83-225.19 0.0151-11.376 0.5195-392.03 0.5347-403.41 0.031 11.384 1.0732 392.33 1.1042 403.71 37.123 36.397 214.02 204.45 233.3 224.68-0.032 8.8449-0.5432 150.56-0.5752 159.41-0.0648-19.364-0.4671-139.8-0.532-159.2zm-291.91 145.77c-141.34-129.77 17.244 12.477 13.015 11.746-0.1501-0.026-6.0068-5.3117-13.015-11.746v-1e-4zm511.95-1.8649c0-17.556 0.9133-1.5482 0.3931 6.8718-0.2163 3.4319-0.3911 0.3396-0.3892-6.8718h-0.0039zm-518.42-21.219c-21.779-21.776-23.02-23.152-6.5559-7.2725 45.301 43.693 43.029 43.741 6.5559 7.2725zm74.352 13.298-0.0405-13.931c-168.35-160.73-155.61-150.57 1.1226 0 0.0676 37.536-1.03 32.12-1.0825 13.931h4e-4zm170.49-112.41c-76.212-74.963-91.61-86.934-233.83-227l0.0161-212.32c0.0232-280.4 2.3091-285.62 1.4661-0.5323l-0.6267 211.78c160.95 157.85 232.69 224.55 233.63 227 0.6069 1.5867-0.1099 118.7-0.1282 122.48-0.0643-14.785-0.463-106.64-0.5272-121.42zm-1799.6 83.244c0-50.963-2.1851-15.491-2.1851-63.388v-29.869l4.4521-0.4246c5.9771-0.5701 6.7266 1.0458 1.3071 1.4936-3.9429 0.3258-4.1152 0.5056-4.001 4.1647 0.7622 24.341 1.6655 120.19 1.1328 120.19-0.3887 0-0.7065-14.476-0.7065-32.169h6e-4zm2175.6 1.8477c0.3289-67.161 2.1753 25.95 0.7688 25.95-0.4924 0-0.8384-11.678-0.7688-25.95zm-698.95 14.135c-0.126-0.112-144.28-133.86-144.4-133.97-10.203-9.7772-12.382-10.077-2.79-0.3842 3.4365 3.4729 5.8484 6.3144 5.3596 6.3144-1.7791 0-28.048-26.702-27.549-28.003 0.2825-0.7365-0.2888-1.9896-1.27-2.7847-7.1638-5.8063 22.209 24.868-56.917-52.269-1.8057-18.549-1.4763-175.03-1.8113-539.75l7.8643 2e-4c1.1348 517.71 0.9045 533.9 3.0508 537.17 5.8347 8.9052 176.13 172.85 225.64 218.7 9.0935 8.4212 3.7783 4.7027-7.1787-5.0222l1e-4 1e-4zm492.75-8.3985c0-20.555 0.8862-1.89 0.3811 7.9695-0.2095 4.0302-0.3799 0.4439-0.3779-7.9695h-0.0032zm-1733.9 6.8752c-3.4854-1.999-4.8447-4.4046-4.8818-8.64-0.0513-5.8065 3.4116-9.7081 8.6162-9.7081 9.5186 0 12.851 13.69 4.3965 18.062-3.6885 1.9076-5.2095 1.9612-8.1309 0.2862zm1287.1-114.73c61.04 57.953 117.11 111.37 116.29 112.03-0.5793 0.4701-86.04-82.296-116.29-112.03zm382.97-16.081v-122.3c-109.15-107.05-74.822-72.832-186.91-183.17 0.0337-17.432 0.5691-296.16 0.6028-313.59 0.031 17.387 0.53 295.65 0.561 313.04 38.365 38.687 115.27 113.31 186.84 182.82 0 230.8-1.0925 351.79-1.0925 123.21l2e-4 -1e-4zm-216.09 83.334-0.2585-38.42c-69.392-67.257-92.587-89.887-110.24-106.12-7.8613 3.5678-12.238 6.2389-19.732 2.0268-8.0276-4.5117-10.176-13.487-4.6941-19.606 7.3306-8.1805 21.956-5.0721 23.858 5.0709 0.4707 2.5079 1.3799 3.7261 3.0217 4.0471 2.2761 0.445 2.272 0.4637-0.1372 0.6079-1.5845 0.0948-2.8716 1.1647-3.551 2.9515-1.4355 3.7759-1.3413 4.883 0.3606 4.23 0.7844-0.301 5.3325 2.9919 10.107 7.3176 11.146 10.098 97.659 94.202 100.2 97.414 2.2136 2.7932 1.8923 6.7762 1.3223 78.903l-0.2585-38.42h-6e-4zm-115.38-148.02c8.9072-8.3677-5.7759-25.879-16.307-11.697-1.6643 2.2413-1.9878 3.8163-1.4128 6.8812 1.4592 7.7779 11.626 10.541 17.72 4.8158h-3e-4zm235.31 92.109c-194.7-188.66-183.31-177.72-232.93-226.34 0.8958-107.28 2.8079-114.3 1.8315 0.261 191.9 186.61 174.5 169 232.23 225.35l-0.6104 91.783c-0.0629-11.016-0.4579-79.969-0.5216-91.057zm-1743.4 81.643c0.0732-3.626-0.2607-6.8357-0.7412-7.1327-0.481-0.2971-0.5112-1.1207-0.0679-1.8304 2.1768-3.4846 0.1465-77.23 3.3081-77.23 0.8325 0 1.2974 0.3688 1.0332 0.8195-0.5503 0.938-2.1416 60.192-2.1138 78.687 0.0269 17.185-1.5771 14.576-1.4184 6.686zm1447.8-16.384c-9.2109-9.4301-55.957-52.936-108.68-103 0.03-16.702 0.5083-283.91 0.5383-300.61 0.0312 16.558 0.5305 281.72 0.5618 298.28 24.988 25.024 34.413 34.226 35.158 33.765 0.4905-0.3032 0.8918 0.038 0.8918 0.7579 0 1.3879 16.2 17.395 17.604 17.395 1.4836 0 1.6067-9.128 1.8997-2.0626 0.1448 3.4938 1.4497 5.1875 11.363 14.747 50.592 48.787 54.76 55.163 40.667 40.734l8e-4 2e-4zm183.05-54.999c-4.769-4.9885-8.8669-9.2748-13.636-14.263 5.1646 4.988 9.6021 9.274 14.766 14.262l-0.6216 57.853c-0.1778-20.218-0.3309-37.633-0.5086-57.852zm479.67 52.661c0-2.4209 109.08-112.74 144.23-150.4 0-6.2807-0.3933-36.172 1.0925-36.172 1.5886 0 1.4375 33.361-0.1648 36.402-2.6511 5.0314-106.12 109.83-137.81 143.51-4.0437 4.2985-7.3525 7.2961-7.3525 6.6613l5e-4 1e-4zm-2194.2-18.414c-0.4639-13.177 1.2495-16.277 1.2715-1.2527 0.0254 14.788-0.7998 14.657-1.2715 1.2527zm116.87-20.1 0.3081-28.956c-1.5991 0-5.5327-0.2775-5.5327 1.3112 0 1.0198-0.291 1.0198-1.3115 0-1.6006-1.6003-7.2466-1.3112-9.4956-1.3112-0.2861 3.6304-0.5317 6.7498-0.8184 10.38-0.1377-3.5905-0.2559-6.6755-0.3936-10.266-12.108-0.8471-12.783-0.7714 5.4634-1.2069v-6.5559h-24.039c-0.2646 7.4675-0.1733 7.5037-1.103 2.7316-0.4688-2.4038-0.7808-4.3706-0.6938-4.3706 2.6348 0-9.5737-0.2453 26.928 0.6748 0 8.6855-1.5806 7.3148 11.473 8.0663 0.7964 79.914-1.1724 65.935-0.7842 29.502l-9e-4 1e-4zm-16.823 12.565c0-18.338 0.9077-2.318 0.3877 6.829-0.2134 3.756-0.3877 0.6829-0.3877-6.829zm1343.3-36.947-35.757-34.621c-1.2458-392.03 0.7495-385.19 1.5845-0.2462 66.4 65.035 101.39 99.948 34.173 34.867zm-1443.1 24.382c-0.6885-4.1314-0.0034-24.797 0.1206-29.722 2.145 0.4101 5.374 1.3835 6.5352-0.4495 0.624-0.9859 0.9087 0.2028 0.8125 3.4015-0.0952 3.1954-0.3062 3.8649-0.6025 1.9122-0.353-2.3301-1.0518-3.0048-3.1138-3.0048-2.2261 0-2.6592 0.5338-2.6592 3.278 0 1.885 0.5806 3.2851 1.3657 3.2947 1.0576 0.013 1.0669 0.2068 0.0405 0.8588-0.8643 0.5494-1.4341 4.8164-1.6392 12.276-0.1729 6.2885-0.5596 9.9585-0.8604 8.1556h6e-4zm1283.2 0.6733c-14.51-6.6345-13.201-26.702 2.0081-30.798 5.75-1.5483 12.87 0.9952 16.31 5.8264 3.447 4.8411 3.9456 14.361 0.9973 19.055-4.0964 6.5219-12.418 9.0706-19.316 5.9165zm489.05-15.192c-134.68-129.83-98.023-97.346 1.2227 0.397-0.2861 4.1748-0.5322 7.7621-0.8184 11.937-0.1414-4.3137-0.2629-8.0203-0.4043-12.334zm107.08-35.062c-47.854-45.274-215.69-206.01-231.64-222.58-0.0293-529.3 1.0889-531.91 1.0889-0.2955 18.88 19.109 210.35 202.08 231.7 222.23-0.2292 13.36-0.426 24.841-0.6553 38.201-0.1717-13.137-0.3194-24.425-0.4913-37.562zm-1177.4 21.827c0.4775-0.773-0.4407-1.2017-2.5747-1.2017-4.5579 0-7.4316-4.1779-5.3984-7.8484 0.7712-1.3925 1.2981-2.9005 1.1704-3.3513-0.3062-1.08 8.8269-1.0801 10.226 0 0.5837 0.4507 0.136-0.041-0.9951-1.0927-2.5735-2.3931-6.3616-2.4362-10.883-0.1237-3.4531 1.7662-3.4729 1.7617-1.5823-0.3618 1.053-1.1827 1.5857-2.4792 1.1838-2.8811-0.4021-0.4019 1.5093-0.7308 4.2471-0.7308 7.0706 0 9.9028 2.559 9.9028 8.9479 0 5.6075-0.5752 6.9209-3.783 8.6376-1.6321 0.8734-2.0508 0.875-1.5137 0.0054l6e-4 6e-4zm776.86-24.147c0-33.054 0.8147-4.1349 0.3489 12.292-0.1916 6.7608-0.3489 1.2292-0.3489-12.292zm454.07-127.29c-86.087-83.736-110.43-107.33-186.84-182.5 0.0271-17.167 0.4631-292.03 0.4902-309.19 0.064 17.237 1.085 292.85 1.1487 310.08 33.715 32.262 122.49 118.5 186.34 181.61l-0.6006 151.88c-0.0651-18.381-0.472-133.38-0.5375-151.88zm-397.18 140.39c-1.7212-1.7966-3.7751-3.2665-4.564-3.2665-1.1672 0-1.4348-11.26-1.4351-60.369-0.0017-217.46-2.7617-366.86 0.2466-366.86 3.1313 0 2.5327-21.624 2.2939 425.59l3.6833 3.6967c4.8647 4.8826 3.9939 5.6115-0.2246 1.2088h-1e-4zm-302.37-53.051c25.917 25.742 31.87 32.302 29.317 32.302-0.3293 0-108.88-111.33-29.317-32.302zm41.599 24.737c-0.4829-1.3382-61.748-63.006-63.738-65.015-5e-4 -0.1215-3.0063-536.12-1.1902-537.93 3.0242-3.0234 0.739 121.68 4.0159 537.85 17.194 17.528 63.232 64.305 63.258 65.286 0.0317 1.1722-1.9104 1.0151-2.3455-0.1898h-2e-4zm341.64-42.15c12.43 12.148 25.677 25.082 25.677 25.386 1e-4 1.0001-2.3093-1.4763-25.677-25.386zm-1583.4 4.3705c0-16.093 0.9292-1.373 0.3999 6.3226-0.2197 3.1331-0.3979 0.2879-0.3955-6.3226h-0.0044zm2026.5-23.209c-6.5945-7.1685-12.261-13.328-18.855-20.497l19.948 20.098c0 13.665-0.1335 17.598-0.5464 17.598-0.169 1e-4 -0.5464-0.0518-0.5464-17.2zm-589.5-116.1c0-139.16 0.9099-69.573 0.2913 62.008-0.1602 34.104-0.2913 6.2008-0.2913-62.008zm146.43 78.124c29.201 28.662 31.841 31.14 30.853 31.14-0.1697 0-4.6382-4.4321-30.853-31.14zm1218.6 29.238c9.2325-0.5227 23.838 0.3987 6.24 0.3934-7.2115-0.0022-10.02-0.179-6.24-0.393v-4e-4zm100-1.1005c25.359-0.453 65.754 0.3299 17.686 0.3289-19.832-3e-4 -27.79-0.1483-17.686-0.3289zm66.534 0.0088c9.7993-0.5097 28.565 0.3737 7.9696 0.3779-8.4133 0.0022-12-0.1684-7.9696-0.378v1e-4zm30.139-9e-4c9.2324-0.5227 23.838 0.3987 6.2399 0.3934-7.2114-0.0022-10.02-0.179-6.2399-0.393v-4e-4zm27.82-0.0022c11.346-0.4989 31.232 0.3724 8.468 0.3724-9.3148-1e-4 -13.125-0.1676-8.468-0.3724zm42.34 0.0726c0-1.5466 173.73-173.94 173.73-178.93 0-0.9392 0.5531-1.5847 1.2292-1.4345 1.6897 0.3756 2.4586-2.459 1.3202-2.4563-0.8229 0.0019-127.76 126.49-177.92 178.65-208.19 0-172.26-1.5992-0.4923-1.6389 109.41-110.22 327.62-328.81 223.67-224.25-24.9 25.046-29.413 30.228-25.677 29.481 1.9619-0.3924 63.092-61.203 63.097-62.767 0-0.7178 2.5657-3.4221 5.6968-6.0096 8.8885-7.345 26.99-26.366 26.281-27.617-0.3507-0.6192-0.2386-0.7646 0.249-0.3233s1.577-0.0504 2.4207-1.0927c1.3652-1.6865 1.3969-1.6129 0.2869 0.6678-2.4401 5.0136-158.81 162.4-198.32 202.31-84.524 85.356-95.565 98.621-95.565 95.414zm-893.31-3.493c-11.529-2.999-23.538-13.695-27.763-24.727-1.7651-4.6087-2.5327-8.9818-2.5879-14.746-0.1782-18.565 8.9993-31.374 26.411-36.863l5.8748-1.8518c-1.8057-410.86-3.0562-450.79-1.4568-450.79 1.3655 0 1.6316 37.195 2.0635 288.19 0.248 144.1 0.0852 164.17-1.3293 164.17-3.8857 0-13.905 4.811-18.569 8.916-15.744 13.859-15.932 40.523-0.3931 55.734 19.327 18.918 49.28 13.658 61.484-10.796 5.8071-11.636 4.4443-27.909-3.2827-39.198-5.835-8.5246-15.686-14.655-23.549-14.655-1.6777 0-3.2666-0.3687-3.5305-0.8195-0.3892-0.664-3.7805-451.54-1.9983-451.54 2.8228 0 1.5046 445.61 2.9761 449.44 0.3291 0.8574 2.8313 1.85 5.6306 2.2337 6.4392 0.8826 12.855 4.6595 18.716 11.018 7.3088 7.929 9.2622 13.411 9.3608 26.268 0.0745 9.616-0.2578 11.647-2.7678 16.936-6.7307 14.183-19.037 22.73-33.867 23.522-4.4438 0.2373-9.584 0.0402-11.423-0.4381v-2e-4zm-410.22-240.96c0.0151-8.1372 0.5229-280.43 0.5383-288.56 0.0156 8.1258 0.5464 279.95 0.5623 288.08 40.004 40.295 241.41 233.71 239.22 233.65-0.2197-0.0054-188.09-181.54-240.32-233.16zm409.64 231.54c-6.8027-2.1844-14.446-9.1792-18.026-16.497-2.2878-4.676-2.9607-7.6758-2.9939-13.346-0.0745-12.606 5.9392-22.277 17.49-28.13 5.394-2.7332 7.6116-3.2191 14.587-3.1958 6.9446 0.0232 9.0134 0.4891 13.282 2.9903 5.2095 3.053 9.9807 8.3283 13.576 15.011 2.8706 5.3354 2.927 21.897 0.0918 27.101-7.2183 13.251-24.294 20.469-38.007 16.066l-2e-4 1e-4zm21.448-3.1381c11.373-5.2959 19.128-18.634 17.458-30.027-1.5403-10.514-6.9819-18.834-15.637-23.906-13.089-7.6705-33.925-0.2837-40.762 14.451-3.03 6.5308-2.7847 18.126 0.5325 25.131 7.051 14.89 23.807 21.15 38.408 14.351zm-23.923-8.3538c-3.1663-2.0079-4.887-3.7769-4.4158-4.5394 0.4634-0.7495 0.2896-0.951-0.4346-0.5037-2.1411 1.3232-5.5564-7.7612-1.8025-3.0754 1.6318 2.0367 1.6519 2.0233 0.5081-0.3375-0.6553-1.3521-1.6785-2.4585-2.2737-2.4585-2.0649 0 0.0283-12.2 3.0444-17.742 3.5142-6.4563 7.2109-8.5868 16.144-9.3038 5.627-0.4517 7.5073-0.1023 12.172 2.2613 9.7349 4.933 10.332 11.937 8.0422 8.3943-0.7314-1.1319-1.0645 1.1383-1.0759 7.3374-0.0151 8.435-0.2173 9.205-3.3457 12.768-6.2617 7.1317-16.524 8.9037-25.296 4.3677-3.7847-1.9572-5.5381-1.1427-2.4353 1.1313 2.2407 1.6424 5.9509 2.6595 13.032 3.5723 6.4067 0.8259 6.116 1.4177-0.6968 1.4177-4.7698 0-7.0264-0.6648-11.166-3.2901l3e-4 3e-4zm2318.4 1.1047-24.038-0.5463c-0.1857-17.575-0.3982-37.676-0.584-55.251 2.8334 0.0291 87.379 0.8396 89.908 1.1021 2.171 0.2253 1.9121 2.8034 1.9121 55.863-18.991-0.2734-39.332-0.5343-67.198-1.1677zm-3045.3-48.623c-5e-4 -49.044 0.9351-19.712 0.3225 20.415-0.177 11.608-0.322 2.4211-0.3225-20.415zm1370.5 25.06c-3.8785-2.1044-6.2965-6.8877-6.2965-12.456 0-3.5059 0.7637-5.2741 3.6265-8.3981 3.051-3.3291 4.3461-3.9572 8.1593-3.9572 5.7183 0 9.7845 2.6322 11.904 7.7064 2.4009 5.7461 1.23 10.969-3.4224 15.264-4.3099 3.9793-8.9123 4.5856-13.971 1.8406zm-46.334-4.8763c1.7173-0.5146 4.0527-1.7778 5.1901-2.807 2.6915-2.4358 2.7804-9.8019 0.1558-12.92-1.8966-2.253-1.8929-2.2552 0.4482-0.2788 6.6772 5.6373 1.7565 17.485-7.0752 17.035-1.0126-0.0517-0.4361-0.515 1.2811-1.0296zm70.384-10.472c0.4535 2.01 2.9456 2.0423 97.875 1.2664 128.8-1.0528 129.07 0.2561 0.6278 1.1239-52.538 0.355-96.139 0.8351-96.89 1.0668-0.7512 0.2318-1.3658 1.1609-1.3658 2.0647 0 1.8325 4.5829 1.7336 31.14 2.2569-11.464 0.3796-21.315 0.7057-32.78 1.0853 0.195-2.3003 0.8274-11.364 1.3918-8.864zm86.917 6.4062c60.119-0.6354 94.845 0.3105 28.605 0.3101-31.851-2e-4 -44.723-0.1397-28.605-0.3101zm115.38-1.4684c150.02-149.9 162.52-162.34 0.6193 1.1946-4.9622-0.1473-9.226-0.2738-14.188-0.4211 4.7456-0.2705 8.8232-0.5029 13.569-0.7735zm24.674-31.585c35.241-35.262 38.651-37.581 1.0927 0-35.241 35.262-38.651 37.581-1.0927 0zm-3055.1 0.5464c1e-3 -33.911 0.8506-5.3384 0.3457 13.448-0.1904 7.0268-0.3452 0.9753-0.3447-13.448h-1e-3zm2769.8 12.822c-1.7245-1.0998 36.992-39.744 45.429-48.333 61.894 0 75.11-0.201 75.11 1.4773 0 3.5124-69.473 2.8927-74.5 2.8937-1.8008 1.8077-39.864 39.603-39.864 41.315 0 0.7142 0.6146 1.3476 1.3658 1.4075 0.7511 0.0599 0.1366 0.5026-1.3658 0.9837-3.6409 1.166-4.6816 1.2092-6.1757 0.2564l-1e-4 -4e-4zm-3223.7-12.276c84.703 0 92.951-0.1125 132.21 1.4358v8.398c-48.227 0.0036-50.69-0.1474-132.21 1.4463v-11.28zm1364.1 4.9666c-5.9705-5.9707-1.8718-17.03 6.2827-16.951 5.8416 0.0564 9.6104 4.3191 9.6104 10.87 0 7.8301-10.23 11.745-15.893 6.0814zm-460.86-449.67h13.168c2.2979 19.138 0.3242 96.228 2.8506 418.6 3.3535 1.7572 2.0544 1.0765 5.397 2.828-5.3242 3.7295-4.4644 3.6086-19.963 3.6086-1e-4 -180.04 0.1386-193.35-1.453-425.04zm3034.5 414.78 4.5072-5.3439c0.321-202.11 0.7295-138.84 0.9261-281.5 0.4563-329.96 2.0499 121.51 0.736 133.76-0.4647 4.3264-0.5596 142.06-0.5687 148.18l-10.107 10.253 4.5072-5.3439h-9e-4zm-3484.4 0.7002c-0.2964-5.6356 0.2705-32.494 0.6953-32.919 0.6445-0.6448 0.6846 34.831-0.0483 34.831-0.3008 0-0.5918-0.8605-0.6475-1.9121h5e-4zm3084.7-0.5568c0-0.1251 2.2826-2.5362 43.16-42.876-40.184 40.719-43.16 43.851-43.16 42.876zm-3084.7-35.501c-0.5063-2.4152 0.5947-19.802 0.8149-23.765 0.1919 11.625 0.8536 31.725-0.8149 23.765zm3494.8-197.79c0.2255-242.63 2.3715-237.04 0.9208 2.0575l-1.09 179.62 0.1692-181.67zm-3494.1 121.17c0.6528-0.6526 0.6963 51.211-0.0386 51.211-1.6367 1e-4 -0.2729-50.9 0.0386-51.211zm894.12 28.101c7.7-8.6176 19.721 1.0656 14.197 11.436-6.6956 12.572-24.63 0.2404-14.197-11.436zm2519.2-4.752c0-23.487 0.8632-2.2196 0.3715 9.0663-0.2043 4.6289-0.3704 0.5491-0.3689-9.0663h-0.0026zm-3.2148-42.067c0-60.97 0.9462-27.1 0.3129 26.497-0.172 14.573-0.3129 2.6497-0.3129-26.497zm-541.97 50.307c-2.6891-1.0891-9.2294-8.3146-9.2238-10.19 0-0.7303 0.9639 0.2463 2.137 2.1703 5.6133 9.2061 19.069 8.8477 24.084-0.6414 4.5042-8.5221 2.0864 3.5049-6.8533 7.5631-5.0454 2.2903-6.7457 2.4744-10.144 1.098h2e-4zm-1318.7-1.9571c-2.0059-6.4496 1.3381-619.19 1.2407-165.25-0.0396 183.74 0.0361 169.35-1.2405 165.25h-2e-4zm1247.6-1.8028c-5.0061-5.0061-4.8583-7.3345-0.1265-2.1709 2.8329 3.091 4.6359 4.0339 8.5602 4.4762 8.2351 0.9282 14.277-3.5234 16.292-12.003l0.8373-3.5237 0.1082 3.278c0.25 7.603-7.2076 13.658-16.821 13.658-4.3821 0-5.6785-0.5443-8.8492-3.715h-6e-4zm137.21 1.3063c-4.139-1.5312-6.5317-4.2207-6.5135-7.3214 0.0264-4.4146 1.7296-6.3725 2.5836-2.9695 1.6426 6.5444 11.332 9.7987 16.162 5.428 1.0991-0.9946 1.9982-1.3166 1.9982-0.7157-1e-4 3.6285-9.468 7.3402-14.23 5.5786zm271.55-31.778c50.695-50.173 34.017-31.406-9.8336 10.459-13.878 13.249-10.618 9.782 9.8336-10.459zm-1844.9 13.43c0-1.8804-14.339-15.258-56.476-61.003-1.2292-18.563-1.4163-14.7-1.4399-107.61 5.6731-7.4373 5.9316-6.5369 3.9126-12.463-2.4783-7.2732-2.2383-19.621 0.5247-27.006 2.864-7.6542 10.082-15.16 18.268-18.995 5.1501-2.4131 7.7927-2.9288 15.014-2.9295 7.6858-8e-4 9.6543 0.4373 15.999 3.5608 8.4565 4.1632 14.246 10.117 18.188 18.706 4.012 8.7404 4.0063 21.036-0.0142 29.794-7.8901 17.19-27.775 25.523-45.376 19.016l-5.717-2.1134-5.5024 5.1692v87.522c8.8074 9.1788 5.5852 5.821 14.731 15.352l-15.75-15.297c-0.104-27.697-0.2229-59.331-0.3271-87.028 6.2356-6.515 6.6257-6.3474 4.0774-7.7206-3.272-1.7628-10.888-11.182-12.522-10.173-0.6335 0.3916-1.9551 2.2647-2.9365 4.1626-2.0488 3.9618-1.6946 12.033-0.7007 106.72 35 39.053 59.175 60.656 56.735 63.096-0.3821 0.3819-0.6943 0.04-0.6943-0.7597h0.0059zm-2.8816-163.23c29.43-14.399 21.191-62.773-15.733-64.911-7.4097-0.4289-9.1736-0.1339-15.099 2.5253-6.8032 3.0531-13.793 9.4416-16.896 15.443-0.8943 1.729-2.2307 6.2184-2.97 9.9763-2.4399 12.403 2.2854 25.382 12.092 33.213 10.054 8.0286 26.584 9.6359 38.606 3.754h-3e-4zm-23.888-14.219c-4.2634-1.882-6.9167-4.9381-8.2139-9.4608-0.7651-2.6673-0.6831-3.8807 0.3062-4.5211 1.0532-0.682 1.0183-1.0903-0.158-1.8483-1.0725-0.6913-1.2976-2.1056-0.7759-4.8848 1.6233-8.6547 11.917-15.308 19.706-12.738 8.3135 2.7438 13.72 9.6682 13.72 17.573 0 12.45-13.134 20.934-24.585 15.88h3e-4zm15.109-6.1634c6.1584-4.8443 4.4187-15.438-3.123-19.016-4.761-2.2593-7.3052-2.1386-10.667 0.5059-5.9082 4.6474-6.1877 14.928-0.5024 18.469 2.2529 1.403 2.3342 1.3792 0.9614-0.2819-3.0271-3.6624 4.0576-0.9077 2.6677 1.3413-1.3926 2.253 7.5955 1.3951 10.663-1.0178l2e-4 -1e-4zm-632.67 180.58c-7.583-5.9589-3.6792-18.824 5.7122-18.824 8.9248 0 13.769 11.287 7.6687 17.869-3.2022 3.4552-9.6167 3.9129-13.381 0.9547zm-65.554-0.2094c-5.2195-2.213-6.0239-15.709-1.1404-19.129 3.7576-2.6318 10.268-2.1411 13.421 1.0116 3.6414 3.6414 3.7527 11.261 0.2236 15.323-2.7128 3.1223-8.6185 4.4425-12.504 2.7951zm195.25-0.7741c-7.6389-2.9977-8.6492-15.54-1.5139-18.791 4.9185-2.2408 8.731-1.5163 11.911 2.2633 5.1763 6.1515 2.1223 15.419-5.4841 16.644-1.801 0.2899-4.0117 0.2377-4.9133-0.116h2e-4zm2361.2-18.387c25.069-25.1 26.952-25.891 1.0927 0-25.121 25.151-26.9 25.839-1.0927 0zm-1384.5 15.354c-7.2695-4.9398-9.4309-15.177-4.981-23.592 2.8923-5.4693 9.8337-9.7902 15.728-9.7902 4.5574 0 11.416 3.3855 14.309 7.0622 6.2847 7.9895 2.3699 22.293-7.4978 27.396-4.9209 2.5448-12.955 2.0528-17.558-1.0752zm19.703-8.1435c3.4934-3.2633 3.9023-4.9388 2.6882-11.011-0.9097-4.5485-5.8716-7.6627-12.217-7.6682-3.7717-0.0033-5.3738 0.6418-7.9216 3.1898-4.6184 4.6184-4.4312 9.9919 0.521 14.944 3.1228 3.1227 4.4978 3.715 8.6257 3.715 3.9109 0 5.6016-0.6454 8.3042-3.17h-2e-4zm191.57 7.9111c-6.3916-3.1503-11.2-11.092-11.14-18.399 0.0525-6.3902 8.551-17.124 14.8-18.693 4.5339-1.1379 13.53 0.2049 16.665 2.4874 4.2161 3.07 7.8403 10.813 7.8403 16.752 0 6.4293-3.7908 13.985-8.6296 17.2-4.5288 3.0097-14.105 3.3295-19.536 0.6525h-2e-4zm17.323-10.12c2.7075-2.7075 3.1938-4.0553 3.1938-8.8505 0-4.9761-0.4468-6.1035-3.7148-9.3716-2.8259-2.826-4.6409-3.715-7.584-3.715-2.1279 0-4.1777 0.4997-4.5554 1.1105-0.3774 0.6108-1.1064 0.8508-1.6199 0.5335-1.0693-0.6608-4.9067 4.3777-6.4741 8.5005-4.1858 11.009 12.218 20.33 20.755 11.793h-2e-4zm1361.8-22.483c0.0013-39.61 0.8312-6.3427 0.3362 15.636-0.1855 8.2268-0.3367 1.1904-0.3362-15.636zm-2072.7-4.3706c30.001 29.466 32.944 32.233 31.946 32.233-0.1747 0-5.1952-4.9969-31.946-32.233zm83.588-7.9839 5.3606-0.3786c7.188-0.5077 5.7319 1.2604 0.0635 1.2604h-4.281c-0.2273 13.566-0.4229 25.223-0.6501 38.789-0.3026-24.337-0.191-15.352-0.493-39.671zm431.29 24.073c-2.6179-9.4165-11.918-17.728-19.837-17.728-1.5808 0-3.0864-0.6146-3.3462-1.3658-0.6267-1.812-1.0811-259.14-1.0981-266.33 7.7461 1e-4 14.402 2e-4 22.148 4e-4 5.9436 41.87 20.323 124.51 30.776 201.95 3.7148 27.523 3.2754 26.473 16.062 38.4 8.0598 7.5172 44.316 42.865 53.076 51.389h-96.027l-1.7544-6.31zm2375.2-83.834c0.0724 10.668 0.5238 77.153 0.5965 87.863 5.5325 0.2636 10.286 0.4901 15.819 0.7537-5.9232 0.1518-11.013 0.2823-16.936 0.4342 0.1655-28.295 0.3553-60.756 0.5209-89.051zm71.296 88.283c2.8056-0.5421 2.4242 0.0836 3.0835-39.114l0.4926 39.882c-4.5988-0.2278-6.559-0.1915-3.5761-0.7679zm-2485.5-153.3v-136.58h8.3845c2.3855 173.28 1.7402 268.79-0.042 268.79-2.1125 0-6.7087 4.3706-7.6951 4.3706-0.356 0-0.6472-61.462-0.6472-136.58h-2e-4zm1492.1 134.4c2.8929-3.7145 23.361-23.014 16.284-15.369-9.5583 10.326-20.119 20.292-16.284 15.369zm-2770.5-4.6685c-1.5024-0.7471-3.6145-3.1604-4.6934-5.363-1.7732-3.6192-1.8083-4.3725-0.3657-7.8251 2.8362-6.7882 9.3523-8.1736 14.942-3.1768 5.5557 4.9665 3.9663 14.098-2.9089 16.712-3.4498 1.3115-3.6602 1.301-6.9739-0.3468zm562.71-137.3c0-111.51 0.2134-129.01 1.572-129.01 1.0178 0 1.8035 1.6366 2.2288 4.6438 0.3469 2.4534 1.4944 252.36-1.8887 253.01-1.8125 0.3489-1.9121-6.3635-1.9121-128.64zm2170 105.36c16.514-16.561 17.992-16.947 1.0927 0-16.515 16.561-17.992 16.947-1.0927 0zm-3314.4 3.777c-5.6436-4.4394-4.7686-13.451 1.6973-17.477 10.28-6.4013 20.2 6.867 12.223 16.348-3.4795 4.1345-9.48 4.6213-13.919 1.1292h-6e-4zm101.05-1.6212c-10.245-8.62 0.8574-20.718 9.042-18.664 7.1328 1.7902 9.2783 13.879 3.3657 18.965-3.7617 3.236-8.3359 3.1251-12.408-0.301zm-383.18-4.7559c-19.718-8.9565-14.297-38.374 8.1865-38.374 11.64 0 19.722 8.327 19.722 20.32 0 15.124-14.173 24.293-27.908 18.054zm13.704-12.151c2.5786-2.5787 2.8359-7.3262 0.5718-10.558-4.9937-7.1296-16.504-0.9198-13.495 7.2806 2.0668 5.6324 8.8485 7.3526 12.923 3.2779zm3663.9-95.816c-0.1248-59.61 0.1421-108.61 0.5928-108.89 1.2554-0.7764-0.0194 382.72-0.5923 108.89h-5e-4zm1060 104.1c-2.6243-2.2573-3.0657-3.4509-3.0657-8.2895 0-4.8968 0.4284-6.021 3.2047-8.409 2.6712-2.2976 3.9975-2.6672 7.9661-2.2199 2.6186 0.2952 5.7151 1.3999 6.8808 2.4548 4.5136 4.0847 3.6692 13.878-1.5093 17.505-3.5706 2.501-9.9297 2.0095-13.477-1.0415zm-1001.3-6.6505c-0.3485-3.0711-1.7393-144.68 0.1919-104.89 1.0195 21.004 0.8493 114.07-0.1919 104.89zm-2491.5-219.9c0.2852-0.7512 1.4475-1.3658 2.583-1.3658 2.0034 0 2.0649 2.1705 2.0879 73.481 0.0457 141.02 3.7671 125.26-3.0417 133.57-1.9158-12.396-2.0635-204.54-1.6292-205.68zm2495.4 133.03c0-69.71 0.953-33.827 0.308 30.867-0.1693 16.977-0.308 3.0868-0.308-30.867zm-65.556-8.1949c-2e-4 -77.078 0.9325-36.889 0.3053 33.52-0.1676 18.823-0.3051 3.7392-0.3053-33.52zm-1383.3 49.783c-9.2051-4.7188-12.257-15.239-7.2437-24.968 3.1677-6.1476 7.877-8.9622 15.004-8.9674 13.497-0.0098 22.106 14.331 16.144 26.895-3.9009 8.2205-15.142 11.532-23.904 7.0403h-2e-4zm15.928-8.7248c7.7815-7.7815 0.7112-21.816-11.059-18.646-13.297 3.5804-10.806 21.84 2.9792 21.84 3.9427 0 5.5015-0.6162 8.0794-3.1939zm-533.84-1.163c-7.0771-4.6575-9.2688-15.051-4.6262-21.939 5.0596-7.5082 15.591-8.3023 22.218-1.6755 12.48 12.48-3.4368 32.93-17.592 23.615h2e-4zm14.254-4.8809c3.1804-3.1803 3.7083-10.34 0.9648-13.083-1.9136-1.9136-3.7463-2.2551-3.7463-0.698 0 1.0374-4.2451 2.8693-5.7363 2.4754-0.4509-0.1191-0.6965 0.3865-0.5464 1.1234 0.3745 1.8377-5.0339 2.361-4.2947 1.1641 0.3259-0.5267-0.3574-1.0292-1.5176-1.1166-3.5029-0.2639-2.7454 5.4573 1.2524 9.4551 4.3184 4.3183 9.7161 4.5877 13.624 0.68h3e-4zm458.08-85.55c-0.4868-66.49 0.8474-89.036 1.1118-16.936 0.2498 68.13-0.6318 82.514-1.1118 16.936zm504.19 35.813c20.197-0.1556 62.671-0.4828 74.601-0.5747-0.1216-61.443 1.8359-51.911 1.0927 1.0926-9.354 0.0697-67.643 0.5043-77.032 0.5743-8e-4 -33.768 0.9565-26.636 1.3386-1.0922zm1151.9-0.3652c-0.7047-1.8363 0.0459-23.725 0.1472-27.526 0.4212 24.824 0.2007 27.632 2.382 28.202 1.7921 0.4683 1.7899 0.5077-0.0339 0.6265-1.0705 0.0697-2.1933-0.5165-2.495-1.3027h-3e-4zm66.314 0.6555c5.9786-0.4082 6.1638-0.5175 6.7242-3.9706 0.3169-1.953 0.6451-26.864 0.7292-55.359 0.2075-70.228 1.2579-70.408 0.8863 3.3664l-0.2831 56.19c-12.361 0.1674-15.963 0.3123-8.0564-0.2275l-2e-4 -1e-4zm48.784-0.5923c27.055 0.4662 34.599 1.3663-0.8461 1.3663 3e-4 -76.709 1.833-64.698 0.8461-1.3663zm68.305-45.071c0.2722-69.192 1.4486-80.389 0.977-10.926-0.507 74.73-1.2224 73.145-0.977 10.926zm-1146.8-9.9695c0.3029-73.98 1.4125-74.909 1.4125-0.5928 0 74.128-1.7162 74.76-1.4125 0.5928zm111.75 54.108c0.1597-30.127 0.4938-93.207 0.5869-110.79 0.0826 17.587 0.4432 94.41 0.5258 112l-12.565-0.4042c4.0054-0.2805 7.4472-0.5215 11.453-0.802zm40.763-0.4328c7.3417 0.4252 13.65 0.7906 20.992 1.2158-7.834 0.148-14.565 0.2752-22.399 0.4232 0-95.358 0.8912-83.988 1.4072-1.639zm31.142 0.8289c9.2324-0.5227 23.838 0.3987 6.24 0.3934-7.2115-0.0022-10.02-0.179-6.24-0.393v-4e-4zm41.466-50.271c0.3638-71.212 0.9286-76.665 1.1813-4.9173 0.2615 74.447-1.5299 73.244-1.1813 4.9173zm39.988 41.794c0.5232 4.9842 0.3301 3.1442 0.853 8.1245 8.5536 0.2434 15.903 0.4525 24.457 0.6959-8.9803 0.1634-16.697 0.3037-25.677 0.4671 0.1284-3.2483 0.2389-6.0393 0.3673-9.2875zm1219 8.0581 0.5934-94.377 0.5225 95.607c-9.698-0.4139-9.1186-0.235-1.1159-1.2294zm115.3 0.0572c-0.588-20.879 0.1522-18.235 0.8594-6.7495l0.4878 7.9217c-5.8212-0.1519-10.823-0.2823-16.644-0.4342 5.35-0.2582 9.9471-0.4799 15.297-0.738zm114.09 0.0363c0.4563-10.364 0.2878-6.5375 0.744-16.893 0.2699 11.06 0.1703 6.977 0.4398 18.029l-47.53-0.5005c16.221-0.2223 30.125-0.4129 46.346-0.6353zm69.266 0.3186c20.467-0.4584 53.953 0.3404 14.412 0.339-16.226-6e-4 -22.711-0.1532-14.412-0.339zm127.73 0.0077c9.7993-0.5097 28.565 0.3737 7.9696 0.3779-8.4134 0.0022-12-0.1684-7.9696-0.378v1e-4zm-485.09-1.0976c14.136-0.474 39.378 0.3572 10.653 0.3572-11.719 0-16.513-0.1608-10.653-0.3572zm-233.92-13.663c0.3666-24.544 1.9961 12.299 0.6358 12.295-0.4507-0.0015-0.7369-5.5341-0.6358-12.295zm570.59-0.8195c0-16.897 0.9208-2.11 0.3942 6.2827-0.2168 3.4556-0.3942 0.6283-0.3942-6.2827zm-503.62-46.984c0-55.719 0.9589-25.126 0.3161 24.312-0.1739 13.371-0.3161 2.4311-0.3161-24.312zm160.56 31.14c0-23.487 0.8632-2.2196 0.3715 9.0662-0.2043 4.6289-0.3704 0.5491-0.369-9.0662h-0.0025zm-449.03-23.492c0-42.579 0.9323-14.786 0.3292 17.756-0.181 9.7656-0.3292 1.7756-0.3292-17.756zm630.46 0.5464c-0.0011-45.542 0.7746-6.5028 0.3319 16.595-0.1821 9.5026-0.3314 2.0349-0.3319-16.595zm-801.99-13.112c6e-4 -52.229 0.9221-18.22 0.3201 22.199-0.1763 11.829-0.3203 1.8394-0.3201-22.199zm393.28 20.214c0-18.338 0.9076-2.318 0.3879 6.8291-0.2134 3.7559-0.3879 0.6829-0.3879-6.8291zm-227.52-25.404c-0.0962-20.883 0.194-37.97 0.6447-37.97 1.2995-2e-4 -0.2009 134.2-0.6447 37.97zm564.12-4.6438c-0.0011-45.542 0.7746-6.5028 0.3319 16.595-0.182 9.5026-0.3313 2.035-0.3319-16.595zm-1642.3-2.1853c0.0012-40.862 0.8352-6.9597 0.3342 16.183-0.1843 8.5269-0.3348 1.2444-0.3342-16.183zm1198.6 6.0096c0-33.741 0.8255-4.9515 0.3459 12.839-0.1902 7.0613-0.3459 1.2839-0.3459-12.839zm331.08-9.8338c0-37.472 0.7975-4.6779 0.3414 13.931-0.1878 7.6621-0.3414 1.3931-0.3414-13.931zm227.22 7.6485c0-19.765 0.8948-2.5143 0.3824 7.3754-0.2104 4.0565-0.3824 0.7375-0.3824-7.3754zm-1833.3-34.71c0.8723 0.8722 1.0449 43.244 0.1797 44.109-0.8296 0.8294-1.1087-45.038-0.1797-44.109zm529.53 21.871c-0.2874-29.294 1.5206-27.164 1.1376-7.6505-0.5338 27.191-0.9204 29.791-1.1377 7.6505h1e-4zm-187.69-0.8195c-0.0023-29.384 0.8324-4.4369 0.3547 10.595-0.1951 6.1918-0.3556 1.4239-0.3566-10.595h0.0019zm1035.8-1.0927c0-27.87 0.839-2.7976 0.3599 10.71-0.1979 5.5276-0.3589 0.7081-0.358-10.71h-0.0019zm-384.61-0.5463c0-27.218 0.8408-3.353 0.3606 10.107-0.1984 5.5589-0.3606 1.0107-0.3606-10.107zm-65.561-0.5463c0-26.443 0.8458-2.589 0.3633 10.162-0.202 5.2279-0.3646 0.6549-0.3633-10.162zm-810.75-0.5463c0-25.677 0.8523-3.2519 0.3641 9.5607-0.2003 5.2583-0.3641 0.956-0.3641-9.5607zm1218.3-1.0927c0-24.203 0.8611-3.0574 0.3681 9.0144-0.2024 4.9579-0.3681 0.9014-0.3681-9.0144z\",style:{fill:\"rgb(63, 61, 86)\"}}))),_path17||(_path17=/*#__PURE__*/React.createElement(\"path\",{d:\"M20.80341,196.1929c2.63647-7.27112,8.79608-12.69781,16.34148-14.397,5.50351-1.56479,11.2314-2.19083,16.94299-1.85181,16.72009,.65863,12.50423-36.7998,29.06042-34.37442,0,0,15.58301-5.56128,27.77563,4.62927,11.07635,9.25754,18.71201,34.43607,21.5546,33.00369,.60413-.29858,2.05499-.267,4.08514,.00247,23.72348,3.14868,40.79501,24.42999,39.38528,48.32001l-1.20511,20.42218s8.5177,12.82288-3.84238,35.46011l-15.57257,69.59259s38.9613,77.16797,21,93-88.38391-8.85437-88.38391-8.85437c0,0-39.49161-12.20813-47.82048-17.49915-17.59323-11.17676,4.89252-36.66113,18.79485-35.46002,.74782-2.96442-.23682-6.09735-2.54601-8.10101-3.84238-2.45367,.46281-8.00885,.7869-8.51801-.37042,.37012-3.28688,3.4256-5.50883-3.00916s4.62927-14.53601,4.62927-14.53601l-19.35033-41.66345-15.23021-32.91406-1.85182-3.79599,3.17682-20.47931-.29726-.61499c-6.76939-14.11334-8.26756-30.1825-4.22379-45.30396,1.46695-5.56064,2.5228-10.62775,2.2993-13.05762Z\",fill:\"#e6e6e6\"})),_path18||(_path18=/*#__PURE__*/React.createElement(\"path\",{d:\"M179.16893,554h-6.68005c1.85001-3.96973,3.68005-7.82031,5.42004-11.4502,.44,3.75,.85999,7.58008,1.26001,11.4502Z\",fill:\"#2f2e41\"})),_path19||(_path19=/*#__PURE__*/React.createElement(\"path\",{d:\"M310.2903,321.05399c-.59183,.77106-1.11319,1.59375-1.55777,2.45813l-89.32993-49.05756-66.87216-71.92731c-9.1788-9.87253-24.62292-10.43488-34.49545-1.2561-8.90891,8.2829-10.35895,21.86142-3.40005,31.83884l.00009,.00006c11.45349,16.42142,25.39786,30.95618,41.33047,43.08038l52.59683,40.02338,106.20923,28.62372c7.66614,4.59259,17.60379,2.10095,22.19638-5.56519,4.59259-7.66611,2.10095-17.60376-5.56519-22.19635-7.02951-4.21118-16.09747-2.50262-21.11246,3.978Z\",fill:\"#ffb8b8\"})),_path20||(_path20=/*#__PURE__*/React.createElement(\"path\",{d:\"M189.37431,301.60931l26.51816-30.93301,1.47705-1.72961-54.31754-73.61069c-2.34775-1.828-4.905-3.36966-7.61761-4.59241l-.00717-.00699c-19.29861-8.77158-42.05402-.2377-50.82556,19.06094-7.36353,16.20068-2.62579,35.33817,11.4454,46.23245l15.85257,9.94101,57.2374,35.91031,.2373-.272Z\",fill:\"#e6e6e6\"})),_path21||(_path21=/*#__PURE__*/React.createElement(\"path\",{d:\"M141.7795,111.90948c-13.53955,24.75824-44.58606,33.85278-69.34431,20.31323-24.75824-13.53955-33.85278-44.58606-20.31323-69.34431,13.53955-24.75824,44.58607-33.85278,69.34431-20.31323,10.39978,5.68735,18.49866,14.81358,22.90948,25.81569,.23383,.58475,.44443,1.16949,.65485,1.77765,4.94037,13.74106,3.75681,28.94031-3.2511,41.75098Z\",fill:\"#ffb6b6\"})),_path22||(_path22=/*#__PURE__*/React.createElement(\"path\",{d:\"M149.12383,70.15851c-2.19867-6.15157-1.23959-2.94714-3.46167-9.0753,1.45032,5.42648-.84201,8.46715-.63159,9.0753h-60.83719V34.793c17.82327-7.06381,35.24863-13.075,45.77411,0,19.53152,.00084,35.36472,15.83405,35.36557,35.36555l-16.20923-.00005Z\",fill:\"#2f2e41\"})),_path23||(_path23=/*#__PURE__*/React.createElement(\"path\",{d:\"M127.5584,168.46631c-.04681-.65485-.11691-1.33325-.21057-1.9881-.81741-4.80469-2.14246-9.50903-3.95291-14.034-1.75424-4.93524-3.53189-9.89401-5.30942-14.82928,2.28909,8.95862,1.59097,18.41965-1.98822,26.94525-10.26822-7.99933-3.789-26.29025-17.215-26.29025-32.27808,0-65.49182-26.17334-65.49182-58.47482,0-32.27823,13.8468-56.4165,46.12488-56.4165,32.30164,0,58.49838,14.7823,59.12982,47.06053-39.76285,9.35602-3.57867,94.75267-11.08676,98.02718Z\",fill:\"#2f2e41\"})),_circle5||(_circle5=/*#__PURE__*/React.createElement(\"circle\",{cx:37.42389,cy:37.42389,r:37.42389,fill:\"#2f2e41\"})),_ellipse3||(_ellipse3=/*#__PURE__*/React.createElement(\"ellipse\",{cx:234.72266,cy:180.30383,rx:4.51807,ry:4.61876,fill:\"#3f3d56\"})),_ellipse4||(_ellipse4=/*#__PURE__*/React.createElement(\"ellipse\",{cx:250.33054,cy:180.30383,rx:4.51807,ry:4.61876,fill:\"#3f3d56\"})),_ellipse5||(_ellipse5=/*#__PURE__*/React.createElement(\"ellipse\",{cx:265.93841,cy:180.30383,rx:4.51807,ry:4.61876,fill:\"#3f3d56\"})),_path24||(_path24=/*#__PURE__*/React.createElement(\"path\",{d:\"M283.73553,183.95435c-.13878,0-.27731-.05374-.38192-.1607l-3.04854-3.11637c-.20322-.20765-.20322-.53948,0-.74714l3.04854-3.11611c.20687-.21078,.54548-.21418,.75548-.00835,.21105,.20635,.2147,.5447,.00835,.75548l-2.68306,2.74254,2.68306,2.7428c.20635,.21078,.2027,.54913-.00835,.75548-.10383,.10174-.2387,.15235-.37357,.15235Z\",fill:\"#3f3d56\"})),_path25||(_path25=/*#__PURE__*/React.createElement(\"path\",{d:\"M288.85827,183.95435c-.13487,0-.26974-.05061-.37357-.15235-.21105-.20635-.2147-.54444-.00835-.75548l2.6828-2.7428-2.6828-2.74254c-.20635-.21078-.2027-.54913,.00835-.75548,.21052-.20661,.54913-.2027,.75548,.00835l3.04828,3.11611c.20322,.20765,.20322,.53948,0,.74714l-3.04828,3.11637c-.10461,.10696-.24313,.1607-.38192,.1607Z\",fill:\"#3f3d56\"})),_path26||(_path26=/*#__PURE__*/React.createElement(\"path\",{d:\"M458.31095,176.21981h-5.66854c-.64647,0-1.17004,.52357-1.17004,1.17004v5.67389c0,.64647,.52357,1.17004,1.17004,1.17004h5.66854c.64647,0,1.17539-.52357,1.17539-1.17004v-5.67389c0-.64647-.52892-1.17004-1.17539-1.17004Z\",fill:\"#3f3d56\"})),_path27||(_path27=/*#__PURE__*/React.createElement(\"path\",{d:\"M444.42006,176.21981h-5.66854c-.64647,0-1.17004,.52357-1.17004,1.17004v5.67389c0,.64647,.52357,1.17004,1.17004,1.17004h5.66854c.64647,0,1.17539-.52357,1.17539-1.17004v-5.67389c0-.64647-.52892-1.17004-1.17539-1.17004Z\",fill:\"#3f3d56\"})),_path28||(_path28=/*#__PURE__*/React.createElement(\"path\",{d:\"M471.40043,176.48695h-5.66854c-.64647,0-1.17004,.52357-1.17004,1.17004v5.67389c0,.64647,.52357,1.17004,1.17004,1.17004h5.66854c.64647,0,1.17539-.52357,1.17539-1.17004v-5.67389c0-.64647-.52892-1.17004-1.17539-1.17004Z\",fill:\"#3f3d56\"})),_path29||(_path29=/*#__PURE__*/React.createElement(\"path\",{d:\"M377.22138,178.64537h-49.92643c-.79073,0-1.42651,.64112-1.42651,1.42651s.63578,1.42648,1.42651,1.42648h49.92643c.78535,0,1.42648-.64112,1.42648-1.42648s-.64112-1.42651-1.42648-1.42651Z\",fill:\"#3f3d56\"})));}const ForwardRef=/*#__PURE__*/React.forwardRef(SvgUndrawSpeechToTextRe8MtfAi);export default __webpack_public_path__+\"static/media/undraw_speech_to_text_re_8mtf_AI.6f535a90fab2904dc44e82aeadbefd06.svg\";export{ForwardRef as ReactComponent};","var _g, _circle, _path, _g2, _polygon, _polygon2, _circle2, _path2, _polygon3, _path3, _path4, _path5, _path6, _g3, _g4, _path7, _path8, _g5, _path9, _path10, _path11;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawProjectionsReUlc6(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 641.51274,\n    height: 626.39159,\n    viewBox: \"0 0 641.51274 626.39159\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M198.10146,459.50579H117.74436c-2.02587,0-3.67427-1.64844-3.67427-3.67429s1.64841-3.67352,3.67427-3.67352h80.35711c2.02586,0,3.67351,1.64764,3.67351,3.67352s-1.64764,3.67429-3.67351,3.67429h-.00002Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.5875,479.17299c0,.66003,.53003,1.19,1.19006,1.19h204.29c.65997,0,1.19-.52997,1.19-1.19,0-.65997-.53003-1.19-1.19-1.19H55.77756c-.66003,0-1.19006,.53003-1.19006,1.19Z\",\n    fill: \"#3f3d56\"\n  }))), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 485.60718,\n    cy: 174.40329,\n    r: 65,\n    fill: \"#ff6884\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0,561.30846c0,.66003,.53003,1.19,1.19006,1.19H523.48004c.65997,0,1.19-.52997,1.19-1.19,0-.65997-.53003-1.19-1.19-1.19H1.19006c-.66003,0-1.19006,.53003-1.19006,1.19Z\",\n    fill: \"#3f3d56\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.55489,480.94674l-1.67075-1.83057,163.0638-148.79639,58.74879,26.33618,63.44026-108.79395,52.12207-25.12366,48.29266,80.48737c26.07251-67.49872,91.45966-138.11798,169.81033-209.76619l1.92743,1.56058c-73.48529,70.35442-136.3587,141.02824-172.04047,212.52049l-44.66876-74.66707c-2.11026-3.52744-6.5448-4.88992-10.27161-3.15582l-.00006,.00003c-28.49045,13.25661-52.25458,34.89546-68.11469,62.02293l-39.7393,67.97107-9.0714-4.06644c-30.33815-13.5997-65.85408-7.89978-90.41309,14.51025L7.55489,480.94674Z\",\n    fill: \"#3f3d56\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"565.03815 107.00612 562.5625 107.17803 558.56775 98.52049 549.62372 96.70378 549.27637 94.24652 564.01953 92.15139 565.03815 107.00612\",\n    fill: \"#3f3d56\"\n  }))), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"310.6843 159.98014 319.44968 126.28289 353.59686 124.64036 363.8132 171.09089 310.6843 159.98014\",\n    fill: \"#ffb6b6\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"310.6843 159.98014 319.44968 126.28289 353.59686 124.64036 363.8132 171.09089 310.6843 159.98014\",\n    isolation: \"isolate\",\n    opacity: 0.1\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 333.15384,\n    cy: 103.92448,\n    r: 41.21628,\n    fill: \"#ffb6b6\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M355.89438,112.64867h-.00006s-15.65744-31.02253-34.00266-29.23145c-18.34528,1.79106-28.00998,3.96931-28.00998,3.96931,0,0-5.44562-24.16184,20.1925-33.45562,0,0-32.59821-32.13389,6.21277-47.89698,38.811-15.7631,60.52856,4.34073,60.52856,4.34073,0,0,28.72815,28.67943-7.45398,50.11471,0,0,26.86676,36.13874-5.66187,65.92528,0,0,7.2756-24.1039-.31577-19.65871-7.5914,4.44517-11.4895,5.89272-11.4895,5.89272v.00002l-.00003-.00002Z\",\n    fill: \"#2f2e41\"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"287.67856 330.41161 282.19592 335.66613 242.58878 420.59115 238.25323 561.0631 304.79889 561.0631 336.01489 491.49968 357.04745 560.39159 416.88153 560.39159 430.75189 435.33205 393.46613 346.88671 287.67856 330.41161\",\n    fill: \"#2f2e41\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M356.61389,156.55581h-44.44116l-48.33972,26.01334,11.27243,50.29243s-2.60132,30.34889,3.46844,52.89375c6.06979,22.54489,3.46844,52.02667,3.46844,52.02667l111.42377,9.10468,3.46844-102.31909-1.73422-68.50177-38.58643-19.50999h0v-.00002Z\",\n    fill: \"#e6e6e6\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.20346,183.00271s-26.88043,.86711-31.216,18.20934-7.80399,106.65465-7.80399,106.65465c0,0,2.60132,52.99619,31.64954,27.79877,29.04822-25.19742,26.4469-101.5032,26.4469-101.5032l-19.07645-51.15955v0Z\",\n    fill: \"#e6e6e6\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M531.92712,625.39159h-158.40878c-5.36478,0-9.72961-4.36426-9.72961-9.72961v-163.75797c0-5.36533,4.36484-9.72961,9.72961-9.72961h158.40878c5.36536,0,9.72961,4.36429,9.72961,9.72961v163.75797c0,5.36536-4.36426,9.72961-9.72961,9.72961Z\",\n    fill: \"#fff\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M531.92712,626.39159h-158.40918c-5.91602,0-10.72949-4.81299-10.72949-10.72949v-163.7583c0-5.91602,4.81348-10.72949,10.72949-10.72949h158.40918c5.91602,0,10.72949,4.81348,10.72949,10.72949v163.7583c0,5.9165-4.81348,10.72949-10.72949,10.72949Zm-158.40918-183.21729c-4.81348,0-8.72949,3.91602-8.72949,8.72949v163.7583c0,4.81348,3.91602,8.72949,8.72949,8.72949h158.40918c4.81348,0,8.72949-3.91602,8.72949-8.72949v-163.7583c0-4.81348-3.91602-8.72949-8.72949-8.72949h-158.40918Z\",\n    fill: \"#3f3d56\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M458.974,582.37066h-13.05609c-1.58966,0-2.88275-.99817-2.88275-2.22522v-56.21143c0-1.22705,1.29309-2.22522,2.88275-2.22522h13.05609c1.58966,0,2.88275,.99817,2.88275,2.22522v56.21143c0,1.22705-1.29309,2.22522-2.88275,2.22522Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415.80945,549.24474c-1.28421,0-2.32919,.80664-2.32919,1.79791v29.04004c0,.99127,1.04498,1.79791,2.32919,1.79791h13.05612c1.28421,0,2.32919-.80664,2.32919-1.79791v-29.04004c0-.99127-1.04498-1.79791-2.32919-1.79791h-13.05612Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M489.0824,582.37066h-13.05609c-1.58966,0-2.88275-.99817-2.88275-2.22522v-92.12048c0-1.22705,1.29309-2.22519,2.88275-2.22519h13.05609c1.58966,0,2.88275,.99817,2.88275,2.22519v92.12048c0,1.22705-1.29309,2.22522-2.88275,2.22522Z\",\n    fill: \"#536dfe\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M208.12485,178.57206h-14.91385c-1.81583,0-3.29295-1.14018-3.29295-2.54182V111.8206c0-1.40163,1.47713-2.54182,3.29295-2.54182h14.91385c1.81583,0,3.29295,1.14018,3.29295,2.54182v64.20965c0,1.40163-1.47713,2.54182-3.29295,2.54182v-.00002Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M158.81854,140.73272c-1.46693,0-2.66061,.92139-2.66061,2.05371v33.17207c0,1.13232,1.19368,2.05371,2.66061,2.05371h14.91385c1.46693,0,2.66061-.92139,2.66061-2.05371v-33.17207c0-1.13232-1.19368-2.05371-2.66061-2.05371h-14.91385Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.5173,178.57206h-14.91385c-1.81583,0-3.29295-1.14018-3.29295-2.54182V70.80214c0-1.40163,1.47713-2.54182,3.29295-2.54182h14.91385c1.81583,0,3.29294,1.14018,3.29294,2.54182v105.22811c0,1.40163-1.47711,2.54182-3.29294,2.54182v-.00002Z\",\n    fill: \"#536dfe\"\n  }))), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M428.4375,466.00084c7.72461-.73965,13.04395-11.17798,11.88171-23.3201-.39771-4.85672-1.95276-9.54749-4.53497-13.67993l-1.48889-13.74216,.22809-.06839,3.74231-65.15799c.87012-15.15002-5.12701-30.0369-16.68127-39.8746-6.87335-5.85223-14.20575-8.81528-18.92081-1.42099-7.82382,12.26947,2.31027,62.84671,8.96533,91.60162l2.58023,30.72778c-1.75278,4.54852-2.3905,9.45065-1.85977,14.29608,1.16016,12.13803,8.36346,21.37817,16.08804,20.63867Z\",\n    fill: \"#ffb6b6\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M385.66211,177.80004s22.54489-8.67111,32.95023,17.34222,21.67776,154.34576,21.67776,154.34576l-52.89377-9.53821-1.73422-162.14977v-.00002Z\",\n    fill: \"#e6e6e6\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.09184,165.07636h-30.3571c-2.02587,0-3.67427-1.64844-3.67427-3.67429s1.64841-3.67352,3.67427-3.67352h30.3571c2.02586,0,3.67351,1.64764,3.67351,3.67352s-1.64764,3.67429-3.67351,3.67429Z\",\n    fill: \"#e6e6e6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.09184,112.99718h-30.3571c-2.02587,0-3.67427-1.64844-3.67427-3.67429s1.64841-3.67352,3.67427-3.67352h30.3571c2.02586,0,3.67351,1.64764,3.67351,3.67352s-1.64764,3.67429-3.67351,3.67429Z\",\n    fill: \"#e6e6e6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.09184,75.44008h-30.3571c-2.02587,0-3.67427-1.64844-3.67427-3.67429s1.64841-3.67352,3.67427-3.67352h30.3571c2.02586,0,3.67351,1.64764,3.67351,3.67352s-1.64764,3.67429-3.67351,3.67429Z\",\n    fill: \"#e6e6e6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.84269,178.75373c0,.66003,.53003,1.19,1.19006,1.19H246.32274c.65997,0,1.19-.52997,1.19-1.19,0-.65997-.53003-1.19-1.19-1.19H42.03275c-.66003,0-1.19006,.53003-1.19006,1.19Z\",\n    fill: \"#3f3d56\"\n  }))), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M434.84269,486.75373c0,.66003,.53003,1.19,1.19006,1.19h204.28999c.65997,0,1.19-.52997,1.19-1.19,0-.65997-.53003-1.19-1.19-1.19h-204.28999c-.66003,0-1.19006,.53003-1.19006,1.19Z\",\n    fill: \"#3f3d56\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M374.84269,583.75373c0,.66003,.53003,1.19,1.19006,1.19h204.28999c.65997,0,1.19-.52997,1.19-1.19,0-.65997-.53003-1.19-1.19-1.19h-204.28999c-.66003,0-1.19006,.53003-1.19006,1.19Z\",\n    fill: \"#3f3d56\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.46713,172.73761c-7.72461,.73964-13.04395,11.17796-11.88174,23.32008,.39774,4.85674,1.95276,9.54749,4.53497,13.67993l1.48889,13.74216-.22806,.06839-3.74228,65.15799c-.87012,15.15002,5.12704,30.0369,16.68127,39.8746,6.87335,5.85223,14.20575,8.81528,18.92081,1.42099,7.82382-12.26947-2.31027-62.84671-8.96533-91.60161l-2.58023-30.72778c1.75278-4.54852,2.3905-9.45065,1.85977-14.2961-1.16016-12.13803-8.36346-21.37819-16.08804-20.63866h-.00003v0Z\",\n    fill: \"#ffb6b6\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawProjectionsReUlc6);\nexport default __webpack_public_path__ + \"static/media/undraw_projections_re_ulc6.1023be1e36ab78e5553585eff7eca050.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _rect, _rect2, _rect3, _circle, _circle2, _circle3, _path5, _rect4, _rect5, _rect6, _rect7, _rect8, _circle4, _circle5, _circle6, _circle7, _circle8, _polygon, _path6, _polygon2, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _circle9, _path15, _path16, _polygon3, _path17, _polygon4, _path18, _path19, _polygon5, _path20, _path21, _path22, _path23, _circle10, _path24, _path25, _path26;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawGrowthAnalyticsRePyxf(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 932,\n    height: 567.58611,\n    viewBox: \"0 0 932 567.58611\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"a31475c4-f0df-4934-8dee-db246d5650fa-299\",\n    \"data-name\": \"Path 438\",\n    d: \"M173.377,684.43344a24.21459,24.21459,0,0,0,23.38269-4.11877c8.18977-6.87441,10.758-18.196,12.8467-28.68191l6.17973-31.01657-12.9377,8.90837c-9.30465,6.40641-18.81826,13.01866-25.26011,22.29785s-9.25223,21.94707-4.07792,31.988\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#e6e6e6\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"bc80039d-7499-47e3-8dd4-b917794dfbc0-300\",\n    \"data-name\": \"Path 439\",\n    d: \"M175.37466,724.144c-1.62839-11.86368-3.30382-23.88078-2.15884-35.87167,1.01467-10.64932,4.26373-21.04881,10.87831-29.57938a49.2061,49.2061,0,0,1,12.62466-11.44039c1.26215-.79647,2.42409,1.20354,1.16733,1.997a46.77949,46.77949,0,0,0-18.50446,22.32562c-4.02857,10.24607-4.67545,21.41582-3.98154,32.3003.41944,6.58218,1.31074,13.1212,2.20588,19.65251a1.19817,1.19817,0,0,1-.808,1.42251,1.16348,1.16348,0,0,1-1.42253-.808Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#f2f2f2\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"a24c42db-7472-45f4-900c-466dbf3f7d22-301\",\n    \"data-name\": \"Path 442\",\n    d: \"M187.09569,705.10755a17.82511,17.82511,0,0,0,15.53141,8.01862c7.8644-.37318,14.41806-5.85973,20.31713-11.07027l17.452-15.4088-11.54987-.55281c-8.30619-.39784-16.82672-.771-24.73813,1.79339s-15.20758,8.72638-16.654,16.9154\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#e6e6e6\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"a7d2fb0b-6149-49f2-88d6-cc03571334a8-302\",\n    \"data-name\": \"Path 443\",\n    d: \"M170.77168,730.96369c7.83972-13.87142,16.93234-29.28794,33.1808-34.21552a37.02609,37.02609,0,0,1,13.95545-1.441c1.48189.128,1.11179,2.41174-.367,2.28454a34.39833,34.39833,0,0,0-22.27164,5.89215c-6.27994,4.27454-11.16975,10.21756-15.30781,16.51907-2.53511,3.86051-4.80576,7.88445-7.07642,11.903C172.1595,733.19039,170.03767,732.26285,170.77168,730.96369Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#f2f2f2\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"b85ae1dc-b170-4f54-a6de-4a72451950d7\",\n    \"data-name\": \"Rectangle 62\",\n    x: 175.25235,\n    y: 17.77538,\n    width: 648.36576,\n    height: 307.6608,\n    fill: \"#e6e6e6\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"f015ec3e-20cc-40e8-8473-d753a9bdb685\",\n    \"data-name\": \"Rectangle 75\",\n    x: 193.79258,\n    y: 44.15783,\n    width: 611.2862,\n    height: 256.69103,\n    fill: \"#fff\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"ed585d6d-4c60-4aae-9dcd-e3012a759289\",\n    \"data-name\": \"Rectangle 80\",\n    x: 174.97588,\n    width: 648.36576,\n    height: 27.5445,\n    fill: \"#536dfe\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"b43fe0fb-7393-4bbe-8dcd-48ed75608891\",\n    \"data-name\": \"Ellipse 90\",\n    cx: 195.44487,\n    cy: 12.74061,\n    r: 5.10527,\n    fill: \"#fff\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"ada3e127-c3a1-446f-8730-bf32ed0f9b11\",\n    \"data-name\": \"Ellipse 91\",\n    cx: 214.8228,\n    cy: 12.74061,\n    r: 5.10527,\n    fill: \"#fff\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"e3927273-efa9-4ef7-88ca-a022a07a6d22\",\n    \"data-name\": \"Ellipse 92\",\n    cx: 234.20163,\n    cy: 12.74061,\n    r: 5.10527,\n    fill: \"#fff\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M472.16718,406.99667H781.11811V354.04354a41.92864,41.92864,0,0,0-12.86035-29.86572l-.084-.082c-5.51806-5.53662-23.95922-19.58838-43.03955-18.397-10.0791.62744-18.70825,5.48486-25.64721,14.4375-21.59912,27.87744-49.97168,18.46728-64.96192,10.37695-13.21069-7.13135-26.70215-10.47851-40.10229-9.9458-18.76709.73389-45.18189,7.64746-64.44605,36.41748-7.35766,10.97949-23.35888,25.8833-57.80957,34.64209Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#e4e4e4\",\n    style: {\n      isolation: \"isolate\"\n    }\n  }), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M798.59839,408.22816H472.76177a1.01977,1.01977,0,0,1-1.01972-1.01972V251.03494a1.01972,1.01972,0,0,1,2.03944,0V406.18872h324.8169a1.01972,1.01972,0,0,1,0,2.03944Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#3f3d56\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 398.7414,\n    y: 181.96453,\n    width: 2,\n    height: 58.62158,\n    fill: \"#3f3d56\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 458.61811,\n    y: 154.58611,\n    width: 2,\n    height: 86,\n    fill: \"#3f3d56\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 518.61811,\n    y: 172.58611,\n    width: 2,\n    height: 68,\n    fill: \"#3f3d56\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 578.61811,\n    y: 139.58611,\n    width: 2,\n    height: 101,\n    fill: \"#3f3d56\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 638.61811,\n    y: 162.58611,\n    width: 2,\n    height: 78,\n    fill: \"#3f3d56\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 459.74144,\n    cy: 155.96462,\n    r: 6.11832,\n    fill: \"#536dfe\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 579.74144,\n    cy: 139.96462,\n    r: 6.11832,\n    fill: \"#536dfe\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 519.74144,\n    cy: 172.96462,\n    r: 6.11832,\n    fill: \"#536dfe\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 399.74144,\n    cy: 181.96462,\n    r: 6.11832,\n    fill: \"#536dfe\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 639.74144,\n    cy: 161.96462,\n    r: 6.11832,\n    fill: \"#536dfe\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"136.913 555.469 149.173 555.469 155.005 508.181 136.911 508.182 136.913 555.469\",\n    fill: \"#ffb6b6\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M267.78543,717.6737l24.144-.001h.001A15.38731,15.38731,0,0,1,307.31693,733.059v.5l-39.53076.00147Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"194.913 555.469 207.173 555.469 213.005 508.181 194.911 508.182 194.913 555.469\",\n    fill: \"#ffb6b6\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M325.78543,717.6737l24.144-.001h.001A15.38731,15.38731,0,0,1,365.31693,733.059v.5l-39.53076.00147Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M351.79286,505.49135a10.7427,10.7427,0,0,0-2.51239-16.27991l-19.95137-95.789-21.73592,8.56372,26.4463,91.46467a10.80091,10.80091,0,0,0,17.75338,12.04055Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#ffb6b6\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.76441,487.045l-9.03648,9.17282s-9.68839,35.50336,8.85089,79.28929l12.4,126.94994,22.31,1.67994,6.66005-147.69558,30.72994,49.0256L324.31125,703.612l24.66119-.56693,11.14567-108.752L329.67881,480.8088Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M289.36079,499.40243A345.94729,345.94729,0,0,1,248.6623,496.714l-.54346-.07226,13.46656-59.18555-4.637-76.15088,43.7876-1.5a16.08951,16.08951,0,0,1,16.50513,13.76367l8.96191,60.75538,8.29,53.90234-.11108.16211C328.42451,497.12411,308.50605,499.40243,289.36079,499.40243Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#536dfe\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M296.752,372.40022l8.89685-11.15322s15.59694-10.666,20.53312,12.19,14.10739,59.96025,14.10739,59.96025l-30.498,2.46974Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#536dfe\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.44336,506.49135a10.7427,10.7427,0,0,1,2.51239-16.27991l19.95137-95.789,21.73592,8.56372-26.4463,91.46467a10.80091,10.80091,0,0,1-17.75338,12.04055Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#ffb6b6\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M267.48425,373.40022,258.5874,362.247s-15.59694-10.666-20.53312,12.19-14.10739,59.96025-14.10739,59.96025l30.498,2.46974Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#536dfe\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M304.9783,348.66834h-58a4.50508,4.50508,0,0,1-4.5-4.5v-25a33.5,33.5,0,1,1,67,0v25A4.50508,4.50508,0,0,1,304.9783,348.66834Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 148.38189,\n    cy: 156.39447,\n    r: 24.56103,\n    fill: \"#ffb6b6\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M317.40359,321.66834H281.938l-.36377-5.0918-1.81836,5.0918h-5.46094l-.7207-10.0918-3.604,10.0918H259.40359v-.5a26.52977,26.52977,0,0,1,26.49976-26.5h5.00024a26.53,26.53,0,0,1,26.5,26.5Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.64776,353.33509a4.5963,4.5963,0,0,1-.79639-.07031l-25.96948-4.582V305.76283h28.5874l-.70776.82519c-9.84717,11.48438-2.42847,30.10645,2.87012,40.18457a4.43343,4.43343,0,0,1-.3523,4.707A4.48192,4.48192,0,0,1,281.64776,353.33509Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"864.323 555.469 852.064 555.469 846.231 508.181 864.326 508.182 864.323 555.469\",\n    fill: \"#9e616a\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1001.45005,733.56042l-39.53076-.00147v-.5a15.38731,15.38731,0,0,1,15.38648-15.38623h.001l24.144.001Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _polygon4 || (_polygon4 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"820.323 555.469 808.064 555.469 802.231 508.181 820.326 508.182 820.323 555.469\",\n    fill: \"#9e616a\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M957.45005,733.56042l-39.53076-.00147v-.5a15.38731,15.38731,0,0,1,15.38648-15.38623h.001l24.144.001Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M811.5379,390.32037a11.39632,11.39632,0,0,0,17.434,1.19462l24.25852,9.4731,9.35227-13.33777-34.44561-12.8967a11.45809,11.45809,0,0,0-16.5992,15.56675Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#9e616a\"\n  })), _polygon5 || (_polygon5 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"820.169 304.925 788.229 315.344 798.899 541.54 823.549 542.15 836.164 382.633 839.029 541.52 869.508 543.2 880.744 304.925 820.169 304.925\",\n    fill: \"#2f2e41\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M932.61811,337.79306l81.97476-17.81106,9.11584,70.585-7.5906,33.72606,3.04043,51.254s-64.81863,32.26134-96.92953,6.00367c0,0,25.809-67.78972,10.84908-99.52369Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#3f3d56\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M946.815,347.777l-14.19685-9.98394s-.83858-1.16142-12.66929,12.66929-35.83071,35.83071-35.83071,35.83071l-40-15-7.2874,26.92494,46.48819,21.664,65.816-43.95511Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#3f3d56\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1019.17338,502.0057a11.39628,11.39628,0,0,0,4.42162-16.90625l13.82655-22.069-11.362-11.67333-19.088,31.44a11.45808,11.45808,0,0,0,12.20183,19.20864Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#9e616a\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1001.80709,333.887l12.78578-13.905s14.24626-4.96114,25.88575,20.675,24.63949,77.6361,24.63949,77.6361l-30.39487,58.54724-23.60513-10.54724,23.60513-48.41339L1009.74409,382.027Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#3f3d56\"\n  })), _circle10 || (_circle10 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 967.36312,\n    cy: 290.84412,\n    r: 26.60917,\n    transform: \"translate(-154.96036 333.4395) rotate(-28.66316)\",\n    fill: \"#9e616a\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M992.38944,269.57145l1.29-2.59637-6.49095-3.225s-7.16055-11.651-20.11784-8.3768-18.787,5.23371-18.787,5.23371l-6.47453,3.25776,3.24953,3.23319-5.82954,1.95959,3.89455,1.935-4.53141,2.60456,2.43935,13.35188s4.0516-10.12689,11.84068-6.25692,22.0365-2.00053,22.0365-2.00053l12.37786,23.95508s2.55356-8.39745,7.1064-6.1583C994.39314,296.48832,1006.02446,277.96461,992.38944,269.57145Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#2f2e41\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M434,733.79306H135a1,1,0,0,1,0-2H434a1,1,0,0,1,0,2Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#cacaca\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1065,733.79306H836a1,1,0,0,1,0-2h229a1,1,0,0,1,0,2Z\",\n    transform: \"translate(-134 -166.20694)\",\n    fill: \"#cacaca\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawGrowthAnalyticsRePyxf);\nexport default __webpack_public_path__ + \"static/media/undraw_growth_analytics_re_pyxf.2bb80329dea0bcf904a3936211b9909b.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _rect, _path12, _path13, _path14, _rect2, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23, _rect24, _rect25, _rect26, _rect27, _rect28, _rect29, _rect30, _rect31, _rect32, _rect33, _rect34, _rect35, _path22, _ellipse, _ellipse2, _ellipse3, _path23, _path24, _path25, _rect36, _rect37, _rect38, _rect39, _rect40, _rect41, _rect42, _rect43, _rect44, _rect45, _rect46, _rect47, _rect48, _rect49, _rect50, _rect51, _rect52, _rect53, _rect54, _rect55, _rect56, _rect57, _rect58, _rect59, _rect60, _rect61, _rect62, _rect63, _rect64, _rect65, _rect66, _rect67, _rect68, _rect69, _rect70, _rect71, _path26, _polygon, _path27, _path28, _path29, _path30, _path31, _path32, _circle2, _polygon2, _path33, _path34, _path35, _path36, _circle3, _path37, _path38, _path39, _path40, _path41, _path42, _path43;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawPairProgrammingReOr4X(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 880.16014,\n    height: 576.27222,\n    viewBox: \"0 0 880.16014 576.27222\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 435.55494,\n    cy: 71.26613,\n    r: 26.70075,\n    fill: \"#fd6584\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M655.233,220.48677a13.2351,13.2351,0,0,0-11.17-9.29,1.08068,1.08068,0,0,0-.18,0,1.41827,1.41827,0,0,0-.22-.05c-8.94-1.16-18.88,1.66-25.57,7.8a23.95824,23.95824,0,0,0-5.83,8.04,12.917,12.917,0,0,0-10.83-5.28,13.1835,13.1835,0,0,0-11.8,9.51,1.52646,1.52646,0,0,0,.69,1.69,6.673,6.673,0,0,0,2.79,1.42c2.21.47,4.44.9,6.67,1.29q6.54,1.14,13.15,1.85,4.365.465,8.75.74c6.04.38,12.11.47,18.16.28,3-.1,5.88-.2,8.62-1.52a12.79759,12.79759,0,0,0,4.95-4.31A14.54772,14.54772,0,0,0,655.233,220.48677Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#e6e6e6\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M600.30305,259.38679a13.65247,13.65247,0,0,0-.56-3.3,13.26025,13.26025,0,0,0-11.18-9.29.9647.9647,0,0,0-.17,0,1.88726,1.88726,0,0,0-.23-.05,33.19377,33.19377,0,0,0-14.69,1.51c-7.26,2.43-13.63,7.32995-16.7,14.33a12.9223,12.9223,0,0,0-10.84-5.28,13.18342,13.18342,0,0,0-11.8,9.51,1.55528,1.55528,0,0,0,.69,1.69,6.73289,6.73289,0,0,0,2.79,1.42c2.22.47,4.44.9,6.68,1.29q6.54,1.14,13.14,1.85a195.164,195.164,0,0,0,26.92,1.01995c2.99-.1,5.88-.2,8.62-1.51995a12.76973,12.76973,0,0,0,4.94-4.31A14.26452,14.26452,0,0,0,600.30305,259.38679Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#e6e6e6\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M948.05243,583.37544a171.85535,171.85535,0,0,1-7.4426,53.77281c-.18624.63255-.40951,1.26511-.63278,1.89789H830.422a98.32226,98.32226,0,0,1,7.40558-22.32779c9.117-19.35079,24.00219-35.91062,38.70137-52.35869,20.24387-22.66281,40.004-45.13937,43.13-74.612a169.25824,169.25824,0,0,1,19.053,39.33415,46.23132,46.23132,0,0,0-15.29449,9.37752c-1.22809,1.15359-2.53068,2.82822-1.89789,4.42835.5953,1.33961,2.23268,1.78638,3.684,2.08392,3.498.66981,6.99606,1.33961,10.49409,1.9724,2.75373.558,5.5447,1.07909,8.33568,1.60013A182.72887,182.72887,0,0,1,948.05243,583.37544Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#f2f2f2\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1040.08007,571.31847c-17.56465,10.6801-28.72854,27.20268-37.84554,45.69742a46.7431,46.7431,0,0,0-21.2487,11.1639c-1.26534,1.15382-2.5677,2.82822-1.8979,4.42835.55829,1.33984,2.23292,1.78638,3.684,2.08392,3.46078.67,6.99606,1.33984,10.45684,1.9724-.33479.78155-.6698,1.60013-1.00459,2.38168H876.11967A164.17446,164.17446,0,0,1,893.57257,619.1c1.37686-1.37709,2.791-2.67945,4.24233-4.01907a173.65293,173.65293,0,0,1,50.23753-31.70553A176.73359,176.73359,0,0,1,1040.08007,571.31847Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#f2f2f2\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M895.47047,639.04614H792.09268a167.93161,167.93161,0,0,1,.149-24.85824c4.13059-51.09359,31.92858-99.768,73.86769-129.24085-5.35868,19.09027-2.605,38.069,2.977,57.12206-.78133.26052-1.56288.48379-2.26994.78133a46.23567,46.23567,0,0,0-15.29448,9.37775c-1.22809,1.15359-2.53046,2.82822-1.8979,4.42835.55806,1.33961,2.23269,1.78615,3.684,2.08392,3.498.6698,6.99606,1.33961,10.45684,1.9724,2.791.558,5.582,1.07909,8.37292,1.63738,1.30237.22326,2.605.48356,3.90732.74407.186.44654.29777.85606.48379,1.26535,6.54952,18.0482,13.69435,36.24541,17.04361,54.74038a127.77792,127.77792,0,0,1,1.71188,14.02914C895.396,635.10158,895.47047,637.07375,895.47047,639.04614Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#f2f2f2\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M332.05243,583.37544a171.85535,171.85535,0,0,1-7.4426,53.77281c-.18624.63255-.40951,1.26511-.63278,1.89789H214.422a98.32226,98.32226,0,0,1,7.40558-22.32779c9.117-19.35079,24.00219-35.91062,38.70137-52.35869,20.24387-22.66281,40.004-45.13937,43.13-74.612a169.25824,169.25824,0,0,1,19.053,39.33415,46.23132,46.23132,0,0,0-15.29449,9.37752c-1.22809,1.15359-2.53068,2.82822-1.89789,4.42835.5953,1.33961,2.23268,1.78638,3.684,2.08392,3.498.66981,6.99606,1.33961,10.49409,1.9724,2.75373.558,5.5447,1.07909,8.33568,1.60013A182.72887,182.72887,0,0,1,332.05243,583.37544Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#f2f2f2\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M424.08007,571.31847c-17.56465,10.6801-28.72854,27.20268-37.84554,45.69742a46.7431,46.7431,0,0,0-21.2487,11.1639c-1.26534,1.15382-2.5677,2.82822-1.8979,4.42835.55829,1.33984,2.23292,1.78638,3.68405,2.08392,3.46078.67,6.99606,1.33984,10.45684,1.9724-.33479.78155-.6698,1.60013-1.00459,2.38168H260.11967A164.17446,164.17446,0,0,1,277.57257,619.1c1.37686-1.37709,2.791-2.67945,4.24233-4.01907a173.65293,173.65293,0,0,1,50.23753-31.70553A176.73359,176.73359,0,0,1,424.08007,571.31847Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#f2f2f2\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.47047,639.04614H176.09268a167.93161,167.93161,0,0,1,.149-24.85824c4.13059-51.09359,31.92858-99.768,73.86769-129.24085-5.35868,19.09027-2.605,38.069,2.977,57.12206-.78133.26052-1.56288.48379-2.26994.78133a46.23567,46.23567,0,0,0-15.29448,9.37775c-1.22809,1.15359-2.53046,2.82822-1.8979,4.42835.55806,1.33961,2.23269,1.78615,3.684,2.08392,3.498.6698,6.99606,1.33961,10.45684,1.9724,2.791.558,5.582,1.07909,8.37292,1.63738,1.30237.22326,2.605.48356,3.90732.74407.186.44654.29777.85606.48379,1.26535,6.54952,18.0482,13.69435,36.24541,17.04361,54.74038a127.77792,127.77792,0,0,1,1.71188,14.02914C279.396,635.10158,279.47047,637.07375,279.47047,639.04614Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#f2f2f2\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M664.3299,595.64392l92.37,8.2.99.09v-394.14q-.49494-.345-.99-.69a288.32258,288.32258,0,0,0-62.01-32.94l-4.72,65.1-.43,5.96-4.67,64.56-1.44,19.86005-18.93,261.7Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#e6e6e6\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M435.89991,202.45392c-.66.42-1.32.84-1.98,1.28v400.2l1.98-.18,91.37-8.11-.17-2.3-18.93-261.7-1.44-19.86-4.67005-64.56-.43-5.96-4.95-68.27A287.68677,287.68677,0,0,0,435.89991,202.45392Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#e6e6e6\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M433.91993,203.73389c-1.33.86-2.66,1.74-3.97,2.63v403.03c0,10.07,5.97,18.51,13.95,20.66a15.24855,15.24855,0,0,0,4,.53h296.8a15.11793,15.11793,0,0,0,3.99-.53,17.06,17.06,0,0,0,7.78-4.66,22.9187,22.9187,0,0,0,6.18-16v-396.02c-1.64-1.21-3.29-2.41-4.96-3.58q-.49494-.345-.99-.69v400.29a16.10772,16.10772,0,0,1-.46,3.85c-1.41,5.95-6.06,10.31-11.54,10.31h-296.8c-6.62,0-12-6.35-12-14.16v-406.94C435.23987,202.8739,434.5799,203.29388,433.91993,203.73389Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#e6e6e6\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 273.00257,\n    y: 79.40401,\n    width: 326.75223,\n    height: 5.95901,\n    fill: \"#e6e6e6\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M659.59992,165.2539c-1.98-.49-3.96-.95-5.96-1.38v161.81h5.96Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#e6e6e6\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M538.95991,161.86389c-1.99.37-3.98.75-5.96,1.16v162.66h5.96Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#e6e6e6\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M368.85993,620.15387a26.71127,26.71127,0,0,0,1.93,9.98,25.54045,25.54045,0,0,0,1.75,3.56,27.096,27.096,0,0,0,3.02,4.18,26.7604,26.7604,0,0,0,20.12,9.11h391.31a26.82,26.82,0,0,0,0-53.64h-391.31A26.84644,26.84644,0,0,0,368.85993,620.15387Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#e6e6e6\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 432.9225,\n    y: 311.78281,\n    width: 324.76589,\n    height: 19.86336,\n    transform: \"translate(1030.69096 481.5651) rotate(-180)\",\n    fill: \"#e6e6e6\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M581.40109,305.82381h27.8087a0,0,0,0,1,0,0v0A10.92484,10.92484,0,0,1,598.285,316.74865h-5.959a10.92484,10.92484,0,0,1-10.92484-10.92484v0A0,0,0,0,1,581.40109,305.82381Z\",\n    transform: \"translate(1030.69096 460.70857) rotate(-180)\",\n    fill: \"#e6e6e6\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M159.91993,635.47388a289.004,289.004,0,0,0,28.12,28.95h806.58a289.004,289.004,0,0,0,28.12-28.95Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M556.60993,538.66388v102.56h71.85v-102.56a3.448,3.448,0,0,0-2.43-3.3,3.17457,3.17457,0,0,0-1.03-.16H560.0799A3.46327,3.46327,0,0,0,556.60993,538.66388Zm28.04,35.24a7.67034,7.67034,0,0,1,15.34,0v11.9a7.6701,7.6701,0,0,1-15.34,0Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#2f2e41\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M556.39,637.94391v9.89a1.94622,1.94622,0,0,0,1.93,1.94h68.43a1.93971,1.93971,0,0,0,1.93-1.94v-9.89Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M443.5799,384.14392v187.26a9.00714,9.00714,0,0,0,9,9h277.5a9.0071,9.0071,0,0,0,9-9V384.14392a9.01147,9.01147,0,0,0-9-8.99h-277.5A9.01151,9.01151,0,0,0,443.5799,384.14392Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M450.08991,386.47388v182.62a4.81834,4.81834,0,0,0,4.81,4.81h272.87a4.81829,4.81829,0,0,0,4.81-4.81v-182.62a4.82046,4.82046,0,0,0-4.81-4.82h-272.87A4.82051,4.82051,0,0,0,450.08991,386.47388Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#536dfe\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M505.72993,652.10388a2.94839,2.94839,0,0,0,2.32,1.11H670.39a2.98724,2.98724,0,0,0,2.92-3.6l-2.52-11.97a2.99262,2.99262,0,0,0-1.86-2.17,2.89451,2.89451,0,0,0-1.06-.2h-157.31a2.89422,2.89422,0,0,0-1.06.2,2.99237,2.99237,0,0,0-1.86,2.17l-2.52,11.97A2.98494,2.98494,0,0,0,505.72993,652.10388Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#2f2e41\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 661.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1168.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 651.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1148.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 641.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1128.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 631.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1108.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 621.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1088.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 611.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1068.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 601.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1048.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 591.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1028.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 581.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1008.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 571.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(988.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 561.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(968.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 551.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(948.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 541.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(928.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 531.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(908.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 521.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(888.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 511.71693,\n    y: 637.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(868.51393 1115.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 661.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1168.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 651.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1148.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 641.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1128.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 631.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1108.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 621.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1088.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect24 || (_rect24 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 611.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1068.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect25 || (_rect25 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 601.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1048.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect26 || (_rect26 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 591.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1028.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect27 || (_rect27 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 581.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1008.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect28 || (_rect28 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 571.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(988.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect29 || (_rect29 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 561.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(968.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect30 || (_rect30 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 551.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(948.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect31 || (_rect31 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 541.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(928.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect32 || (_rect32 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 531.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(908.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect33 || (_rect33 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 521.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(888.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect34 || (_rect34 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 511.83509,\n    y: 642.42968,\n    width: 5,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(868.75026 1125.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect35 || (_rect35 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 578.83509,\n    y: 648.42968,\n    width: 40,\n    height: 3,\n    rx: 0.48819,\n    transform: \"translate(1037.75026 1137.99546) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M468.6118,406.8106H723.93516a1.01559,1.01559,0,0,0,0-2.03069H468.6118a1.01559,1.01559,0,0,0,0,2.03069Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 546.63504,\n    cy: 231.64882,\n    rx: 5.95043,\n    ry: 6.08304,\n    fill: \"#3f3d56\"\n  })), _ellipse2 || (_ellipse2 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 526.07902,\n    cy: 231.64882,\n    rx: 5.95043,\n    ry: 6.08304,\n    fill: \"#3f3d56\"\n  })), _ellipse3 || (_ellipse3 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 505.523,\n    cy: 231.64882,\n    rx: 5.95043,\n    ry: 6.08304,\n    fill: \"#3f3d56\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M479.89991,390.04388a1.0948,1.0948,0,0,0,1.09,1.1h14.6a1.1053,1.1053,0,0,0,0-2.21h-14.6A1.1034,1.1034,0,0,0,479.89991,390.04388Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M479.89991,394.19391a1.09475,1.09475,0,0,0,1.09,1.1h14.6a1.10527,1.10527,0,0,0,0-2.21h-14.6A1.1034,1.1034,0,0,0,479.89991,394.19391Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M479.89991,398.33392a1.1034,1.1034,0,0,0,1.09,1.11h14.6a1.1053,1.1053,0,0,0,0-2.21h-14.6A1.09476,1.09476,0,0,0,479.89991,398.33392Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _rect36 || (_rect36 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 316.36599,\n    y: 268.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect37 || (_rect37 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 376.36599,\n    y: 268.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect38 || (_rect38 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 393.36599,\n    y: 268.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect39 || (_rect39 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 332.68618,\n    y: 268.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect40 || (_rect40 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 412.68618,\n    y: 268.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect41 || (_rect41 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 332.36599,\n    y: 281.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect42 || (_rect42 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 392.36599,\n    y: 281.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect43 || (_rect43 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 409.36599,\n    y: 281.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect44 || (_rect44 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 348.68618,\n    y: 281.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect45 || (_rect45 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 428.68618,\n    y: 281.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect46 || (_rect46 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 348.36599,\n    y: 294.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect47 || (_rect47 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 408.36599,\n    y: 294.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect48 || (_rect48 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 425.36599,\n    y: 294.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect49 || (_rect49 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 364.68618,\n    y: 294.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect50 || (_rect50 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 444.68618,\n    y: 294.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect51 || (_rect51 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 364.36599,\n    y: 307.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect52 || (_rect52 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 424.36599,\n    y: 307.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect53 || (_rect53 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 441.36599,\n    y: 307.5433,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect54 || (_rect54 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 380.68618,\n    y: 307.06314,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect55 || (_rect55 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 376.36599,\n    y: 359.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect56 || (_rect56 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 393.36599,\n    y: 359.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect57 || (_rect57 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 412.68618,\n    y: 359.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect58 || (_rect58 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 316.36599,\n    y: 359.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect59 || (_rect59 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 332.68618,\n    y: 359.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect60 || (_rect60 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 332.36599,\n    y: 346.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect61 || (_rect61 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 392.36599,\n    y: 346.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect62 || (_rect62 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 409.36599,\n    y: 346.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect63 || (_rect63 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 348.68618,\n    y: 346.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect64 || (_rect64 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 348.36599,\n    y: 333.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect65 || (_rect65 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 408.36599,\n    y: 333.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect66 || (_rect66 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 425.36599,\n    y: 333.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect67 || (_rect67 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 364.68618,\n    y: 333.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect68 || (_rect68 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 364.36599,\n    y: 320.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect69 || (_rect69 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 424.36599,\n    y: 320.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect70 || (_rect70 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 441.36599,\n    y: 320.23682,\n    width: 11.00609,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _rect71 || (_rect71 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 380.68618,\n    y: 320.71699,\n    width: 38.3657,\n    height: 5.75992,\n    rx: 2.87996,\n    fill: \"#e6e6e6\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M509.83187,707.8161c-.22.11005-.44.22-.66.32q-2.085,1.035-4.2,2.04-6.33,3.015-12.82,5.73a285.48273,285.48273,0,0,1-34.97,12.03c-2-12.47-3.94-41.88-5.8-63.51-.35-4.07-.7-7.86005-1.05-11.21a97.15525,97.15525,0,0,0-1.89-13.08,4.35915,4.35915,0,0,0-.39-.97c.19,1.73.39,6.89.58,14.05.1,3.35.19,7.14.29,11.21.47,20.82.96,49.15,1.45,65.28-1.39.34-2.79.68-4.19,1-.88.21-1.77.41-2.66.6-1.08.24-2.16.48-3.24.69995q-1.695.36009-3.39.69a290.07234,290.07234,0,0,1-56.06,5.44c-1.25,0-2.49-.01-3.74-.02-.38,0-.76-.01-1.15-.02-1.1-.02-2.24-.04-3.4-.07a288.5911,288.5911,0,0,1-65.84-9.49l.87-64.11.15-11.21.06-4.25a15.1823,15.1823,0,0,0-.88,4.25c-.35,2.73-.71,6.6-1.07,11.21-1.37,17.76-2.78,46.41-4.24,62.71-17.29-4.92-29.93-9.41-45.73-17.31-.61005-.3-1.23-.61-1.84-.92.11-.77.23-1.54.34-2.33,1.79-12.44-.32-28.63,1.66-42.15,1.51-10.43,3.07-20.45,4.64-28.95,1.9-10.23,3.82995-18.27,5.74-22.18,2.2-4.51,4.4-8.95,6.53-13.2q1.38006-2.745,2.71-5.39c.48-.95.96-1.89,1.43-2.81,2.14-4.19,4.16-8.06,6.01-11.49,1.3-2.41,2.5-4.59,3.6-6.5,1.29-2.25,2.43-4.11,3.37-5.52a55.3059,55.3059,0,0,1,29.28-22.21l.3-.08.29.12.32995.15,19.06-6.97,8.51-20.49,43.71-2.69,7.06,5.37,3.61,2.75,3.85,2.93,7.08,5.39,2.01.62,2.99.92,20.45,6.28.21-.09.3.08a55.16791,55.16791,0,0,1,27.36,19.5c.68.88,1.31,1.79,1.92,2.71,1.66,2.46,3.9,6.35,6.54,11.23,1.09,2.01,2.24,4.19,3.45,6.5.73,1.39,7.03,21.05,13.16,41.13,5.73,18.8,11.31,37.97,12.04,42.89.13.91.27,1.82995.4,2.74.83,5.69,1.65,11.42,2.44,17.01,1.17,8.29,2.31,16.29,3.4,23.44C509.81185,707.68616,509.82186,707.74616,509.83187,707.8161Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"303.59 473.566 295.093 440.774 287.59 469.07 303.59 473.566\",\n    opacity: 0.2\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.74923,635.04964a6.41621,6.41621,0,0,0,6.18311,4.331l26.49182-.68178a6.32847,6.32847,0,0,0,5.98085-4.657l3.74889-40.08722a9.794,9.794,0,0,0,4.23792.87079,9.66133,9.66133,0,0,0-.48489-19.31658,8.18393,8.18393,0,0,0-1.73618.18056,6.54767,6.54767,0,0,0-4.87405-2.103l-40.75052,1.05229a5.85418,5.85418,0,0,0-1.00519.1248,6.36455,6.36455,0,0,0-4.87318,8.26464Zm43.17346-43.81684,2.66763-9.55274a6.50638,6.50638,0,0,0,.02037-3.37458c.12944-.00034.24363-.06168.37306-.062a6.91049,6.91049,0,0,1,.32358,13.81714A6.50523,6.50523,0,0,1,218.92269,591.2328Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#2f2e41\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.541,574.76349c.86818,4.96412,10.62909,8.45388,22.36585,7.8473,10.79272-.49726,19.61746-4.287,21.23421-8.77851a6.025,6.025,0,0,0-1.84435-.24588l-40.75052,1.05229A5.85418,5.85418,0,0,0,173.541,574.76349Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M198.05786,613.02141a.49675.49675,0,0,0,.15092-.06642l5.75315-3.76566a.49923.49923,0,0,0,.00032-.83621l-5.97979-3.91667a.49972.49972,0,1,0-.54792.83585l5.34091,3.49818-5.114,3.34794a.49991.49991,0,0,0,.39637.903Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#536dfe\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M188.97111,613.44045a.5.5,0,0,0,.12607-.91842l-5.30305-3.04034,5.1256-3.80723a.49963.49963,0,1,0-.596-.80208l-5.73863,4.26265a.49951.49951,0,0,0,.04918.83476l5.96526,3.41968A.49965.49965,0,0,0,188.97111,613.44045Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#536dfe\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.48564,616.32142a.482.482,0,0,0,.137-.05785.49976.49976,0,0,0,.16751-.68714l-8.15548-13.40836a.50026.50026,0,0,0-.85441.52058L196.9357,616.097A.50033.50033,0,0,0,197.48564,616.32142Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#536dfe\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M945.069,708.90387c-.61.31-1.23.62-1.84.92-15.8,7.9-28.44,12.39-45.73,17.31-1.46-16.3-2.87-44.95-4.24-62.71-.36-4.61-.72-8.48-1.07-11.21a15.18215,15.18215,0,0,0-.88-4.25l.06,4.25.15,11.21.87,64.11a288.5879,288.5879,0,0,1-65.84,9.49c-1.16.03-2.3.05-3.4.07-.39.01-.77.02-1.15.02-1.25.01-2.49.02-3.74.02a289.2711,289.2711,0,0,1-69.54-8.43c.49-16.13.98-44.46,1.44995-65.28.1-4.07.19-7.86.29-11.21.19-7.16.39-12.32.58-14.05a4.36163,4.36163,0,0,0-.39.97,97.15388,97.15388,0,0,0-1.89,13.08c-.35,3.35-.7,7.14-1.05,11.21-1.86,21.63-3.8,51.04-5.8,63.51a285.47262,285.47262,0,0,1-34.97-12.03q-9-3.75-17.68-8.09c1.1-7.2,2.25-15.27,3.43-23.64.92-6.49,1.87-13.16,2.84-19.75,1.5-10.18,52.46-120.11,64.47-123.96l.3-.08.21.09,20.45-6.28,2.99-.92,2.01-.62,7.08-5.39,3.85-2.93,3.61-2.75,7.06-5.37,43.71,2.69,8.51,20.49,19.06,6.97.33-.15.29-.12.3.08a55.306,55.306,0,0,1,29.28,22.21c.94,1.41,2.08,3.27,3.37,5.52,1.1,1.91,2.3,4.09,3.6,6.5,1.85,3.43005,3.87,7.30005,6.01,11.49.47.92.95,1.86,1.43,2.81q1.335,2.63993,2.71,5.38995c2.13,4.25,4.33,8.69,6.53,13.2,1.91,3.91,3.84,11.95,5.74,22.18,1.57,8.5,3.13,18.52,4.64,28.95,1.98,13.52-.13,29.71,1.66,42.15C944.83905,707.36389,944.95905,708.13391,945.069,708.90387Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 656.95415,\n    cy: 296.15827,\n    r: 50.83645,\n    fill: \"#ffb6b6\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"575.659 473.566 584.156 440.774 591.659 469.07 575.659 473.566\",\n    opacity: 0.2\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M961.689,614.0639c-3.04,41.88.11,60.32-16.67,94.85a286.15952,286.15952,0,0,1-47.52,18.22q-2.55.72-5.11,1.4a288.5879,288.5879,0,0,1-65.84,9.49c-1.16.03-2.3.05-3.4.07-.39.01-.77.02-1.15.02-1.25.01-2.49.02-3.74.02a289.2711,289.2711,0,0,1-69.54-8.43q-3.42-.84-6.81-1.77a285.47262,285.47262,0,0,1-34.97-12.03q-9-3.75-17.68-8.09c-1.31-.66-2.62-1.32-3.91-2-6.63-11.66-10.4-25.84-10.48-42.88C679.45905,633.57391,951.549,588.7439,961.689,614.0639Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#2f2e41\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M961.68115,621.23608c.15528-2.59271.32886-5.27093.53132-8.05987-10.14-25.32-282.23,19.51-286.82,48.87.01263,2.69184.12774,5.30414.32129,7.85456C686.82935,640.92248,945.31848,598.31445,961.68115,621.23608Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    opacity: 0.2\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M668.10237,616.03915,690.436,604.87234,671.8246,554.62155l-4.90493-25.342a19.16137,19.16137,0,0,0-31.2822-10.90731h0a19.16136,19.16136,0,0,0-2.4925,26.51833l18.20718,22.75891Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#ffb6b6\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M690.436,595.56664l-29.77821,14.889,22.59854,70.80908A30.97684,30.97684,0,0,0,705.592,701.98112h0a30.97683,30.97683,0,0,0,33.73744-14.197l59.92487-102.71393a31.62026,31.62026,0,0,0-10.19564-42.982h0a31.62045,31.62045,0,0,0-45.29614,12.76511l-36.576,77.93632Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 209.50762,\n    cy: 287.55168,\n    r: 55.93503,\n    fill: \"#a0616a\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M314.16422,410.86989C318.71215,404.74006,325.249,400.382,330.249,394.615c2.74344-3.16426,5.02141-6.74951,8.10566-9.58224,5.73039-5.26318,13.74425-7.4198,21.52026-7.688a54.30458,54.30458,0,0,1,44.33113,21.03844q6.09681-3.57471,12.19363-7.14926,2.40868,6.33969,4.81737,12.67953a7.39073,7.39073,0,0,1,11.26364,9.248c.96724-2.989,5.39916-3.62313,7.84251-1.64855,2.44335,1.97474,3.09761,5.488,2.69911,8.60414a17.31976,17.31976,0,0,1-13.06483,14.326c-5.30406,1.18167-11.47743-.05973-15.72259,3.33247-3.40352,2.71954-4.431,7.67163-7.9043,10.30126-4.28006,3.24035-10.3294,1.74177-15.64965,2.45781-9.30808,1.253-16.67837,10.773-15.55974,20.09824-.84211-2.94246-1.72714-5.97011-3.63853-8.36033-1.91154-2.39021-5.13083-4.00669-8.06243-3.12795-4.84583,1.45252-5.63858,8.05772-4.46415,12.97821,3.11475,13.05,14.91931,34.144,14.91931,34.144-15.32771,6.0462-33.58876.329-45.41517-11.144-11.82626-11.473-17.98564-27.71878-20.66871-43.97586C305.51637,437.361,305.83879,422.09124,314.16422,410.86989Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#2f2e41\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M880.58187,486.04614c10.6416-24.3981,4.61285-46.8497-8.36-58.76l0-.01c-5.1-11.43-11.88-20.25-19.64-22.32-3.75-2.41-7.39-5.24-11.43-6.68a14.88737,14.88737,0,0,0-11.68.53l-2.06-.55c-1.75-4.47-3.8-4.56-6.08-1.62-8.78-4.09-16.69-5.92-23.73-5.92-22.96,0-36.54,19.44-40.14,42.94l19.19,5.11,6.67-10.63-3.08,11.59,10.59,2.81c16.12,20.99-3.17,69.41-27.62,96.35q8.73-2.415,17.39-4.08l20.98-30.76-13,28c6.75-.99,15.36-.04,24.77,1.87,3.17-4.14,4.84-9.66,3.2-14.58a55.74547,55.74547,0,0,1,5.48,16.53c19.86,4.85,46.95,7.34,61.55,9.18C895.37777,541.1955,895.40987,497.70636,880.58187,486.04614Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#2f2e41\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M887.50523,403.05443c7.7946,17.45324-7.93319,24.96034-22.34136,24.74834-13.019-.19157-24.08365-9.33791-24.74832-22.34137a23.57558,23.57558,0,0,1,22.34136-24.74832C875.76037,380.04841,882.19575,391.16571,887.50523,403.05443Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#2f2e41\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M525.90192,687.1729l-12.83956-21.41575L555.75351,633.369l17.75-18.74071a19.16138,19.16138,0,0,1,32.24488,7.60351h0a19.16136,19.16136,0,0,1-12.14227,23.70654l-27.5826,9.41646Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#a0616a\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M535.18185,686.46613l-19.99,16.66-5.39,4.49-.62994.52q-2.085,1.035-4.2,2.04-6.33,3.015-12.82,5.73a285.48273,285.48273,0,0,1-34.97,12.03q-3.38993.93-6.81,1.77c-1.39.34-2.79.68-4.19,1-.88.21-1.77.41-2.66.6-1.08.24-2.16.48-3.24.69995q-1.695.36009-3.39.69a30.96327,30.96327,0,0,1-9.62-22.44c0-.26995,0-.55.01-.82995l3.21-82.33,1.42005-36.49a31.618,31.618,0,0,1,31.69-30.78c.96,0,1.91.05,2.85.14.68.88,1.31,1.79,1.92,2.71,1.66,2.46,3.9,6.35,6.54,11.23,1.09,2.01,2.24,4.19,3.45,6.5.73,1.39,7.03,21.05,13.16,41.13l-2.7,20.97-4.88,37.80005,20.02-13.14,14.1-9.26,1.67,2.79,4.35,7.26,8.4,14Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#3f3d56\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M524.22188,662.93616c-.01,1.7-.05,3.37-.14,5.02a97.24839,97.24839,0,0,1-1.58,13.56,79.14449,79.14449,0,0,1-7.31,21.61c-.46.91-.95,1.81006-1.45,2.69-1.29.68006-2.6,1.34-3.91,2-.22.11005-.44.22-.66.32q-8.355,4.155-17.02,7.77a285.48273,285.48273,0,0,1-34.97,12.03q-3.38993.93-6.81,1.77-6.67493,1.65-13.48,2.99a290.07234,290.07234,0,0,1-56.06,5.44c-1.25,0-2.49-.01-3.74-.02-.38,0-.76-.01-1.15-.02-1.1-.02-2.24-.04-3.4-.07a288.5911,288.5911,0,0,1-65.84-9.49q-2.565-.675-5.11-1.4a286.16459,286.16459,0,0,1-47.52-18.22c-16.78-34.53-13.63-52.97-16.67-94.85,6.24-15.59,111.81-4.58,193.09,13.03,22.06,4.78,42.32,10.05,58.33,15.41,16.54,5.53,28.53,11.15,33.23,16.43006A7.9373,7.9373,0,0,1,524.22188,662.93616Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    fill: \"#2f2e41\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.40778,621.23608c-.15527-2.59271-.32885-5.27093-.53131-8.05987,10.14-25.32,282.23,19.51,286.82,48.87-.01264,2.69184-.12775,5.30414-.32129,7.85456C512.25959,640.92248,253.77045,598.31445,237.40778,621.23608Z\",\n    transform: \"translate(-159.91993 -161.86389)\",\n    opacity: 0.2\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawPairProgrammingReOr4X);\nexport default __webpack_public_path__ + \"static/media/undraw_pair_programming_re_or4x.089e4f2b0757f654f8a6a342732085ae.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _rect, _path2, _path3, _path4, _rect2, _path5, _path6, _path7, _path8, _circle, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _circle2, _path21, _path22, _path23, _rect3, _rect4, _path24, _path25, _path26, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23, _rect24, _rect25, _rect26, _rect27, _rect28, _rect29, _rect30, _rect31, _rect32, _rect33, _rect34, _rect35, _rect36, _rect37;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawInterviewReE5Jn(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 833.22212,\n    height: 633.11008,\n    viewBox: \"0 0 833.22212 633.11008\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M954.31369,708.90718c-27.3,20.79-60.56,41.85-93.26,51.78a132.151,132.151,0,0,1-29,5.61,87.68166,87.68166,0,0,1-27.45-2.12994c-23.6-5.87006-45.49-16.15-66.67-28.16-6.92-3.93-13.76-8.04-20.56-12.24-11.1-6.86-22.09-13.96-33.11-20.89-1.65-1.05-3.29-2.08-4.94-3.1h-.01q-3.99-2.505-8-4.94c-.47-.29-.94-.57-1.42-.86q-7.57508-4.59-15.41-8.97c-.64-.35-1.28-.71-1.92-1.06a337.75842,337.75842,0,0,0-31.12-15.23c-6.98005-2.94-14.05-5.59-21.19-7.85h-.01c-2.73-.86-5.47-1.67-8.22-2.41a172.03228,172.03228,0,0,0-25.13995-4.92,137.46074,137.46074,0,0,0-35.21.28c-.79.11-1.57.22-2.36.35-31.6,5.06-60.44,22.12-92.18,26.14-1.03.13-2.05.25-3.08.34-.44.04-.88.09-1.32.12a126.18456,126.18456,0,0,1-27.68-.68c-25.63-3.38-50.59-13.87-73.06-27.09-52.53-30.91-95.13-78.42-121.03-133.44a297.4536,297.4536,0,0,1-11.82995-28.93,278.46974,278.46974,0,0,1-15.67005-84.85c-2.43-100.36,54.6-201.05,144.14-246.44,89.55-45.39,207.35-30.38,279.57,39.35,43.81,42.3,69.16,99.62,102.13,150.83,32.97,51.2,79.83,100.11,140.27,107.57,30.79,3.8,63.01-3.55,92.52,6.01,16.34,5.3,30.28,15.44,41.51,28.36a127.18525,127.18525,0,0,1,18.78,29,141.92676,141.92676,0,0,1,8.73,23.54c.41,1.49.79,2.98,1.16,4.47C1026.97366,608.50715,1003.48367,671.44715,954.31369,708.90718Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#f2f2f2\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 159.66474,\n    y: 466.77221,\n    width: 145,\n    height: 51,\n    rx: 25.49997,\n    fill: \"#3f3d56\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M434.05368,638.21717v42.43a125.55316,125.55316,0,0,1-29-.56v-41.87Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#3f3d56\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M531.67368,653.81715c-.79.11-1.57.22-2.36.35-31.6,5.06-60.44,22.12-92.18,26.14-1.03.13-2.05.25-3.08.34-.44.04-.88.09-1.32.12-7.75-7.59-15.5-15.67-22.78-24.04-3.95-4.53-7.77-9.15-11.36005-13.83-9.32-12.08-17.22-24.5-22.44-36.7.53-5.85-3.11-19.38-4.85-29.74l-.01-.01c-.74-4.35-1.14-8.13-.77-10.56,2.12006-14.02,13.57-12.41,17.09-26.15a77.49954,77.49954,0,0,1,10.11-7.11c.59-.35,1.19-.7,1.81-1.05l38.2-26.4,14.6,14.32,22.22,21.8,24.08,23.61005-20.44,20.65s17.07995,19.69,37.05,45.94C520.60367,638.54713,526.17368,646.07716,531.67368,653.81715Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#2f2e41\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M861.05368,638.21717v122.47a132.151,132.151,0,0,1-29,5.61v-128.08Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#3f3d56\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 595.66474,\n    y: 494.77221,\n    width: 145,\n    height: 51,\n    rx: 25.49997,\n    fill: \"#3f3d56\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M669.89371,693.97718q-7.57508-4.59-15.41-8.97c-.64-.35-1.28-.71-1.92-1.06l3.44-1.47,9.28-3.99.09-.04.1.34Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#ffb6b6\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M684.2637,702.87715c-1.65-1.05-3.29-2.08-4.94-3.1h-.01q-3.99-2.505-8-4.94c-.47-.29-.94-.57-1.42-.86q-7.57508-4.59-15.41-8.97c-.64-.35-1.28-.71-1.92-1.06a337.75842,337.75842,0,0,0-31.12-15.23c-6.98005-2.94-14.05-5.59-21.19-7.85h-.01l-5.61-9.39-25.25-42.29-5.55-9.29s-18.93005,5.6-45.72,10.97c-9.75,1.96-20.53,3.88-31.84,5.5-12.09,1.72-24.77,3.09-37.37,3.75-6.01.32-12,.48-17.9.43-15.25-.1-29.9-1.53-42.73-4.93-4.28-4.02-17.18-9.49-26.42-14.5h-.01c-3.88-2.1-7.1-4.11-8.79-5.9-9.74-10.3-1.42-18.33-10.08-29.57a78.01753,78.01753,0,0,1,.63-12.34c.09-.68.18-1.37.29-2.07l2.73-46.36,20.28-2.68,30.86-4.08,33.43-4.42,3.68,28.82s26.03-1.32,59.01-.88c52.97.72,123.85,6,133.45,28.66.9,2.13,1.8,4.28,2.7,6.43q3.21,7.70994,6.36005,15.5c7.61,18.8,14.87,37.78,21.5,55.72,4.12,11.16,8,21.92,11.56994,31.99,2.87006,8.1,5.53,15.76,7.96,22.81,2.22,6.44,4.23,12.37,6.02,17.69C683.72366,701.26716,683.99368,702.08717,684.2637,702.87715Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#2f2e41\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M497.708,421.98972l-64.05525-54.40133,41.675-42.17691,29.075,47.62305,107.774,21.36695a20.90017,20.90017,0,1,1-2.96957,30.67819Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#a0616a\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M377.04235,296.09186c-7.40272,24.08263,63.09957,81.52,63.09957,81.52.78339-5.78164,40.75579,44.07344,43.4754,39.55842,7.72908-12.83228,16.2337-44.55195,25.15668-48.606,5.10285-2.31848-24.17069-34.54346-24.17069-34.54346s-14.93261-19.756-34.6486-44.79433a53.41188,53.41188,0,0,0-47.084-20.96122S384.44509,272.00927,377.04235,296.09186Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#3f3d56\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 224.82523,\n    cy: 66.00911,\n    r: 43.32403,\n    fill: \"#a0616a\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.87619,271.41226c9.33357,5.54889,14.91693,15.74413,18.122,26.1187a247.51563,247.51563,0,0,1,10.63632,59.137l3.3853,60.08943,41.92648,127.94729c-36.3363,30.746-172.919,6.98768-172.919,6.98768s-4.19264-1.3974,0-5.59019,8.27421-.47818,4.08162-4.67087-1.3024.47819.0952-3.7145,0-1.3974-1.39755-2.79509,10.81911-13.97556,10.81911-13.97556L333.44532,447.5033,319.46986,299.36313c16.77065-20.96323,50.49849-33.3209,50.49849-33.3209l8.71485-15.68672,43.57423,3.48593Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#3f3d56\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M443.928,176.43671a20.07763,20.07763,0,0,1,7.13274,10.01951,141.01837,141.01837,0,0,0,.09279-19.65944c-.51064-4.60083-3.74974-5.63572-7.50039-6.83487-3.38718-1.0834-7.21783-2.30721-8.24844-6.77356-13.61863-13.24844-37.32575-12.58037-53.55037-7.95911-8.9276,2.543-14.0646,5.81022-14.52418,7.7242l-.09529.394-.36256.18128c-6.88167,3.44083-8.22124,14.30631-8.13272,22.8152.16765,16.03141,5.70292,34.239,8.8212,35.7181.1651.07829.20679.04764.27828-.0119h0c4.6953-3.75234,10.4238.28515,12.94119,2.48a45.05892,45.05892,0,0,1,40.34614-38.21931,70.7027,70.7027,0,0,0,9.72421-1.63058,20.47249,20.47249,0,0,1,4.96762-.6519A14.13716,14.13716,0,0,1,443.928,176.43671Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#2f2e41\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M389.33783,487.26235,376.085,480.475a3.63228,3.63228,0,0,1,3.27636-6.39728l13.25279,6.78739a3.63228,3.63228,0,0,1-3.27636,6.39728Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#536dfe\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M344.735,469.078l-21.80115-81.16214,58.25865-11.0284-3.13289,55.7091,76.54694,78.81836A20.90017,20.90017,0,1,1,434.732,534.97276Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#a0616a\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M316.97223,296.91613c-19.77507,15.61152,5.60629,102.93512,5.60629,102.93512,3.9297-4.31264,8.49619,59.425,13.29948,57.25472,13.65136-6.16814,38.67257-27.43807,48.3187-25.70436,5.51648.99153-.26308-42.15927-.26308-42.15927s-1.063-24.74173-3.06092-56.54811a53.412,53.412,0,0,0-26.83569-44.0014S336.74735,281.3047,316.97223,296.91613Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#3f3d56\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1002.3837,520.45716l-791.42-.9a297.4536,297.4536,0,0,1-11.82995-28.93l784.47.83A127.18525,127.18525,0,0,1,1002.3837,520.45716Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#3f3d56\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M750.31369,730.27717q-6.135,2.97-12.38,5.73c-6.92-3.93-13.76-8.04-20.56-12.24l25.22-11.08Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#ffb6b6\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M934.1937,592.47718q-6.15006,8.25-12.69,16.17-6.03,7.305-12.38,14.33c-1.75,1.94-3.52,3.87-5.33,5.78q-4.995,5.355-10.21,10.53c-6.26,1.97-18.94,5.44-32.53,8.68-9.89,2.35-20.26,4.58-29,6a104.48641,104.48641,0,0,1-14.81,1.58c-5.9.05-11.89-.11-17.9-.43-6.78-.36-13.57-.92-20.28-1.64-17.45-1.83-34.35-4.68-48.93-7.61-5.34-1.06-10.36005-2.14-14.98-3.19-8.75-1.97-16.06995-3.81-21.37-5.21-5.97-1.56-9.37-2.57-9.37-2.57l-14.95,25.04-7.75994,12.99-5.7,9.55-1.52,2.53c-.64-.35-1.28-.71-1.92-1.06a337.75842,337.75842,0,0,0-31.12-15.23c-6.98005-2.94-14.05-5.59-21.19-7.85h-.01c-2.73-.86-5.47-1.67-8.22-2.41q1.29008-3.465,2.61005-6.98,2.45992-6.555,5.02-13.23c3.69-9.63995,7.51-19.42,11.44-29.15,3.22-7.99,6.5-15.95,9.82-23.8,1.53-3.62,4.64-6.8,8.99-9.59a52.32312,52.32312,0,0,1,6.49005-3.48c12.44995-5.67,30.79-9.36,51-11.73,1.67-.19,3.35-.38,5.04-.56,16.73-1.76,34.48-2.67,51.08-3.09,8.31-.21,16.33-.29,23.79-.3q3.615,0,7.03.02h.01c6.15.03,11.81.12,16.79.22.97.02,1.91.05,2.83.07h.01c.62.01,1.23005.03,1.83.04,10.89.28,17.57.62,17.57.62l2.59-20.32.53-4.1.5-3.9v-.01l.06-.49.41-.01,7.2-.14,60.52-1.18,33.06-.65-5.24,22.46-8.65,37.06C905.23367,592.09718,934.49368,587.50715,934.1937,592.47718Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#2f2e41\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M757.77365,726.57716c-2.47,1.26-4.96,2.5-7.46,3.7q-6.135,2.97-12.38,5.73c-6.92-3.93-13.76-8.04-20.56-12.24-11.1-6.86-22.09-13.96-33.11-20.89-1.65-1.05-3.29-2.08-4.94-3.1h-.01c-4.54-6.74-9.17-13.76-13.84-20.99-.07-.1-.13-.2-.19-.30005q-1.79993-2.75994-3.58-5.56c-7.47-11.7-14.98005-23.9-22.27-36.36l18.46-8.62,34.31994-16.02,5.92-2.75994,17.02,33.50994,15.18005,29.89,3.37994,6.65Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#2f2e41\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M762.94619,565.69478l87.50055-84.38371,24.25231-68.66967L838.92615,397.086c-18.37452,17.6014-38.23657,72.42429-38.23657,72.42429L740.4768,546.11471c-.4692.1607-.93718.33133-1.39933.53544a17.23112,17.23112,0,1,0,23.86872,19.04463Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#ffb8b8\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M828.86025,404.75323l45.37541,14.40513.171-.02847c16.88869-2.829,30.9027-30.41247,39.68439-53.05389a31.59624,31.59624,0,0,0-16.08739-40.02451h0a31.66589,31.66589,0,0,0-33.1649,4.18441l-23.30057,19.03929Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#536dfe\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M934.01154,593.48992l.26505-.35223c14.15727-18.77628-5.2058-65.27339-8.13309-72.01689l13.16362-3.89925-2.29443-25.06377-1.10513-11.1761L946.1425,471.262l.03447-.24807,7.03885-50.09245,9.20992-33.1538A73.28485,73.28485,0,0,0,943.465,316.23291L924.63751,297.54l-22.5563-35.30637-37.8193-.97639-13.59975,24.15893a55.14122,55.14122,0,0,0-44.103,55.17854l1.28036,64.31568L794.26928,484.5975l-.3807,14.47486-13.31921,14.05527,2.46244,14.20951-9.963,3.9686-4.87538,20.19138c-1.862,2.32956-14.15633,17.87008-14.26818,22.20243-.01679.65043.44707,1.29151,1.45938,2.01562,7.958,5.69367,52.43741,18.031,72.456,10.61389,21.32343-7.894,104.89466,6.93176,105.7366,7.08256Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#536dfe\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 696.47956,\n    cy: 66.8854,\n    r: 50.1036,\n    fill: \"#ffb8b8\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M873.75623,251.10436a136.26665,136.26665,0,0,0,23.18064-1.62c7.59922-1.54533,24.59947-14.00321,29.33857-21.4998h0c3.52093-5.56989,5.77245-14.26768,7.04151-20.583a60.91432,60.91432,0,0,0-10.65371-48.35812,19.24494,19.24494,0,0,0-7.77317-6.63435c-.27844-.10888-.565-.20537-.85454-.28786a23.74464,23.74464,0,0,1-11.81175-7.30889,19.58589,19.58589,0,0,0-1.96357-2.02086,29.2483,29.2483,0,0,0-12.20276-6.12728c-7.25394-1.94141-17.752-.01431-31.20184,5.73333-6.75724,2.88773-14.14724,1.84266-19.83226.60946a1.86014,1.86014,0,0,0-1.75136.6,13.13152,13.13152,0,0,1-8.92485,3.55766c-2.032.08923-4.16392,2.90278-6.74081,6.57174-.5847.83285-1.267,1.80487-1.75914,2.39607l-.06607-1.13583-1.14927,1.26711a15.93481,15.93481,0,0,0,7.19417,25.96108,31.07641,31.07641,0,0,0,6.2501.996c1.27917.11508,2.60233.23413,3.87032.45413a24.02454,24.02454,0,0,1,17.8528,15.59016,6.28282,6.28282,0,0,0,9.483,3.05031,10.3807,10.3807,0,0,1,9.459-1.72243,6.89123,6.89123,0,0,1,3.04595,3.455,8.98031,8.98031,0,0,0,3.40768,3.97567c5.14968,2.65506,5.50461,14.41709,3.6551,24.22217-1.78279,9.45123-5.307,16.28835-8.57,16.62634-2.512.25986-2.79926.43831-2.98114.88257l-.16246.3977.28218.372A10.2608,10.2608,0,0,0,873.75623,251.10436Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#2f2e41\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M841.30225,389.605l-19.31863-38.5155c-28.04093,1.91544-83.6946,34.33734-83.6946,34.33734L632.99029,407.75242a19.02347,19.02347,0,1,0,5.18645,32.5081L772.123,430.65926Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#ffb8b8\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M833.5105,395.92917l50.45383-37.49451,8.88732-32.02709a34.982,34.982,0,0,0-10.52129-35.39425h0a34.89929,34.89929,0,0,0-47.624,1.53654c-18.98656,18.95124-40.64185,45.39-35.99009,63.72324l.04709.18584Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#536dfe\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 452.66474,\n    y: 362.77221,\n    width: 135,\n    height: 18,\n    fill: \"#fff\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 107.66474,\n    y: 362.77221,\n    width: 135,\n    height: 18,\n    fill: \"#fff\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M441.81766,409.65536v85.704a4.12233,4.12233,0,0,0,4.11906,4.11906H572.94121a4.12231,4.12231,0,0,0,4.11906-4.11906v-85.704a4.12431,4.12431,0,0,0-4.11906-4.11451H445.93672A4.12433,4.12433,0,0,0,441.81766,409.65536Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#3f3d56\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M444.79712,410.72172v83.58039a2.20522,2.20522,0,0,0,2.20141,2.20141H571.884a2.2052,2.2052,0,0,0,2.20141-2.20141V410.72172a2.2062,2.2062,0,0,0-2.20141-2.206H446.99853A2.20622,2.20622,0,0,0,444.79712,410.72172Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#536dfe\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M439.16149,512.0739a2.46987,2.46987,0,0,0,1.94346.92983h135.992A2.5024,2.5024,0,0,0,579.543,509.988l-2.111-10.02722a2.50692,2.50692,0,0,0-1.55811-1.81784,2.42467,2.42467,0,0,0-.888-.1675H443.20758a2.42455,2.42455,0,0,0-.888.1675,2.5067,2.5067,0,0,0-1.5581,1.81784l-2.111,10.02722A2.50046,2.50046,0,0,0,439.16149,512.0739Z\",\n    transform: \"translate(-183.38894 -133.44496)\",\n    fill: \"#2f2e41\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 569.83152,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(960.46258 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 561.45453,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(943.70862 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 553.07755,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(926.95465 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 544.70057,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(910.20069 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 536.32359,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(893.44673 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 527.94661,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(876.69276 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 519.56962,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(859.9388 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 511.19264,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(843.18483 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 502.81566,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(826.43087 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 494.43868,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(809.67691 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 486.0617,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(792.92294 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 477.68471,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(776.16898 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 469.30773,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(759.41502 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 460.93075,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(742.66105 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 452.55377,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(725.90709 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 444.17679,\n    y: 499.78134,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(709.15312 868.63082) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 569.9305,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(960.66055 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 561.55352,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(943.90659 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 553.17654,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(927.15262 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect24 || (_rect24 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 544.79956,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(910.39866 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect25 || (_rect25 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 536.42257,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(893.6447 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect26 || (_rect26 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 528.04559,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(876.89073 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect27 || (_rect27 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 519.66861,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(860.13677 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect28 || (_rect28 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 511.29163,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(843.38281 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect29 || (_rect29 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 502.91465,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(826.62884 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect30 || (_rect30 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 494.53766,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(809.87488 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect31 || (_rect31 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 486.16068,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(793.12091 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect32 || (_rect32 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 477.7837,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(776.36695 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect33 || (_rect33 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 469.40672,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(759.61299 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect34 || (_rect34 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 461.02974,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(742.85902 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect35 || (_rect35 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 452.65276,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(726.10506 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect36 || (_rect36 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 444.27577,\n    y: 503.96984,\n    width: 4.18849,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(709.3511 877.00781) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })), _rect37 || (_rect37 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 500.40155,\n    y: 508.99602,\n    width: 33.50793,\n    height: 2.51309,\n    rx: 0.48819,\n    transform: \"translate(850.92209 887.06018) rotate(-180)\",\n    fill: \"#3f3d56\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawInterviewReE5Jn);\nexport default __webpack_public_path__ + \"static/media/undraw_interview_re_e5jn.63af91b708e8d9163695c634de380702.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawAudioConversationRe3T38(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 922,\n    height: 383.58267,\n    viewBox: \"0 0 922 383.58267\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25768,124.17456c9.82-2.21144,20.46933,5.60902,21.86155,15.47538,1.67992,11.90518-9.33752,21.04997-18.25841,26.68709-9.81564,6.20252-20.46564,11.74437-25.87071,22.58807-4.67116,9.37134-5.34811,20.78176-1.50711,30.55881,7.43453,18.9242,28.68787,25.43715,42.79221,38.08015,3.44869,3.09137,6.5084,6.6117,8.72433,10.69684,2.90836,5.36164,4.09888,11.48003,3.82471,17.54972-.55815,12.3565-7.24631,23.38479-16.32625,31.45277-9.35053,8.30842-22.11576,12.49116-30.02448,22.44933-3.39121,4.27-5.95997,9.66944-5.57717,15.24857,.33127,4.82814,2.72647,9.58599,6.67698,12.44663,1.92429,1.39341,4.14281,2.17371,6.50715,2.34651,1.44461,.10558,1.43791-2.14491,0-2.25-5.15228-.37656-8.98394-4.75068-10.36761-9.47621-1.61122-5.50263,.35869-11.16379,3.57415-15.6857,3.66269-5.15084,8.93101-8.79791,14.23101-12.08711,5.37177-3.33374,10.83351-6.48509,15.65885-10.60648,9.0395-7.72076,15.93959-18.21925,17.55739-30.15375,.82057-6.05334,.3189-12.34781-1.841-18.08721-1.7345-4.609-4.47697-8.73505-7.83375-12.32109-6.58059-7.03004-15.073-11.90445-23.05305-17.13855-7.98531-5.23756-16.1549-11.13469-20.79309-19.72624-5.08289-9.41529-5.238-21.31916-.82445-31.02,2.36291-5.19359,5.97563-9.47738,10.42203-13.0215,4.84267-3.85998,10.32951-6.81025,15.53991-10.12544,9.07388-5.77339,18.82171-14.21342,19.14937-25.85042,.27761-9.85932-8.08432-18.77352-17.58965-20.38407-2.42385-.41069-4.85183-.35602-7.25107,.18428-1.41201,.31798-.81443,2.48774,.59814,2.16963h0Z\",\n    fill: \"#3f3d56\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M594.74232,125.17456c-9.82-2.21144-20.46933,5.60902-21.86155,15.47538-1.67992,11.90518,9.33752,21.04997,18.25841,26.68709,9.81564,6.20252,20.46564,11.74437,25.87071,22.58807,4.67116,9.37134,5.34811,20.78176,1.50711,30.55881-7.43453,18.9242-28.68787,25.43715-42.79221,38.08015-3.44869,3.09137-6.5084,6.6117-8.72433,10.69684-2.90836,5.36164-4.09888,11.48003-3.82471,17.54972,.55815,12.3565,7.24631,23.38479,16.32625,31.45277,9.35053,8.30842,22.11576,12.49116,30.02448,22.44933,3.39121,4.27,5.95997,9.66944,5.57717,15.24857-.33127,4.82814-2.72647,9.58599-6.67698,12.44663-1.92429,1.39341-4.14281,2.17371-6.50715,2.34651-1.44461,.10558-1.43791-2.14491,0-2.25,5.15228-.37656,8.98394-4.75068,10.36761-9.47621,1.61122-5.50263-.35869-11.16379-3.57415-15.6857-3.66269-5.15084-8.93101-8.79791-14.23101-12.08711-5.37177-3.33374-10.83351-6.48509-15.65885-10.60648-9.0395-7.72076-15.93959-18.21925-17.55739-30.15375-.82057-6.05334-.3189-12.34781,1.841-18.08721,1.7345-4.609,4.47697-8.73505,7.83375-12.32109,6.58059-7.03004,15.073-11.90445,23.05305-17.13855,7.98531-5.23756,16.1549-11.13469,20.79309-19.72624,5.08289-9.41529,5.238-21.31916,.82445-31.02-2.36291-5.19359-5.97563-9.47738-10.42203-13.0215-4.84267-3.85998-10.32951-6.81025-15.53991-10.12544-9.07388-5.77339-18.82171-14.21342-19.14937-25.85042-.27761-9.85932,8.08432-18.77352,17.58965-20.38407,2.42385-.41069,4.85183-.35602,7.25107,.18428,1.41201,.31798,.81443,2.48774-.59814,2.16963h0Z\",\n    fill: \"#3f3d56\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"753 60.58267 748.36098 92.36142 723 92.88977 723 65.16368 753 60.58267\",\n    fill: \"#ffb6b6\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"753 60.58267 748.76672 93.36142 723.40574 93.88977 723.40574 66.16368 753 60.58267\",\n    opacity: 0.1\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 108.50995,\n    y: 237.3378,\n    width: 8.98201,\n    height: 145.29726,\n    transform: \"translate(226.00192 619.97285) rotate(-180)\",\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 144.438,\n    y: 237.3378,\n    width: 8.98201,\n    height: 145.29726,\n    transform: \"translate(297.85802 619.97285) rotate(-180)\",\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 200.44349,\n    y: 237.3378,\n    width: 8.98201,\n    height: 145.29726,\n    transform: \"translate(409.869 619.97285) rotate(-180)\",\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 217.35081,\n    y: 237.3378,\n    width: 8.98201,\n    height: 145.29726,\n    transform: \"translate(443.68364 619.97285) rotate(-180)\",\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.75477,235.22438l-12.2228-63.47969c-2.24709-11.67035,5.86749-22.80025,17.66585-24.23035l65.35634-7.92198s8.98201,73.44116,8.98201,69.74269,89.0276,9.24619,55.74131,27.73857c-33.28628,18.49238-123.10641,13.20884-135.52272-1.84924Z\",\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"249.34537 343.56014 260.41353 354.62831 275.69814 362.53414 274.11697 376.23758 245.12892 373.07525 241.43953 365.69647 242.49364 359.37181 240.38542 349.35775 249.34537 343.56014\",\n    fill: \"#a0616a\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.00875,370.96703l.90514-11.62795,31.24524,14.79028s2.41947,6.85172-5.11493,7.90583c-7.5344,1.05411-57.60467,1.05411-57.60467-1.58117,0-2.63528-1.36951-16.12707-1.36951-16.12707l30.35756,8.74829,1.58117-2.10822Z\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"209.53625 312.81751 201.53057 326.26807 197.6272 343.0277 183.95585 344.86576 179.89081 315.99046 186.1354 310.59946 192.52504 310.0655 201.71287 305.55888 209.53625 312.81751\",\n    fill: \"#a0616a\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M188.54591,341.5259l11.49334-1.98281-6.65046,33.92328s-6.0461,4.03047-8.92107-3.01318c-2.87497-7.04364-15.1908-55.57561-12.63648-56.22381s15.29474-5.29423,15.29474-5.29423l-1.01244,31.57672,2.43237,1.01403Z\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"174.81834 61.13184 173.23328 93.36142 198.59426 93.88977 198.59426 66.16368 174.81834 61.13184\",\n    fill: \"#a0616a\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"174.81834 61.13184 173.23328 93.36142 198.59426 93.88977 198.59426 66.16368 174.81834 61.13184\",\n    opacity: 0.1\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M132.02169,194.27697s-11.62378,30.11616-3.17012,42.26829c8.45366,12.15213,48.08019,19.02073,48.08019,19.02073l16.37896,15.32226,43.325,83.47988,25.36098-5.81189-35.92805-85.5933s-21.13415-34.34299-29.05945-39.09817c-7.92531-4.75518-22.68275-22.60896-22.68275-22.60896l-42.30475-6.97884Z\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.87779,196.91874l16.27551,11.52601s57.69401,15.42002,39.20163,51.34807c-18.49238,35.92805-45.96677,61.81738-45.96677,61.81738l-24.30427-13.7372,39.09817-54.94878-68.68598-41.73994,44.38171-14.26555Z\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"uuid-32c083fa-d2b9-413a-9921-933cc214e28e-1285\",\n    d: \"M351.81173,153.10675c7.64814,1.53882,13.05361,6.73239,12.07349,11.59956-.98011,4.86717-7.97387,7.56406-15.62453,6.02367-3.06457-.5734-5.94726-1.87237-8.40688-3.78824l-32.32316-6.92927,2.77276-12.77513,32.28762,6.1102c3.01024-.81551,6.17204-.89808,9.22071-.24078Z\",\n    fill: \"#a0616a\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"uuid-3df95b4d-9d99-4974-98f2-e22ed77160d1-1286\",\n    d: \"M229.75627,235.66065c5.58996,5.44191,7.31321,12.7373,3.84936,16.29422-3.46385,3.55692-10.80203,2.02821-16.39326-3.41638-2.2633-2.14426-3.98018-4.79935-5.00699-7.74316l-23.39372-23.3567,9.25994-9.22744,23.80822,22.64936c2.97117,.94804,5.67202,2.594,7.87645,4.8001Z\",\n    fill: \"#a0616a\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.27337,82.00181h-32.87858l-24.18362,16.37896,2.11341,64.45915s4.419,16.1868-10.56707,31.17287c-8.98201,8.98201-5.81189,14.26555-5.81189,14.26555l53.36372,4.22683,31.9654-9.24619-11.62378-29.05945,2.11341-8.98201s21.6625-15.32226,17.96403-31.17287c-3.69848-15.85061-8.45366-48.60854-8.45366-48.60854l-14.00137-3.4343Z\",\n    fill: \"#ccc\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174.28999,176.8413l-23.77592-78.19635s-12.15213-4.22683-17.43567,6.34024c-5.28354,10.56707,1.36249,50.98613,1.36249,50.98613l27.69697,45.70259,44.38171,33.81464,11.09543-12.15213-43.325-46.49512Z\",\n    fill: \"#ccc\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.62675,136.51172l-63.77757-51.11149s-12.41614,3.37342-10.80987,15.07806,29.91464,41.31048,29.91464,41.31048l48.66556,22.07968,55.72307,2.84701,2.29537-16.29461-62.01119-13.90914Z\",\n    fill: \"#ccc\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 189.87642,\n    cy: 53.99907,\n    r: 22.19085,\n    fill: \"#a0616a\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 804.50804,\n    y: 237.3378,\n    width: 8.98201,\n    height: 145.29726,\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 768.57998,\n    y: 237.3378,\n    width: 8.98201,\n    height: 145.29726,\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 712.57449,\n    y: 237.3378,\n    width: 8.98201,\n    height: 145.29726,\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 695.66718,\n    y: 237.3378,\n    width: 8.98201,\n    height: 145.29726,\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M818.24523,235.22438l12.2228-63.47969c2.24709-11.67035-5.86749-22.80025-17.66585-24.23035l-65.35634-7.92198s-8.98201,73.44116-8.98201,69.74269-89.0276,9.24619-55.74131,27.73857c33.28628,18.49238,123.10641,13.20884,135.52272-1.84924Z\",\n    fill: \"#f2f2f2\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"672.65463 343.56014 661.58647 354.62831 646.30186 362.53414 647.88303 376.23758 676.87108 373.07525 680.56047 365.69647 679.50636 359.37181 681.61458 349.35775 672.65463 343.56014\",\n    fill: \"#ffb6b6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M649.99125,370.96703l-.90514-11.62795-31.24524,14.79028s-2.41947,6.85172,5.11493,7.90583,57.60467,1.05411,57.60467-1.58117,1.36951-16.12707,1.36951-16.12707l-30.35756,8.74829-1.58117-2.10822Z\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"646.46997 269.55914 639.95683 283.79246 628.3891 296.53251 634.65015 308.82412 660.71525 295.75058 661.5996 287.54839 658.40591 281.98846 656.8893 271.8679 646.46997 269.55914\",\n    fill: \"#ffb6b6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M634.78786,303.14923l-4.90363-10.5822-24.12526,24.75862s.12202,7.26533,7.55099,5.62559c7.42897-1.63974,54.3555-19.10206,53.43643-21.57188-.91907-2.46982-4.34089-15.59213-4.34089-15.59213l-25.4005,18.7864-2.21715-1.42441Z\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M789.97831,194.27697s11.62378,30.11616,3.17012,42.26829c-8.45366,12.15213-48.08019,19.02073-48.08019,19.02073l-16.37896,15.32226-43.325,83.47988-25.36098-5.81189,35.92805-85.5933s21.13415-34.34299,29.05945-39.09817c7.92531-4.75518,22.68275-22.60896,22.68275-22.60896l42.30475-6.97884Z\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M745.02967,208.31757l-18.73546-6.83548s-45.48807-38.69381-64.52958-3.05375c-19.04151,35.64006-24.71792,72.96134-24.71792,72.96134l25.11936,12.18302,22.97284-63.40571,73.38947,32.77152-13.4987-44.62093Z\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"uuid-f8e61c27-c57f-4b74-9b81-e5dadccc9125-1287\",\n    d: \"M639.40505,228.28888c-5.02211,5.96997-6.0126,13.40039-2.21275,16.59587,3.79985,3.19548,10.95002,.94583,15.97312-5.02693,2.03925-2.35835,3.48407-5.17077,4.21356-8.20197l20.95944-25.56372-10.13024-8.26258-21.44211,24.90102c-2.86237,1.23832-5.38648,3.14427-7.36101,5.55832Z\",\n    fill: \"#ffb6b6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"uuid-b8d4031a-9298-4827-ae0e-c4fc86cbbe53-1288\",\n    d: \"M692.24373,235.66065c-5.58996,5.44191-7.31321,12.7373-3.84936,16.29422,3.46385,3.55692,10.80203,2.02821,16.39326-3.41638,2.2633-2.14426,3.98018-4.79935,5.00699-7.74316l23.39372-23.3567-9.25994-9.22744-23.80822,22.64936c-2.97117,.94804-5.67202,2.594-7.87645,4.8001Z\",\n    fill: \"#ffb6b6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M724.72663,82.00181h32.87858l24.18362,16.37896-2.11341,64.45915s-4.419,16.1868,10.56707,31.17287c8.98201,8.98201,5.81189,14.26555,5.81189,14.26555l-53.36372,4.22683-31.9654-9.24619,11.62378-29.05945-2.11341-8.98201s-21.6625-15.32226-17.96403-31.17287,8.45366-48.60854,8.45366-48.60854l14.00137-3.4343Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M747.71001,176.8413l23.77592-78.19635s12.15213-4.22683,17.43567,6.34024c5.28354,10.56707-1.36249,50.98613-1.36249,50.98613l-27.69697,45.70259-44.38171,33.81464-11.09543-12.15213,43.325-46.49512Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M689.42418,167.20694l18.02234-79.71924s11.81232-5.09996,17.85084,5.0546,2.35151,50.9501,2.35151,50.9501l-24.29764,47.59699-41.80326,36.95474-11.95035-11.31247,39.82657-49.52471Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 349,\n    y: 125.58267,\n    width: 7,\n    height: 256,\n    fill: \"#3f3d56\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"350.69775 161.1647 287.19775 109.18033 288.80225 107.98501 352.30225 159.96939 350.69775 161.1647\",\n    fill: \"#3f3d56\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M354,130.08267h-4c-6.89258,0-12.5-5.60742-12.5-12.5v-34c0-6.89258,5.60742-12.5,12.5-12.5h4c6.89258,0,12.5,5.60742,12.5,12.5v34c0,6.89258-5.60742,12.5-12.5,12.5Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 286.5,\n    cy: 97.08267,\n    rx: 18.5,\n    ry: 30.5,\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M353,114.58267c-10.72217,0-31-1.46289-31-7,0-2.71875,4.81152-4.73535,14.30078-5.99414l.2627,1.98242c-10.25537,1.36133-12.56348,3.40332-12.56348,4.01172,0,1.69727,10.23584,5,29,5s29-3.30273,29-5c0-.85449-3.53125-3.0166-14.4458-4.24121l.22266-1.98828c7.40088,.83105,16.22314,2.58594,16.22314,6.22949,0,5.53711-20.27783,7-31,7Z\",\n    fill: \"#3f3d56\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 594,\n    y: 125.58267,\n    width: 7,\n    height: 256,\n    transform: \"translate(1195 507.16534) rotate(-180)\",\n    fill: \"#3f3d56\"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"599.30225 161.1647 662.80225 109.18033 661.19775 107.98501 597.69775 159.96939 599.30225 161.1647\",\n    fill: \"#3f3d56\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M583.5,117.58267v-34c0-6.89258,5.60742-12.5,12.5-12.5h4c6.89258,0,12.5,5.60742,12.5,12.5v34c0,6.89258-5.60742,12.5-12.5,12.5h-4c-6.89258,0-12.5-5.60742-12.5-12.5Z\",\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 663.5,\n    cy: 97.08267,\n    rx: 18.5,\n    ry: 30.5,\n    fill: \"#536dfe\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M597,114.58267c-10.72217,0-31-1.46289-31-7,0-3.64355,8.82227-5.39844,16.22314-6.22949l.22266,1.98828c-10.91455,1.22461-14.4458,3.38672-14.4458,4.24121,0,1.69727,10.23584,5,29,5s29-3.30273,29-5c0-.6084-2.30811-2.65039-12.56348-4.01172l.2627-1.98242c9.48926,1.25879,14.30078,3.27539,14.30078,5.99414,0,5.53711-20.27783,7-31,7Z\",\n    fill: \"#3f3d56\"\n  })), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 736.02409,\n    cy: 49.76989,\n    r: 23.62477,\n    fill: \"#ffb6b6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M737.90956,18.00804c-.68361,.39905-1.59928-.2047-1.81848-.9653-.2192-.7606,.03614-1.56815,.28935-2.31812l1.27468-3.77542c.90403-2.67762,1.86351-5.4488,3.82142-7.48681,2.95515-3.07605,7.65156-3.85859,11.87928-3.29167,5.42922,.72803,10.78599,3.6679,13.31042,8.52935,2.52443,4.86145,1.44968,11.64492-3.11179,14.67797,6.5011,7.45135,8.76729,15.75561,8.40947,25.63786-.35782,9.88225-11.12705,18.97714-18.15003,25.9388-1.56836-.95072-2.99417-5.40618-2.13172-7.02476,.86245-1.61858-.37325-3.49374,.69487-4.98462,1.06812-1.49088,1.96174,.88304,.88189-.59937-.6814-.93543,1.97808-3.08745,.96523-3.64732-4.89902-2.70801-6.5284-8.81443-9.6053-13.49058-3.71131-5.64031-10.06323-9.45998-16.78523-10.09367-3.70292-.34908-7.61402,.28317-10.64916,2.43291-3.03514,2.14974-5.00007,5.99129-4.29626,9.64343-1.82278-1.85078-2.73012-4.56311-2.38789-7.13814s1.92651-4.95622,4.16942-6.26666c-1.36379-4.50996-.19547-9.69774,2.96994-13.1877,3.16541-3.48996,16.00604-2.89556,20.6273-1.97706\",\n    fill: \"#2f2e41\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M738.62722,35.25129c6.12072,.66073,10.54005,5.96263,14.2718,10.85893,2.1509,2.82212,4.40394,5.93867,4.34994,9.48659-.05459,3.58705-2.4529,6.66372-3.59909,10.06316-1.87348,5.55648-.04755,12.1674,4.41217,15.97466-4.40671,.83623-9.17048-2.46792-9.93122-6.88829-.8856-5.14585,3.0152-10.11238,2.55323-15.3134-.40701-4.58216-4.01795-8.10867-7.08778-11.53475-3.06983-3.42607-5.95294-7.97238-4.54066-12.35043\",\n    fill: \"#2f2e41\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M178.50153,16.84809s-8.89548-6.42451-16.80257,7.4129c-5.40118,9.45206-8.26587,27.43594-9.53914,37.88549-.58601,4.80929,1.90736,9.46695,6.2285,11.65795l28.02029,14.20747s-10.37806-39.53545,3.95355-45.46577c14.3316-5.93032,13.83741-4.44774,13.83741-4.44774,0,0,11.36644,24.70966-3.45935,35.58191l12.35483,7.90709s8.40128-46.45416-6.9187-55.34963c-15.31999-8.89548-11.86064-15.31999-27.67482-9.38967Z\",\n    fill: \"#2f2e41\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M921,383.58267H0v-2H921c.55228,0,1,.44771,1,1h0c0,.55229-.44771,1-1,1Z\",\n    fill: \"#3f3d56\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawAudioConversationRe3T38);\nexport default __webpack_public_path__ + \"static/media/undraw_audio_conversation_re_3t38.40e002a54462a29ed2bf99c25dfd06d9.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable import/extensions */\n\n// Services Img Imports\nimport AiConsulting from '../assets/images/Services/undraw_firmware_re_fgdy.svg';\nimport AiSoftwareDevelopment from '../assets/images/Services/undraw_speech_to_text_re_8mtf_AI.svg';\nimport DataAnalysis from '../assets/images/Services/undraw_projections_re_ulc6.svg';\n\n// Portfolio Img Imports\nimport GigachadSalesman from '../assets/images/Portfolio/gigachadSalesman.png';\n// import Stream from '../assets/images/Portfolio/Stream.png';\n// import Freelance from '../assets/images/Portfolio/Freelance.png';\n// import Aura from '../assets/images/Portfolio/Aura.png';\n// import Surtido from '../assets/images/Portfolio/Surtido.png';\n// import ManagementApp from '../assets/images/Portfolio/ManagementApp.png';\n\n// Advantages\nimport DataDriven from '../assets/images/Advantages/undraw_growth_analytics_re_pyxf.svg';\nimport CollaborativeApproach from '../assets/images/Advantages/undraw_pair_programming_re_or4x.svg';\nimport ClientFocused from '../assets/images/Advantages/undraw_interview_re_e5jn.svg';\nimport CustomerFavorite from '../assets/images/Advantages/undraw_audio_conversation_re_3t38.svg';\n\n// Testimonials\nimport Sasha from '../assets/images/Testimonials/Sasha.jpg';\nimport Reiner from '../assets/images/Testimonials/Reiner.jpg';\n// import Kruger from '../assets/images/Testimonials/Kruger.jpg';\n\n// TeamMembers\nimport SaifMahmud from '../assets/images/TeamMembers/saif_mahmud.jpg';\n// import HRD from '../assets/images/TeamMembers/HRD.jpg';\n// import Finance from '../assets/images/TeamMembers/Finance.jpg';\n// import ProjectManager from '../assets/images/TeamMembers/Project-manager.jpg';\n// import Frontend1 from '../assets/images/TeamMembers/Frontend1.jpg';\n// import Frontend2 from '../assets/images/TeamMembers/Frontend2.jpg';\n// import Backend1 from '../assets/images/TeamMembers/Backend1.jpg';\n// import Backend2 from '../assets/images/TeamMembers/Backend2.jpg';\n// import Mobile1 from '../assets/images/TeamMembers/Mobile1.jpg';\n// import Mobile2 from '../assets/images/TeamMembers/Mobile2.jpg';\n// import UIUX1 from '../assets/images/TeamMembers/UIUX1.jpg';\n// import UIUX2 from '../assets/images/TeamMembers/UIUX2.jpg';\n\n// Define the types as constants\n\nexport const ItemTypes = {\n  AI_SOFTWARE: 'AI Software',\n  DATA_ANALYSIS: 'Data Analysis',\n  UI_UX: 'UI/UX',\n  // Add more types as needed\n};\n\nexport const Services = [\n  {\n    title: 'AI Consulting',\n    svgUrl: AiConsulting,\n    animation: 'left',\n  },\n  {\n    title: 'AI Software Development',\n    svgUrl: AiSoftwareDevelopment,\n    animation: 'up',\n  },\n  {\n    title: 'Data Analysis',\n    svgUrl: DataAnalysis,\n    animation: 'right',\n  },\n];\n\nexport const Portfolios = [\n  {\n    id: 'asd1293uasdads1',\n    title: 'Gigachad Salesman',\n    imageUrl: GigachadSalesman,\n    type: ItemTypes.AI_SOFTWARE,\n    responsibility: [\n      'AI Development',\n      'UI/UX Design',\n    ],\n    credit: '',\n    description: `\n        <h2>📌 Elevate Your Sales Team's Performance</h2>\n        <br>\n        <p>\n            Through an advanced sales coaching tool that uses sophisticated AI to enhance sales team performance. Dive deep with audio analysis and robust performance tracking, providing actionable insights and metrics.\n        </p>\n        <br>\n        <h3>🌟 Key Features:</h3>\n        <br>\n        <strong>- 🔁 Audio Analysis:</strong> Gain deep insights from each sales calls.<br>\n        <strong>- 📊 Performance Tracking:</strong> Monitor and evaluate key performance indicators.<br>\n        <strong>- 📈 Advanced Reporting:</strong> Generate comprehensive reports on weekly sales activities.<br>\n        <br>\n        <p>🚀 Empower your team with data-driven tools for a competitive edge!</p>\n        `,\n    buyNowLink: 'https://gigachad-salesman.streamlit.app/',\n  },\n  // {\n  //   id: 'asd1293uhjkhkjh2',\n  //   title: 'Stream+',\n  //   imageUrl: Stream,\n  //   type: 'Mobile Apps',\n  //   responsibility: [\n  //     'Mobile Development',\n  //     'UI/UX Design',\n  //   ],\n  //   credit: 'https://dribbble.com/shots/15276430-Stream',\n  //   description: 'Stream+ is a mobile application that helps you to find \n  // a job easily. This app is designed to be user-friendly and easy to use.',\n  //   buyNowLink: '/pricing',\n  // },\n  // {\n  //   id: 'asd1293uvbvcbbd3',\n  //   title: 'Freelance',\n  //   imageUrl: Freelance,\n  //   type: 'Mobile Apps',\n  //   responsibility: [\n  //     'Mobile Development',\n  //     'UI/UX Design',\n  //   ],\n  //   credit: 'https://dribbble.com/shots/15223131-Freelance-Mobile-App-Concept',\n  //   description: 'Freelance is a mobile application that helps you to \n  // find a job easily. This app is designed to be user-friendly and easy to use.',\n  //   buyNowLink: '/pricing',\n  // },\n  // {\n  //   id: 'asd1293ufgdfgs4',\n  //   title: 'Aura',\n  //   imageUrl: Aura,\n  //   type: 'Website',\n  //   responsibility: [\n  //     'Web Development',\n  //     'UI/UX Design',\n  //   ],\n  //   credit: 'https://dribbble.com/shots/15176338-Aura-Website-Main-Page',\n  //   description: 'Aura is a website that helps you to find a job easily. \n  // This app is designed to be user-friendly and easy to use.',\n  //   buyNowLink: '/pricing',\n  // },\n  // {\n  //   id: 'asd1293ulskmnb5',\n  //   title: 'Surtido Rico',\n  //   imageUrl: Surtido,\n  //   type: 'Website',\n  //   responsibility: [\n  //     'Web Development',\n  //     'UI/UX Design',\n  //   ],\n  //   credit: 'https://dribbble.com/shots/15173118-Surtido-Rico',\n  //   description: 'Surtido Rico is a website that helps you to find a \n  // job easily. This app is designed to be user-friendly and easy to use.',\n  //   buyNowLink: '/pricing',\n  // },\n  // {\n  //   id: 'asd1293ulkmnbj6',\n  //   title: 'Courses Management',\n  //   imageUrl: ManagementApp,\n  //   type: 'Website',\n  //   responsibility: [\n  //     'Web Development',\n  //     'UI/UX Design',\n  //   ],\n  //   credit: 'https://dribbble.com/shots/15197890-Courses-Management-and-Promoting-Web-App',\n  //   description: 'Courses Management is a website that helps you to \n  // find a job easily. This app is designed to be user-friendly and easy to use.',\n  //   buyNowLink: '/pricing',\n  // },\n];\nexport const Advantages = [\n  [{\n    title: 'Data-Driven',\n    description: 'We use data and insights to guide our decisions and deliver measurable results.',\n    svgUrl: DataDriven,\n  },\n  {\n    title: 'Client-Focused',\n    description: 'We prioritize client satisfaction, building long-term partnerships based on trust and success.',\n    svgUrl: ClientFocused,\n  }],\n  [{\n    title: 'Collaborative Approach',\n    description: 'We work closely with our clients, ensuring transparency and building solutions together.',\n    svgUrl: CollaborativeApproach,\n  },\n  {\n    title: 'Customer Favorite',\n    description: 'Our clients love us for our commitment to quality, innovation, and delivering on time.',\n    svgUrl: CustomerFavorite,\n  }],\n];\nexport const Testimonials = [\n  {\n    id: 1,\n    name: 'Sasha Rose',\n    company: 'Owner, Surveyor Corps',\n    testimoni: 'Thanks to Arbor AI Studio, we have a new Enterprise Resource Planning system that is more efficient and user-friendly.',\n    imageUrl: Sasha,\n  },\n  // {\n  //   id: 2,\n  //   name: 'Kruger Khan',\n  //   company: 'Director, Shultan Oil',\n  //   testimoni: 'I just wanted to let you know that it’s been great working with arboraistudio.',\n  //   imageUrl: Kruger,\n  // },\n  {\n    id: 3,\n    name: 'Reiner John',\n    company: 'CEO, Marley CO',\n    testimoni: 'Arbor AI Studio has been a great partner for us. They have been able to keep up with our needs.',\n    imageUrl: Reiner,\n  },\n];\nexport const TeamMembers = [\n  {\n    name: 'Saif Mahmud',\n    position: 'AI Developer',\n    imageUrl: SaifMahmud,\n  },\n  // {\n  //   name: 'Pauline Sydney',\n  //   position: 'HRD',\n  //   imageUrl: HRD,\n  // },\n  // {\n  //   name: 'Granger Watterson',\n  //   position: 'Finance',\n  //   imageUrl: Finance,\n  // },\n  // {\n  //   name: 'Tom Jimmy',\n  //   position: 'Project Manager',\n  //   imageUrl: ProjectManager,\n  // },\n  // {\n  //   name: 'Jim Hendrix',\n  //   position: 'Front-end Developer',\n  //   imageUrl: Frontend1,\n  // },\n  // {\n  //   name: 'Calvin Max',\n  //   position: 'Front-end Developer',\n  //   imageUrl: Frontend2,\n  // },\n  // {\n  //   name: 'Hawkins Jim',\n  //   position: 'Back-end Developer',\n  //   imageUrl: Backend1,\n  // },\n  // {\n  //   name: 'Don Bizaro',\n  //   position: 'Back-end Developer',\n  //   imageUrl: Backend2,\n  // },\n  // {\n  //   name: 'Bill Markinson',\n  //   position: 'Mobile Developer',\n  //   imageUrl: Mobile1,\n  // },\n  // {\n  //   name: 'Igor Kavarov',\n  //   position: 'Mobile Developer',\n  //   imageUrl: Mobile2,\n  // },\n  // {\n  //   name: 'Freddie Curl',\n  //   position: 'UI/UX Designer',\n  //   imageUrl: UIUX2,\n  // },\n  // {\n  //   name: 'Monica Lovegood',\n  //   position: 'UI/UX Designer',\n  //   imageUrl: UIUX1,\n  // },\n];\n","import{microTask as i}from'./micro-task.js';function o(){let n=[],r={addEventListener(e,t,s,a){return e.addEventListener(t,s,a),r.add(()=>e.removeEventListener(t,s,a))},requestAnimationFrame(...e){let t=requestAnimationFrame(...e);return r.add(()=>cancelAnimationFrame(t))},nextFrame(...e){return r.requestAnimationFrame(()=>r.requestAnimationFrame(...e))},setTimeout(...e){let t=setTimeout(...e);return r.add(()=>clearTimeout(t))},microTask(...e){let t={current:!0};return i(()=>{t.current&&e[0]()}),r.add(()=>{t.current=!1})},style(e,t,s){let a=e.style.getPropertyValue(t);return Object.assign(e.style,{[t]:s}),this.add(()=>{Object.assign(e.style,{[t]:a})})},group(e){let t=o();return e(t),this.add(()=>t.dispose())},add(e){return n.includes(e)||n.push(e),()=>{let t=n.indexOf(e);if(t>=0)for(let s of n.splice(t,1))s()}},dispose(){for(let e of n.splice(0))e()}};return r}export{o as disposables};\n","function t(e){typeof queueMicrotask==\"function\"?queueMicrotask(e):Promise.resolve().then(e).catch(o=>setTimeout(()=>{throw o}))}export{t as microTask};\n","import{useEffect as s,useState as o}from\"react\";import{disposables as t}from'../utils/disposables.js';function p(){let[e]=o(t);return s(()=>()=>e.dispose(),[e]),e}export{p as useDisposables};\n","var i=Object.defineProperty;var d=(t,e,n)=>e in t?i(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var r=(t,e,n)=>(d(t,typeof e!=\"symbol\"?e+\"\":e,n),n);class o{constructor(){r(this,\"current\",this.detect());r(this,\"handoffState\",\"pending\");r(this,\"currentId\",0)}set(e){this.current!==e&&(this.handoffState=\"pending\",this.currentId=0,this.current=e)}reset(){this.set(this.detect())}nextId(){return++this.currentId}get isServer(){return this.current===\"server\"}get isClient(){return this.current===\"client\"}detect(){return typeof window==\"undefined\"||typeof document==\"undefined\"?\"server\":\"client\"}handoff(){this.handoffState===\"pending\"&&(this.handoffState=\"complete\")}get isHandoffComplete(){return this.handoffState===\"complete\"}}let s=new o;export{s as env};\n","import{useEffect as f,useLayoutEffect as c}from\"react\";import{env as i}from'../utils/env.js';let n=(e,t)=>{i.isServer?f(e,t):c(e,t)};export{n as useIsoMorphicEffect};\n","import{useRef as t}from\"react\";import{useIsoMorphicEffect as o}from'./use-iso-morphic-effect.js';function s(e){let r=t(e);return o(()=>{r.current=e},[e]),r}export{s as useLatestValue};\n","import a from\"react\";import{useLatestValue as n}from'./use-latest-value.js';let o=function(t){let e=n(t);return a.useCallback((...r)=>e.current(...r),[e])};export{o as useEvent};\n","import*as t from\"react\";import{env as f}from'../utils/env.js';function s(){let r=typeof document==\"undefined\";return\"useSyncExternalStore\"in t?(o=>o.useSyncExternalStore)(t)(()=>()=>{},()=>!1,()=>!r):!1}function l(){let r=s(),[e,n]=t.useState(f.isHandoffComplete);return e&&f.isHandoffComplete===!1&&n(!1),t.useEffect(()=>{e!==!0&&n(!0)},[e]),t.useEffect(()=>f.handoff(),[]),r?!1:e}export{l as useServerHandoffComplete};\n","import{useEffect as l,useRef as i}from\"react\";import{useEvent as r}from'./use-event.js';let u=Symbol();function T(t,n=!0){return Object.assign(t,{[u]:n})}function y(...t){let n=i(t);l(()=>{n.current=t},[t]);let c=r(e=>{for(let o of n.current)o!=null&&(typeof o==\"function\"?o(e):o.current=e)});return t.every(e=>e==null||(e==null?void 0:e[u]))?void 0:c}export{T as optionalRef,y as useSyncRefs};\n","var T,b;import{useRef as c,useState as S}from\"react\";import{disposables as m}from'../utils/disposables.js';import{useDisposables as g}from'./use-disposables.js';import{useFlags as y}from'./use-flags.js';import{useIsoMorphicEffect as A}from'./use-iso-morphic-effect.js';typeof process!=\"undefined\"&&typeof globalThis!=\"undefined\"&&typeof Element!=\"undefined\"&&((T=process==null?void 0:process.env)==null?void 0:T[\"NODE_ENV\"])===\"test\"&&typeof((b=Element==null?void 0:Element.prototype)==null?void 0:b.getAnimations)==\"undefined\"&&(Element.prototype.getAnimations=function(){return console.warn([\"Headless UI has polyfilled `Element.prototype.getAnimations` for your tests.\",\"Please install a proper polyfill e.g. `jsdom-testing-mocks`, to silence these warnings.\",\"\",\"Example usage:\",\"```js\",\"import { mockAnimationsApi } from 'jsdom-testing-mocks'\",\"mockAnimationsApi()\",\"```\"].join(`\n`)),[]});var L=(r=>(r[r.None=0]=\"None\",r[r.Closed=1]=\"Closed\",r[r.Enter=2]=\"Enter\",r[r.Leave=4]=\"Leave\",r))(L||{});function R(t){let n={};for(let e in t)t[e]===!0&&(n[`data-${e}`]=\"\");return n}function x(t,n,e,i){let[r,o]=S(e),{hasFlag:s,addFlag:a,removeFlag:l}=y(t&&r?3:0),u=c(!1),f=c(!1),E=g();return A(()=>{var d;if(t){if(e&&o(!0),!n){e&&a(3);return}return(d=i==null?void 0:i.start)==null||d.call(i,e),C(n,{inFlight:u,prepare(){f.current?f.current=!1:f.current=u.current,u.current=!0,!f.current&&(e?(a(3),l(4)):(a(4),l(2)))},run(){f.current?e?(l(3),a(4)):(l(4),a(3)):e?l(1):a(1)},done(){var p;f.current&&typeof n.getAnimations==\"function\"&&n.getAnimations().length>0||(u.current=!1,l(7),e||o(!1),(p=i==null?void 0:i.end)==null||p.call(i,e))}})}},[t,e,n,E]),t?[r,{closed:s(1),enter:s(2),leave:s(4),transition:s(2)||s(4)}]:[e,{closed:void 0,enter:void 0,leave:void 0,transition:void 0}]}function C(t,{prepare:n,run:e,done:i,inFlight:r}){let o=m();return j(t,{prepare:n,inFlight:r}),o.nextFrame(()=>{e(),o.requestAnimationFrame(()=>{o.add(M(t,i))})}),o.dispose}function M(t,n){var o,s;let e=m();if(!t)return e.dispose;let i=!1;e.add(()=>{i=!0});let r=(s=(o=t.getAnimations)==null?void 0:o.call(t).filter(a=>a instanceof CSSTransition))!=null?s:[];return r.length===0?(n(),e.dispose):(Promise.allSettled(r.map(a=>a.finished)).then(()=>{i||n()}),e.dispose)}function j(t,{inFlight:n,prepare:e}){if(n!=null&&n.current){e();return}let i=t.style.transition;t.style.transition=\"none\",e(),t.offsetHeight,t.style.transition=i}export{R as transitionDataAttributes,x as useTransition};\n","import{useCallback as r,useState as b}from\"react\";function c(u=0){let[t,l]=b(u),g=r(e=>l(e),[t]),s=r(e=>l(a=>a|e),[t]),m=r(e=>(t&e)===e,[t]),n=r(e=>l(a=>a&~e),[l]),F=r(e=>l(a=>a^e),[l]);return{flags:t,setFlag:g,addFlag:s,hasFlag:m,removeFlag:n,toggleFlag:F}}export{c as useFlags};\n","import r,{createContext as l,useContext as d}from\"react\";let n=l(null);n.displayName=\"OpenClosedContext\";var i=(e=>(e[e.Open=1]=\"Open\",e[e.Closed=2]=\"Closed\",e[e.Closing=4]=\"Closing\",e[e.Opening=8]=\"Opening\",e))(i||{});function u(){return d(n)}function c({value:o,children:t}){return r.createElement(n.Provider,{value:o},t)}function s({children:o}){return r.createElement(n.Provider,{value:null},o)}export{c as OpenClosedProvider,s as ResetOpenClosedProvider,i as State,u as useOpenClosed};\n","function t(...r){return Array.from(new Set(r.flatMap(n=>typeof n==\"string\"?n.split(\" \"):[]))).filter(Boolean).join(\" \")}export{t as classNames};\n","function u(r,n,...a){if(r in n){let e=n[r];return typeof e==\"function\"?e(...a):e}let t=new Error(`Tried to handle \"${r}\" but there is no handler defined. Only defined handlers are: ${Object.keys(n).map(e=>`\"${e}\"`).join(\", \")}.`);throw Error.captureStackTrace&&Error.captureStackTrace(t,u),t}export{u as match};\n","import E,{Fragment as b,cloneElement as j,createElement as v,forwardRef as S,isValidElement as w,useCallback as x,useRef as k}from\"react\";import{classNames as N}from'./class-names.js';import{match as M}from'./match.js';var O=(a=>(a[a.None=0]=\"None\",a[a.RenderStrategy=1]=\"RenderStrategy\",a[a.Static=2]=\"Static\",a))(O||{}),A=(e=>(e[e.Unmount=0]=\"Unmount\",e[e.Hidden=1]=\"Hidden\",e))(A||{});function L(){let n=U();return x(r=>C({mergeRefs:n,...r}),[n])}function C({ourProps:n,theirProps:r,slot:e,defaultTag:a,features:s,visible:t=!0,name:l,mergeRefs:i}){i=i!=null?i:$;let o=P(r,n);if(t)return F(o,e,a,l,i);let y=s!=null?s:0;if(y&2){let{static:f=!1,...u}=o;if(f)return F(u,e,a,l,i)}if(y&1){let{unmount:f=!0,...u}=o;return M(f?0:1,{[0](){return null},[1](){return F({...u,hidden:!0,style:{display:\"none\"}},e,a,l,i)}})}return F(o,e,a,l,i)}function F(n,r={},e,a,s){let{as:t=e,children:l,refName:i=\"ref\",...o}=h(n,[\"unmount\",\"static\"]),y=n.ref!==void 0?{[i]:n.ref}:{},f=typeof l==\"function\"?l(r):l;\"className\"in o&&o.className&&typeof o.className==\"function\"&&(o.className=o.className(r)),o[\"aria-labelledby\"]&&o[\"aria-labelledby\"]===o.id&&(o[\"aria-labelledby\"]=void 0);let u={};if(r){let d=!1,p=[];for(let[c,T]of Object.entries(r))typeof T==\"boolean\"&&(d=!0),T===!0&&p.push(c.replace(/([A-Z])/g,g=>`-${g.toLowerCase()}`));if(d){u[\"data-headlessui-state\"]=p.join(\" \");for(let c of p)u[`data-${c}`]=\"\"}}if(t===b&&(Object.keys(m(o)).length>0||Object.keys(m(u)).length>0))if(!w(f)||Array.isArray(f)&&f.length>1){if(Object.keys(m(o)).length>0)throw new Error(['Passing props on \"Fragment\"!',\"\",`The current component <${a} /> is rendering a \"Fragment\".`,\"However we need to passthrough the following props:\",Object.keys(m(o)).concat(Object.keys(m(u))).map(d=>`  - ${d}`).join(`\n`),\"\",\"You can apply a few solutions:\",['Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".',\"Render a single element as the child so that we can forward the props onto that element.\"].map(d=>`  - ${d}`).join(`\n`)].join(`\n`))}else{let d=f.props,p=d==null?void 0:d.className,c=typeof p==\"function\"?(...R)=>N(p(...R),o.className):N(p,o.className),T=c?{className:c}:{},g=P(f.props,m(h(o,[\"ref\"])));for(let R in u)R in g&&delete u[R];return j(f,Object.assign({},g,u,y,{ref:s(H(f),y.ref)},T))}return v(t,Object.assign({},h(o,[\"ref\"]),t!==b&&y,t!==b&&u),f)}function U(){let n=k([]),r=x(e=>{for(let a of n.current)a!=null&&(typeof a==\"function\"?a(e):a.current=e)},[]);return(...e)=>{if(!e.every(a=>a==null))return n.current=e,r}}function $(...n){return n.every(r=>r==null)?void 0:r=>{for(let e of n)e!=null&&(typeof e==\"function\"?e(r):e.current=r)}}function P(...n){var a;if(n.length===0)return{};if(n.length===1)return n[0];let r={},e={};for(let s of n)for(let t in s)t.startsWith(\"on\")&&typeof s[t]==\"function\"?((a=e[t])!=null||(e[t]=[]),e[t].push(s[t])):r[t]=s[t];if(r.disabled||r[\"aria-disabled\"])for(let s in e)/^(on(?:Click|Pointer|Mouse|Key)(?:Down|Up|Press)?)$/.test(s)&&(e[s]=[t=>{var l;return(l=t==null?void 0:t.preventDefault)==null?void 0:l.call(t)}]);for(let s in e)Object.assign(r,{[s](t,...l){let i=e[s];for(let o of i){if((t instanceof Event||(t==null?void 0:t.nativeEvent)instanceof Event)&&t.defaultPrevented)return;o(t,...l)}}});return r}function _(...n){var a;if(n.length===0)return{};if(n.length===1)return n[0];let r={},e={};for(let s of n)for(let t in s)t.startsWith(\"on\")&&typeof s[t]==\"function\"?((a=e[t])!=null||(e[t]=[]),e[t].push(s[t])):r[t]=s[t];for(let s in e)Object.assign(r,{[s](...t){let l=e[s];for(let i of l)i==null||i(...t)}});return r}function K(n){var r;return Object.assign(S(n),{displayName:(r=n.displayName)!=null?r:n.name})}function m(n){let r=Object.assign({},n);for(let e in r)r[e]===void 0&&delete r[e];return r}function h(n,r=[]){let e=Object.assign({},n);for(let a of r)a in e&&delete e[a];return e}function H(n){return E.version.split(\".\")[0]>=\"19\"?n.props.ref:n.ref}export{O as RenderFeatures,A as RenderStrategy,m as compact,K as forwardRefWithAs,_ as mergeProps,L as useRender};\n","\"use client\";import m,{Fragment as O,createContext as ne,useContext as q,useEffect as ge,useMemo as ie,useRef as b,useState as V}from\"react\";import{useDisposables as ve}from'../../hooks/use-disposables.js';import{useEvent as E}from'../../hooks/use-event.js';import{useIsMounted as be}from'../../hooks/use-is-mounted.js';import{useIsoMorphicEffect as D}from'../../hooks/use-iso-morphic-effect.js';import{useLatestValue as Ee}from'../../hooks/use-latest-value.js';import{useServerHandoffComplete as re}from'../../hooks/use-server-handoff-complete.js';import{useSyncRefs as oe}from'../../hooks/use-sync-refs.js';import{transitionDataAttributes as Se,useTransition as Re}from'../../hooks/use-transition.js';import{OpenClosedProvider as ye,State as x,useOpenClosed as se}from'../../internal/open-closed.js';import{classNames as Pe}from'../../utils/class-names.js';import{match as le}from'../../utils/match.js';import{RenderFeatures as xe,RenderStrategy as P,compact as Ne,forwardRefWithAs as J,useRender as ae}from'../../utils/render.js';function ue(e){var t;return!!(e.enter||e.enterFrom||e.enterTo||e.leave||e.leaveFrom||e.leaveTo)||((t=e.as)!=null?t:de)!==O||m.Children.count(e.children)===1}let w=ne(null);w.displayName=\"TransitionContext\";var _e=(n=>(n.Visible=\"visible\",n.Hidden=\"hidden\",n))(_e||{});function De(){let e=q(w);if(e===null)throw new Error(\"A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.\");return e}function He(){let e=q(M);if(e===null)throw new Error(\"A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.\");return e}let M=ne(null);M.displayName=\"NestingContext\";function U(e){return\"children\"in e?U(e.children):e.current.filter(({el:t})=>t.current!==null).filter(({state:t})=>t===\"visible\").length>0}function Te(e,t){let n=Ee(e),l=b([]),S=be(),R=ve(),d=E((o,i=P.Hidden)=>{let a=l.current.findIndex(({el:s})=>s===o);a!==-1&&(le(i,{[P.Unmount](){l.current.splice(a,1)},[P.Hidden](){l.current[a].state=\"hidden\"}}),R.microTask(()=>{var s;!U(l)&&S.current&&((s=n.current)==null||s.call(n))}))}),y=E(o=>{let i=l.current.find(({el:a})=>a===o);return i?i.state!==\"visible\"&&(i.state=\"visible\"):l.current.push({el:o,state:\"visible\"}),()=>d(o,P.Unmount)}),p=b([]),c=b(Promise.resolve()),C=b({enter:[],leave:[]}),h=E((o,i,a)=>{p.current.splice(0),t&&(t.chains.current[i]=t.chains.current[i].filter(([s])=>s!==o)),t==null||t.chains.current[i].push([o,new Promise(s=>{p.current.push(s)})]),t==null||t.chains.current[i].push([o,new Promise(s=>{Promise.all(C.current[i].map(([r,f])=>f)).then(()=>s())})]),i===\"enter\"?c.current=c.current.then(()=>t==null?void 0:t.wait.current).then(()=>a(i)):a(i)}),g=E((o,i,a)=>{Promise.all(C.current[i].splice(0).map(([s,r])=>r)).then(()=>{var s;(s=p.current.shift())==null||s()}).then(()=>a(i))});return ie(()=>({children:l,register:y,unregister:d,onStart:h,onStop:g,wait:c,chains:C}),[y,d,l,h,g,C,c])}let de=O,fe=xe.RenderStrategy;function Ae(e,t){var ee,te;let{transition:n=!0,beforeEnter:l,afterEnter:S,beforeLeave:R,afterLeave:d,enter:y,enterFrom:p,enterTo:c,entered:C,leave:h,leaveFrom:g,leaveTo:o,...i}=e,[a,s]=V(null),r=b(null),f=ue(e),j=oe(...f?[r,t,s]:t===null?[]:[t]),H=(ee=i.unmount)==null||ee?P.Unmount:P.Hidden,{show:u,appear:z,initial:K}=De(),[v,G]=V(u?\"visible\":\"hidden\"),Q=He(),{register:A,unregister:I}=Q;D(()=>A(r),[A,r]),D(()=>{if(H===P.Hidden&&r.current){if(u&&v!==\"visible\"){G(\"visible\");return}return le(v,{[\"hidden\"]:()=>I(r),[\"visible\"]:()=>A(r)})}},[v,r,A,I,u,H]);let B=re();D(()=>{if(f&&B&&v===\"visible\"&&r.current===null)throw new Error(\"Did you forget to passthrough the `ref` to the actual DOM node?\")},[r,v,B,f]);let ce=K&&!z,Y=z&&u&&K,W=b(!1),L=Te(()=>{W.current||(G(\"hidden\"),I(r))},Q),Z=E(k=>{W.current=!0;let F=k?\"enter\":\"leave\";L.onStart(r,F,_=>{_===\"enter\"?l==null||l():_===\"leave\"&&(R==null||R())})}),$=E(k=>{let F=k?\"enter\":\"leave\";W.current=!1,L.onStop(r,F,_=>{_===\"enter\"?S==null||S():_===\"leave\"&&(d==null||d())}),F===\"leave\"&&!U(L)&&(G(\"hidden\"),I(r))});ge(()=>{f&&n||(Z(u),$(u))},[u,f,n]);let pe=(()=>!(!n||!f||!B||ce))(),[,T]=Re(pe,a,u,{start:Z,end:$}),Ce=Ne({ref:j,className:((te=Pe(i.className,Y&&y,Y&&p,T.enter&&y,T.enter&&T.closed&&p,T.enter&&!T.closed&&c,T.leave&&h,T.leave&&!T.closed&&g,T.leave&&T.closed&&o,!T.transition&&u&&C))==null?void 0:te.trim())||void 0,...Se(T)}),N=0;v===\"visible\"&&(N|=x.Open),v===\"hidden\"&&(N|=x.Closed),T.enter&&(N|=x.Opening),T.leave&&(N|=x.Closing);let he=ae();return m.createElement(M.Provider,{value:L},m.createElement(ye,{value:N},he({ourProps:Ce,theirProps:i,defaultTag:de,features:fe,visible:v===\"visible\",name:\"Transition.Child\"})))}function Ie(e,t){let{show:n,appear:l=!1,unmount:S=!0,...R}=e,d=b(null),y=ue(e),p=oe(...y?[d,t]:t===null?[]:[t]);re();let c=se();if(n===void 0&&c!==null&&(n=(c&x.Open)===x.Open),n===void 0)throw new Error(\"A <Transition /> is used but it is missing a `show={true | false}` prop.\");let[C,h]=V(n?\"visible\":\"hidden\"),g=Te(()=>{n||h(\"hidden\")}),[o,i]=V(!0),a=b([n]);D(()=>{o!==!1&&a.current[a.current.length-1]!==n&&(a.current.push(n),i(!1))},[a,n]);let s=ie(()=>({show:n,appear:l,initial:o}),[n,l,o]);D(()=>{n?h(\"visible\"):!U(g)&&d.current!==null&&h(\"hidden\")},[n,g]);let r={unmount:S},f=E(()=>{var u;o&&i(!1),(u=e.beforeEnter)==null||u.call(e)}),j=E(()=>{var u;o&&i(!1),(u=e.beforeLeave)==null||u.call(e)}),H=ae();return m.createElement(M.Provider,{value:g},m.createElement(w.Provider,{value:s},H({ourProps:{...r,as:O,children:m.createElement(me,{ref:p,...r,...R,beforeEnter:f,beforeLeave:j})},theirProps:{},defaultTag:O,features:fe,visible:C===\"visible\",name:\"Transition\"})))}function Le(e,t){let n=q(w)!==null,l=se()!==null;return m.createElement(m.Fragment,null,!n&&l?m.createElement(X,{ref:t,...e}):m.createElement(me,{ref:t,...e}))}let X=J(Ie),me=J(Ae),Fe=J(Le),ze=Object.assign(X,{Child:Fe,Root:X});export{ze as Transition,Fe as TransitionChild};\n","import{useRef as r}from\"react\";import{useIsoMorphicEffect as t}from'./use-iso-morphic-effect.js';function f(){let e=r(!1);return t(()=>(e.current=!0,()=>{e.current=!1}),[]),e}export{f as useIsMounted};\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport PropTypes from 'prop-types';\n\nexport default function Button({\n  onClick = () => { },\n  type = 'button',\n  isExternal = false,\n  href = '',\n  className = '',\n  style = {},\n  target = '',\n  children = null,\n}) {\n  const onClickHandler = () => {\n    if (onClick) onClick();\n  };\n\n  if (type === 'link') {\n    if (isExternal) {\n      return (\n        <a\n          href={href}\n          className={className}\n          style={style}\n          target={target === '_blank' ? '_blank' : undefined}\n          rel=\"noopener noreferrer\"\n        >\n          {children}\n        </a>\n      );\n    }\n\n    return (\n      <NavLink\n        to={href}\n        className={className}\n        style={style}\n        onClick={onClickHandler}\n      >\n        {children}\n      </NavLink>\n    );\n  }\n\n  return (\n    <button\n      className={className}\n      type={type}\n      style={style}\n      onClick={onClickHandler}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.oneOf(['button', 'link', 'submit', 'reset']),\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n  children: PropTypes.node, // Accept any renderable content\n  isExternal: PropTypes.bool,\n};\n","// themeColors.js\nconst colors = {\n  'light-theme-purple': '#E3D3FD',\n  'theme-purple': '#6610f2',\n  'dark-theme-purple': '#520dc2',\n  'light-theme-blue': '#D6E4FF',\n  'theme-blue': '#0d6efd',\n  'semi-dark-theme-blue': '#0A4D8C',\n  'dark-theme-blue': '#152C5B',\n};\n  \nexport default colors;\n","import colors from './themeColors.js';\n// AVAILABLE COLORS\n// 'light-theme-purple'\n// 'theme-purple':\n// 'dark-theme-purple'\n// 'light-theme-blue'\n// 'theme-blue'\n// 'semi-dark-theme-blue'\n// 'dark-theme-blue'\nconst ActiveTheme = 'dark-theme-blue'; // also set it in css\nconst SecondaryColor = 'semi-dark-theme-blue';\nconst BrandIconPartAColor = SecondaryColor;\n\n// used in hero.js\nconst heroTitleText = \"Hire AI Agents for Your Business, Save Time & Money.\";\nconst subtitleText = \"Crafting Intelligent Solutions for Small Scale Business Growth.\";\n\n// brandIcon.js\nconst brandIconPartA = \"Arbor\";\nconst brandIconPartB = \"AI Studio\";\n\n// footer.js\nconst footerSubtitle = subtitleText;\nconst footerOfficeEmail = \"arbor.ai.studio@gmail.com\";\nconst footerOfficeLocation = \"Winnipeg, Manitoba, Canada\";\nconst footerCopyright = \"© 2024, All rights reserved - Arbor AI Studio\";\nconst footerCopyrightSublinePartA = \" \";\nconst footerCopyrightSublinePartB = \"Arbor AI Studio\";\nconst partBbuttonLink = \"/\"; // go to home page\n\n// Footer - social\nconst instagramLink = \"https://www.instagram.com/arboraistudio/\";\nconst linkedinLink = \"https://www.linkedin.com/company/arbor-ai-studio\";\nconst githubLink = \"https://github.com/arbor-ai-studio\";\n\n// Projects Page\nconst projectsHeader = \"Our Projects\";\nconst projectsSubtitle = \"Showcasing Our AI-Powered Solutions for Small Businesses.\";\n\n// Services section of Home Page\nconst servicesHeader = \"Our Services\";\nconst servicesSubtitle = \"Empowering Small Businesses with Intelligent Solutions.\";\n\n// team page\nconst teamHeader = \"Our Team\";\nconst teamSubtitle = \"The Minds Behind Arbor AI Studio's Innovative Solutions.\";\n\nconst ColorMappings = {\n  '#536dfe': colors[ActiveTheme],\n  // '#536dfe': '#6c63ff',\n};\n\nexport {\n  heroTitleText,\n  subtitleText,\n  brandIconPartA,\n  brandIconPartB,\n  footerSubtitle,\n  footerOfficeEmail,\n  footerOfficeLocation,\n  footerCopyright,\n  footerCopyrightSublinePartA,\n  footerCopyrightSublinePartB,\n  partBbuttonLink,\n  instagramLink,\n  linkedinLink,\n  githubLink,\n  projectsHeader,\n  projectsSubtitle,\n  servicesHeader,\n  servicesSubtitle,\n  teamHeader,\n  teamSubtitle,\n  ActiveTheme,\n  BrandIconPartAColor,\n  SecondaryColor,\n  ColorMappings,\n};\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\n\nimport React from 'react';\n\nimport Button from '../elements/Button/index.js';\n\nimport {\n  ActiveTheme,\n  BrandIconPartAColor,\n  brandIconPartA,\n  brandIconPartB,\n} from '../customize';\n\nexport default function BrandIcon() {\n  return (\n    <Button\n      className=\"\"\n      type=\"link\"\n      href=\"/\"\n    >\n      <p className={`text-${BrandIconPartAColor} text-4xl font-medium`}>\n        {brandIconPartA}\n        <span className={`text-${ActiveTheme}`}> {brandIconPartB}</span>\n      </p>\n    </Button>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\nimport { Transition } from '@headlessui/react';\nimport { useLocation } from 'react-router-dom';\n\nimport Button from '../elements/Button/index.js';\nimport BrandIcon from './BrandIcon';\nimport { ActiveTheme, SecondaryColor } from '../customize';\n\nexport default function Header() {\n  const [isCollapse, setIsCollapse] = useState(false);\n  const location = useLocation();\n  const path = location.pathname;\n\n  return (\n    <header className=\"header\">\n      <div className=\"flex justify-between px-4 lg:px-0\">\n        <BrandIcon />\n\n        <button className={`block text-${SecondaryColor} lg:hidden focus:outline-none`} onClick={() => setIsCollapse(!isCollapse)}>\n          <svg className=\"w-8 h-8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path className={`${isCollapse ? 'hidden' : 'block'}`} strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\" />\n            <path className={`${!isCollapse ? 'hidden' : 'block'}`} strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <ul className={`hidden text-${SecondaryColor} tracking-widest items-center lg:flex flex-row mt-0`}>\n        <li>\n          <Button\n            className={`${path === '/' ? 'active-link' : ''} font-medium text-lg px-5 no-underline hover:underline`}\n            type=\"link\"\n            href=\"/\"\n          >\n            Home\n          </Button>\n        </li>\n        <li className=\"py-2 lg:py-0\">\n          <Button\n            className={`${path === '/team' ? 'active-link' : ''} font-medium text-lg px-5 no-underline hover:underline`}\n            type=\"link\"\n            href=\"/team\"\n          >\n            Team\n          </Button>\n        </li>\n        <li className=\"py-2 lg:py-0\">\n          <Button\n            className={`${path === '/project' ? 'active-link' : ''} font-medium text-lg px-5 no-underline hover:underline`}\n            type=\"link\"\n            href=\"/project\"\n          >\n            Project\n          </Button>\n        </li>\n        <li>\n          <Button\n            className={`font-medium text-lg mx-auto ml-3 px-6 py-2 bg-${ActiveTheme} text-white rounded-full border-2 border-${ActiveTheme} hover:bg-dark-${ActiveTheme} transition duration-200`}\n            type=\"link\"\n            href=\"/discuss-project\"\n          >\n            Discuss Project\n          </Button>\n        </li>\n      </ul>\n\n      <Transition\n        show={isCollapse}\n        enter=\"transition-opacity duration-400\"\n        enterFrom=\"opacity-0\"\n        enterTo=\"opacity-100\"\n        leave=\"transition-opacity duration-400\"\n        leaveFrom=\"opacity-100\"\n        leaveTo=\"opacity-0\"\n      >\n        <div className=\"transition duration-300 ease-in data-[closed]:opacity-0\">\n\n          {/* <Fade> */}\n          <ul className={`z-50 flex flex-col text-${SecondaryColor} tracking-widest my-6 absolute bg-white w-full border-b-2 border-gray-300 lg:hidden`}>\n            <li className=\"py-2 bg-white\">\n              <Button\n                className={`${path === '/' ? 'active-link' : ''} font-medium px-10 no-underline hover:underline`}\n                type=\"link\"\n                href=\"/\"\n              >\n                Home\n              </Button>\n            </li>\n            <li className=\"py-2 bg-white\">\n              <Button\n                className={`${path === '/team' ? 'active-link' : ''} font-medium px-10 no-underline hover:underline`}\n                type=\"link\"\n                href=\"/team\"\n              >\n                Team\n              </Button>\n            </li>\n            <li className=\"py-2 bg-white\">\n              <Button\n                className={`${path === '/project' ? 'active-link' : ''} font-medium px-10 no-underline hover:underline`}\n                type=\"link\"\n                href=\"/project\"\n              >\n                Project\n              </Button>\n            </li>\n            <li className=\"mx-auto my-9 bg-white\">\n              <Button\n                className={`font-bold mx-auto px-5 py-2 bg-${ActiveTheme} text-white rounded-full border-2 border-${ActiveTheme} hover:bg-dark-${ActiveTheme} transition duration-200`}\n                type=\"link\"\n                href=\"/discuss-project\"\n              >\n                Discuss Project\n              </Button>\n            </li>\n          </ul>\n          {/* </Fade> */}\n        </div>\n      </Transition>\n    </header>\n  );\n}\n","var isDevelopment = false;\n\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      return document.styleSheets[i];\n    }\n  } // this function should always return with a value\n  // TS can't understand it though so we make it stop complaining here\n\n\n  return undefined;\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? !isDevelopment : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    this.tags.forEach(function (tag) {\n      var _tag$parentNode;\n\n      return (_tag$parentNode = tag.parentNode) == null ? void 0 : _tag$parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\nexport var LAYER = '@layer'\n","import {IMPORT, LAYER, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase LAYER: if (element.children.length) break\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset: if (ampersand == -1) characters = replace(characters, /\\f/g, '')\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d l m s\n\t\t\t\t\t\t\t\t\tcase 100: case 108: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, RULESET, combine, match, serialize, copy, replace, WEBKIT, MOZ, MS, KEYFRAMES, DECLARATION, hash, charat, strlen, indexof, stringify, rulesheet, middleware, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return WEBKIT + value + MOZ + value + MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return WEBKIT + value + MS + value + value;\n    // order\n\n    case 6165:\n      return WEBKIT + value + MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return replace(value, ':', ':' + WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return WEBKIT + value + MS + value + value;\n  }\n\n  return value;\n}\n\nvar prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case DECLARATION:\n      element[\"return\"] = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function\n  /*: EmotionCache */\ncreateCache(options\n/*: Options */\n) {\n  var key = options.key;\n\n  if (key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node\n    /*: HTMLStyleElement */\n    ) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  var inserted = {};\n  var container;\n  /* : Node */\n\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node\n    /*: HTMLStyleElement */\n    ) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' ');\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n  /*: (\n  selector: string,\n  serialized: SerializedStyles,\n  sheet: StyleSheet,\n  shouldCache: boolean\n  ) => string | void */\n\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function\n      /*: void */\n    insert(selector\n    /*: string */\n    , serialized\n    /*: SerializedStyles */\n    , sheet\n    /*: StyleSheet */\n    , shouldCache\n    /*: boolean */\n    ) {\n      currentSheet = sheet;\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache\n  /*: EmotionCache */\n  = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport { createCache as default };\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","var isBrowser = true;\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else if (className) {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  scale: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport { unitlessKeys as default };\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport { memoize as default };\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar isDevelopment = false;\n\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  var componentSelector = interpolation;\n\n  if (componentSelector.__emotion_styles !== undefined) {\n\n    return componentSelector;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        var keyframes = interpolation;\n\n        if (keyframes.anim === 1) {\n          cursor = {\n            name: keyframes.name,\n            styles: keyframes.styles,\n            next: cursor\n          };\n          return keyframes.name;\n        }\n\n        var serializedStyles = interpolation;\n\n        if (serializedStyles.styles !== undefined) {\n          var next = serializedStyles.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = serializedStyles.styles + \";\";\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        }\n\n        break;\n      }\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  var asString = interpolation;\n\n  if (registered == null) {\n    return asString;\n  }\n\n  var cached = registered[asString];\n  return cached !== undefined ? cached : asString;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var key in obj) {\n      var value = obj[key];\n\n      if (typeof value !== 'object') {\n        var asString = value;\n\n        if (registered != null && registered[asString] !== undefined) {\n          string += key + \"{\" + registered[asString] + \"}\";\n        } else if (isProcessableValue(asString)) {\n          string += processStyleName(key) + \":\" + processStyleValue(key, asString) + \";\";\n        }\n      } else {\n        if (key === 'NO_COMPONENT_SELECTOR' && isDevelopment) {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(key) + \":\" + processStyleValue(key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n\n                string += key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;{]+)\\s*(;|$)/g;\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nfunction serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    var asTemplateStringsArr = strings;\n\n    styles += asTemplateStringsArr[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      var templateStringsArr = strings;\n\n      styles += templateStringsArr[i];\n    }\n  }\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n}\n\nexport { serializeStyles };\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport { murmur2 as default };\n","import * as React from 'react';\n\nvar syncFallback = function syncFallback(create) {\n  return create();\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : false;\nvar useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback;\nvar useInsertionEffectWithLayoutFallback = useInsertionEffect || React.useLayoutEffect;\n\nexport { useInsertionEffectAlwaysWithSyncFallback, useInsertionEffectWithLayoutFallback };\n","import * as React from 'react';\nimport { useContext, forwardRef } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar isDevelopment = false;\n\n/* import { type EmotionCache } from '@emotion/utils' */\nvar EmotionCacheContext\n/*: React.Context<EmotionCache | null> */\n= /* #__PURE__ */React.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache()\n/*: EmotionCache | null*/\n{\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache\n/* <Props, Ref: React.Ref<*>> */\n(func\n/*: (props: Props, cache: EmotionCache, ref: Ref) => React.Node */\n)\n/*: React.AbstractComponent<Props> */\n{\n  return /*#__PURE__*/forwardRef(function (props\n  /*: Props */\n  , ref\n  /*: Ref */\n  ) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nvar ThemeContext = /* #__PURE__ */React.createContext({});\n\nvar useTheme = function useTheme() {\n  return React.useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme\n/*: Object */\n, theme\n/*: Object | (Object => Object) */\n) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\n/*\ntype ThemeProviderProps = {\n  theme: Object | (Object => Object),\n  children: React.Node\n}\n*/\n\nvar ThemeProvider = function ThemeProvider(props\n/*: ThemeProviderProps */\n) {\n  var theme = React.useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme\n/* <Config: {}> */\n(Component\n/*: React.AbstractComponent<Config> */\n)\n/*: React.AbstractComponent<$Diff<Config, { theme: Object }>> */\n{\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = React.useContext(ThemeContext);\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  };\n\n  var WithTheme = /*#__PURE__*/React.forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar hasOwn = {}.hasOwnProperty;\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type\n/*: React.ElementType */\n, props\n/*: Object */\n) {\n\n  var newProps\n  /*: any */\n  = {};\n\n  for (var key in props) {\n    if (hasOwn.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // Runtime labeling is an opt-in feature because:\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(\n/* <any, any> */\nfunction (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwn.call(props, key) && key !== 'css' && key !== typePropName && (!isDevelopment )) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.className = className;\n\n  if (ref) {\n    newProps.ref = ref;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\n});\n\nvar Emotion$1 = Emotion;\n\nexport { CacheProvider as C, Emotion$1 as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwn as h, isDevelopment as i, useTheme as u, withEmotionCache as w };\n","import * as ReactJSXRuntime from 'react/jsx-runtime';\nimport { h as hasOwn, E as Emotion, c as createEmotionProps } from '../../dist/emotion-element-5486c51c.browser.esm.js';\nimport 'react';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nimport '@emotion/use-insertion-effect-with-fallbacks';\n\nvar Fragment = ReactJSXRuntime.Fragment;\nfunction jsx(type, props, key) {\n  if (!hasOwn.call(props, 'css')) {\n    return ReactJSXRuntime.jsx(type, props, key);\n  }\n\n  return ReactJSXRuntime.jsx(Emotion, createEmotionProps(type, props), key);\n}\nfunction jsxs(type, props, key) {\n  if (!hasOwn.call(props, 'css')) {\n    return ReactJSXRuntime.jsxs(type, props, key);\n  }\n\n  return ReactJSXRuntime.jsxs(Emotion, createEmotionProps(type, props), key);\n}\n\nexport { Fragment, jsx, jsxs };\n","import { h as hasOwn, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isDevelopment } from './emotion-element-5486c51c.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-5486c51c.browser.esm.js';\nimport * as React from 'react';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\nimport { serializeStyles } from '@emotion/serialize';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\n\nvar jsx\n/*: typeof React.createElement */\n= function jsx\n/*: typeof React.createElement */\n(type\n/*: React.ElementType */\n, props\n/*: Object */\n) {\n  var args = arguments;\n\n  if (props == null || !hasOwn.call(props, 'css')) {\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  }\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global\n/*: React.AbstractComponent<\nGlobalProps\n> */\n= /* #__PURE__ */withEmotionCache(function (props\n/*: GlobalProps */\n, cache) {\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = React.useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false;\n    var node\n    /*: HTMLStyleElement | null*/\n    = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\n/* import type { Interpolation, SerializedStyles } from '@emotion/utils' */\n\nfunction css()\n/*: SerializedStyles */\n{\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\n/*\ntype Keyframes = {|\n  name: string,\n  styles: string,\n  anim: 1,\n  toString: () => string\n|} & string\n*/\n\nvar keyframes = function\n  /*: Keyframes */\nkeyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name;\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\n/*\ntype ClassNameArg =\n  | string\n  | boolean\n  | { [key: string]: boolean }\n  | Array<ClassNameArg>\n  | null\n  | void\n*/\n\nvar classnames = function\n  /*: string */\nclassnames(args\n/*: Array<ClassNameArg> */\n) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered\n/*: Object */\n, css\n/*: (...args: Array<any>) => string */\n, className\n/*: string */\n) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n/*\ntype Props = {\n  children: ({\n    css: (...args: any) => string,\n    cx: (...args: Array<ClassNameArg>) => string,\n    theme: Object\n  }) => React.Node\n} */\n\n\nvar ClassNames\n/*: React.AbstractComponent<Props>*/\n= /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && isDevelopment) {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && isDevelopment) {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import { jsx, Fragment } from '@emotion/react/jsx-runtime';\nimport { keyframes, css, ClassNames } from '@emotion/react';\nimport { useMemo, Children, isValidElement } from 'react';\nimport { InView, useInView } from 'react-intersection-observer';\nimport { isFragment } from 'react-is';\n\nconst bounce = keyframes`\n  from,\n  20%,\n  53%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n    transform: translate3d(0, 0, 0);\n  }\n\n  40%,\n  43% {\n    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n    transform: translate3d(0, -30px, 0) scaleY(1.1);\n  }\n\n  70% {\n    animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n    transform: translate3d(0, -15px, 0) scaleY(1.05);\n  }\n\n  80% {\n    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n    transform: translate3d(0, 0, 0) scaleY(0.95);\n  }\n\n  90% {\n    transform: translate3d(0, -4px, 0) scaleY(1.02);\n  }\n`;\n\nconst flash = keyframes`\n  from,\n  50%,\n  to {\n    opacity: 1;\n  }\n\n  25%,\n  75% {\n    opacity: 0;\n  }\n`;\n\nconst headShake = keyframes`\n  0% {\n    transform: translateX(0);\n  }\n\n  6.5% {\n    transform: translateX(-6px) rotateY(-9deg);\n  }\n\n  18.5% {\n    transform: translateX(5px) rotateY(7deg);\n  }\n\n  31.5% {\n    transform: translateX(-3px) rotateY(-5deg);\n  }\n\n  43.5% {\n    transform: translateX(2px) rotateY(3deg);\n  }\n\n  50% {\n    transform: translateX(0);\n  }\n`;\n\nconst heartBeat = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  14% {\n    transform: scale(1.3);\n  }\n\n  28% {\n    transform: scale(1);\n  }\n\n  42% {\n    transform: scale(1.3);\n  }\n\n  70% {\n    transform: scale(1);\n  }\n`;\n\nconst jello = keyframes`\n  from,\n  11.1%,\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n\n  22.2% {\n    transform: skewX(-12.5deg) skewY(-12.5deg);\n  }\n\n  33.3% {\n    transform: skewX(6.25deg) skewY(6.25deg);\n  }\n\n  44.4% {\n    transform: skewX(-3.125deg) skewY(-3.125deg);\n  }\n\n  55.5% {\n    transform: skewX(1.5625deg) skewY(1.5625deg);\n  }\n\n  66.6% {\n    transform: skewX(-0.78125deg) skewY(-0.78125deg);\n  }\n\n  77.7% {\n    transform: skewX(0.390625deg) skewY(0.390625deg);\n  }\n\n  88.8% {\n    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);\n  }\n`;\n\nconst pulse = keyframes`\n  from {\n    transform: scale3d(1, 1, 1);\n  }\n\n  50% {\n    transform: scale3d(1.05, 1.05, 1.05);\n  }\n\n  to {\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst rubberBand = keyframes`\n  from {\n    transform: scale3d(1, 1, 1);\n  }\n\n  30% {\n    transform: scale3d(1.25, 0.75, 1);\n  }\n\n  40% {\n    transform: scale3d(0.75, 1.25, 1);\n  }\n\n  50% {\n    transform: scale3d(1.15, 0.85, 1);\n  }\n\n  65% {\n    transform: scale3d(0.95, 1.05, 1);\n  }\n\n  75% {\n    transform: scale3d(1.05, 0.95, 1);\n  }\n\n  to {\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst shake = keyframes`\n  from,\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translate3d(-10px, 0, 0);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translate3d(10px, 0, 0);\n  }\n`;\n\nconst shakeX = keyframes`\n  from,\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translate3d(-10px, 0, 0);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translate3d(10px, 0, 0);\n  }\n`;\n\nconst shakeY = keyframes`\n  from,\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translate3d(0, -10px, 0);\n  }\n\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translate3d(0, 10px, 0);\n  }\n`;\n\nconst swing = keyframes`\n  20% {\n    transform: rotate3d(0, 0, 1, 15deg);\n  }\n\n  40% {\n    transform: rotate3d(0, 0, 1, -10deg);\n  }\n\n  60% {\n    transform: rotate3d(0, 0, 1, 5deg);\n  }\n\n  80% {\n    transform: rotate3d(0, 0, 1, -5deg);\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, 0deg);\n  }\n`;\n\nconst tada = keyframes`\n  from {\n    transform: scale3d(1, 1, 1);\n  }\n\n  10%,\n  20% {\n    transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, -3deg);\n  }\n\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\n  }\n\n  40%,\n  60%,\n  80% {\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\n  }\n\n  to {\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst wobble = keyframes`\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  15% {\n    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\n  }\n\n  30% {\n    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\n  }\n\n  45% {\n    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\n  }\n\n  60% {\n    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\n  }\n\n  75% {\n    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeInBottomLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, 100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInBottomRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(100%, 100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInDown = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(0, -100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInDownBig = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(0, -2000px, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, 0, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInLeftBig = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(-2000px, 0, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInRightBig = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(2000px, 0, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInTopLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, -100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInTopRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(100%, -100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(0, 100%, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst fadeInUpBig = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nfunction getAnimationCss({\n  duration = 1e3,\n  delay = 0,\n  timingFunction = \"ease\",\n  keyframes = fadeInLeft,\n  iterationCount = 1\n}) {\n  return css`\n    animation-duration: ${duration}ms;\n    animation-timing-function: ${timingFunction};\n    animation-delay: ${delay}ms;\n    animation-name: ${keyframes};\n    animation-direction: normal;\n    animation-fill-mode: both;\n    animation-iteration-count: ${iterationCount};\n\n    @media (prefers-reduced-motion: reduce) {\n      animation: none;\n    }\n  `;\n}\n\nfunction isNullable(a) {\n  return a == void 0;\n}\nfunction isStringLike(value) {\n  return typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\";\n}\n\nfunction matchIf(onTrue, onFalse) {\n  return (condition) => condition ? onTrue() : onFalse();\n}\nfunction matchIfOrNull(onTrue) {\n  return matchIf(onTrue, () => null);\n}\n\nfunction hideWhen(condition) {\n  return matchIfOrNull(() => ({ opacity: 0 }))(condition);\n}\nconst Reveal = (props) => {\n  const {\n    cascade = false,\n    damping = 0.5,\n    delay = 0,\n    duration = 1e3,\n    fraction = 0,\n    keyframes = fadeInLeft,\n    triggerOnce = false,\n    className,\n    style,\n    childClassName,\n    childStyle,\n    children,\n    onVisibilityChange\n  } = props;\n  const animationStyles = useMemo(\n    () => getAnimationCss({\n      keyframes,\n      duration\n    }),\n    [duration, keyframes]\n  );\n  if (isNullable(children)) return null;\n  if (isStringLike(children))\n    return /* @__PURE__ */ jsx(TextReveal, { ...props, animationStyles, children: String(children) });\n  if (isFragment(children))\n    return /* @__PURE__ */ jsx(FragmentReveal, { ...props, animationStyles });\n  return /* @__PURE__ */ jsx(Fragment, { children: Children.map(children, (node, index) => {\n    if (!isValidElement(node)) return null;\n    const nodeDelay = delay + (cascade ? index * duration * damping : 0);\n    switch (node.type) {\n      case \"ol\":\n      case \"ul\":\n        return /* @__PURE__ */ jsx(ClassNames, { children: ({ cx }) => /* @__PURE__ */ jsx(\n          node.type,\n          {\n            ...node.props,\n            className: cx(className, node.props.className),\n            style: Object.assign({}, style, node.props.style),\n            children: /* @__PURE__ */ jsx(Reveal, { ...props, children: node.props.children })\n          }\n        ) });\n      case \"li\":\n        return /* @__PURE__ */ jsx(\n          InView,\n          {\n            threshold: fraction,\n            triggerOnce,\n            onChange: onVisibilityChange,\n            children: ({ inView, ref }) => /* @__PURE__ */ jsx(ClassNames, { children: ({ cx }) => /* @__PURE__ */ jsx(\n              node.type,\n              {\n                ...node.props,\n                ref,\n                className: cx(childClassName, node.props.className),\n                css: matchIfOrNull(() => animationStyles)(inView),\n                style: Object.assign(\n                  {},\n                  childStyle,\n                  node.props.style,\n                  hideWhen(!inView),\n                  {\n                    animationDelay: nodeDelay + \"ms\"\n                  }\n                )\n              }\n            ) })\n          }\n        );\n      default:\n        return /* @__PURE__ */ jsx(\n          InView,\n          {\n            threshold: fraction,\n            triggerOnce,\n            onChange: onVisibilityChange,\n            children: ({ inView, ref }) => /* @__PURE__ */ jsx(\n              \"div\",\n              {\n                ref,\n                className,\n                css: matchIfOrNull(() => animationStyles)(inView),\n                style: Object.assign({}, style, hideWhen(!inView), {\n                  animationDelay: nodeDelay + \"ms\"\n                }),\n                children: /* @__PURE__ */ jsx(ClassNames, { children: ({ cx }) => /* @__PURE__ */ jsx(\n                  node.type,\n                  {\n                    ...node.props,\n                    className: cx(childClassName, node.props.className),\n                    style: Object.assign(\n                      {},\n                      childStyle,\n                      node.props.style\n                    )\n                  }\n                ) })\n              }\n            )\n          }\n        );\n    }\n  }) });\n};\nconst textBaseStyles = {\n  display: \"inline-block\",\n  whiteSpace: \"pre\"\n};\nconst TextReveal = (props) => {\n  const {\n    animationStyles,\n    cascade = false,\n    damping = 0.5,\n    delay = 0,\n    duration = 1e3,\n    fraction = 0,\n    triggerOnce = false,\n    className,\n    style,\n    children,\n    onVisibilityChange\n  } = props;\n  const { ref, inView } = useInView({\n    triggerOnce,\n    threshold: fraction,\n    onChange: onVisibilityChange\n  });\n  return matchIf(\n    () => /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        ref,\n        className,\n        style: Object.assign({}, style, textBaseStyles),\n        children: children.split(\"\").map((char, index) => /* @__PURE__ */ jsx(\n          \"span\",\n          {\n            css: matchIfOrNull(() => animationStyles)(inView),\n            style: {\n              animationDelay: delay + index * duration * damping + \"ms\"\n            },\n            children: char\n          },\n          index\n        ))\n      }\n    ),\n    () => /* @__PURE__ */ jsx(FragmentReveal, { ...props, children })\n  )(cascade);\n};\nconst FragmentReveal = (props) => {\n  const {\n    animationStyles,\n    fraction = 0,\n    triggerOnce = false,\n    className,\n    style,\n    children,\n    onVisibilityChange\n  } = props;\n  const { ref, inView } = useInView({\n    triggerOnce,\n    threshold: fraction,\n    onChange: onVisibilityChange\n  });\n  return /* @__PURE__ */ jsx(\n    \"div\",\n    {\n      ref,\n      className,\n      css: matchIfOrNull(() => animationStyles)(inView),\n      style: Object.assign({}, style, hideWhen(!inView)),\n      children\n    }\n  );\n};\n\nfunction getStyles$7(effect) {\n  switch (effect) {\n    case \"bounce\":\n      return [bounce, { transformOrigin: \"center bottom\" }];\n    case \"flash\":\n      return [flash];\n    case \"headShake\":\n      return [headShake, { animationTimingFunction: \"ease-in-out\" }];\n    case \"heartBeat\":\n      return [heartBeat, { animationTimingFunction: \"ease-in-out\" }];\n    case \"jello\":\n      return [jello, { transformOrigin: \"center\" }];\n    case \"pulse\":\n      return [pulse, { animationTimingFunction: \"ease-in-out\" }];\n    case \"rubberBand\":\n      return [rubberBand];\n    case \"shake\":\n      return [shake];\n    case \"shakeX\":\n      return [shakeX];\n    case \"shakeY\":\n      return [shakeY];\n    case \"swing\":\n      return [swing, { transformOrigin: \"top center\" }];\n    case \"tada\":\n      return [tada];\n    case \"wobble\":\n      return [wobble];\n  }\n}\nconst AttentionSeeker = (props) => {\n  const { effect = \"bounce\", style, ...rest } = props;\n  const [keyframes, animationCss] = useMemo(() => getStyles$7(effect), [effect]);\n  return /* @__PURE__ */ jsx(\n    Reveal,\n    {\n      keyframes,\n      style: Object.assign({}, style, animationCss),\n      ...rest\n    }\n  );\n};\n\nconst bounceIn = keyframes`\n  from,\n  20%,\n  40%,\n  60%,\n  80%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  0% {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n\n  20% {\n    transform: scale3d(1.1, 1.1, 1.1);\n  }\n\n  40% {\n    transform: scale3d(0.9, 0.9, 0.9);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(1.03, 1.03, 1.03);\n  }\n\n  80% {\n    transform: scale3d(0.97, 0.97, 0.97);\n  }\n\n  to {\n    opacity: 1;\n    transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst bounceInDown = keyframes`\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  0% {\n    opacity: 0;\n    transform: translate3d(0, -3000px, 0) scaleY(3);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(0, 25px, 0) scaleY(0.9);\n  }\n\n  75% {\n    transform: translate3d(0, -10px, 0) scaleY(0.95);\n  }\n\n  90% {\n    transform: translate3d(0, 5px, 0) scaleY(0.985);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst bounceInLeft = keyframes`\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  0% {\n    opacity: 0;\n    transform: translate3d(-3000px, 0, 0) scaleX(3);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(25px, 0, 0) scaleX(1);\n  }\n\n  75% {\n    transform: translate3d(-10px, 0, 0) scaleX(0.98);\n  }\n\n  90% {\n    transform: translate3d(5px, 0, 0) scaleX(0.995);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst bounceInRight = keyframes`\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  from {\n    opacity: 0;\n    transform: translate3d(3000px, 0, 0) scaleX(3);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(-25px, 0, 0) scaleX(1);\n  }\n\n  75% {\n    transform: translate3d(10px, 0, 0) scaleX(0.98);\n  }\n\n  90% {\n    transform: translate3d(-5px, 0, 0) scaleX(0.995);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst bounceInUp = keyframes`\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  from {\n    opacity: 0;\n    transform: translate3d(0, 3000px, 0) scaleY(5);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\n  }\n\n  75% {\n    transform: translate3d(0, 10px, 0) scaleY(0.95);\n  }\n\n  90% {\n    transform: translate3d(0, -5px, 0) scaleY(0.985);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst bounceOut = keyframes`\n  20% {\n    transform: scale3d(0.9, 0.9, 0.9);\n  }\n\n  50%,\n  55% {\n    opacity: 1;\n    transform: scale3d(1.1, 1.1, 1.1);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n`;\n\nconst bounceOutDown = keyframes`\n  20% {\n    transform: translate3d(0, 10px, 0) scaleY(0.985);\n  }\n\n  40%,\n  45% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0) scaleY(3);\n  }\n`;\n\nconst bounceOutLeft = keyframes`\n  20% {\n    opacity: 1;\n    transform: translate3d(20px, 0, 0) scaleX(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-2000px, 0, 0) scaleX(2);\n  }\n`;\n\nconst bounceOutRight = keyframes`\n  20% {\n    opacity: 1;\n    transform: translate3d(-20px, 0, 0) scaleX(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(2000px, 0, 0) scaleX(2);\n  }\n`;\n\nconst bounceOutUp = keyframes`\n  20% {\n    transform: translate3d(0, -10px, 0) scaleY(0.985);\n  }\n\n  40%,\n  45% {\n    opacity: 1;\n    transform: translate3d(0, 20px, 0) scaleY(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, -2000px, 0) scaleY(3);\n  }\n`;\n\nfunction getStyles$6(reverse, direction) {\n  switch (direction) {\n    case \"down\":\n      return reverse ? bounceOutDown : bounceInDown;\n    case \"left\":\n      return reverse ? bounceOutLeft : bounceInLeft;\n    case \"right\":\n      return reverse ? bounceOutRight : bounceInRight;\n    case \"up\":\n      return reverse ? bounceOutUp : bounceInUp;\n    default:\n      return reverse ? bounceOut : bounceIn;\n  }\n}\nconst Bounce = (props) => {\n  const { direction, reverse = false, ...rest } = props;\n  const keyframes = useMemo(\n    () => getStyles$6(reverse, direction),\n    [direction, reverse]\n  );\n  return /* @__PURE__ */ jsx(Reveal, { keyframes, ...rest });\n};\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\nconst fadeOutBottomLeft = keyframes`\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-100%, 100%, 0);\n  }\n`;\n\nconst fadeOutBottomRight = keyframes`\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(100%, 100%, 0);\n  }\n`;\n\nconst fadeOutDown = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, 100%, 0);\n  }\n`;\n\nconst fadeOutDownBig = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0);\n  }\n`;\n\nconst fadeOutLeft = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-100%, 0, 0);\n  }\n`;\n\nconst fadeOutLeftBig = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-2000px, 0, 0);\n  }\n`;\n\nconst fadeOutRight = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0);\n  }\n`;\n\nconst fadeOutRightBig = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(2000px, 0, 0);\n  }\n`;\n\nconst fadeOutTopLeft = keyframes`\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(-100%, -100%, 0);\n  }\n`;\n\nconst fadeOutTopRight = keyframes`\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(100%, -100%, 0);\n  }\n`;\n\nconst fadeOutUp = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, -100%, 0);\n  }\n`;\n\nconst fadeOutUpBig = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, -2000px, 0);\n  }\n`;\n\nfunction getStyles$5(big, reverse, direction) {\n  switch (direction) {\n    case \"bottom-left\":\n      return reverse ? fadeOutBottomLeft : fadeInBottomLeft;\n    case \"bottom-right\":\n      return reverse ? fadeOutBottomRight : fadeInBottomRight;\n    case \"down\":\n      return big ? reverse ? fadeOutDownBig : fadeInDownBig : reverse ? fadeOutDown : fadeInDown;\n    case \"left\":\n      return big ? reverse ? fadeOutLeftBig : fadeInLeftBig : reverse ? fadeOutLeft : fadeInLeft;\n    case \"right\":\n      return big ? reverse ? fadeOutRightBig : fadeInRightBig : reverse ? fadeOutRight : fadeInRight;\n    case \"top-left\":\n      return reverse ? fadeOutTopLeft : fadeInTopLeft;\n    case \"top-right\":\n      return reverse ? fadeOutTopRight : fadeInTopRight;\n    case \"up\":\n      return big ? reverse ? fadeOutUpBig : fadeInUpBig : reverse ? fadeOutUp : fadeInUp;\n    default:\n      return reverse ? fadeOut : fadeIn;\n  }\n}\nconst Fade = (props) => {\n  const { big = false, direction, reverse = false, ...rest } = props;\n  const keyframes = useMemo(\n    () => getStyles$5(big, reverse, direction),\n    [big, direction, reverse]\n  );\n  return /* @__PURE__ */ jsx(Reveal, { keyframes, ...rest });\n};\n\nconst flip = keyframes`\n  from {\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, -360deg);\n    animation-timing-function: ease-out;\n  }\n\n  40% {\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\n      rotate3d(0, 1, 0, -190deg);\n    animation-timing-function: ease-out;\n  }\n\n  50% {\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 150px)\n      rotate3d(0, 1, 0, -170deg);\n    animation-timing-function: ease-in;\n  }\n\n  80% {\n    transform: perspective(400px) scale3d(0.95, 0.95, 0.95) translate3d(0, 0, 0)\n      rotate3d(0, 1, 0, 0deg);\n    animation-timing-function: ease-in;\n  }\n\n  to {\n    transform: perspective(400px) scale3d(1, 1, 1) translate3d(0, 0, 0) rotate3d(0, 1, 0, 0deg);\n    animation-timing-function: ease-in;\n  }\n`;\n\nconst flipInX = keyframes`\n  from {\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n    animation-timing-function: ease-in;\n    opacity: 0;\n  }\n\n  40% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n    animation-timing-function: ease-in;\n  }\n\n  60% {\n    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\n    opacity: 1;\n  }\n\n  80% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\n  }\n\n  to {\n    transform: perspective(400px);\n  }\n`;\n\nconst flipInY = keyframes`\n  from {\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n    animation-timing-function: ease-in;\n    opacity: 0;\n  }\n\n  40% {\n    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\n    animation-timing-function: ease-in;\n  }\n\n  60% {\n    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\n    opacity: 1;\n  }\n\n  80% {\n    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);\n  }\n\n  to {\n    transform: perspective(400px);\n  }\n`;\n\nconst flipOutX = keyframes`\n  from {\n    transform: perspective(400px);\n  }\n\n  30% {\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\n    opacity: 1;\n  }\n\n  to {\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\n    opacity: 0;\n  }\n`;\n\nconst flipOutY = keyframes`\n  from {\n    transform: perspective(400px);\n  }\n\n  30% {\n    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);\n    opacity: 1;\n  }\n\n  to {\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\n    opacity: 0;\n  }\n`;\n\nfunction getStyles$4(reverse, direction) {\n  switch (direction) {\n    case \"horizontal\":\n      return reverse ? flipOutX : flipInX;\n    case \"vertical\":\n      return reverse ? flipOutY : flipInY;\n    default:\n      return flip;\n  }\n}\nconst animationCss$1 = {\n  backfaceVisibility: \"visible\"\n};\nconst Flip = (props) => {\n  const { direction, reverse = false, style, ...rest } = props;\n  const keyframes = useMemo(\n    () => getStyles$4(reverse, direction),\n    [direction, reverse]\n  );\n  return /* @__PURE__ */ jsx(\n    Reveal,\n    {\n      keyframes,\n      style: Object.assign({}, style, animationCss$1),\n      ...rest\n    }\n  );\n};\n\nconst hinge = keyframes`\n  0% {\n    animation-timing-function: ease-in-out;\n  }\n\n  20%,\n  60% {\n    transform: rotate3d(0, 0, 1, 80deg);\n    animation-timing-function: ease-in-out;\n  }\n\n  40%,\n  80% {\n    transform: rotate3d(0, 0, 1, 60deg);\n    animation-timing-function: ease-in-out;\n    opacity: 1;\n  }\n\n  to {\n    transform: translate3d(0, 700px, 0);\n    opacity: 0;\n  }\n`;\n\nconst jackInTheBox = keyframes`\n  from {\n    opacity: 0;\n    transform: scale(0.1) rotate(30deg);\n    transform-origin: center bottom;\n  }\n\n  50% {\n    transform: rotate(-10deg);\n  }\n\n  70% {\n    transform: rotate(3deg);\n  }\n\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nconst rollIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst rollOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);\n  }\n`;\n\nconst animationCss = {\n  transformOrigin: \"top left\"\n};\nconst Hinge = (props) => {\n  const { style, ...rest } = props;\n  return /* @__PURE__ */ jsx(\n    Reveal,\n    {\n      keyframes: hinge,\n      style: Object.assign({}, style, animationCss),\n      ...rest\n    }\n  );\n};\n\nconst JackInTheBox = (props) => {\n  return /* @__PURE__ */ jsx(Reveal, { keyframes: jackInTheBox, ...props });\n};\n\nfunction getStyles$3(reverse) {\n  return reverse ? rollOut : rollIn;\n}\nconst Roll = (props) => {\n  const { reverse = false, ...rest } = props;\n  const keyframes = useMemo(() => getStyles$3(reverse), [reverse]);\n  return /* @__PURE__ */ jsx(Reveal, { keyframes, ...rest });\n};\n\nconst rotateIn = keyframes`\n  from {\n    transform: rotate3d(0, 0, 1, -200deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n`;\n\nconst rotateInDownLeft = keyframes`\n  from {\n    transform: rotate3d(0, 0, 1, -45deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n`;\n\nconst rotateInDownRight = keyframes`\n  from {\n    transform: rotate3d(0, 0, 1, 45deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n`;\n\nconst rotateInUpLeft = keyframes`\n  from {\n    transform: rotate3d(0, 0, 1, 45deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n`;\n\nconst rotateInUpRight = keyframes`\n  from {\n    transform: rotate3d(0, 0, 1, -90deg);\n    opacity: 0;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n    opacity: 1;\n  }\n`;\n\nconst rotateOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, 200deg);\n    opacity: 0;\n  }\n`;\n\nconst rotateOutDownLeft = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, 45deg);\n    opacity: 0;\n  }\n`;\n\nconst rotateOutDownRight = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, -45deg);\n    opacity: 0;\n  }\n`;\n\nconst rotateOutUpLeft = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, -45deg);\n    opacity: 0;\n  }\n`;\n\nconst rotateOutUpRight = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    transform: rotate3d(0, 0, 1, 90deg);\n    opacity: 0;\n  }\n`;\n\nfunction getStyles$2(reverse, direction) {\n  switch (direction) {\n    case \"bottom-left\":\n      return reverse ? [rotateOutDownLeft, { transformOrigin: \"left bottom\" }] : [rotateInDownLeft, { transformOrigin: \"left bottom\" }];\n    case \"bottom-right\":\n      return reverse ? [rotateOutDownRight, { transformOrigin: \"right bottom\" }] : [rotateInDownRight, { transformOrigin: \"right bottom\" }];\n    case \"top-left\":\n      return reverse ? [rotateOutUpLeft, { transformOrigin: \"left bottom\" }] : [rotateInUpLeft, { transformOrigin: \"left bottom\" }];\n    case \"top-right\":\n      return reverse ? [rotateOutUpRight, { transformOrigin: \"right bottom\" }] : [rotateInUpRight, { transformOrigin: \"right bottom\" }];\n    default:\n      return reverse ? [rotateOut, { transformOrigin: \"center\" }] : [rotateIn, { transformOrigin: \"center\" }];\n  }\n}\nconst Rotate = (props) => {\n  const { direction, reverse = false, style, ...rest } = props;\n  const [keyframes, animationCss] = useMemo(\n    () => getStyles$2(reverse, direction),\n    [direction, reverse]\n  );\n  return /* @__PURE__ */ jsx(\n    Reveal,\n    {\n      keyframes,\n      style: Object.assign({}, style, animationCss),\n      ...rest\n    }\n  );\n};\n\nconst slideInDown = keyframes`\n  from {\n    transform: translate3d(0, -100%, 0);\n    visibility: visible;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst slideInLeft = keyframes`\n  from {\n    transform: translate3d(-100%, 0, 0);\n    visibility: visible;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst slideInRight = keyframes`\n  from {\n    transform: translate3d(100%, 0, 0);\n    visibility: visible;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst slideInUp = keyframes`\n  from {\n    transform: translate3d(0, 100%, 0);\n    visibility: visible;\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst slideOutDown = keyframes`\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    transform: translate3d(0, 100%, 0);\n  }\n`;\n\nconst slideOutLeft = keyframes`\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    transform: translate3d(-100%, 0, 0);\n  }\n`;\n\nconst slideOutRight = keyframes`\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    transform: translate3d(100%, 0, 0);\n  }\n`;\n\nconst slideOutUp = keyframes`\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n\n  to {\n    visibility: hidden;\n    transform: translate3d(0, -100%, 0);\n  }\n`;\n\nfunction getStyles$1(reverse, direction) {\n  switch (direction) {\n    case \"down\":\n      return reverse ? slideOutDown : slideInDown;\n    case \"right\":\n      return reverse ? slideOutRight : slideInRight;\n    case \"up\":\n      return reverse ? slideOutUp : slideInUp;\n    case \"left\":\n    default:\n      return reverse ? slideOutLeft : slideInLeft;\n  }\n}\nconst Slide = (props) => {\n  const { direction, reverse = false, ...rest } = props;\n  const keyframes = useMemo(\n    () => getStyles$1(reverse, direction),\n    [direction, reverse]\n  );\n  return /* @__PURE__ */ jsx(Reveal, { keyframes, ...rest });\n};\n\nconst zoomIn = keyframes`\n  from {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n\n  50% {\n    opacity: 1;\n  }\n`;\n\nconst zoomInDown = keyframes`\n  from {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -1000px, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n`;\n\nconst zoomInLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(-1000px, 0, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(10px, 0, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n`;\n\nconst zoomInRight = keyframes`\n  from {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(1000px, 0, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(-10px, 0, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n`;\n\nconst zoomInUp = keyframes`\n  from {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 1000px, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n`;\n\nconst zoomOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\nconst zoomOutDown = keyframes`\n  40% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, -60px, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, 2000px, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n`;\n\nconst zoomOutLeft = keyframes`\n  40% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(42px, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale(0.1) translate3d(-2000px, 0, 0);\n  }\n`;\n\nconst zoomOutRight = keyframes`\n  40% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(-42px, 0, 0);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale(0.1) translate3d(2000px, 0, 0);\n  }\n`;\n\nconst zoomOutUp = keyframes`\n  40% {\n    opacity: 1;\n    transform: scale3d(0.475, 0.475, 0.475) translate3d(0, 60px, 0);\n    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n  }\n\n  to {\n    opacity: 0;\n    transform: scale3d(0.1, 0.1, 0.1) translate3d(0, -2000px, 0);\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1);\n  }\n`;\n\nfunction getStyles(reverse, direction) {\n  switch (direction) {\n    case \"down\":\n      return reverse ? zoomOutDown : zoomInDown;\n    case \"left\":\n      return reverse ? zoomOutLeft : zoomInLeft;\n    case \"right\":\n      return reverse ? zoomOutRight : zoomInRight;\n    case \"up\":\n      return reverse ? zoomOutUp : zoomInUp;\n    default:\n      return reverse ? zoomOut : zoomIn;\n  }\n}\nconst Zoom = (props) => {\n  const { direction, reverse = false, ...rest } = props;\n  const keyframes = useMemo(\n    () => getStyles(reverse, direction),\n    [direction, reverse]\n  );\n  return /* @__PURE__ */ jsx(Reveal, { keyframes, ...rest });\n};\n\nexport { AttentionSeeker, Bounce, Fade, Flip, Hinge, JackInTheBox, Reveal, Roll, Rotate, Slide, Zoom, Reveal as default };\n","import { useState, useEffect } from 'react';\n\nexport function useDynamicSvg(svgUrl, colorMappings) {\n  const [svgContent, setSvgContent] = useState('');\n\n  useEffect(() => {\n    fetch(svgUrl)\n      .then((res) => res.text())\n      .then((originalData) => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(originalData, \"image/svg+xml\");\n        const svg = xmlDoc.getElementsByTagName('svg')[0];\n        if (svg) {\n          // Remove width and height to allow container to control size\n          svg.removeAttribute('width');\n          svg.removeAttribute('height');\n\n          // Apply color mappings\n          let data = svg.outerHTML;\n          Object.entries(colorMappings).forEach(([oldColor, newColor]) => {\n            data = data.replace(new RegExp(oldColor, 'g'), newColor);\n          });\n\n          setSvgContent(data);\n        }\n      }).catch(() => {\n        // do nothing\n      });\n  }, [svgUrl, colorMappings]);\n\n  return svgContent;\n}\n","var _circle, _circle2, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _circle3, _circle4, _circle5, _path10, _path11, _circle6, _path12, _path13, _polygon, _path14, _polygon2, _path15, _path16, _circle7, _path17, _path18, _path19, _path20, _circle8, _path21, _path22, _circle9, _path23, _path24;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgControlAi(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 847.6197,\n    height: 386.288,\n    viewBox: \"0 0 847.6197 386.288\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 779.26626,\n    cy: 180.30992,\n    r: 38,\n    fill: \"#f2f2f2\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 779.26626,\n    cy: 180.30992,\n    r: 10,\n    fill: \"#e6e6e6\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M953.62933,437.37949c4.21232,3.43649,5.49592,8.85257,4.71218,14.08229a24.45215,24.45215,0,0,1-8.394,14.68089c-5.00924,4.45233-11.1191,7.46085-17.01448,10.54154a123.75213,123.75213,0,0,0-15.57529,9.45471c-18.96063,13.7809-33.28511,33.40312-41.48334,55.3-8.1844,21.85994-10.38035,46.67168-4.16128,69.32729,3.077,11.20916,9.30169,23.30307,20.89812,27.5209,9.24369,3.36209,21.864,1.19633,26.57069-8.33047,5.05592-10.23367-1.998-21.73722-11.08431-26.81766-11.77824-6.5856-25.84735-1.77336-36.44112,4.89279-11.66306,7.339-21.03868,17.87056-33.21534,24.44828a41.73876,41.73876,0,0,1-17.84367,5.20536,44.68956,44.68956,0,0,1-16.909-2.61231,57.27268,57.27268,0,0,1-27.66166-21.47129c-7.73426-11.24292-11.19627-25.02477-11.82763-38.52511-1.41262-30.20619,10.51982-58.4649,20.09358-86.47742a264.21067,264.21067,0,0,0,11.51923-44.8596,232.40593,232.40593,0,0,0,2.54533-46.38837c-.63367-13.71367-1.98648-28.054-8.0391-40.57887-5.32217-11.01334-15.0489-20.02716-27.34646-22.29967a27.27728,27.27728,0,0,0-16.43941,1.88837c-1.75416.80022-.23123,3.38662,1.51416,2.59041,10.88282-4.96455,23.74565-.13414,31.78379,7.88181,9.38649,9.36057,12.83346,23.18379,14.36407,35.93871a225.58927,225.58927,0,0,1-7.96815,89.993c-8.34677,28.35216-21.476,55.521-24.5056,85.22575-1.38243,13.55453-.67224,27.56718,3.66032,40.56478a63.359,63.359,0,0,0,20.07822,29.56579c8.84214,7.14826,19.71981,12.01852,31.171,12.56105,12.85436.609,24.12668-5.12157,34.09957-12.7448,10.68114-8.1646,20.50852-18.23866,33.447-22.81668,5.89862-2.08709,12.617-3.0607,18.67336-1.052a23.4303,23.4303,0,0,1,12.4523,10.012c2.63043,4.37385,3.60072,9.84247,1.20032,14.5411-2.25686,4.41768-6.662,6.97294-11.43071,7.84743a22.17976,22.17976,0,0,1-14.72394-2.50178c-5.22406-2.98356-9.04665-7.99083-11.72468-13.28109-5.34038-10.5495-7.13473-23.10743-7.40712-34.81666a115.28688,115.28688,0,0,1,4.34843-33.85332,119.45634,119.45634,0,0,1,36.08916-57.52881,105.96132,105.96132,0,0,1,13.97433-10.289c5.38-3.316,11.12259-5.96561,16.6072-9.09444,5.39679-3.07872,10.71546-6.75721,14.43185-11.82346a25.43467,25.43467,0,0,0,4.88726-14.95064,16.76606,16.76606,0,0,0-5.80386-13.07206c-1.48381-1.21052-3.61863.89979-2.12132,2.12132Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#ccc\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M598.87633,612.16592a87.33929,87.33929,0,0,0,44.47022,13.94,20.84973,20.84973,0,0,1-.9502,1.96,25.06735,25.06735,0,0,1-7.60009,8.55,24.96917,24.96917,0,0,1-39.33985-20.42v-4.03Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M692.14635,613.34591v2.85a24.96061,24.96061,0,0,1-46.87988,11.95,20.84826,20.84826,0,0,1-.99023-2.01c.73.02,1.45019.03,2.18017.03A87.46657,87.46657,0,0,0,692.14635,613.34591Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M725.78649,311.9659c-.75-.11-1.51025-.18-2.27-.23a83.981,83.981,0,0,1,1.66992,62.71c.76026-.09,1.51026-.21,2.26026-.35a31.50228,31.50228,0,0,0-1.66016-62.13Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M569.39635,311.73592c-.75976.05-1.52.12-2.27.23a31.50227,31.50227,0,0,0-1.66015,62.13c.75.14,1.5.26,2.26025.35a83.981,83.981,0,0,1,1.66992-62.71Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M725.78649,311.9659a85.99677,85.99677,0,1,0,6.66992,33.2A86.1148,86.1148,0,0,0,725.78649,311.9659Zm-.6001,62.48a83.981,83.981,0,1,1,5.27-29.28A84.122,84.122,0,0,1,725.18639,374.44594Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M690.45641,325.66592h-88a17.5,17.5,0,0,0,0,35h88a17.5,17.5,0,0,0,0-35Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M646.45641,448.16592a89.99675,89.99675,0,0,0-4.06006,179.9c.9502.05,1.91016.08,2.87012.08.3999.02.79.02,1.18994.02a90,90,0,0,0,0-180Zm45.68994,165.18a87.46657,87.46657,0,0,1-45.68994,12.82c-.73,0-1.45019-.01-2.18017-.03q-.46509,0-.92969-.03a88.0512,88.0512,0,1,1,48.7998-12.76Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M709.62316,515.99941h-39.3335a10.3335,10.3335,0,0,1,0-20.667h39.3335a10.3335,10.3335,0,0,1,0,20.667Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 496.72182,\n    cy: 248.80992,\n    r: 5.24444,\n    fill: \"#f2f2f2\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 513.76626,\n    cy: 248.80992,\n    r: 5.24444,\n    fill: \"#f2f2f2\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 530.81071,\n    cy: 248.80992,\n    r: 5.24444,\n    fill: \"#536dfe\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M340.81553,638.55356c8.99256-7.59864,14.45479-19.60227,13.02232-31.28788s-10.30472-22.42829-21.81332-24.90978-24.62761,4.38768-28.12315,15.62987c-1.92376-21.6745-4.14055-44.25714-15.6641-62.715-10.43429-16.71314-28.50667-28.672-48.09305-30.81147s-40.20832,5.941-52.42362,21.40027-15.20618,37.93388-6.6509,55.68241c6.30238,13.07473,17.91358,22.80511,30.07923,30.72127,38.81262,25.2553,86.95964,33.78829,132.77224,27.04622Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#f2f2f2\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.08924,510.8482a317.625,317.625,0,0,1,44.26411,43.95415,322.163,322.163,0,0,1,34.90754,51.66276,320.84426,320.84426,0,0,1,14.94817,31.65122c.89773,2.19991-2.67454,3.15752-3.56229.98208A315.27614,315.27614,0,0,0,268.839,584.59284a317.26015,317.26015,0,0,0-38.63584-47.729A316.50072,316.50072,0,0,0,204.477,513.46043c-1.8443-1.5018.78314-4.10164,2.61223-2.61223Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#fff\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 161.57649,\n    cy: 35,\n    r: 31,\n    fill: \"#2f2e41\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M453.38374,405.36728a10.77786,10.77786,0,0,1-2.14862,2.37261,11.0024,11.0024,0,0,1-16.227-2.49759,10.23957,10.23957,0,0,1-.53728-.9378l-48.84971-4.713a18.013,18.013,0,0,1-15.887-14.49974l-2.77273-14.61708,19.06439-2.96585,3.42115,11.7085,47.6279,11.69913a10.48965,10.48965,0,0,1,1.17046-.89009,11.00253,11.00253,0,0,1,15.13851,15.341Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#ffb8b8\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M390.6179,377.45l-21.296,5.75282a4.50507,4.50507,0,0,1-5.51783-3.17073l-7.459-27.61183a12.3986,12.3986,0,0,1,23.00384-8.88775l14.10045,27.5212A4.49956,4.49956,0,0,1,390.6179,377.45Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#2f2e41\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"202.092 374.133 214.351 374.133 220.184 326.845 202.089 326.846 202.092 374.133\",\n    fill: \"#ffb8b8\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M375.65481,627.48572h38.53073a0,0,0,0,1,0,0v14.88687a0,0,0,0,1,0,0H390.54167a14.88686,14.88686,0,0,1-14.88686-14.88686v0A0,0,0,0,1,375.65481,627.48572Z\",\n    transform: \"translate(613.67919 1012.98428) rotate(179.99738)\",\n    fill: \"#2f2e41\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"92.822 362.185 104.292 366.515 126.454 324.337 109.526 317.946 92.822 362.185\",\n    fill: \"#ffb8b8\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.92068,621.16128h38.53073a0,0,0,0,1,0,0v14.88687a0,0,0,0,1,0,0H278.80754a14.88686,14.88686,0,0,1-14.88686-14.88686v0A0,0,0,0,1,263.92068,621.16128Z\",\n    transform: \"translate(149.88268 1059.86131) rotate(-159.31482)\",\n    fill: \"#2f2e41\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M377.89481,620.00541a4.49693,4.49693,0,0,1-4.27564-3.11425L342.35062,520.3267a1.50038,1.50038,0,0,0-2.78491-.17676l-43.33448,92.20118a4.50408,4.50408,0,0,1-5.49536,2.35547L273.669,609.01713a4.5089,4.5089,0,0,1-2.92774-5.418l26.54444-100.54687a229.08189,229.08189,0,0,0,6.00342-32.42676,73.50978,73.50978,0,0,1,23.71679-46.877,34.20494,34.20494,0,0,0,10.76587-20.46289l.07154-.50293,38.87377,6.13769,24.62354,200.92871a4.52009,4.52009,0,0,1-3.29688,4.8916l-18.97387,5.1084A4.47969,4.47969,0,0,1,377.89481,620.00541Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#2f2e41\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 173.89145,\n    cy: 41.29134,\n    r: 24.56103,\n    fill: \"#ffb8b8\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M374.3013,413.20463c-.0769,0-.15381-.002-.23144-.00586L335.534,411.272a4.475,4.475,0,0,1-4.252-4.03515l-5.26441-51.32813a23.17175,23.17175,0,0,1,29.32422-24.66992h.00024a22.47446,22.47446,0,0,1,8.24561,4.2417c27.10815,22.26221,18.36743,62.59815,15.04272,74.43018A4.48226,4.48226,0,0,1,374.3013,413.20463Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#536dfe\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M340.7764,447.67045a10.77781,10.77781,0,0,1-3.16553-.47461,11.0024,11.0024,0,0,1-6.90918-14.89355,10.23809,10.23809,0,0,1,.48316-.9668l-23.13526-43.28125a18.013,18.013,0,0,1,3.27173-21.25879l10.63379-10.40527,13.02954,14.22949-7.853,9.334,16.64209,46.13378a10.492,10.492,0,0,1,1.3894.48145,11.00252,11.00252,0,0,1-4.38672,21.10156Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#ffb8b8\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M329.25165,379.94968l-16.586-14.54365a4.50508,4.50508,0,0,1-.41663-6.35031l18.85694-21.505a12.3986,12.3986,0,0,1,20.14207,14.229L336.14543,378.764a4.49956,4.49956,0,0,1-6.89378,1.18565Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#2f2e41\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M334.27658,322.00531c2.24091.79458,4.98823,1.49515,6.75163-.15284,1.72153-1.60886,1.40789-4.551.39375-6.71849s-2.587-4.09633-3.0692-6.45551c-.69115-3.38111,1.09579-6.89375,3.64667-9.09811s5.7618-3.36231,8.89636-4.47657l17.19315-6.11178c4.25582-1.51284,8.84187-3.29,11.22343-7.2712,3.446-5.76061.2957-13.99506-5.3568-17.35649s-12.79229-2.7352-18.89074-.3716c-3.373,1.30726-6.58157,3.10864-10.06978,4.02888-6.88427,1.81616-14.71189.18688-20.76149,4.06849-5.26616,3.37892-7.70874,10.27337-7.53138,16.72432s2.55256,12.5945,5.05791,18.4942c1.49051,3.50993,3.08274,7.0603,5.60736,9.85195s6.17289,4.74455,9.81715,4.23088Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#2f2e41\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 135.57649,\n    cy: 20,\n    r: 20,\n    fill: \"#2f2e41\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"a5b0fbf6-85a2-48e8-ad40-c81376cd9893-376\",\n    \"data-name\": \"Path 22\",\n    d: \"M473.97839,392.30638l-.35491-.04878,1.33654-9.72271a5.68039,5.68039,0,0,0-4.85388-6.401l-20.59957-2.83172a5.68038,5.68038,0,0,0-6.401,4.85388l-7.33245,53.34046a5.68038,5.68038,0,0,0,4.85388,6.401l20.59956,2.83172a5.6804,5.6804,0,0,0,6.401-4.85389L472.672,399.1784l.35491.04879Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#3f3d56\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"a5d1dbd7-b3f0-4599-af89-34309e57a462-377\",\n    \"data-name\": \"Path 23\",\n    d: \"M469.4586,378.98628l-2.56459-.35254a1.92232,1.92232,0,0,1-2.12411,2.38125l-11.25648-1.54737a1.92233,1.92233,0,0,1-1.40261-2.86605l-2.39549-.3293a4.04622,4.04622,0,0,0-4.55957,3.4575L438.17193,430.534a4.04624,4.04624,0,0,0,3.45751,4.55957l19.74328,2.714a4.04624,4.04624,0,0,0,4.55957-3.4575h0l6.98382-50.80435a4.04623,4.04623,0,0,0-3.45751-4.55949Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#fff\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 279.26626,\n    cy: 153.30992,\n    r: 11,\n    fill: \"#536DFE\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M454.36606,414.36216a1.14079,1.14079,0,0,1-.68644-.228l-.01227-.00921-2.58508-1.97923a1.14849,1.14849,0,1,1,1.397-1.8233l1.67441,1.28392,3.95691-5.16039a1.14846,1.14846,0,0,1,1.61023-.21256l-.0246.0334.02524-.03291a1.14978,1.14978,0,0,1,.21256,1.61024l-4.65427,6.06985A1.149,1.149,0,0,1,454.36606,414.36216Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#fff\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1022.61917,643.144h-839.294a1.19069,1.19069,0,0,1,0-2.38137h839.294a1.19068,1.19068,0,0,1,0,2.38137Z\",\n    transform: \"translate(-176.19015 -256.856)\",\n    fill: \"#ccc\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgControlAi);\nexport default __webpack_public_path__ + \"static/media/control_ai.cce4d13562e8f533501f68178f74a54f.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Fade } from 'react-awesome-reveal';\nimport { useDynamicSvg } from 'svgBgChanger.js';\nimport Button from '../elements/Button/index.js';\nimport controlAiSvg from '../assets/images/hero/control_ai.svg';\nimport {\n  ActiveTheme,\n  heroTitleText,\n  subtitleText,\n  SecondaryColor,\n  ColorMappings,\n} from '../customize.js';\n\nexport default function Hero() {\n  const svgContent = useDynamicSvg(controlAiSvg, ColorMappings);\n  return (\n    <section className=\"hero\">\n      <div className=\"w-full lg:w-1/2 xl:pl-12 sm:pr-2 mt-8\">\n        <h1 className={`text-5xl sm:text-6xl text-${SecondaryColor} font-bold leading-tight mb-5`}>\n          {heroTitleText}\n        </h1>\n\n        <p className=\"font-light text-xl text-gray-400 leading-relaxed mb-16\">\n          {subtitleText}\n        </p>\n        <Fade direction=\"up\" delay={500} triggerOnce>\n          <Button\n            href=\"/project\"\n            type=\"link\"\n            className={`flex w-71 h-18 items-center px-14 py-5 text-white text-xl bg-${ActiveTheme} rounded-lg shadow-2xl hover:bg-dark-${ActiveTheme} transition duration-200`}\n          >\n            See Our Work\n            <svg\n              className=\"ml-2 w-7 h-7 text-white animate-bounce-x\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 5l7 7-7 7\"\n              />\n            </svg>\n          </Button>\n        </Fade>\n      </div>\n      <div className=\"flex pt-5 md:w-fit w-full justify-center items-center order-first md:order-first lg:order-last lg:w-1/2\">\n        <Fade direction=\"up\" triggerOnce>\n        <div\n          className=\"svg-container\" // Using the updated CSS class\n          dangerouslySetInnerHTML={{ __html: svgContent }} // eslint-disable-line react/no-danger\n        />\n        </Fade>\n      </div>\n    </section>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\n\nimport React from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\n\nimport {\n  ActiveTheme,\n  SecondaryColor,\n  servicesHeader,\n  servicesSubtitle,\n  ColorMappings,\n} from '../customize';\n\nimport { useDynamicSvg } from '../svgBgChanger';\n\nfunction SvgDisplay({ svgUrl, colorMappings }) {\n  const svgMarkup = useDynamicSvg(svgUrl, colorMappings);\n  return (\n    <div\n      className=\"services-svg-container w-full rounded-t-2xl \"\n      // fit parent container\n      dangerouslySetInnerHTML={{ __html: svgMarkup }} // eslint-disable-line react/no-danger\n    />\n  );\n}\n\nexport default function Service({ data }) {\n  return (\n    <div className=\"bg-gray-50\">\n      <div className=\"container mx-auto pt-20 pb-28\">\n        <Fade direction=\"right\" triggerOnce>\n          <h1 className={`text-5xl text-${SecondaryColor} text-center font-bold`}>{servicesHeader}</h1>\n        </Fade>\n        <Fade direction=\"left\" triggerOnce>\n          <p className=\"font-light text-lg text-gray-400 text-center mb-12\">\n            {servicesSubtitle}\n          </p>\n        </Fade>\n\n        <div className=\"grid grid-rows-3 px-10 gap-8 sm:grid-cols-3 sm:grid-rows-1 sm:gap-6 xl:gap-16\">\n          {\n            data.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <Fade direction={item.animation} delay={500 * index} key={index} triggerOnce>\n                <div>\n                  <div className={`bg-white group rounded-2xl shadow-2xl border border-light-${ActiveTheme} transform transition duration-500 hover:scale-105`}>\n                    <SvgDisplay svgUrl={item.svgUrl} colorMappings={ColorMappings} />\n                    <h2 className={`text-${SecondaryColor} text-center text-xl py-7 rounded-b-2xl`}>{item.title}</h2>\n                  </div>\n                </div>\n              </Fade>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\n/* eslint-disable import/extensions */\n\nimport React from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\n\nimport Button from '../elements/Button/index.js';\n\nimport { ActiveTheme, SecondaryColor } from '../customize';\n\nexport default function Portfolio({ data }) {\n  return (\n    <section className=\"container mx-auto flex flex-col items-center mt-20\">\n      <Fade direction=\"right\" triggerOnce>\n        <h1 className={`text-5xl text-${SecondaryColor} text-center font-bold`}>Our Selected Project</h1>\n      </Fade>\n      <Fade direction=\"left\" triggerOnce>\n        <p className=\"font-light text-lg text-gray-400 text-center mb-12\">\n          We are ready to scale up your business with our great work result.\n        </p>\n      </Fade>\n\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 sm:gap-2 xl:gap-8 justify-items-center\">\n        {\n          data.map((item, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Fade direction=\"up\" triggerOnce bottom delay={500 * index} key={index}>\n              <Button type=\"link\" href={`/project/${item.id}`}>\n                <div className=\"group rounded-2xl shadow-xl w-auto m-3 transform transition duration-500 hover:scale-110 portofolio-card\">\n                  <div className=\"relative\">\n                    <img src={item.imageUrl} alt=\"Portfolio\" className=\"rounded-t-2xl z-0\" />\n                    <div className=\"absolute flex w-full h-full top-0 opacity-0 bg-black justify-center rounded-t-2xl rounded-b img-hover\">\n                      <button className=\"focus:outline-none\">\n                        <svg className=\"w-20 h-20 text-gray-200\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"py-4\">\n                    <h2 className={`text-${SecondaryColor} text-center text-xl`}>{item.title}</h2>\n                    <p className=\"font-light text-gray-400 text-center\">{item.type}</p>\n                  </div>\n                </div>\n              </Button>\n            </Fade>\n          ))\n        }\n      </div>\n\n      <Fade bottom triggerOnce>\n        <Button href=\"/project\" type=\"link\" className={`flex flex-grow-0 w-36 h-12 sm:w-40 sm:h-14 lg:w-44 lg:h-16 xl:w-36 xl:h-12 text-${ActiveTheme} px-5 border border-${ActiveTheme} items-center mt-14 rounded-full justify-center transition duration-300 hover:bg-${ActiveTheme} hover:text-white`}>\n          <p className=\"font-normal py-3 lg:text-lg xl:text-base\">\n            See More\n          </p>\n          <svg className=\"w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n          <svg className=\"w-4 h-4 -ml-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </Button>\n      </Fade>\n    </section>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\n\nimport React from 'react';\n\nimport Fade from 'react-awesome-reveal';\n\nimport { ActiveTheme, SecondaryColor, ColorMappings } from 'customize';\n\nimport { useDynamicSvg } from 'svgBgChanger';\n\nfunction SvgDisplay({ svgUrl, colorMappings }) {\n  const svgMarkup = useDynamicSvg(svgUrl, colorMappings);\n  return (\n    <div\n      className=\"w-1/3 advantages-svg-container\"\n      dangerouslySetInnerHTML={{ __html: svgMarkup }} // eslint-disable-line react/no-danger\n    />\n  );\n}\n\nexport default function Advantage({ data }) {\n  return (\n    <div className=\"bg-gray-50 py-20 mb-24 sm:mb-18 xl:mb-16\">\n      <div className=\"container mx-auto\">\n        <Fade bottom triggerOnce>\n          <h1 className={`text-5xl text-${SecondaryColor} text-center font-bold`}>Why Choose Us</h1>\n\n          <p className=\"font-light text-lg text-gray-400 text-center mb-12 sm:mb-5 xl:mb-0\">\n            Why you should choose us to handle your project?\n          </p>\n        </Fade>\n\n        <div className=\"flex flex-col lg:flex-row\"> {/* Changed from sm:flex-row to lg:flex-row */}\n          <div className=\"flex-col\">\n            {\n              data[0].map((item, index) => (\n                <Fade bottom triggerOnce delay={500 * index} key={index}>\n                  <div>\n                    <div className={`bg-white flex flex-col lg:flex-row items-center p-3 my-6 mx-3 lg:my-7 lg:mx-3 xl:my-14 xl:mx-7 rounded-2xl shadow-xl border border-light-${ActiveTheme} transform transition duration-500 hover:scale-105`}>\n                      <SvgDisplay svgUrl={item.svgUrl} colorMappings={ColorMappings} />\n                      <div className=\"flex-col pl-0 lg:pl-5 mt-4 lg:mt-0 text-center lg:text-left\">\n                        <h2 className={`text-${SecondaryColor} text-2xl`}>{item.title}</h2>\n                        <p className=\"font-light text-gray-400\">{item.description}</p>\n                      </div>\n                    </div>\n                  </div>\n                </Fade>\n              ))\n            }\n          </div>\n          <div className=\"flex-col -mt-4 lg:mt-14\">\n            {\n              data[1].map((item, index) => (\n                <Fade bottom triggerOnce delay={500 * index} key={index}>\n                  <div>\n                    <div className={`bg-white flex flex-col lg:flex-row items-center p-3 my-6 mx-3 lg:my-7 lg:mx-3 xl:my-14 xl:mx-7 rounded-2xl shadow-xl border border-light-${ActiveTheme} transform transition duration-500 hover:scale-105`}>\n                      <SvgDisplay svgUrl={item.svgUrl} colorMappings={ColorMappings} />\n                      <div className=\"flex-col pl-0 lg:pl-5 mt-4 lg:mt-0 text-center lg:text-left\">\n                        <h2 className={`text-${SecondaryColor} text-2xl`}>{item.title}</h2>\n                        <p className=\"font-light text-gray-400\">{item.description}</p>\n                      </div>\n                    </div>\n                  </div>\n                </Fade>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n}\nfunction extend(target, src) {\n  if (target === void 0) {\n    target = {};\n  }\n  if (src === void 0) {\n    src = {};\n  }\n  Object.keys(src).forEach(key => {\n    if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n      extend(target[key], src[key]);\n    }\n  });\n}\nconst ssrDocument = {\n  body: {},\n  addEventListener() {},\n  removeEventListener() {},\n  activeElement: {\n    blur() {},\n    nodeName: ''\n  },\n  querySelector() {\n    return null;\n  },\n  querySelectorAll() {\n    return [];\n  },\n  getElementById() {\n    return null;\n  },\n  createEvent() {\n    return {\n      initEvent() {}\n    };\n  },\n  createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute() {},\n      getElementsByTagName() {\n        return [];\n      }\n    };\n  },\n  createElementNS() {\n    return {};\n  },\n  importNode() {\n    return null;\n  },\n  location: {\n    hash: '',\n    host: '',\n    hostname: '',\n    href: '',\n    origin: '',\n    pathname: '',\n    protocol: '',\n    search: ''\n  }\n};\nfunction getDocument() {\n  const doc = typeof document !== 'undefined' ? document : {};\n  extend(doc, ssrDocument);\n  return doc;\n}\nconst ssrWindow = {\n  document: ssrDocument,\n  navigator: {\n    userAgent: ''\n  },\n  location: {\n    hash: '',\n    host: '',\n    hostname: '',\n    href: '',\n    origin: '',\n    pathname: '',\n    protocol: '',\n    search: ''\n  },\n  history: {\n    replaceState() {},\n    pushState() {},\n    go() {},\n    back() {}\n  },\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener() {},\n  removeEventListener() {},\n  getComputedStyle() {\n    return {\n      getPropertyValue() {\n        return '';\n      }\n    };\n  },\n  Image() {},\n  Date() {},\n  screen: {},\n  setTimeout() {},\n  clearTimeout() {},\n  matchMedia() {\n    return {};\n  },\n  requestAnimationFrame(callback) {\n    if (typeof setTimeout === 'undefined') {\n      callback();\n      return null;\n    }\n    return setTimeout(callback, 0);\n  },\n  cancelAnimationFrame(id) {\n    if (typeof setTimeout === 'undefined') {\n      return;\n    }\n    clearTimeout(id);\n  }\n};\nfunction getWindow() {\n  const win = typeof window !== 'undefined' ? window : {};\n  extend(win, ssrWindow);\n  return win;\n}\n\nexport { getWindow as a, getDocument as g };\n","import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\n\nfunction classesToTokens(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n  return classes.trim().split(' ').filter(c => !!c.trim());\n}\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis) {\n  if (axis === void 0) {\n    axis = 'x';\n  }\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend() {\n  const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < arguments.length; i += 1) {\n    const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll(_ref) {\n  let {\n    swiper,\n    targetPosition,\n    side\n  } = _ref;\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowRoot && slideEl.shadowRoot.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction elementChildren(element, selector) {\n  if (selector === void 0) {\n    selector = '';\n  }\n  const children = [...element.children];\n  if (element instanceof HTMLSlotElement) {\n    children.push(...element.assignedElements());\n  }\n  if (!selector) {\n    return children;\n  }\n  return children.filter(el => el.matches(selector));\n}\nfunction elementIsChildOf(el, parent) {\n  const isChild = parent.contains(el);\n  if (!isChild && parent instanceof HTMLSlotElement) {\n    const children = [...parent.assignedElements()];\n    return children.includes(el);\n  }\n  return isChild;\n}\nfunction showWarning(text) {\n  try {\n    console.warn(text);\n    return;\n  } catch (err) {\n    // err\n  }\n}\nfunction createElement(tag, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : classesToTokens(classes)));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nfunction makeElementsArray(el) {\n  return (Array.isArray(el) ? el : [el]).filter(e => !!e);\n}\nfunction getRotateFix(swiper) {\n  return v => {\n    if (Math.abs(v) > 0 && swiper.browser && swiper.browser.need3dFix && Math.abs(v) % 90 === 0) {\n      return v + 0.001;\n    }\n    return v;\n  };\n}\n\nexport { elementParents as a, elementOffset as b, createElement as c, now as d, elementChildren as e, elementOuterSize as f, getSlideTransformEl as g, elementIndex as h, classesToTokens as i, getTranslate as j, elementTransitionEnd as k, isObject as l, makeElementsArray as m, nextTick as n, getRotateFix as o, elementStyle as p, elementNextAll as q, elementPrevAll as r, setCSSProperty as s, animateCSSModeScroll as t, showWarning as u, elementIsChildOf as v, extend as w, deleteProps as x };\n","import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\nimport { a as elementParents, p as elementStyle, e as elementChildren, s as setCSSProperty, f as elementOuterSize, q as elementNextAll, r as elementPrevAll, j as getTranslate, t as animateCSSModeScroll, n as nextTick, u as showWarning, c as createElement, v as elementIsChildOf, d as now, w as extend, h as elementIndex, x as deleteProps } from './utils.mjs';\n\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\n\nlet deviceCached;\nfunction calcDevice(_temp) {\n  let {\n    userAgent\n  } = _temp === void 0 ? {} : _temp;\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\n\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  const device = getDevice();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  const isWebView = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent);\n  const isSafariBrowser = isSafari();\n  const need3dFix = isSafariBrowser || isWebView && device.ios;\n  return {\n    isSafari: needPerspectiveFix || isSafariBrowser,\n    needPerspectiveFix,\n    need3dFix,\n    isWebView\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\n\nfunction Resize(_ref) {\n  let {\n    swiper,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(_ref2 => {\n          let {\n            contentBoxSize,\n            contentRect,\n            target\n          } = _ref2;\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\n\nfunction Observer(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const observers = [];\n  const window = getWindow();\n  const attach = function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: swiper.isElement || (typeof options.childList === 'undefined' ? true : options).childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.hostEl);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.hostEl, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n\n/* eslint-disable no-underscore-dangle */\n\nvar eventsEmitter = {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler() {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit() {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};\n\nfunction updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}\n\nfunction updateSlides() {\n  const swiper = this;\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slides);\n  } else if (swiper.grid) {\n    swiper.grid.unsetSlides();\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slides);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[swiper.getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : swiper.getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize > swiperSize ? allSlidesSize - swiperSize : 0;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const offsetSize = (params.slidesOffsetBefore || 0) + (params.slidesOffsetAfter || 0);\n    if (allSlidesSize + offsetSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize - offsetSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  swiper.emit('slidesUpdated');\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}\n\nfunction updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}\n\nfunction updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}\n\nconst toggleSlideClasses$1 = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesProgress(translate) {\n  if (translate === void 0) {\n    translate = this && this.translate || 0;\n  }\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n    }\n    toggleSlideClasses$1(slide, isVisible, params.slideVisibleClass);\n    toggleSlideClasses$1(slide, isFullyVisible, params.slideFullyVisibleClass);\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}\n\nfunction updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}\n\nconst toggleSlideClasses = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  let activeSlide;\n  let prevSlide;\n  let nextSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    if (gridEnabled) {\n      activeSlide = slides.filter(slideEl => slideEl.column === activeIndex)[0];\n      nextSlide = slides.filter(slideEl => slideEl.column === activeIndex + 1)[0];\n      prevSlide = slides.filter(slideEl => slideEl.column === activeIndex - 1)[0];\n    } else {\n      activeSlide = slides[activeIndex];\n    }\n  }\n  if (activeSlide) {\n    if (!gridEnabled) {\n      // Next Slide\n      nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !nextSlide) {\n        nextSlide = slides[0];\n      }\n\n      // Prev Slide\n      prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !prevSlide === 0) {\n        prevSlide = slides[slides.length - 1];\n      }\n    }\n  }\n  slides.forEach(slideEl => {\n    toggleSlideClasses(slideEl, slideEl === activeSlide, params.slideActiveClass);\n    toggleSlideClasses(slideEl, slideEl === nextSlide, params.slideNextClass);\n    toggleSlideClasses(slideEl, slideEl === prevSlide, params.slidePrevClass);\n  });\n  swiper.emitSlidesClasses();\n}\n\nconst processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (!lazyEl && swiper.isElement) {\n      if (slideEl.shadowRoot) {\n        lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n      } else {\n        // init later\n        requestAnimationFrame(() => {\n          if (slideEl.shadowRoot) {\n            lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n            if (lazyEl) lazyEl.remove();\n          }\n        });\n      }\n    }\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nconst preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};\n\nfunction getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nfunction updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex && !swiper.params.loop) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n  if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n    swiper.realIndex = getVirtualRealIndex(activeIndex);\n    return;\n  }\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (gridEnabled) {\n    const firstSlideInColumn = swiper.slides.filter(slideEl => slideEl.column === activeIndex)[0];\n    let activeSlideIndex = parseInt(firstSlideInColumn.getAttribute('data-swiper-slide-index'), 10);\n    if (Number.isNaN(activeSlideIndex)) {\n      activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n    }\n    realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n  } else if (swiper.slides[activeIndex]) {\n    const slideIndex = swiper.slides[activeIndex].getAttribute('data-swiper-slide-index');\n    if (slideIndex) {\n      realIndex = parseInt(slideIndex, 10);\n    } else {\n      realIndex = activeIndex;\n    }\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide(el, path) {\n  const swiper = this;\n  const params = swiper.params;\n  let slide = el.closest(`.${params.slideClass}, swiper-slide`);\n  if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) {\n    [...path.slice(path.indexOf(el) + 1, path.length)].forEach(pathEl => {\n      if (!slide && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {\n        slide = pathEl;\n      }\n    });\n  }\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};\n\nfunction getSwiperTranslate(axis) {\n  if (axis === void 0) {\n    axis = this.isHorizontal() ? 'x' : 'y';\n  }\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}\n\nfunction setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate() {\n  return -this.snapGrid[0];\n}\n\nfunction maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n\nfunction translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (translateBounds === void 0) {\n    translateBounds = true;\n  }\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          swiper.animating = false;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}\n\nvar translate = {\n  getTranslate: getSwiperTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};\n\nfunction setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n    swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : '';\n  }\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionEmit(_ref) {\n  let {\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  } = _ref;\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\n\nfunction transitionStart(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}\n\nfunction transitionEnd(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};\n\nfunction slideTo(index, speed, runCallbacks, internal, initial) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (!enabled && !internal && !initial || swiper.destroyed || swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // initial virtual\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  const isInitialVirtual = isVirtual && initial;\n  // Update Index\n  if (!isInitialVirtual && (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}\n\nfunction slideToLoop(index, speed, runCallbacks, internal) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      let targetSlideIndex;\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        targetSlideIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n      } else {\n        targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n      }\n      const cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n      const {\n        centeredSlides\n      } = swiper.params;\n      let slidesPerView = swiper.params.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = swiper.slidesPerViewDynamic();\n      } else {\n        slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n        if (centeredSlides && slidesPerView % 2 === 0) {\n          slidesPerView = slidesPerView + 1;\n        }\n      }\n      let needLoopFix = cols - targetSlideIndex < slidesPerView;\n      if (centeredSlides) {\n        needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n      }\n      if (internal && centeredSlides && swiper.params.slidesPerView !== 'auto' && !gridEnabled) {\n        needLoopFix = false;\n      }\n      if (needLoopFix) {\n        const direction = centeredSlides ? targetSlideIndex < swiper.activeIndex ? 'prev' : 'next' : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? 'next' : 'prev';\n        swiper.loopFix({\n          direction,\n          slideTo: true,\n          activeSlideIndex: direction === 'next' ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n          slideRealIndex: direction === 'next' ? swiper.realIndex : undefined\n        });\n      }\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        newIndex = swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex)[0].column;\n      } else {\n        newIndex = swiper.getSlideIndexByData(newIndex);\n      }\n    }\n  }\n  requestAnimationFrame(() => {\n    swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  });\n  return swiper;\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n    if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n      requestAnimationFrame(() => {\n        swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n      });\n      return true;\n    }\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n    requestAnimationFrame(() => {\n      swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    });\n    return true;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks, internal) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks, internal, threshold) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (threshold === void 0) {\n    threshold = 0.5;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide() {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};\n\nfunction loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const initSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    slides.forEach((el, index) => {\n      el.setAttribute('data-swiper-slide-index', index);\n    });\n  };\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n  const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n  const shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n  const addBlankSlides = amountOfSlides => {\n    for (let i = 0; i < amountOfSlides; i += 1) {\n      const slideEl = swiper.isElement ? createElement('swiper-slide', [params.slideBlankClass]) : createElement('div', [params.slideClass, params.slideBlankClass]);\n      swiper.slidesEl.append(slideEl);\n    }\n  };\n  if (shouldFillGroup) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else if (shouldFillGrid) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = params.grid.rows - swiper.slides.length % params.grid.rows;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else {\n    initSlides();\n  }\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}\n\nfunction loopFix(_temp) {\n  let {\n    slideRealIndex,\n    slideTo = true,\n    direction,\n    setTranslate,\n    activeSlideIndex,\n    byController,\n    byMousewheel\n  } = _temp === void 0 ? {} : _temp;\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  const {\n    centeredSlides\n  } = params;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  let slidesPerView = params.slidesPerView;\n  if (slidesPerView === 'auto') {\n    slidesPerView = swiper.slidesPerViewDynamic();\n  } else {\n    slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n    if (centeredSlides && slidesPerView % 2 === 0) {\n      slidesPerView = slidesPerView + 1;\n    }\n  }\n  const slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n  let loopedSlides = slidesPerGroup;\n  if (loopedSlides % slidesPerGroup !== 0) {\n    loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n  }\n  loopedSlides += params.loopAdditionalSlides;\n  swiper.loopedSlides = loopedSlides;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (slides.length < slidesPerView + loopedSlides) {\n    showWarning('Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters');\n  } else if (gridEnabled && params.grid.fill === 'row') {\n    showWarning('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');\n  }\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  const cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n  const activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n  const activeColIndexWithShift = activeColIndex + (centeredSlides && typeof setTranslate === 'undefined' ? -slidesPerView / 2 + 0.5 : 0);\n  // prepend last slides before start\n  if (activeColIndexWithShift < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        const colIndexToPrepend = cols - index - 1;\n        for (let i = slides.length - 1; i >= 0; i -= 1) {\n          if (slides[i].column === colIndexToPrepend) prependSlidesIndexes.push(i);\n        }\n        // slides.forEach((slide, slideIndex) => {\n        //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n        // });\n      } else {\n        prependSlidesIndexes.push(cols - index - 1);\n      }\n    }\n  } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n    slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        slides.forEach((slide, slideIndex) => {\n          if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n        });\n      } else {\n        appendSlidesIndexes.push(index);\n      }\n    }\n  }\n  swiper.__preventObserver__ = true;\n  requestAnimationFrame(() => {\n    swiper.__preventObserver__ = false;\n  });\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  } else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) {\n    swiper.slides.forEach((slide, slideIndex) => {\n      swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n    });\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + Math.ceil(slidesPrepended), 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          const shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n          swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n          swiper.touchEventsData.currentTranslate = swiper.translate;\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        const shift = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n        swiper.slideTo(swiper.activeIndex - shift, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix({\n          ...loopParams,\n          slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo : false\n        });\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix({\n        ...loopParams,\n        slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo : false\n      });\n    }\n  }\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};\n\nfunction setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nfunction unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor\n};\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base) {\n  if (base === void 0) {\n    base = this;\n  }\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nfunction preventEdgeSwipe(swiper, event, startX) {\n  const window = getWindow();\n  const {\n    params\n  } = swiper;\n  const edgeSwipeDetection = params.edgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\nfunction onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const data = swiper.touchEventsData;\n  if (e.type === 'pointerdown') {\n    if (data.pointerId !== null && data.pointerId !== e.pointerId) {\n      return;\n    }\n    data.pointerId = e.pointerId;\n  } else if (e.type === 'touchstart' && e.targetTouches.length === 1) {\n    data.touchId = e.targetTouches[0].identifier;\n  }\n  if (e.type === 'touchstart') {\n    // don't proceed touch event\n    preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n    return;\n  }\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!elementIsChildOf(targetEl, swiper.wrapperEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = e.composedPath ? e.composedPath() : e.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  if (!preventEdgeSwipe(swiper, e, startX)) {\n    return;\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl && (e.pointerType === 'mouse' || e.pointerType !== 'mouse' && !targetEl.matches(data.focusableElements))) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (e.type === 'pointermove') {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    const id = e.pointerId;\n    if (id !== data.pointerId) return;\n  }\n  let targetTouch;\n  if (e.type === 'touchmove') {\n    targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  } else {\n    targetTouch = e;\n  }\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== e.target && e.pointerType !== 'mouse') {\n    document.activeElement.blur();\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  touches.previousX = touches.currentX;\n  touches.previousY = touches.currentY;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || e.type === 'touchmove' && data.preventTouchMoveFromPointerMove) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  const allowLoopFix = swiper.touchesDirection === 'next' && swiper.allowSlideNext || swiper.touchesDirection === 'prev' && swiper.allowSlidePrev;\n  if (!data.isMoved) {\n    if (isLoop && allowLoopFix) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          bySwiperTouchMove: true\n        }\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  new Date().getTime();\n  if (data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n    Object.assign(touches, {\n      startX: pageX,\n      startY: pageY,\n      currentX: pageX,\n      currentY: pageY,\n      startTranslate: data.currentTranslate\n    });\n    data.loopSwapReset = true;\n    data.startTranslate = data.currentTranslate;\n    return;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] - (params.slidesPerView !== 'auto' && swiper.slides.length - params.slidesPerView >= 2 ? swiper.slidesSizesGrid[swiper.activeIndex + 1] + swiper.params.spaceBetween : 0) - swiper.params.spaceBetween : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] + swiper.params.spaceBetween + (params.slidesPerView !== 'auto' && swiper.slides.length - params.slidesPerView >= 2 ? swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] + swiper.params.spaceBetween : 0) : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetTouch;\n  const isTouchEvent = e.type === 'touchend' || e.type === 'touchcancel';\n  if (!isTouchEvent) {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    if (e.pointerId !== data.pointerId) return;\n    targetTouch = e;\n  } else {\n    targetTouch = [...e.changedTouches].filter(t => t.identifier === data.touchId)[0];\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(e.type)) {\n    const proceed = ['pointercancel', 'contextmenu'].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  data.pointerId = null;\n  data.touchId = null;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  const swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nfunction onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}\n\nfunction onDocumentTouchStart() {\n  const swiper = this;\n  if (swiper.documentTouchHandlerProceeded) return;\n  swiper.documentTouchHandlerProceeded = true;\n  if (swiper.params.touchReleaseOnEdges) {\n    swiper.el.style.touchAction = 'auto';\n  }\n}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n  if (!el || typeof el === 'string') return;\n\n  // Touch Events\n  document[domMethod]('touchstart', swiper.onDocumentTouchStart, {\n    passive: false,\n    capture\n  });\n  el[domMethod]('touchstart', swiper.onTouchStart, {\n    passive: false\n  });\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('touchmove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('touchend', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('touchcancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('contextmenu', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nvar events$1 = {\n  attachEvents,\n  detachEvents\n};\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasGrabCursor = swiper.params.grabCursor;\n  const isGrabCursor = breakpointParams.grabCursor;\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n  if (wasGrabCursor && !isGrabCursor) {\n    swiper.unsetGrabCursor();\n  } else if (!wasGrabCursor && isGrabCursor) {\n    swiper.setGrabCursor();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  const wasLoop = params.loop;\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  const hasLoop = swiper.params.loop;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (initialized) {\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (!wasLoop && hasLoop) {\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (wasLoop && !hasLoop) {\n      swiper.loopDestroy();\n    }\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}\n\nfunction getBreakpoint(breakpoints, base, containerEl) {\n  if (base === void 0) {\n    base = 'window';\n  }\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = {\n  setBreakpoint,\n  getBreakpoint\n};\n\nfunction prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nfunction addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}\n\nfunction removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  if (!el || typeof el === 'string') return;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}\n\nvar classes = {\n  addClasses,\n  removeClasses\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nvar checkOverflow$1 = {\n  checkOverflow\n};\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  swiperElementNodeName: 'SWIPER-CONTAINER',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  eventsPrefix: 'swiper',\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopAddBlankSlides: true,\n  loopAdditionalSlides: 0,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideFullyVisibleClass: 'swiper-slide-fully-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};\n\nfunction moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (moduleParamName === 'navigation' && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {\n      params[moduleParamName].auto = true;\n    }\n    if (['pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {\n      params[moduleParamName].auto = true;\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}\n\n/* eslint no-param-reassign: \"off\" */\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events: events$1,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor() {\n    let el;\n    let params;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        pointerId: null,\n        touchId: null\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getDirectionLabel(property) {\n    if (this.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view, exact) {\n    if (view === void 0) {\n      view = 'current';\n    }\n    if (exact === void 0) {\n      exact = false;\n    }\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (typeof params.slidesPerView === 'number') return params.slidesPerView;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? Math.ceil(slides[activeIndex].swiperSlideSize) : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += Math.ceil(slides[i].swiperSlideSize);\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate) {\n    if (needUpdate === void 0) {\n      needUpdate = true;\n    }\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === swiper.params.swiperElementNodeName.toUpperCase()) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n      hostEl: swiper.isElement ? el.parentNode.host : el,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    const lazyElements = [...swiper.el.querySelectorAll('[loading=\"lazy\"]')];\n    if (swiper.isElement) {\n      lazyElements.push(...swiper.hostEl.querySelectorAll('[loading=\"lazy\"]'));\n    }\n    lazyElements.forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance, cleanStyles) {\n    if (deleteInstance === void 0) {\n      deleteInstance = true;\n    }\n    if (cleanStyles === void 0) {\n      cleanStyles = true;\n    }\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      if (el && typeof el !== 'string') {\n        el.removeAttribute('style');\n      }\n      if (wrapperEl) {\n        wrapperEl.removeAttribute('style');\n      }\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      if (swiper.el && typeof swiper.el !== 'string') {\n        swiper.el.swiper = null;\n      }\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\n\nexport { Swiper as S, defaults as d };\n","/* underscore in name -> watch for changes */\nconst paramsList = ['eventsPrefix', 'injectStyles', 'injectStylesUrls', 'modules', 'init', '_direction', 'oneWayMovement', 'swiperElementNodeName', 'touchEventsTarget', 'initialSlide', '_speed', 'cssMode', 'updateOnWindowResize', 'resizeObserver', 'nested', 'focusableElements', '_enabled', '_width', '_height', 'preventInteractionOnTransition', 'userAgent', 'url', '_edgeSwipeDetection', '_edgeSwipeThreshold', '_freeMode', '_autoHeight', 'setWrapperSize', 'virtualTranslate', '_effect', 'breakpoints', 'breakpointsBase', '_spaceBetween', '_slidesPerView', 'maxBackfaceHiddenSlides', '_grid', '_slidesPerGroup', '_slidesPerGroupSkip', '_slidesPerGroupAuto', '_centeredSlides', '_centeredSlidesBounds', '_slidesOffsetBefore', '_slidesOffsetAfter', 'normalizeSlideIndex', '_centerInsufficientSlides', '_watchOverflow', 'roundLengths', 'touchRatio', 'touchAngle', 'simulateTouch', '_shortSwipes', '_longSwipes', 'longSwipesRatio', 'longSwipesMs', '_followFinger', 'allowTouchMove', '_threshold', 'touchMoveStopPropagation', 'touchStartPreventDefault', 'touchStartForcePreventDefault', 'touchReleaseOnEdges', 'uniqueNavElements', '_resistance', '_resistanceRatio', '_watchSlidesProgress', '_grabCursor', 'preventClicks', 'preventClicksPropagation', '_slideToClickedSlide', '_loop', 'loopAdditionalSlides', 'loopAddBlankSlides', 'loopPreventsSliding', '_rewind', '_allowSlidePrev', '_allowSlideNext', '_swipeHandler', '_noSwiping', 'noSwipingClass', 'noSwipingSelector', 'passiveListeners', 'containerModifierClass', 'slideClass', 'slideActiveClass', 'slideVisibleClass', 'slideFullyVisibleClass', 'slideNextClass', 'slidePrevClass', 'slideBlankClass', 'wrapperClass', 'lazyPreloaderClass', 'lazyPreloadPrevNext', 'runCallbacksOnInit', 'observer', 'observeParents', 'observeSlideChildren',\n// modules\n'a11y', '_autoplay', '_controller', 'coverflowEffect', 'cubeEffect', 'fadeEffect', 'flipEffect', 'creativeEffect', 'cardsEffect', 'hashNavigation', 'history', 'keyboard', 'mousewheel', '_navigation', '_pagination', 'parallax', '_scrollbar', '_thumbs', 'virtual', 'zoom', 'control'];\n\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object' && !o.__swiper__;\n}\nfunction extend(target, src) {\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  Object.keys(src).filter(key => noExtend.indexOf(key) < 0).forEach(key => {\n    if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n      if (src[key].__swiper__) target[key] = src[key];else extend(target[key], src[key]);\n    } else {\n      target[key] = src[key];\n    }\n  });\n}\nfunction needsNavigation(params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return params.navigation && typeof params.navigation.nextEl === 'undefined' && typeof params.navigation.prevEl === 'undefined';\n}\nfunction needsPagination(params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return params.pagination && typeof params.pagination.el === 'undefined';\n}\nfunction needsScrollbar(params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return params.scrollbar && typeof params.scrollbar.el === 'undefined';\n}\nfunction uniqueClasses(classNames) {\n  if (classNames === void 0) {\n    classNames = '';\n  }\n  const classes = classNames.split(' ').map(c => c.trim()).filter(c => !!c);\n  const unique = [];\n  classes.forEach(c => {\n    if (unique.indexOf(c) < 0) unique.push(c);\n  });\n  return unique.join(' ');\n}\nfunction attrToProp(attrName) {\n  if (attrName === void 0) {\n    attrName = '';\n  }\n  return attrName.replace(/-[a-z]/g, l => l.toUpperCase().replace('-', ''));\n}\nfunction wrapperClass(className) {\n  if (className === void 0) {\n    className = '';\n  }\n  if (!className) return 'swiper-wrapper';\n  if (!className.includes('swiper-wrapper')) return `swiper-wrapper ${className}`;\n  return className;\n}\n\nfunction updateSwiper(_ref) {\n  let {\n    swiper,\n    slides,\n    passedParams,\n    changedParams,\n    nextEl,\n    prevEl,\n    scrollbarEl,\n    paginationEl\n  } = _ref;\n  const updateParams = changedParams.filter(key => key !== 'children' && key !== 'direction' && key !== 'wrapperClass');\n  const {\n    params: currentParams,\n    pagination,\n    navigation,\n    scrollbar,\n    virtual,\n    thumbs\n  } = swiper;\n  let needThumbsInit;\n  let needControllerInit;\n  let needPaginationInit;\n  let needScrollbarInit;\n  let needNavigationInit;\n  let loopNeedDestroy;\n  let loopNeedEnable;\n  let loopNeedReloop;\n  if (changedParams.includes('thumbs') && passedParams.thumbs && passedParams.thumbs.swiper && currentParams.thumbs && !currentParams.thumbs.swiper) {\n    needThumbsInit = true;\n  }\n  if (changedParams.includes('controller') && passedParams.controller && passedParams.controller.control && currentParams.controller && !currentParams.controller.control) {\n    needControllerInit = true;\n  }\n  if (changedParams.includes('pagination') && passedParams.pagination && (passedParams.pagination.el || paginationEl) && (currentParams.pagination || currentParams.pagination === false) && pagination && !pagination.el) {\n    needPaginationInit = true;\n  }\n  if (changedParams.includes('scrollbar') && passedParams.scrollbar && (passedParams.scrollbar.el || scrollbarEl) && (currentParams.scrollbar || currentParams.scrollbar === false) && scrollbar && !scrollbar.el) {\n    needScrollbarInit = true;\n  }\n  if (changedParams.includes('navigation') && passedParams.navigation && (passedParams.navigation.prevEl || prevEl) && (passedParams.navigation.nextEl || nextEl) && (currentParams.navigation || currentParams.navigation === false) && navigation && !navigation.prevEl && !navigation.nextEl) {\n    needNavigationInit = true;\n  }\n  const destroyModule = mod => {\n    if (!swiper[mod]) return;\n    swiper[mod].destroy();\n    if (mod === 'navigation') {\n      if (swiper.isElement) {\n        swiper[mod].prevEl.remove();\n        swiper[mod].nextEl.remove();\n      }\n      currentParams[mod].prevEl = undefined;\n      currentParams[mod].nextEl = undefined;\n      swiper[mod].prevEl = undefined;\n      swiper[mod].nextEl = undefined;\n    } else {\n      if (swiper.isElement) {\n        swiper[mod].el.remove();\n      }\n      currentParams[mod].el = undefined;\n      swiper[mod].el = undefined;\n    }\n  };\n  if (changedParams.includes('loop') && swiper.isElement) {\n    if (currentParams.loop && !passedParams.loop) {\n      loopNeedDestroy = true;\n    } else if (!currentParams.loop && passedParams.loop) {\n      loopNeedEnable = true;\n    } else {\n      loopNeedReloop = true;\n    }\n  }\n  updateParams.forEach(key => {\n    if (isObject(currentParams[key]) && isObject(passedParams[key])) {\n      Object.assign(currentParams[key], passedParams[key]);\n      if ((key === 'navigation' || key === 'pagination' || key === 'scrollbar') && 'enabled' in passedParams[key] && !passedParams[key].enabled) {\n        destroyModule(key);\n      }\n    } else {\n      const newValue = passedParams[key];\n      if ((newValue === true || newValue === false) && (key === 'navigation' || key === 'pagination' || key === 'scrollbar')) {\n        if (newValue === false) {\n          destroyModule(key);\n        }\n      } else {\n        currentParams[key] = passedParams[key];\n      }\n    }\n  });\n  if (updateParams.includes('controller') && !needControllerInit && swiper.controller && swiper.controller.control && currentParams.controller && currentParams.controller.control) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n  if (changedParams.includes('children') && slides && virtual && currentParams.virtual.enabled) {\n    virtual.slides = slides;\n    virtual.update(true);\n  } else if (changedParams.includes('virtual') && virtual && currentParams.virtual.enabled) {\n    if (slides) virtual.slides = slides;\n    virtual.update(true);\n  }\n  if (changedParams.includes('children') && slides && currentParams.loop) {\n    loopNeedReloop = true;\n  }\n  if (needThumbsInit) {\n    const initialized = thumbs.init();\n    if (initialized) thumbs.update(true);\n  }\n  if (needControllerInit) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n  if (needPaginationInit) {\n    if (swiper.isElement && (!paginationEl || typeof paginationEl === 'string')) {\n      paginationEl = document.createElement('div');\n      paginationEl.classList.add('swiper-pagination');\n      paginationEl.part.add('pagination');\n      swiper.el.appendChild(paginationEl);\n    }\n    if (paginationEl) currentParams.pagination.el = paginationEl;\n    pagination.init();\n    pagination.render();\n    pagination.update();\n  }\n  if (needScrollbarInit) {\n    if (swiper.isElement && (!scrollbarEl || typeof scrollbarEl === 'string')) {\n      scrollbarEl = document.createElement('div');\n      scrollbarEl.classList.add('swiper-scrollbar');\n      scrollbarEl.part.add('scrollbar');\n      swiper.el.appendChild(scrollbarEl);\n    }\n    if (scrollbarEl) currentParams.scrollbar.el = scrollbarEl;\n    scrollbar.init();\n    scrollbar.updateSize();\n    scrollbar.setTranslate();\n  }\n  if (needNavigationInit) {\n    if (swiper.isElement) {\n      if (!nextEl || typeof nextEl === 'string') {\n        nextEl = document.createElement('div');\n        nextEl.classList.add('swiper-button-next');\n        nextEl.innerHTML = swiper.hostEl.constructor.nextButtonSvg;\n        nextEl.part.add('button-next');\n        swiper.el.appendChild(nextEl);\n      }\n      if (!prevEl || typeof prevEl === 'string') {\n        prevEl = document.createElement('div');\n        prevEl.classList.add('swiper-button-prev');\n        prevEl.innerHTML = swiper.hostEl.constructor.prevButtonSvg;\n        prevEl.part.add('button-prev');\n        swiper.el.appendChild(prevEl);\n      }\n    }\n    if (nextEl) currentParams.navigation.nextEl = nextEl;\n    if (prevEl) currentParams.navigation.prevEl = prevEl;\n    navigation.init();\n    navigation.update();\n  }\n  if (changedParams.includes('allowSlideNext')) {\n    swiper.allowSlideNext = passedParams.allowSlideNext;\n  }\n  if (changedParams.includes('allowSlidePrev')) {\n    swiper.allowSlidePrev = passedParams.allowSlidePrev;\n  }\n  if (changedParams.includes('direction')) {\n    swiper.changeDirection(passedParams.direction, false);\n  }\n  if (loopNeedDestroy || loopNeedReloop) {\n    swiper.loopDestroy();\n  }\n  if (loopNeedEnable || loopNeedReloop) {\n    swiper.loopCreate();\n  }\n  swiper.update();\n}\n\nexport { needsPagination as a, needsScrollbar as b, attrToProp as c, uniqueClasses as d, extend as e, isObject as i, needsNavigation as n, paramsList as p, updateSwiper as u, wrapperClass as w };\n","/**\n * Swiper React 11.1.14\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2024 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 12, 2024\n */\n\nimport React, { useEffect, useLayoutEffect, useContext, createContext, forwardRef, useState, useRef } from 'react';\nimport { S as Swiper$1 } from './shared/swiper-core.mjs';\nimport { g as getParams, m as mountSwiper, a as getChangedParams, u as updateOnVirtualData } from './shared/update-on-virtual-data.mjs';\nimport { d as uniqueClasses, w as wrapperClass, n as needsNavigation, b as needsScrollbar, a as needsPagination, e as extend, u as updateSwiper } from './shared/update-swiper.mjs';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction isChildSwiperSlide(child) {\n  return child.type && child.type.displayName && child.type.displayName.includes('SwiperSlide');\n}\nfunction processChildren(c) {\n  const slides = [];\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.children) {\n      processChildren(child.props.children).forEach(slide => slides.push(slide));\n    }\n  });\n  return slides;\n}\nfunction getChildren(c) {\n  const slides = [];\n  const slots = {\n    'container-start': [],\n    'container-end': [],\n    'wrapper-start': [],\n    'wrapper-end': []\n  };\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.slot && slots[child.props.slot]) {\n      slots[child.props.slot].push(child);\n    } else if (child.props && child.props.children) {\n      const foundSlides = processChildren(child.props.children);\n      if (foundSlides.length > 0) {\n        foundSlides.forEach(slide => slides.push(slide));\n      } else {\n        slots['container-end'].push(child);\n      }\n    } else {\n      slots['container-end'].push(child);\n    }\n  });\n  return {\n    slides,\n    slots\n  };\n}\n\nfunction renderVirtual(swiper, slides, virtualData) {\n  if (!virtualData) return null;\n  const getSlideIndex = index => {\n    let slideIndex = index;\n    if (index < 0) {\n      slideIndex = slides.length + index;\n    } else if (slideIndex >= slides.length) {\n      // eslint-disable-next-line\n      slideIndex = slideIndex - slides.length;\n    }\n    return slideIndex;\n  };\n  const style = swiper.isHorizontal() ? {\n    [swiper.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`\n  } : {\n    top: `${virtualData.offset}px`\n  };\n  const {\n    from,\n    to\n  } = virtualData;\n  const loopFrom = swiper.params.loop ? -slides.length : 0;\n  const loopTo = swiper.params.loop ? slides.length * 2 : slides.length;\n  const slidesToRender = [];\n  for (let i = loopFrom; i < loopTo; i += 1) {\n    if (i >= from && i <= to) {\n      slidesToRender.push(slides[getSlideIndex(i)]);\n    }\n  }\n  return slidesToRender.map((child, index) => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      swiper,\n      style,\n      key: child.props.virtualIndex || child.key || `slide-${index}`\n    });\n  });\n}\n\nfunction useIsomorphicLayoutEffect(callback, deps) {\n  // eslint-disable-next-line\n  if (typeof window === 'undefined') return useEffect(callback, deps);\n  return useLayoutEffect(callback, deps);\n}\n\nconst SwiperSlideContext = /*#__PURE__*/createContext(null);\nconst useSwiperSlide = () => {\n  return useContext(SwiperSlideContext);\n};\nconst SwiperContext = /*#__PURE__*/createContext(null);\nconst useSwiper = () => {\n  return useContext(SwiperContext);\n};\n\nconst Swiper = /*#__PURE__*/forwardRef(function (_temp, externalElRef) {\n  let {\n    className,\n    tag: Tag = 'div',\n    wrapperTag: WrapperTag = 'div',\n    children,\n    onSwiper,\n    ...rest\n  } = _temp === void 0 ? {} : _temp;\n  let eventsAssigned = false;\n  const [containerClasses, setContainerClasses] = useState('swiper');\n  const [virtualData, setVirtualData] = useState(null);\n  const [breakpointChanged, setBreakpointChanged] = useState(false);\n  const initializedRef = useRef(false);\n  const swiperElRef = useRef(null);\n  const swiperRef = useRef(null);\n  const oldPassedParamsRef = useRef(null);\n  const oldSlides = useRef(null);\n  const nextElRef = useRef(null);\n  const prevElRef = useRef(null);\n  const paginationElRef = useRef(null);\n  const scrollbarElRef = useRef(null);\n  const {\n    params: swiperParams,\n    passedParams,\n    rest: restProps,\n    events\n  } = getParams(rest);\n  const {\n    slides,\n    slots\n  } = getChildren(children);\n  const onBeforeBreakpoint = () => {\n    setBreakpointChanged(!breakpointChanged);\n  };\n  Object.assign(swiperParams.on, {\n    _containerClasses(swiper, classes) {\n      setContainerClasses(classes);\n    }\n  });\n  const initSwiper = () => {\n    // init swiper\n    Object.assign(swiperParams.on, events);\n    eventsAssigned = true;\n    const passParams = {\n      ...swiperParams\n    };\n    delete passParams.wrapperClass;\n    swiperRef.current = new Swiper$1(passParams);\n    if (swiperRef.current.virtual && swiperRef.current.params.virtual.enabled) {\n      swiperRef.current.virtual.slides = slides;\n      const extendWith = {\n        cache: false,\n        slides,\n        renderExternal: setVirtualData,\n        renderExternalUpdate: false\n      };\n      extend(swiperRef.current.params.virtual, extendWith);\n      extend(swiperRef.current.originalParams.virtual, extendWith);\n    }\n  };\n  if (!swiperElRef.current) {\n    initSwiper();\n  }\n\n  // Listen for breakpoints change\n  if (swiperRef.current) {\n    swiperRef.current.on('_beforeBreakpoint', onBeforeBreakpoint);\n  }\n  const attachEvents = () => {\n    if (eventsAssigned || !events || !swiperRef.current) return;\n    Object.keys(events).forEach(eventName => {\n      swiperRef.current.on(eventName, events[eventName]);\n    });\n  };\n  const detachEvents = () => {\n    if (!events || !swiperRef.current) return;\n    Object.keys(events).forEach(eventName => {\n      swiperRef.current.off(eventName, events[eventName]);\n    });\n  };\n  useEffect(() => {\n    return () => {\n      if (swiperRef.current) swiperRef.current.off('_beforeBreakpoint', onBeforeBreakpoint);\n    };\n  });\n\n  // set initialized flag\n  useEffect(() => {\n    if (!initializedRef.current && swiperRef.current) {\n      swiperRef.current.emitSlidesClasses();\n      initializedRef.current = true;\n    }\n  });\n\n  // mount swiper\n  useIsomorphicLayoutEffect(() => {\n    if (externalElRef) {\n      externalElRef.current = swiperElRef.current;\n    }\n    if (!swiperElRef.current) return;\n    if (swiperRef.current.destroyed) {\n      initSwiper();\n    }\n    mountSwiper({\n      el: swiperElRef.current,\n      nextEl: nextElRef.current,\n      prevEl: prevElRef.current,\n      paginationEl: paginationElRef.current,\n      scrollbarEl: scrollbarElRef.current,\n      swiper: swiperRef.current\n    }, swiperParams);\n    if (onSwiper && !swiperRef.current.destroyed) onSwiper(swiperRef.current);\n    // eslint-disable-next-line\n    return () => {\n      if (swiperRef.current && !swiperRef.current.destroyed) {\n        swiperRef.current.destroy(true, false);\n      }\n    };\n  }, []);\n\n  // watch for params change\n  useIsomorphicLayoutEffect(() => {\n    attachEvents();\n    const changedParams = getChangedParams(passedParams, oldPassedParamsRef.current, slides, oldSlides.current, c => c.key);\n    oldPassedParamsRef.current = passedParams;\n    oldSlides.current = slides;\n    if (changedParams.length && swiperRef.current && !swiperRef.current.destroyed) {\n      updateSwiper({\n        swiper: swiperRef.current,\n        slides,\n        passedParams,\n        changedParams,\n        nextEl: nextElRef.current,\n        prevEl: prevElRef.current,\n        scrollbarEl: scrollbarElRef.current,\n        paginationEl: paginationElRef.current\n      });\n    }\n    return () => {\n      detachEvents();\n    };\n  });\n\n  // update on virtual update\n  useIsomorphicLayoutEffect(() => {\n    updateOnVirtualData(swiperRef.current);\n  }, [virtualData]);\n\n  // bypass swiper instance to slides\n  function renderSlides() {\n    if (swiperParams.virtual) {\n      return renderVirtual(swiperRef.current, slides, virtualData);\n    }\n    return slides.map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        swiper: swiperRef.current,\n        swiperSlideIndex: index\n      });\n    });\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    ref: swiperElRef,\n    className: uniqueClasses(`${containerClasses}${className ? ` ${className}` : ''}`)\n  }, restProps), /*#__PURE__*/React.createElement(SwiperContext.Provider, {\n    value: swiperRef.current\n  }, slots['container-start'], /*#__PURE__*/React.createElement(WrapperTag, {\n    className: wrapperClass(swiperParams.wrapperClass)\n  }, slots['wrapper-start'], renderSlides(), slots['wrapper-end']), needsNavigation(swiperParams) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: prevElRef,\n    className: \"swiper-button-prev\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: nextElRef,\n    className: \"swiper-button-next\"\n  })), needsScrollbar(swiperParams) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollbarElRef,\n    className: \"swiper-scrollbar\"\n  }), needsPagination(swiperParams) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: paginationElRef,\n    className: \"swiper-pagination\"\n  }), slots['container-end']));\n});\nSwiper.displayName = 'Swiper';\n\nconst SwiperSlide = /*#__PURE__*/forwardRef(function (_temp, externalRef) {\n  let {\n    tag: Tag = 'div',\n    children,\n    className = '',\n    swiper,\n    zoom,\n    lazy,\n    virtualIndex,\n    swiperSlideIndex,\n    ...rest\n  } = _temp === void 0 ? {} : _temp;\n  const slideElRef = useRef(null);\n  const [slideClasses, setSlideClasses] = useState('swiper-slide');\n  const [lazyLoaded, setLazyLoaded] = useState(false);\n  function updateClasses(_s, el, classNames) {\n    if (el === slideElRef.current) {\n      setSlideClasses(classNames);\n    }\n  }\n  useIsomorphicLayoutEffect(() => {\n    if (typeof swiperSlideIndex !== 'undefined') {\n      slideElRef.current.swiperSlideIndex = swiperSlideIndex;\n    }\n    if (externalRef) {\n      externalRef.current = slideElRef.current;\n    }\n    if (!slideElRef.current || !swiper) {\n      return;\n    }\n    if (swiper.destroyed) {\n      if (slideClasses !== 'swiper-slide') {\n        setSlideClasses('swiper-slide');\n      }\n      return;\n    }\n    swiper.on('_slideClass', updateClasses);\n    // eslint-disable-next-line\n    return () => {\n      if (!swiper) return;\n      swiper.off('_slideClass', updateClasses);\n    };\n  });\n  useIsomorphicLayoutEffect(() => {\n    if (swiper && slideElRef.current && !swiper.destroyed) {\n      setSlideClasses(swiper.getSlideClasses(slideElRef.current));\n    }\n  }, [swiper]);\n  const slideData = {\n    isActive: slideClasses.indexOf('swiper-slide-active') >= 0,\n    isVisible: slideClasses.indexOf('swiper-slide-visible') >= 0,\n    isPrev: slideClasses.indexOf('swiper-slide-prev') >= 0,\n    isNext: slideClasses.indexOf('swiper-slide-next') >= 0\n  };\n  const renderChildren = () => {\n    return typeof children === 'function' ? children(slideData) : children;\n  };\n  const onLoad = () => {\n    setLazyLoaded(true);\n  };\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    ref: slideElRef,\n    className: uniqueClasses(`${slideClasses}${className ? ` ${className}` : ''}`),\n    \"data-swiper-slide-index\": virtualIndex,\n    onLoad: onLoad\n  }, rest), zoom && /*#__PURE__*/React.createElement(SwiperSlideContext.Provider, {\n    value: slideData\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-zoom-container\",\n    \"data-swiper-zoom\": typeof zoom === 'number' ? zoom : undefined\n  }, renderChildren(), lazy && !lazyLoaded && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-lazy-preloader\"\n  }))), !zoom && /*#__PURE__*/React.createElement(SwiperSlideContext.Provider, {\n    value: slideData\n  }, renderChildren(), lazy && !lazyLoaded && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-lazy-preloader\"\n  })));\n});\nSwiperSlide.displayName = 'SwiperSlide';\n\nexport { Swiper, SwiperSlide, useSwiper, useSwiperSlide };\n","import { e as extend, p as paramsList, i as isObject, n as needsNavigation, a as needsPagination, b as needsScrollbar } from './update-swiper.mjs';\nimport { d as defaults } from './swiper-core.mjs';\n\nfunction getParams(obj, splitEvents) {\n  if (obj === void 0) {\n    obj = {};\n  }\n  if (splitEvents === void 0) {\n    splitEvents = true;\n  }\n  const params = {\n    on: {}\n  };\n  const events = {};\n  const passedParams = {};\n  extend(params, defaults);\n  params._emitClasses = true;\n  params.init = false;\n  const rest = {};\n  const allowedParams = paramsList.map(key => key.replace(/_/, ''));\n  const plainObj = Object.assign({}, obj);\n  Object.keys(plainObj).forEach(key => {\n    if (typeof obj[key] === 'undefined') return;\n    if (allowedParams.indexOf(key) >= 0) {\n      if (isObject(obj[key])) {\n        params[key] = {};\n        passedParams[key] = {};\n        extend(params[key], obj[key]);\n        extend(passedParams[key], obj[key]);\n      } else {\n        params[key] = obj[key];\n        passedParams[key] = obj[key];\n      }\n    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {\n      if (splitEvents) {\n        events[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n      } else {\n        params.on[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n      }\n    } else {\n      rest[key] = obj[key];\n    }\n  });\n  ['navigation', 'pagination', 'scrollbar'].forEach(key => {\n    if (params[key] === true) params[key] = {};\n    if (params[key] === false) delete params[key];\n  });\n  return {\n    params,\n    passedParams,\n    rest,\n    events\n  };\n}\n\nfunction mountSwiper(_ref, swiperParams) {\n  let {\n    el,\n    nextEl,\n    prevEl,\n    paginationEl,\n    scrollbarEl,\n    swiper\n  } = _ref;\n  if (needsNavigation(swiperParams) && nextEl && prevEl) {\n    swiper.params.navigation.nextEl = nextEl;\n    swiper.originalParams.navigation.nextEl = nextEl;\n    swiper.params.navigation.prevEl = prevEl;\n    swiper.originalParams.navigation.prevEl = prevEl;\n  }\n  if (needsPagination(swiperParams) && paginationEl) {\n    swiper.params.pagination.el = paginationEl;\n    swiper.originalParams.pagination.el = paginationEl;\n  }\n  if (needsScrollbar(swiperParams) && scrollbarEl) {\n    swiper.params.scrollbar.el = scrollbarEl;\n    swiper.originalParams.scrollbar.el = scrollbarEl;\n  }\n  swiper.init(el);\n}\n\nfunction getChangedParams(swiperParams, oldParams, children, oldChildren, getKey) {\n  const keys = [];\n  if (!oldParams) return keys;\n  const addKey = key => {\n    if (keys.indexOf(key) < 0) keys.push(key);\n  };\n  if (children && oldChildren) {\n    const oldChildrenKeys = oldChildren.map(getKey);\n    const childrenKeys = children.map(getKey);\n    if (oldChildrenKeys.join('') !== childrenKeys.join('')) addKey('children');\n    if (oldChildren.length !== children.length) addKey('children');\n  }\n  const watchParams = paramsList.filter(key => key[0] === '_').map(key => key.replace(/_/, ''));\n  watchParams.forEach(key => {\n    if (key in swiperParams && key in oldParams) {\n      if (isObject(swiperParams[key]) && isObject(oldParams[key])) {\n        const newKeys = Object.keys(swiperParams[key]);\n        const oldKeys = Object.keys(oldParams[key]);\n        if (newKeys.length !== oldKeys.length) {\n          addKey(key);\n        } else {\n          newKeys.forEach(newKey => {\n            if (swiperParams[key][newKey] !== oldParams[key][newKey]) {\n              addKey(key);\n            }\n          });\n          oldKeys.forEach(oldKey => {\n            if (swiperParams[key][oldKey] !== oldParams[key][oldKey]) addKey(key);\n          });\n        }\n      } else if (swiperParams[key] !== oldParams[key]) {\n        addKey(key);\n      }\n    }\n  });\n  return keys;\n}\n\nconst updateOnVirtualData = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params.virtual || swiper.params.virtual && !swiper.params.virtual.enabled) return;\n  swiper.updateSlides();\n  swiper.updateProgress();\n  swiper.updateSlidesClasses();\n  if (swiper.parallax && swiper.params.parallax && swiper.params.parallax.enabled) {\n    swiper.parallax.setTranslate();\n  }\n};\n\nexport { getChangedParams as a, getParams as g, mountSwiper as m, updateOnVirtualData as u };\n","import { e as elementChildren, c as createElement } from './utils.mjs';\n\nfunction createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}\n\nexport { createElementIfNotDefined as c };\n","import { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { m as makeElementsArray } from '../shared/utils.mjs';\n\nfunction Navigation(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.querySelector(el) || swiper.hostEl.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      } else if (res && res.length === 1) {\n        res = res[0];\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (swiper.enabled) {\n      update();\n      return;\n    }\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.add(swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    let targetIsButton = prevEl.includes(targetEl) || nextEl.includes(targetEl);\n    if (swiper.isElement && !targetIsButton) {\n      const path = e.path || e.composedPath && e.composedPath();\n      if (path) {\n        targetIsButton = path.find(pathEl => nextEl.includes(pathEl) || prevEl.includes(pathEl));\n      }\n    }\n    if (swiper.params.navigation.hideOnClick && !targetIsButton) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}\n\nexport { Navigation as default };\n","function classesToSelector(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}\n\nexport { classesToSelector as c };\n","import { c as classesToSelector } from '../shared/classes-to-selector.mjs';\nimport { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { m as makeElementsArray, f as elementOuterSize, h as elementIndex, a as elementParents } from '../shared/utils.mjs';\n\nfunction Pagination(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function getMoveDirection(prevIndex, nextIndex, length) {\n    prevIndex = prevIndex % length;\n    nextIndex = nextIndex % length;\n    if (nextIndex === prevIndex + 1) {\n      return 'next';\n    } else if (nextIndex === prevIndex - 1) {\n      return 'previous';\n    }\n    return;\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const moveDirection = getMoveDirection(swiper.realIndex, index, swiper.slides.length);\n      if (moveDirection === 'next') {\n        swiper.slideNext();\n      } else if (moveDirection === 'previous') {\n        swiper.slidePrev();\n      } else {\n        swiper.slideToLoop(index);\n      }\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          } else if (swiper.isElement) {\n            bullet.setAttribute('part', 'bullet');\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (swiper.isElement) {\n          bullets.forEach((bulletEl, bulletIndex) => {\n            bulletEl.setAttribute('part', bulletIndex === current ? 'bullet-active' : 'bullet');\n          });\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.grid && swiper.params.grid.rows > 1 ? swiper.slides.length / Math.ceil(swiper.params.grid.rows) : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          // prettier-ignore\n          paginationHTML += `<${params.bulletElement} ${swiper.isElement ? 'part=\"bullet\"' : ''} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(...(params.clickableClass || '').split(' '));\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.classList.remove(...(params.clickableClass || '').split(' '));\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const el = makeElementsArray(swiper.pagination.el);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}\n\nexport { Pagination as default };\n","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { m as makeElementsArray, i as classesToTokens, c as createElement, n as nextTick, b as elementOffset } from '../shared/utils.mjs';\nimport { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { c as classesToSelector } from '../shared/classes-to-selector.mjs';\n\nfunction Scrollbar(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault && e.cancelable) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n      if (!el.length) return;\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(classesToSelector(swiper.params.scrollbar.dragClass));\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](...classesToTokens(swiper.params.scrollbar.lockClass));\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(...classesToTokens(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass));\n    }\n    disableDraggable();\n  }\n  on('changeDirection', () => {\n    if (!swiper.scrollbar || !swiper.scrollbar.el) return;\n    const params = swiper.params.scrollbar;\n    let {\n      el\n    } = swiper.scrollbar;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock changeDirection', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](...classesToTokens(swiper.params.scrollbar.lockClass));\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass));\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass));\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass));\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(...classesToTokens(swiper.params.scrollbar.scrollbarDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}\n\nexport { Scrollbar as default };\n","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\nimport { c as classesToSelector } from '../shared/classes-to-selector.mjs';\nimport { c as createElement, h as elementIndex, m as makeElementsArray } from '../shared/utils.mjs';\n\nfunction A11y(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      containerRole: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null,\n      scrollOnFocus: true\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  let preventFocusHandler;\n  let focusTargetSlideEl;\n  let visibilityChangedTimestamp = new Date().getTime();\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  function getRandomNumber(size) {\n    if (size === void 0) {\n      size = 16;\n    }\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && swiper.navigation.nextEl) {\n      const prevEls = makeElementsArray(swiper.navigation.prevEl);\n      const nextEls = makeElementsArray(swiper.navigation.nextEl);\n      if (nextEls.includes(targetEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          notify(params.lastSlideMessage);\n        } else {\n          notify(params.nextSlideMessage);\n        }\n      }\n      if (prevEls.includes(targetEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          notify(params.firstSlideMessage);\n        } else {\n          notify(params.prevSlideMessage);\n        }\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = e => {\n    if (focusTargetSlideEl && focusTargetSlideEl !== e.target && !focusTargetSlideEl.contains(e.target)) {\n      preventFocusHandler = true;\n    }\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    preventFocusHandler = false;\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const onVisibilityChange = e => {\n    visibilityChangedTimestamp = new Date().getTime();\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked || !swiper.params.a11y.scrollOnFocus) return;\n    if (new Date().getTime() - visibilityChangedTimestamp < 100) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    focusTargetSlideEl = slideEl;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    requestAnimationFrame(() => {\n      if (preventFocusHandler) return;\n      if (swiper.params.loop) {\n        swiper.slideToLoop(parseInt(slideEl.getAttribute('data-swiper-slide-index')), 0);\n      } else {\n        swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n      }\n      preventFocusHandler = false;\n    });\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n    if (params.containerRole) {\n      addElRole(containerEl, params.containerRole);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = makeElementsArray(swiper.pagination.el);\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = makeElementsArray(swiper.pagination.el);\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n    // Tab focus\n    if (swiper.el && typeof swiper.el !== 'string') {\n      swiper.el.removeEventListener('focus', handleFocus, true);\n      swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n      swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n    }\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}\n\nexport { A11y as default };\n","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\n\n/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nfunction Autoplay(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit,\n    params\n  } = _ref;\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: false,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime();\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  let pausedByPointerEnter;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    if (pausedByPointerEnter || e.detail && e.detail.bySwiperTouchMove) {\n      return;\n    }\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    autoplayStartTime = new Date().getTime();\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pausedByPointerEnter = true;\n    if (swiper.animating || swiper.autoplay.paused) return;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByPointerEnter = false;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    if (swiper.el && typeof swiper.el !== 'string') {\n      swiper.el.removeEventListener('pointerenter', onPointerEnter);\n      swiper.el.removeEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('_freeModeStaticRelease', () => {\n    if (pausedByTouch || pausedByInteraction) {\n      resume();\n    }\n  });\n  on('_freeModeNoMomentumRelease', () => {\n    if (!swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}\n\nexport { Autoplay as default };\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/jsx-boolean-value */\n// eslint-disable-next-line react/no-array-index-key\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\n\nimport React from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport {\n  Navigation, Pagination, Scrollbar, A11y, Autoplay,\n} from 'swiper/modules';\n\nimport { SecondaryColor } from 'customize';\n\nimport 'swiper/swiper-bundle.css';\nimport 'swiper/css';\nimport 'swiper/css/autoplay';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\n\nexport default function Testimonial({ data }) {\n  return (\n    <section className=\"container mx-auto\">\n      <Fade direction=\"up\">\n        <h1 className={`text-5xl text-${SecondaryColor} text-center font-bold`}>Testimonials</h1>\n      </Fade>\n      <Fade direction=\"up\" delay={500}>\n        <p className=\"font-light text-lg text-gray-400 text-center mb-3 sm:mb-3 xl:mb-4\">\n          What they said about us.\n        </p>\n      </Fade>\n      {/* eslint-disable-next-line react/jsx-max-props-per-line */}\n      <Swiper\n        modules={[Navigation, Pagination, Scrollbar, A11y, Autoplay]}\n        className=\"mySwiper\"\n        loop={true}\n        navigation={true}\n        autoplay={{ delay: 4000, disableOnInteraction: false }}\n      >\n        {data.map((item) => (\n          <SwiperSlide key={item.id}>\n            <div className=\"flex-col xl:w-full rounded-2xl shadow-xl sm:shadow-2xl border px-8 py-6 mx-2 mb-6 mt-6 xl:mx-auto sm:mx-6 sm:mb-12\">\n              <div className=\"flex items-center mb-5\">\n                <img src={item.imageUrl} alt=\"Testimoni\" className=\"w-20 h-20 rounded-full\" />\n                <div className=\"flex-col pl-5\">\n                  <h2 className={`text-${SecondaryColor} text-2xl`}>{item.name}</h2>\n                  <p className=\"font-light text-gray-400\">{item.company}</p>\n                </div>\n              </div>\n              <p className=\"font-light text-2xl text-gray-400 pl-5 pt-3 pb-1\">\n                {item.testimoni}\n              </p>\n            </div>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </section>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\n\nimport React from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\n\nimport Button from '../elements/Button/index.js';\n\nimport { ActiveTheme } from '../customize';\n\nexport default function Discuss() {\n  return (\n    <Fade direction=\"up\" triggerOnce>\n      <section className=\"flex container mx-auto justify-center\">\n        <div className={`flex flex-col w-10/12 sm:w-11/12 xl:w-10/12 rounded-2xl bg-${ActiveTheme} text-gray-100 py-14 sm:px-12 sm:py-20 xl:px-16 shadow-2xl discuss`}>\n          <div className=\"flex flex-col sm:flex-row mb-3 sm:mb-9 p-5 sm:p-0 sm:items-center\">\n            <h1 className=\"w-2/3 text-5xl sm:text-6xl leading-tight font-semibold\">\n              Have an awesome project in mind?\n            </h1>\n            <Fade direction=\"up\" triggerOnce delay={500}>\n              <Button\n                href=\"/discuss-project\"\n                type=\"link\"\n                className={`\n                  flex items-center justify-center\n                  w-auto sm:w-48 md:w-64 lg:w-96\n                  h-20 px-8 py-4 mt-6 sm:mt-0\n                  sm:ml-4 lg:ml-0 xl:ml-12 transform transition duration-300\n                  rounded-3xl shadow-xl font-semibold tracking-wider\n                  bg-gradient-to-r from-purple-500 via-purple-600 to-indigo-500 text-white\n                  hover:shadow-2xl hover:scale-105\n                `}\n              >\n                Let&apos;s Discuss!\n              </Button>\n            </Fade>\n          </div>\n          <Fade delay={300} triggerOnce>\n            <p className=\"font-light p-5 sm:p-0 text-lg sm:text-xl lg:text-2xl xl:text-xl mb-1\">Lets discuss it and make your dream software come true!</p>\n          </Fade>\n        </div>\n      </section>\n    </Fade>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\n\nimport React from 'react';\n\nimport BrandIcon from './BrandIcon';\nimport Button from '../elements/Button/index.js';\n\nimport {\n  ActiveTheme,\n  SecondaryColor,\n  footerSubtitle,\n  footerOfficeEmail,\n  footerOfficeLocation,\n  footerCopyright,\n  footerCopyrightSublinePartA,\n  footerCopyrightSublinePartB,\n  partBbuttonLink,\n  instagramLink,\n  linkedinLink,\n  githubLink,\n} from '../customize';\n\nexport default function Footer() {\n  return (\n    <div className=\"bg-gray-50 border-t border-gray-200 pb-6\">\n      <div className=\"container flex-col mx-auto \">\n        <div className=\"flex flex-col sm:flex-row mt-8 justify-center\">\n          <div className=\"w-1/3 flex-col ml-16 mr-8\">\n            <BrandIcon />\n            <p className=\"w-full text-lg text-gray-400 font-light\">\n              {footerSubtitle}\n            </p>\n          </div>\n          <div className=\"w-1/3 mt-0 ml-16 mr-0 sm:ml-0 sm:mr-5\">\n            <h1 className={`text-lg text-${SecondaryColor} pt-4 pb-2`}>\n              Office\n            </h1>\n            <p className=\"text-lg text-gray-400 font-light\">\n              {footerOfficeEmail}\n            </p>\n            <p className=\"text-lg text-gray-400 font-light\">\n              {footerOfficeLocation}\n            </p>\n          </div>\n          <div className=\"w-1/3 ml-16 sm:ml-0 mt-0\">\n            <h1 className={`text-lg text-${SecondaryColor} pt-4 pb-2`}>\n              Social\n            </h1>\n            <Button href={linkedinLink} type=\"link\" target=\"_blank\" className=\"flex text-lg text-gray-400 font-light hover:underline\" isExternal>\n              LinkedIn\n            </Button>\n            <Button href={instagramLink} type=\"link\" target=\"_blank\" className=\"flex text-lg text-gray-400 font-light hover:underline\" isExternal>\n              Instagram\n            </Button>\n            <Button href={githubLink} type=\"link\" target=\"_blank\" className=\"flex text-lg text-gray-400 font-light hover:underline\" isExternal>\n              Github\n            </Button>\n          </div>\n        </div>\n        <div className=\"flex-col text-center mt-7\">\n          <p className=\"text-lg text-gray-400 font-light\">\n            {footerCopyright}\n          </p>\n          <div className=\"flex-row\">\n            <p className=\"inline-block text-lg text-gray-400 font-light\">\n              {footerCopyrightSublinePartA}\n            </p>\n            <Button href={partBbuttonLink} type=\"link\" target=\"_blank\" className={`text-lg text-${ActiveTheme} font-light`} isExternal>\n              {footerCopyrightSublinePartB}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from 'react';\n\nimport {\n  Services, Portfolios, Advantages, Testimonials,\n} from 'json/landingPageData';\nimport Header from 'parts/Header';\nimport Hero from 'parts/Hero';\nimport Service from 'parts/Service';\nimport Portfolio from 'parts/Portfolio';\nimport Advantage from 'parts/Advantage';\nimport Testimonial from 'parts/Testimonial';\nimport Discuss from 'parts/Discuss';\nimport Footer from 'parts/Footer';\n\nexport default class LandingPage extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Hero />\n        <Service data={Services} />\n        <Portfolio data={Portfolios} />\n        <Advantage data={Advantages} />\n        <Testimonial data={Testimonials} />\n        <Discuss />\n        <Footer />\n      </>\n    );\n  }\n}\n","var _path, _path2, _path3, _path4, _path5, _path6, _rect, _path7, _polygon, _circle, _circle2, _path8, _circle3, _path9, _path10, _path11, _path12, _circle4, _path13, _path14, _path15, _path16, _path17, _path18, _polygon2, _path19, _polygon3, _path20, _rect2, _rect3, _rect4, _circle5, _circle6, _circle7, _rect5, _rect6, _path21, _path22, _path23, _path24, _circle8, _path25, _path26, _path27, _path28, _rect7, _polygon4, _polygon5, _rect8, _rect9, _rect10, _circle9, _circle10, _circle11, _rect11, _rect12, _path29, _path30, _path31, _path32, _polygon6, _circle12, _circle13, _path33, _circle14, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawVrChatReS80U(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 1157.30725,\n    height: 499.03377,\n    viewBox: \"0 0 1157.30725 499.03377\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M434.02278,633.42881l25.9296-8.22505a87.77015,87.77015,0,0,0-.62466-42.22558c-10.41724,23.16251-40.97985,28.83748-58.39353,47.32491a52.79388,52.79388,0,0,0-13.50513,43.722L381.97373,692.531a88.46589,88.46589,0,0,0,64.38476-36.62448A85.45322,85.45322,0,0,0,456.37132,636.951C445.31335,635.84408,434.02278,633.42881,434.02278,633.42881Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#f2f2f2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M406.31536,599.2087l19.53987-18.92588a87.77,87.77,0,0,0-19.39089-37.5151c1.00616,25.37732-23.81774,44.087-31.15868,68.40021a52.79393,52.79393,0,0,0,7.41151,45.15609l3.37052,18.99652A88.466,88.466,0,0,0,427.381,613.82569a85.45335,85.45335,0,0,0,.5081-21.43152C417.49807,596.33508,406.31536,599.2087,406.31536,599.2087Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#f2f2f2\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M783.95873,615.19273l7.98486-26.00456a87.77011,87.77011,0,0,0-35.0839-23.50552c13.12443,21.74328.40683,50.10771,5.70643,74.9459a52.79388,52.79388,0,0,0,28.27718,35.97783l12.11706,15.0135a88.466,88.466,0,0,0,6.50218-73.78667,85.45313,85.45313,0,0,0-9.89442-19.01759C792.36762,607.28064,783.95873,615.19273,783.95873,615.19273Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#f2f2f2\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M740.05341,618.5153,735.60266,591.679a87.77018,87.77018,0,0,0-41.8846-5.39168c21.444,13.60791,22.71122,44.66709,38.53194,64.53481a52.7939,52.7939,0,0,0,41.3547,19.5906l17.541,8.03374a88.46592,88.46592,0,0,0-27.08772-68.942,85.4532,85.4532,0,0,0-17.33741-12.60883C744.05108,607.68344,740.05341,618.5153,740.05341,618.5153Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#f2f2f2\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M627.297,436.65058a8.03684,8.03684,0,0,1,1.38129.413l17.46111-47.37293,1.6317-48.62666a12.09185,12.09185,0,0,1,24.1085-.87887l0,0a95.39639,95.39639,0,0,1-1.45512,29.53985l-6.66134,32.05791-30.413,45.21728a8.01612,8.01612,0,1,1-6.0531-10.34958Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#ffb8b8\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.37009,390.11237l-21.26067-3.14416-3.61157-45.17647a19.01659,19.01659,0,1,1,37.30149,7.42436Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 638.04067,\n    y: 390.66747,\n    width: 44.90328,\n    height: 44.90328,\n    transform: \"translate(1299.63825 625.75511) rotate(-180)\",\n    fill: \"#ffb8b8\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M655.68125,317.69964l9.03811-11.61772,12.89268-.559,1.28678,10.92664,6.38829,2.94576a171.329,171.329,0,0,1,2.88591,74.22664l0,0v0a6.60917,6.60917,0,0,0-1.88,6.42l.41415,1.65108-.03832.06047a9.67164,9.67164,0,0,0-1.284,7.22047h0l11.67866,20.75192c-24.8006,10.10806-42.98158-8.74208-59.82466-33.44548l-10.424-36.083Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"607.163 184.018 604.729 159.675 637.044 111.838 638.373 112.735 606.383 160.092 608.759 183.859 607.163 184.018\",\n    fill: \"#2f2e41\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 607.96127,\n    cy: 183.93855,\n    r: 2.40553,\n    fill: \"#2f2e41\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 644.72742,\n    cy: 84.9688,\n    r: 23.83777,\n    fill: \"#ffb8b8\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M669.67106,256.4404l2.89212.76981.9822.26143,11.00626,2.92959c9.75543,2.59665,15.2956,13.59859,12.37434,24.57354,5.39382,9.35076.71988,18.02256-7.77417,26.4367a119.65576,119.65576,0,0,0-32.82018.03946l.1898-6.30089-4.81881,7.082q-4.12623.798-8.27853,1.94356c6.2918-12.39069,10.93041-25.18875,11.72056-35.87915l-5.04-1.34153,1.4681-5.51557-3.179,5.06017-9.1372-2.43209,0,0A24.857,24.857,0,0,1,669.67106,256.4404Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 668.64023,\n    cy: 59.46519,\n    r: 11.22582,\n    fill: \"#2f2e41\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M650.29229,442.87116a8.038,8.038,0,0,1,1.43533.13537l7.87764-49.87011-7.892-48.00969a12.09184,12.09184,0,0,1,23.47313-5.56813v0a95.39624,95.39624,0,0,1,4.33927,29.25562l-.27525,32.74152L658.24926,451.84a8.01612,8.01612,0,1,1-7.957-8.96887Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#ffb8b8\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M679.52906,389.6009l-21.46541,1.06657-12.36088-43.60235a19.01659,19.01659,0,1,1,38.03318,0Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M569.59011,399.029a8.66833,8.66833,0,0,0-12.90239-3.19426l-25.32227-17.54122L531,394.29689l24.10248,14.204a8.71533,8.71533,0,0,0,14.48761-9.47189Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#ffb6b6\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M545.49515,404.28144l-48.71236-27.11908-.01337-.23715c-.02583-.4535-2.5587-45.49286-1.56416-55.105a25.58552,25.58552,0,0,1,7.12513-15.45407l.10648-.09753.144-.01369a12.98383,12.98383,0,0,1,13.538,8.96833,91.968,91.968,0,0,1,3.09279,42.075l-1.28539,8.00483,32.44408,24.65809Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 486.76832,\n    cy: 69.22996,\n    r: 21.12584,\n    fill: \"#ffb6b6\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M508.81361,289.92172c-4.9392,2.36991-11.01868,1.5672-15.73436-1.22107s-8.186-7.33559-10.61119-12.24789c-1.77615-3.59766-3.06658-7.7177-2.03794-11.59581s5.1317-7.12756,8.976-5.97888c-2.6337-2.12069-2.32668-6.494-.19852-9.12167s5.48583-3.89117,8.73033-4.84348c4.70867-1.38207,9.65641-2.35758,14.51253-1.65065s9.63727,3.33605,11.92235,7.67888a7.40263,7.40263,0,0,0,8.31715-3.57189,6.70663,6.70663,0,0,1-2.3056,7.82435l6.57685-3.56825c1.67654,2.324.15309,5.86851-2.39223,7.185s-5.622.96535-8.39992.26193-6.39667.85306-9.26176.90954-5.96443,1.55593-6.78472,4.30165c-.42963,1.43812-.17921,2.98247-.306,4.478s-.84332,3.15476-2.29279,3.54437c-.91578.24615-1.91768-.08-2.82571.19335a3.0317,3.0317,0,0,0-1.911,2.71444,8.901,8.901,0,0,0,.631,3.44479c1.43351,4.4192,3.72905,6.25231,5.16256,10.6715\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M478.40636,429.51888l-.01192-.00133-.167-.02848-.04832-.16239c-.60737-2.04293-1.38025-4.134-2.12771-6.15646a74.23272,74.23272,0,0,1-2.78326-8.57952,65.71116,65.71116,0,0,1-1.23011-8.44562c-.20851-2.061-.42414-4.19233-.79079-6.29036a3.85294,3.85294,0,0,1,1.05081-2.66693,3.53162,3.53162,0,0,0,.96609-2.245,5.3414,5.3414,0,0,0-1.68886-2.28438,5.50434,5.50434,0,0,1-1.85271-2.62753,261.76111,261.76111,0,0,1-2.35852-37.70833c.175-17.44683.9635-29.33884,2.34342-35.34622,3.71054-16.15276,20.85349-19.10054,23.53679-19.46446a5.92519,5.92519,0,0,1,8.01355-3.30477l12.18033,5.57584a19.8297,19.8297,0,0,1,10.54312,11.77489l1.80945,5.5162.90632,37.03-5.02266,26.0764L529.5,418.76772C477.19652,447.48362,478.5748,429.51888,478.40636,429.51888Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M547.78076,413.91219a8.66832,8.66832,0,0,0-12.18682-5.30626l-22.03347-21.52762-3.0357,15.71711,21.38875,18.03343a8.71533,8.71533,0,0,0,15.86719-6.91663Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#ffb6b6\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M523.14679,415.06269l-43.49321-34.88092.02646-.236c.05035-.45145,5.08257-45.28041,7.67-54.591a25.58559,25.58559,0,0,1,9.6084-14.04545l.12128-.07835.14427.01057a12.98387,12.98387,0,0,1,11.84822,11.10534,91.968,91.968,0,0,1-3.98462,41.99992L502.4821,372.024,530.3474,401.759Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M327.07815,557.015a10.05575,10.05575,0,0,0-14.96749-3.70552l-29.37526-20.3488-.424,18.56486L310.27166,568.003a10.11027,10.11027,0,0,0,16.80644-10.98792Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#ffb6b6\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M299.12665,563.10819l-56.50906-31.45965-.01551-.2751c-.03-.52609-2.96823-52.77426-1.81452-63.92488a29.68071,29.68071,0,0,1,8.26556-17.92759l.12352-.11314.16706-.01588a15.062,15.062,0,0,1,15.70485,10.40376,106.688,106.688,0,0,1,3.5878,48.80935l-1.49112,9.286,37.63695,28.60476Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"363.145 483.213 374.015 478.544 361.18 434.396 345.137 441.287 363.145 483.213\",\n    fill: \"#ffb6b6\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M376.8279,681.98316l3.53409-1.518,11.388-11.53711,9.80478,2.43437.001-.00043a17.1509,17.1509,0,0,1,22.52577,8.99022l.21993.51207-40.48508,17.389Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"314.246 484.351 326.076 484.35 331.704 438.72 314.244 438.72 314.246 484.351\",\n    fill: \"#ffb6b6\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M329.22618,680.23573l3.8463-.00016,15.01657-6.10689,8.04842,6.106h.00109a17.15089,17.15089,0,0,1,17.15,17.14971v.55731l-44.06154.00163Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 237.04317,\n    y: 435.63643,\n    width: 21.04715,\n    height: 34.87817,\n    fill: \"#cacaca\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 299.88245,\n    y: 643.1814,\n    width: 4.811,\n    height: 61.04492,\n    transform: \"translate(-446.26763 345.07364) rotate(-55.84051)\",\n    fill: \"#cacaca\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 205.01582,\n    y: 671.29839,\n    width: 61.04492,\n    height: 4.81097,\n    transform: \"translate(-358.99599 48.00218) rotate(-34.15969)\",\n    fill: \"#cacaca\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 306.19808,\n    cy: 490.35915,\n    r: 6.61481,\n    fill: \"#cacaca\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 247.26604,\n    cy: 490.35915,\n    r: 6.61481,\n    fill: \"#cacaca\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 188.93533,\n    cy: 490.35915,\n    r: 6.61481,\n    fill: \"#cacaca\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 244.86066,\n    y: 456.08235,\n    width: 4.81078,\n    height: 34.27679,\n    fill: \"#cacaca\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 243.05663,\n    y: 404.96785,\n    width: 9.0202,\n    height: 46.30377,\n    fill: \"#cacaca\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.05515,612.66709V601.84281A7.52531,7.52531,0,0,1,230.572,594.326h70.29029a7.52535,7.52535,0,0,1,7.51684,7.51684v10.82428a7.52535,7.52535,0,0,1-7.51684,7.51685H230.572A7.52532,7.52532,0,0,1,223.05515,612.66709Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M532.82486,699.51688H22.53086a1.19069,1.19069,0,0,1,0-2.38134h510.294a1.19068,1.19068,0,0,1,0,2.38134Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#cacaca\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M213.5,540.76772l51,1,1.851,14.527s89.149-4.527,97,14c17.67886,41.71879,33,90,33,90l-22,7-43-72s-119.851,35.473-110.851-24.527Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M367.77506,583.17344c-5.23261,45.0069-16.424,87.12128-16.424,87.12128l-21-3,4.783-84.8722\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 234.41685,\n    cy: 206.51826,\n    r: 24.50716,\n    fill: \"#ffb6b6\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.574,430.44453c-5.72974,2.74923-12.78228,1.818-18.25273-1.41652s-9.49623-8.50969-12.30958-14.20823c-2.06043-4.17348-3.55741-8.953-2.36412-13.45179s5.95306-8.26837,10.41262-6.93583c-3.05523-2.46012-2.69908-7.53342-.23029-10.58165s6.36388-4.514,10.12768-5.61871c5.46232-1.60328,11.202-2.73492,16.83534-1.91485s11.17977,3.87,13.83059,8.90793a8.58746,8.58746,0,0,0,9.64836-4.14358,7.78008,7.78008,0,0,1-2.67462,9.07668l7.62951-4.13937c1.94488,2.696.1776,6.8078-2.77512,8.335s-6.52179,1.11986-9.74438.30384.5795,5.98961-2.74415,6.05513-6.91908,1.805-7.87066,4.99016c-.4984,1.66829-.2079,3.45982-.355,5.19475s-.9783,3.6597-2.65977,4.11167c-1.06235.28555-2.22461-.09276-3.278.2243a3.51693,3.51693,0,0,0-2.21686,3.14891,10.32551,10.32551,0,0,0,.732,3.99614c1.66295,5.12651-3.6741,2.253-2.01114,7.37954\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M221.2999,592.385l-.01382-.00154-.19378-.03305-.056-.18838c-.70458-2.3699-1.60117-4.7957-2.46827-7.14183a86.11847,86.11847,0,0,1-3.22874-9.95272,76.22922,76.22922,0,0,1-1.427-9.7974c-.24188-2.3909-.492-4.86333-.91735-7.29716-.18885-1.08057.52685-2.104,1.219-3.09378.64174-.91752,1.248-1.78438,1.12072-2.6043-.13009-.83846-1.05995-1.75937-1.95917-2.65-.98568-.97619-2.005-1.98573-2.14925-3.04808a303.65548,303.65548,0,0,1-2.736-43.74377c.203-20.23929,1.11771-34.0347,2.71849-41.00359,4.30444-18.73811,24.19121-22.1577,27.304-22.57986a6.87358,6.87358,0,0,1,9.29617-3.83372l14.12986,6.46829a23.00355,23.00355,0,0,1,12.23061,13.65952l2.09906,6.39911,1.05139,42.95689-5.82658,30.25008,11.38443,17.07665C222.20264,585.53844,221.49531,592.385,221.2999,592.385Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M926.46371,560.11661a8.03722,8.03722,0,0,1,1.3813.41295l17.46111-47.37293,1.6317-48.62666a12.09184,12.09184,0,0,1,24.10849-.87887l0,0a95.39579,95.39579,0,0,1-1.45512,29.53985l-6.66134,32.05791-30.413,45.21728a8.01612,8.01612,0,1,1-6.05311-10.34958Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#ffb8b8\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M965.53678,513.5784l-21.26066-3.14416-3.61158-45.17647a19.01659,19.01659,0,1,1,37.3015,7.42436Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 937.20737,\n    y: 514.1335,\n    width: 44.90328,\n    height: 44.90328,\n    transform: \"translate(1897.97164 872.68717) rotate(-180)\",\n    fill: \"#ffb8b8\"\n  })), _polygon4 || (_polygon4 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"809.373 445.894 792.224 440.124 782.674 486.804 794.294 490.713 809.373 445.894\",\n    fill: \"#ffb6b6\"\n  })), _polygon5 || (_polygon5 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"839.786 437.013 822.178 441.177 838.737 485.853 850.668 483.031 839.786 437.013\",\n    fill: \"#ffb6b6\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 899.21693,\n    y: 435.63643,\n    width: 21.04715,\n    height: 34.87817,\n    fill: \"#cacaca\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 867.18959,\n    y: 671.29836,\n    width: 61.04492,\n    height: 4.811,\n    transform: \"translate(-244.75478 419.80969) rotate(-34.15949)\",\n    fill: \"#cacaca\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 962.05623,\n    y: 643.18142,\n    width: 4.81097,\n    height: 61.04492,\n    transform: \"translate(-155.90491 893.00383) rotate(-55.84031)\",\n    fill: \"#cacaca\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 851.10917,\n    cy: 490.35915,\n    r: 6.61481,\n    fill: \"#cacaca\"\n  })), _circle10 || (_circle10 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 910.04121,\n    cy: 490.35915,\n    r: 6.61481,\n    fill: \"#cacaca\"\n  })), _circle11 || (_circle11 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 968.37191,\n    cy: 490.35915,\n    r: 6.61481,\n    fill: \"#cacaca\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 907.63581,\n    y: 456.08235,\n    width: 4.81078,\n    height: 34.27679,\n    fill: \"#cacaca\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 905.23042,\n    y: 404.96785,\n    width: 9.0202,\n    height: 46.30377,\n    fill: \"#cacaca\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M969.428,620.18394H899.13772a7.52535,7.52535,0,0,1-7.51684-7.51685V601.84281a7.52535,7.52535,0,0,1,7.51684-7.51684H969.428a7.52531,7.52531,0,0,1,7.51684,7.51684v10.82428A7.52532,7.52532,0,0,1,969.428,620.18394Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M980.5,570.76772c9,60-110.851,24.527-110.851,24.527l-43,72-22-7s15.32114-48.28121,33-90c7.851-18.527,97-14,97-14l1.851-14.527,51-1Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M865.86593,582.42252l4.783,84.8722-21,3s-11.1914-42.11438-16.424-87.12128\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M954.84794,441.16567l9.03812-11.61772,12.89267-.559,1.28679,10.92664,6.38828,2.94576a171.329,171.329,0,0,1,2.88591,74.22664l0,0v0a6.60919,6.60919,0,0,0-1.88,6.42l.41415,1.65108-.03832.06047a9.67173,9.67173,0,0,0-1.284,7.22047h0l11.67866,20.75192c-24.80059,10.10806-42.98157-8.74208-59.82466-33.44548l-10.424-36.083Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _polygon6 || (_polygon6 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"906.33 307.484 903.896 283.141 936.211 235.304 937.54 236.201 905.549 283.558 907.926 307.325 906.33 307.484\",\n    fill: \"#2f2e41\"\n  })), _circle12 || (_circle12 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 907.12797,\n    cy: 307.40458,\n    r: 2.40553,\n    fill: \"#2f2e41\"\n  })), _circle13 || (_circle13 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 943.89412,\n    cy: 208.43483,\n    r: 23.83777,\n    fill: \"#ffb8b8\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M968.83776,379.90643l2.89212.76981.9822.26143,11.00626,2.92959c9.75542,2.59665,15.29559,13.59859,12.37434,24.57354,5.39381,9.35076.71988,18.02256-7.77417,26.4367a119.65544,119.65544,0,0,0-32.82019.03946l.18981-6.30089-4.81881,7.082q-4.12623.798-8.27853,1.94356c6.2918-12.39069,10.93041-25.18875,11.72056-35.87915l-5.04-1.34153,1.46811-5.51557-3.179,5.06017-9.1372-2.43209,0,0A24.857,24.857,0,0,1,968.83776,379.90643Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _circle14 || (_circle14 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 967.80692,\n    cy: 182.93122,\n    r: 11.22582,\n    fill: \"#2f2e41\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M949.459,566.33719a8.03788,8.03788,0,0,1,1.43533.13537l7.87765-49.87011-7.892-48.00969a12.09184,12.09184,0,0,1,23.47313-5.56813v0a95.39625,95.39625,0,0,1,4.33928,29.25562l-.27525,32.74152L957.416,575.30606a8.01612,8.01612,0,1,1-7.957-8.96887Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#ffb8b8\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M978.69576,513.06693l-21.46542,1.06657-12.36088-43.60235a19.01659,19.01659,0,1,1,38.03318,0Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M825.83014,697.76772h-7.70532l-1.37534-7.27479-3.52256,7.27479H792.79044a4.59391,4.59391,0,0,1-2.61038-8.37433L806.5,678.12229v-7.35457l17.1657,1.02454Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M876.39927,694.88359l-7.64229.98344-2.2926-7.03975-2.56525,7.66488-20.26935,2.60834a4.5939,4.5939,0,0,1-3.65785-7.97266L854.71984,677.866l-.93867-7.29442,17.15607-1.17473Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#2f2e41\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M665.98831,698.33006a1.19066,1.19066,0,0,1,1.18683-1.19452h510.294a1.19069,1.19069,0,0,1,0,2.38134h-510.294A1.19064,1.19064,0,0,1,665.98831,698.33006Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#cacaca\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M941.61068,415.64038l-11.90772-.89259a3.84822,3.84822,0,0,1-3.54587-4.12l1.1368-15.1701a3.84766,3.84766,0,0,1,4.1207-3.54622l11.90773.89259.00052,0a3.84332,3.84332,0,0,1,3.54517,4.11994c1.77887,4.32945,8.44489,7.01171-1.13661,15.17005a3.84281,3.84281,0,0,1-4.12072,3.54625Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M930.81334,391.73186l2.69217.26684-1.95443,23.39545-2.69259-.26676a3.84521,3.84521,0,0,1-2.61528-1.41823,4.02169,4.02169,0,0,1-.89092-2.888l1.29816-15.54156a3.86452,3.86452,0,0,1,3.01851-3.48562A3.73954,3.73954,0,0,1,930.81334,391.73186Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M994.08167,412.19068l-53.76478-4.029a2.48835,2.48835,0,0,1-2.29291-2.66429l.30072-4.01353.0001-.00105a2.48551,2.48551,0,0,1,2.66469-2.29238l53.76459,4.0291h.00018a2.48554,2.48554,0,0,1,2.29292,2.66424l-.30083,4.014a2.48508,2.48508,0,0,1-2.66468,2.293Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M933.189,401.40885l-.00039.00009a2.04792,2.04792,0,0,1-1.833-2.23692l.3229-3.255.00257-.026a2.04469,2.04469,0,0,1,4.06679.42929l-.3229,3.255a2.04395,2.04395,0,0,1-2.236,1.83356Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M932.793,409.94159l-.00037,0a2.04469,2.04469,0,0,1-1.93563-2.14822l.17017-3.26715a2.04474,2.04474,0,0,1,4.08394.21271l-.17018,3.26715a2.04108,2.04108,0,0,1-2.14793,1.93552Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M999.0296,539.58293l-3.06822-.03486a11.10662,11.10662,0,0,1-10.9674-11.21939l.02521-27.258a11.10664,11.10664,0,0,1,11.21939-10.9674l3.06818.03486a11.10658,11.10658,0,0,1,10.96737,11.2194l-.02518,27.25795A11.1066,11.1066,0,0,1,999.0296,539.58293Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M942.33523,607.54227l2.30664-3.26757a33.004,33.004,0,0,0,18.99958,6.02c18.22744.00207,38.00543-56.29953,38.0075-74.527h4c-.0231,20.425-21.575,78.50392-42,78.527A36.76265,36.76265,0,0,1,942.33523,607.54227Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M301.77809,574.2804a10.05577,10.05577,0,0,0-14.1374-6.15556l-25.56-24.97324-3.52158,18.23273,24.81214,20.91978a10.11027,10.11027,0,0,0,18.40683-8.02368Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#ffb6b6\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.20131,575.615l-50.45456-40.46382.0307-.27382c.0584-.5237,5.89606-52.52779,8.89765-63.32863a29.68069,29.68069,0,0,1,11.14628-16.2935l.14069-.09089.16736.01226a15.062,15.062,0,0,1,13.7446,12.88281,106.6879,106.6879,0,0,1-4.62239,48.72226l-3.02253,8.90608,32.3253,34.49417Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M184.45549,538.27118,184.02892,508.04a11.1066,11.1066,0,0,1,10.79184-11.38835l3.06728-.08249a11.10662,11.10662,0,0,1,11.38833,10.79186l.4266,30.23117a11.10661,11.10661,0,0,1-10.79187,11.38833l-3.06731.08251A11.10661,11.10661,0,0,1,184.45549,538.27118Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.35105,610.76772c-20.425-.02307-42.9769-47.575-43-68h4c.00207,18.22747,20.78006,64.00207,39.0075,64a33.004,33.004,0,0,0,18.99958-6.02l2.30664,3.26758A36.76271,36.76271,0,0,1,233.35105,610.76772Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.69067,420.45854a3.99827,3.99827,0,0,1-3.02542-3.64914c-9.789-8.65049-2.81912-11.30722-.89017-15.76686a3.9897,3.9897,0,0,1,3.7582-4.20846l.00054,0,12.37618-.69917a3.9942,3.9942,0,0,1,4.20924,3.7593l.89038,15.7669a3.9948,3.9948,0,0,1-3.75893,4.20848l-12.37618.69917A3.98028,3.98028,0,0,1,277.69067,420.45854Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M291.72405,396.04617a4.01171,4.01171,0,0,1,3.06643,3.67537l1.05075,16.15552a4.17487,4.17487,0,0,1-.9798,2.98053,3.99172,3.99172,0,0,1-2.7415,1.42208l-2.79976.22548-1.582-24.31967,2.79932-.22559A3.88178,3.88178,0,0,1,291.72405,396.04617Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#6c63ff\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.71428,415.91548a2.58418,2.58418,0,0,1-1.95605-2.35942l-.23563-4.17188a2.58021,2.58021,0,0,1,2.43069-2.72148h.00019L279.8332,403.507a2.58017,2.58017,0,0,1,2.722,2.43014l.00008.00109.23552,4.17142a2.58312,2.58312,0,0,1-2.43068,2.72154l-55.87992,3.15569A2.56642,2.56642,0,0,1,223.71428,415.91548Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M287.20747,405.90336a2.1261,2.1261,0,0,1-1.60618-1.89071l-.273-3.38453a2.12256,2.12256,0,1,1,4.22915-.368l.00217.027.273,3.38454a2.12592,2.12592,0,0,1-1.94516,2.28674l-.0004-.0001A2.11576,2.11576,0,0,1,287.20747,405.90336Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M287.54949,414.76093a2.12534,2.12534,0,0,1-1.60664-1.98863l-.11427-3.39426a2.12261,2.12261,0,0,1,4.24282-.14284l.11427,3.39426a2.12255,2.12255,0,0,1-2.05,2.19271l-.00037,0A2.13254,2.13254,0,0,1,287.54949,414.76093Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"f2de2510-d869-4726-96f2-631808817dc6-1592\",\n    \"data-name\": \"af4baad4-c88d-44ba-bf25-f9ac1002d243\",\n    d: \"M448.10849,243.55683l287.178-41.917v274.979l-287.178-41.916Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#f2f2f2\",\n    opacity: 0.54\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M736.287,477.77464l-289.17871-42.207V242.69212l289.17871-42.209ZM449.10825,433.83811,734.287,475.4621V202.79661l-285.17871,41.625Z\",\n    transform: \"translate(-21.34638 -200.48312)\",\n    fill: \"#3f3d56\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawVrChatReS80U);\nexport default __webpack_public_path__ + \"static/media/undraw_vr_chat_re_s80u.4d7767cbd6022e8e97617f6c359e9c4d.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable linebreak-style */\n/* eslint-disable import/extensions */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\n\nimport heroPortfolio from 'assets/images/hero/undraw_vr_chat_re_s80u.svg';\n\nimport { useDynamicSvg } from 'svgBgChanger';\n\nimport {\n  SecondaryColor,\n  projectsHeader,\n  projectsSubtitle,\n  ColorMappings,\n} from '../customize';\n\nexport default function HeroPortfolio() {\n  const svgContent = useDynamicSvg(heroPortfolio, ColorMappings);\n  return (\n    <section className=\"hero sm:items-center lg:items-start sm:flex-row\">\n      <div className=\"w-full sm:w-1/2 flex flex-col px-5 mb-5 sm:mb-0 sm:px-12 sm:mt-6 lg:mt-6 xl:mt-20\">\n        <Fade direction=\"up\" triggerOnce>\n          <h1 className={`text-6xl text-${SecondaryColor} font-bold leading-tight mb-5`}>{projectsHeader}</h1>\n        </Fade>\n        <Fade direction=\"up\" triggerOnce delay={400}>\n          <p className=\"font-light text-xl text-gray-400 leading-relaxed\">\n            {projectsSubtitle}\n          </p>\n        </Fade>\n      </div>\n      <div className=\"w-full sm:w-1/2 sm:pr-12\">\n        <Fade direction=\"up\" triggerOnce>\n        <div\n          className=\"svg-container\" // Using the updated CSS class\n          alt=\"Hero\"\n          dangerouslySetInnerHTML={{ __html: svgContent }} // eslint-disable-line react/no-danger\n        />\n        </Fade>\n      </div>\n    </section>\n  );\n}\n","function makeTypeChecker(tabsRole){return element=>!!element.type&&element.type.tabsRole===tabsRole}export const isTab=makeTypeChecker(\"Tab\");export const isTabList=makeTypeChecker(\"TabList\");export const isTabPanel=makeTypeChecker(\"TabPanel\");","import{Children,cloneElement}from\"react\";import{isTabPanel,isTab,isTabList}from\"./elementTypes\";function isTabChild(child){return isTab(child)||isTabList(child)||isTabPanel(child)}export function deepMap(children,callback){return Children.map(children,child=>{if(child===null)return null;if(isTabChild(child)){return callback(child)}if(child.props&&child.props.children&&typeof child.props.children===\"object\"){return cloneElement(child,{...child.props,children:deepMap(child.props.children,callback)})}return child})}export function deepForEach(children,callback){return Children.forEach(children,child=>{if(child===null)return;if(isTab(child)||isTabPanel(child)){callback(child)}else if(child.props&&child.props.children&&typeof child.props.children===\"object\"){if(isTabList(child))callback(child);deepForEach(child.props.children,callback)}})}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import{deepForEach}from\"./childrenDeepMap\";import{isTab}from\"./elementTypes\";export function getTabsCount(children){let tabCount=0;deepForEach(children,child=>{if(isTab(child))tabCount++});return tabCount}","import PropTypes from\"prop-types\";import React,{cloneElement,useRef,useId}from\"react\";import cx from\"clsx\";import{childrenPropType}from\"../helpers/propTypes\";import{getTabsCount as getTabsCountHelper}from\"../helpers/count\";import{deepMap}from\"../helpers/childrenDeepMap\";import{isTabList,isTabPanel,isTab}from\"../helpers/elementTypes\";function isNode(node){return node&&\"getAttribute\"in node}function isTabNode(node){return isNode(node)&&node.getAttribute(\"data-rttab\")}function isTabDisabled(node){return isNode(node)&&node.getAttribute(\"aria-disabled\")===\"true\"}let canUseActiveElement;function determineCanUseActiveElement(environment){const env=environment||(typeof window!==\"undefined\"?window:undefined);try{canUseActiveElement=!!(typeof env!==\"undefined\"&&env.document&&env.document.activeElement)}catch(e){canUseActiveElement=false}}const defaultProps={className:\"react-tabs\",focus:false};const propTypes=process.env.NODE_ENV!==\"production\"?{children:childrenPropType,direction:PropTypes.oneOf([\"rtl\",\"ltr\"]),className:PropTypes.oneOfType([PropTypes.string,PropTypes.array,PropTypes.object]),disabledTabClassName:PropTypes.string,disableUpDownKeys:PropTypes.bool,disableLeftRightKeys:PropTypes.bool,domRef:PropTypes.func,focus:PropTypes.bool,forceRenderTabPanel:PropTypes.bool,onSelect:PropTypes.func.isRequired,selectedIndex:PropTypes.number.isRequired,selectedTabClassName:PropTypes.string,selectedTabPanelClassName:PropTypes.string,environment:PropTypes.object}:{};const UncontrolledTabs=props=>{let tabNodes=useRef([]);let tabIds=useRef([]);const ref=useRef();function setSelected(index,event){if(index<0||index>=getTabsCount())return;const{onSelect,selectedIndex}=props;onSelect(index,selectedIndex,event)}function getNextTab(index){const count=getTabsCount();for(let i=index+1;i<count;i++){if(!isTabDisabled(getTab(i))){return i}}for(let i=0;i<index;i++){if(!isTabDisabled(getTab(i))){return i}}return index}function getPrevTab(index){let i=index;while(i--){if(!isTabDisabled(getTab(i))){return i}}i=getTabsCount();while(i-->index){if(!isTabDisabled(getTab(i))){return i}}return index}function getFirstTab(){const count=getTabsCount();for(let i=0;i<count;i++){if(!isTabDisabled(getTab(i))){return i}}return null}function getLastTab(){let i=getTabsCount();while(i--){if(!isTabDisabled(getTab(i))){return i}}return null}function getTabsCount(){const{children}=props;return getTabsCountHelper(children)}function getTab(index){return tabNodes.current[`tabs-${index}`]}function getChildren(){let index=0;const{children,disabledTabClassName,focus,forceRenderTabPanel,selectedIndex,selectedTabClassName,selectedTabPanelClassName,environment}=props;tabIds.current=tabIds.current||[];let diff=tabIds.current.length-getTabsCount();const id=useId();while(diff++<0){tabIds.current.push(`${id}${tabIds.current.length}`)}return deepMap(children,child=>{let result=child;if(isTabList(child)){let listIndex=0;let wasTabFocused=false;if(canUseActiveElement==null){determineCanUseActiveElement(environment)}const env=environment||(typeof window!==\"undefined\"?window:undefined);if(canUseActiveElement&&env){wasTabFocused=React.Children.toArray(child.props.children).filter(isTab).some((tab,i)=>env.document.activeElement===getTab(i))}result=cloneElement(child,{children:deepMap(child.props.children,tab=>{const key=`tabs-${listIndex}`;const selected=selectedIndex===listIndex;const props={tabRef:node=>{tabNodes.current[key]=node},id:tabIds.current[listIndex],selected,focus:selected&&(focus||wasTabFocused)};if(selectedTabClassName)props.selectedClassName=selectedTabClassName;if(disabledTabClassName)props.disabledClassName=disabledTabClassName;listIndex++;return cloneElement(tab,props)})})}else if(isTabPanel(child)){const props={id:tabIds.current[index],selected:selectedIndex===index};if(forceRenderTabPanel)props.forceRender=forceRenderTabPanel;if(selectedTabPanelClassName)props.selectedClassName=selectedTabPanelClassName;index++;result=cloneElement(child,props)}return result})}function handleKeyDown(e){const{direction,disableUpDownKeys,disableLeftRightKeys}=props;if(isTabFromContainer(e.target)){let{selectedIndex:index}=props;let preventDefault=false;let useSelectedIndex=false;if(e.code===\"Space\"||e.keyCode===32||e.code===\"Enter\"||e.keyCode===13){preventDefault=true;useSelectedIndex=false;handleClick(e)}if(!disableLeftRightKeys&&(e.keyCode===37||e.code===\"ArrowLeft\")||!disableUpDownKeys&&(e.keyCode===38||e.code===\"ArrowUp\")){if(direction===\"rtl\"){index=getNextTab(index)}else{index=getPrevTab(index)}preventDefault=true;useSelectedIndex=true}else if(!disableLeftRightKeys&&(e.keyCode===39||e.code===\"ArrowRight\")||!disableUpDownKeys&&(e.keyCode===40||e.code===\"ArrowDown\")){if(direction===\"rtl\"){index=getPrevTab(index)}else{index=getNextTab(index)}preventDefault=true;useSelectedIndex=true}else if(e.keyCode===35||e.code===\"End\"){index=getLastTab();preventDefault=true;useSelectedIndex=true}else if(e.keyCode===36||e.code===\"Home\"){index=getFirstTab();preventDefault=true;useSelectedIndex=true}if(preventDefault){e.preventDefault()}if(useSelectedIndex){setSelected(index,e)}}}function handleClick(e){let node=e.target;do{if(isTabFromContainer(node)){if(isTabDisabled(node)){return}const index=[].slice.call(node.parentNode.children).filter(isTabNode).indexOf(node);setSelected(index,e);return}}while((node=node.parentNode)!=null)}function isTabFromContainer(node){if(!isTabNode(node)){return false}let nodeAncestor=node.parentElement;do{if(nodeAncestor===ref.current)return true;if(nodeAncestor.getAttribute(\"data-rttabs\"))break;nodeAncestor=nodeAncestor.parentElement}while(nodeAncestor);return false}const{children,className,disabledTabClassName,domRef,focus,forceRenderTabPanel,onSelect,selectedIndex,selectedTabClassName,selectedTabPanelClassName,environment,disableUpDownKeys,disableLeftRightKeys,...attributes}={...defaultProps,...props};return React.createElement(\"div\",Object.assign({},attributes,{className:cx(className),onClick:handleClick,onKeyDown:handleKeyDown,ref:node=>{ref.current=node;if(domRef)domRef(node)},\"data-rttabs\":true}),getChildren())};UncontrolledTabs.propTypes=process.env.NODE_ENV!==\"production\"?propTypes:{};export default UncontrolledTabs;","import PropTypes from\"prop-types\";import React,{useEffect,useState}from\"react\";import{childrenPropType,onSelectPropType,selectedIndexPropType}from\"../helpers/propTypes\";import UncontrolledTabs from\"./UncontrolledTabs\";import{getTabsCount}from\"../helpers/count\";const MODE_CONTROLLED=0;const MODE_UNCONTROLLED=1;const propTypes=process.env.NODE_ENV!==\"production\"?{children:childrenPropType,className:PropTypes.oneOfType([PropTypes.string,PropTypes.array,PropTypes.object]),defaultFocus:PropTypes.bool,defaultIndex:PropTypes.number,direction:PropTypes.oneOf([\"rtl\",\"ltr\"]),disabledTabClassName:PropTypes.string,disableUpDownKeys:PropTypes.bool,disableLeftRightKeys:PropTypes.bool,domRef:PropTypes.func,environment:PropTypes.object,focusTabOnClick:PropTypes.bool,forceRenderTabPanel:PropTypes.bool,onSelect:onSelectPropType,selectedIndex:selectedIndexPropType,selectedTabClassName:PropTypes.string,selectedTabPanelClassName:PropTypes.string}:{};const defaultProps={defaultFocus:false,focusTabOnClick:true,forceRenderTabPanel:false,selectedIndex:null,defaultIndex:null,environment:null,disableUpDownKeys:false,disableLeftRightKeys:false};const getModeFromProps=props=>{return props.selectedIndex===null?MODE_UNCONTROLLED:MODE_CONTROLLED};const checkForIllegalModeChange=(props,mode)=>{if(process.env.NODE_ENV!==\"production\"&&mode!=undefined&&mode!==getModeFromProps(props)){throw new Error(`Switching between controlled mode (by using \\`selectedIndex\\`) and uncontrolled mode is not supported in \\`Tabs\\`.\nFor more information about controlled and uncontrolled mode of react-tabs see https://github.com/reactjs/react-tabs#controlled-vs-uncontrolled-mode.`)}};const Tabs=props=>{const{children,defaultFocus,defaultIndex,focusTabOnClick,onSelect,...attributes}={...defaultProps,...props};const[focus,setFocus]=useState(defaultFocus);const[mode]=useState(getModeFromProps(attributes));const[selectedIndex,setSelectedIndex]=useState(mode===MODE_UNCONTROLLED?defaultIndex||0:null);useEffect(()=>{setFocus(false)},[]);if(mode===MODE_UNCONTROLLED){const tabsCount=getTabsCount(children);useEffect(()=>{if(selectedIndex!=null){const maxTabIndex=Math.max(0,tabsCount-1);setSelectedIndex(Math.min(selectedIndex,maxTabIndex))}},[tabsCount])}checkForIllegalModeChange(attributes,mode);const handleSelected=(index,last,event)=>{if(typeof onSelect===\"function\"){if(onSelect(index,last,event)===false)return}if(focusTabOnClick){setFocus(true)}if(mode===MODE_UNCONTROLLED){setSelectedIndex(index)}};let subProps={...props,...attributes};subProps.focus=focus;subProps.onSelect=handleSelected;if(selectedIndex!=null){subProps.selectedIndex=selectedIndex}delete subProps.defaultFocus;delete subProps.defaultIndex;delete subProps.focusTabOnClick;return React.createElement(UncontrolledTabs,subProps,children)};Tabs.propTypes=process.env.NODE_ENV!==\"production\"?propTypes:{};Tabs.tabsRole=\"Tabs\";export default Tabs;","import PropTypes from\"prop-types\";import React from\"react\";import cx from\"clsx\";const defaultProps={className:\"react-tabs__tab-list\"};const propTypes=process.env.NODE_ENV!==\"production\"?{children:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),className:PropTypes.oneOfType([PropTypes.string,PropTypes.array,PropTypes.object])}:{};const TabList=props=>{const{children,className,...attributes}={...defaultProps,...props};return React.createElement(\"ul\",Object.assign({},attributes,{className:cx(className),role:\"tablist\"}),children)};TabList.tabsRole=\"TabList\";TabList.propTypes=process.env.NODE_ENV!==\"production\"?propTypes:{};export default TabList;","import PropTypes from\"prop-types\";import React,{useEffect,useRef}from\"react\";import cx from\"clsx\";const DEFAULT_CLASS=\"react-tabs__tab\";const defaultProps={className:DEFAULT_CLASS,disabledClassName:`${DEFAULT_CLASS}--disabled`,focus:false,id:null,selected:false,selectedClassName:`${DEFAULT_CLASS}--selected`};const propTypes=process.env.NODE_ENV!==\"production\"?{children:PropTypes.oneOfType([PropTypes.array,PropTypes.object,PropTypes.string]),className:PropTypes.oneOfType([PropTypes.string,PropTypes.array,PropTypes.object]),disabled:PropTypes.bool,disabledClassName:PropTypes.string,focus:PropTypes.bool,id:PropTypes.string,selected:PropTypes.bool,selectedClassName:PropTypes.string,tabIndex:PropTypes.string,tabRef:PropTypes.func}:{};const Tab=props=>{let nodeRef=useRef();const{children,className,disabled,disabledClassName,focus,id,selected,selectedClassName,tabIndex,tabRef,...attributes}={...defaultProps,...props};useEffect(()=>{if(selected&&focus){nodeRef.current.focus()}},[selected,focus]);return React.createElement(\"li\",Object.assign({},attributes,{className:cx(className,{[selectedClassName]:selected,[disabledClassName]:disabled}),ref:node=>{nodeRef.current=node;if(tabRef)tabRef(node)},role:\"tab\",id:`tab${id}`,\"aria-selected\":selected?\"true\":\"false\",\"aria-disabled\":disabled?\"true\":\"false\",\"aria-controls\":`panel${id}`,tabIndex:tabIndex||(selected?\"0\":null),\"data-rttab\":true}),children)};Tab.propTypes=process.env.NODE_ENV!==\"production\"?propTypes:{};Tab.tabsRole=\"Tab\";export default Tab;","import PropTypes from\"prop-types\";import React from\"react\";import cx from\"clsx\";const DEFAULT_CLASS=\"react-tabs__tab-panel\";const defaultProps={className:DEFAULT_CLASS,forceRender:false,selectedClassName:`${DEFAULT_CLASS}--selected`};const propTypes=process.env.NODE_ENV!==\"production\"?{children:PropTypes.node,className:PropTypes.oneOfType([PropTypes.string,PropTypes.array,PropTypes.object]),forceRender:PropTypes.bool,id:PropTypes.string,selected:PropTypes.bool,selectedClassName:PropTypes.string}:{};const TabPanel=props=>{const{children,className,forceRender,id,selected,selectedClassName,...attributes}={...defaultProps,...props};return React.createElement(\"div\",Object.assign({},attributes,{className:cx(className,{[selectedClassName]:selected}),role:\"tabpanel\",id:`panel${id}`,\"aria-labelledby\":`tab${id}`}),forceRender||selected?children:null)};TabPanel.tabsRole=\"TabPanel\";TabPanel.propTypes=process.env.NODE_ENV!==\"production\"?propTypes:{};export default TabPanel;","/* eslint-disable linebreak-style */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\n\nimport { ActiveTheme, SecondaryColor } from 'customize';\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  Tab, Tabs, TabList, TabPanel,\n} from 'react-tabs';\n\nimport Button from 'elements/Button';\n\nimport { ItemTypes } from 'json/landingPageData';\n\nexport default function AllPortfolio({ data }) {\n  // Dynamically map data to each type using item types defined in ItemTypes\n  const tabsData = Object.values(ItemTypes).map((type) => ({ // Fixed arrow-parens\n    type,\n    items: data.filter((item) => item.type === type), // Fixed arrow-parens\n  }));\n\n  return (\n    <Fade bottom>\n      <section className=\"container mx-auto\">\n        <Tabs className=\"flex flex-col px-4\">\n          <TabList>\n            <div className=\"flex flex-row mb-5\">\n              {tabsData.map((tab, tabIndex) => ( // Renamed index to tabIndex to avoid no-shadow\n                <Tab key={tabIndex}>\n                  <button className={`font-normal px-5 py-2 mr-3 text-${ActiveTheme} text-lg border border-${ActiveTheme} rounded-full transition duration-300 hover:bg-${ActiveTheme} hover:text-white focus:outline-none focus:bg-${ActiveTheme} focus:text-white`}>\n                    {tab.type}\n                  </button>\n                </Tab>\n              ))}\n            </div>\n          </TabList>\n\n          {tabsData.map((tab, panelIndex) => ( // Renamed index to panelIndex to avoid no-shadow\n            <TabPanel key={panelIndex}>\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 sm:gap-2 xl:gap-8 justify-items-center\">\n                {tab.items.map((item, itemIndex) => ( // Renamed from index to avoid no-shadow\n                  <Fade triggerOnce direction=\"up\" delay={500 * itemIndex} key={itemIndex}>\n                    <Button type=\"link\" href={`/project/${item.id}`}>\n                      <div className=\"group rounded-2xl shadow-xl w-auto m-3 transform transition duration-500 hover:scale-110 portfolio-card\">\n                        <div className=\"relative\">\n                          <img src={item.imageUrl} alt=\"Portfolio\" className=\"rounded-t-2xl z-0\" />\n                          <div className=\"absolute flex w-full h-full top-0 opacity-0 bg-black justify-center rounded-t-2xl rounded-b img-hover\">\n                            <button className=\"focus:outline-none\">\n                              <svg className=\"w-20 h-20 text-gray-200\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                              </svg>\n                            </button>\n                          </div>\n                        </div>\n                        <div className=\"py-4\">\n                          <h2 className=\"text-center text-xl\" style={{ color: SecondaryColor }}>{item.title}</h2>\n                          <p className=\"font-light text-gray-400 text-center\">{item.type}</p>\n                        </div>\n                      </div>\n                    </Button>\n                  </Fade>\n                ))}\n              </div>\n            </TabPanel>\n          ))}\n        </Tabs>\n      </section>\n    </Fade>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from 'react';\n\nimport Header from 'parts/Header';\nimport HeroPortfolio from 'parts/HeroPortfolio';\nimport Discuss from 'parts/Discuss';\nimport Footer from 'parts/Footer';\nimport AllPortfolio from 'parts/AllPortfolio';\n\nimport { Portfolios } from 'json/landingPageData';\n\nexport default class ProjectPage extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <HeroPortfolio />\n        <AllPortfolio data={Portfolios} />\n        <Discuss />\n        <Footer />\n      </>\n    );\n  }\n}\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _circle, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _circle2, _circle3, _circle4, _circle5, _circle6, _path24, _circle7, _path25, _path26, _circle8, _circle9, _path27;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawPageNotFoundReE9O6(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 860.13137,\n    height: 571.14799,\n    viewBox: \"0 0 860.13137 571.14799\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M605.66974,324.95306c-7.66934-12.68446-16.7572-26.22768-30.98954-30.36953-16.482-4.7965-33.4132,4.73193-47.77473,14.13453a1392.15692,1392.15692,0,0,0-123.89338,91.28311l.04331.49238q46.22556-3.1878,92.451-6.37554c22.26532-1.53546,45.29557-3.2827,64.97195-13.8156,7.46652-3.99683,14.74475-9.33579,23.20555-9.70782,10.51175-.46217,19.67733,6.87923,26.8802,14.54931,42.60731,45.371,54.937,114.75409,102.73817,154.61591A1516.99453,1516.99453,0,0,0,605.66974,324.95306Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f2f2f2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M867.57068,709.78146c-4.71167-5.94958-6.6369-7.343-11.28457-13.34761q-56.7644-73.41638-106.70791-151.79237-33.92354-53.23-64.48275-108.50439-14.54864-26.2781-28.29961-52.96872-10.67044-20.6952-20.8646-41.63793c-1.94358-3.98782-3.8321-7.99393-5.71122-12.00922-4.42788-9.44232-8.77341-18.93047-13.43943-28.24449-5.31686-10.61572-11.789-21.74485-21.55259-28.877a29.40493,29.40493,0,0,0-15.31855-5.89458c-7.948-.51336-15.28184,2.76855-22.17568,6.35295-50.43859,26.301-97.65922,59.27589-140.3696,96.79771A730.77816,730.77816,0,0,0,303.32241,496.24719c-1.008,1.43927-3.39164.06417-2.37419-1.38422q6.00933-8.49818,12.25681-16.81288A734.817,734.817,0,0,1,500.80465,303.06436q18.24824-11.82581,37.18269-22.54245c6.36206-3.60275,12.75188-7.15967,19.25136-10.49653,6.37146-3.27274,13.13683-6.21547,20.41563-6.32547,24.7701-.385,37.59539,27.66695,46.40506,46.54248q4.15283,8.9106,8.40636,17.76626,16.0748,33.62106,33.38729,66.628,10.68453,20.379,21.83683,40.51955,34.7071,62.71816,73.77854,122.897c34.5059,53.1429,68.73651,100.08874,108.04585,149.78472C870.59617,709.21309,868.662,711.17491,867.57068,709.78146Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#e4e4e4\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M414.91613,355.804c-1.43911-1.60428-2.86927-3.20856-4.31777-4.81284-11.42244-12.63259-23.6788-25.11847-39.3644-32.36067a57.11025,57.11025,0,0,0-23.92679-5.54622c-8.56213.02753-16.93178,2.27348-24.84306,5.41792-3.74034,1.49427-7.39831,3.1902-11.00078,4.99614-4.11634,2.07182-8.15927,4.28118-12.1834,6.50883q-11.33112,6.27044-22.36816,13.09089-21.9606,13.57221-42.54566,29.21623-10.67111,8.11311-20.90174,16.75788-9.51557,8.03054-18.64618,16.492c-1.30169,1.20091-3.24527-.74255-1.94358-1.94347,1.60428-1.49428,3.22691-2.97938,4.84955-4.44613q6.87547-6.21546,13.9712-12.19257,12.93921-10.91827,26.54851-20.99312,21.16293-15.67614,43.78288-29.22541,11.30361-6.76545,22.91829-12.96259c2.33794-1.24675,4.70318-2.466,7.09572-3.6211a113.11578,113.11578,0,0,1,16.86777-6.86632,60.0063,60.0063,0,0,1,25.476-2.50265,66.32706,66.32706,0,0,1,23.50512,8.1314c15.40091,8.60812,27.34573,21.919,38.97,34.90915C418.03337,355.17141,416.09875,357.12405,414.91613,355.804Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#e4e4e4\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M730.47659,486.71092l36.90462-13.498,18.32327-6.70183c5.96758-2.18267,11.92082-4.66747,18.08988-6.23036a28.53871,28.53871,0,0,1,16.37356.20862,37.73753,37.73753,0,0,1,12.771,7.91666,103.63965,103.63965,0,0,1,10.47487,11.18643c3.98932,4.79426,7.91971,9.63877,11.86772,14.46706q24.44136,29.89094,48.56307,60.04134,24.12117,30.14991,47.91981,60.556,23.85681,30.48041,47.38548,61.21573,2.88229,3.76518,5.75966,7.53415c1.0598,1.38809,3.44949.01962,2.37472-1.38808Q983.582,650.9742,959.54931,620.184q-24.09177-30.86383-48.51647-61.46586-24.42421-30.60141-49.17853-60.93743-6.16706-7.55761-12.35445-15.09858c-3.47953-4.24073-6.91983-8.52718-10.73628-12.47427-7.00539-7.24516-15.75772-13.64794-26.23437-13.82166-6.15972-.10214-12.121,1.85248-17.844,3.92287-6.16968,2.232-12.32455,4.50571-18.48633,6.75941l-37.16269,13.59243-9.29067,3.3981c-1.64875.603-.93651,3.2619.73111,2.652Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#e4e4e4\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M366.37741,334.52609c-18.75411-9.63866-42.77137-7.75087-60.00508,4.29119a855.84708,855.84708,0,0,1,97.37056,22.72581C390.4603,353.75916,380.07013,341.5635,366.37741,334.52609Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f2f2f2\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M306.18775,338.7841l-3.61042,2.93462c1.22123-1.02713,2.4908-1.99013,3.795-2.90144C306.31073,338.80665,306.24935,338.79473,306.18775,338.7841Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f2f2f2\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M831.54929,486.84576c-3.6328-4.42207-7.56046-9.05222-12.99421-10.84836l-5.07308.20008A575.436,575.436,0,0,0,966.74929,651.418Q899.14929,569.13192,831.54929,486.84576Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f2f2f2\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M516.08388,450.36652A37.4811,37.4811,0,0,0,531.015,471.32518c2.82017,1.92011,6.15681,3.76209,7.12158,7.03463a8.37858,8.37858,0,0,1-.87362,6.1499,24.88351,24.88351,0,0,1-3.86126,5.04137l-.13667.512c-6.99843-4.14731-13.65641-9.3934-17.52227-16.55115s-4.40553-16.53895.34116-23.14544\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f2f2f2\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M749.08388,653.36652A37.4811,37.4811,0,0,0,764.015,674.32518c2.82017,1.92011,6.15681,3.76209,7.12158,7.03463a8.37858,8.37858,0,0,1-.87362,6.1499,24.88351,24.88351,0,0,1-3.86126,5.04137l-.13667.512c-6.99843-4.14731-13.65641-9.3934-17.52227-16.55115s-4.40553-16.53895.34116-23.14544\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f2f2f2\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.08388,639.36652A37.4811,37.4811,0,0,0,299.015,660.32518c2.82017,1.92011,6.15681,3.76209,7.12158,7.03463a8.37858,8.37858,0,0,1-.87362,6.1499,24.88351,24.88351,0,0,1-3.86126,5.04137l-.13667.512c-6.99843-4.14731-13.65641-9.3934-17.52227-16.55115s-4.40553-16.53895.34116-23.14544\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f2f2f2\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 649.24878,\n    cy: 51,\n    r: 51,\n    fill: \"#536dfe\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M911.21851,176.29639c-24.7168-3.34094-52.93512,10.01868-59.34131,34.12353a21.59653,21.59653,0,0,0-41.09351,2.10871l2.82972,2.02667a372.27461,372.27461,0,0,0,160.65881-.72638C957.07935,195.76,935.93537,179.63727,911.21851,176.29639Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f0f0f0\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M805.21851,244.29639c-24.7168-3.34094-52.93512,10.01868-59.34131,34.12353a21.59653,21.59653,0,0,0-41.09351,2.10871l2.82972,2.02667a372.27461,372.27461,0,0,0,160.65881-.72638C851.07935,263.76,829.93537,247.63727,805.21851,244.29639Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#f0f0f0\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1020.94552,257.15423a.98189.98189,0,0,1-.30176-.04688C756.237,173.48919,523.19942,184.42376,374.26388,208.32122c-20.26856,3.251-40.59131,7.00586-60.40381,11.16113-5.05811,1.05957-10.30567,2.19532-15.59668,3.37793-6.31885,1.40723-12.55371,2.85645-18.53223,4.30567q-3.873.917-7.59472,1.84863c-3.75831.92773-7.57178,1.89453-11.65967,2.957-4.56787,1.17774-9.209,2.41309-13.79737,3.67188a.44239.44239,0,0,1-.05127.01465l.00049.001c-5.18261,1.415-10.33789,2.8711-15.32324,4.3252-2.69824.77929-5.30371,1.54785-7.79932,2.30664-.2788.07715-.52587.15136-.77636.22754l-.53614.16308c-.31054.09473-.61718.1875-.92382.27539l-.01953.00586.00048.001-.81152.252c-.96777.293-1.91211.5791-2.84082.86426-24.54492,7.56641-38.03809,12.94922-38.17139,13.00195a1,1,0,1,1-.74414-1.85644c.13428-.05274,13.69336-5.46289,38.32764-13.05762.93213-.28613,1.87891-.57226,2.84961-.86621l.7539-.23438c.02588-.00976.05176-.01757.07813-.02539.30518-.08691.60986-.17968.91943-.27343l.53711-.16309c.26758-.08105.53125-.16113.80127-.23535,2.47852-.75391,5.09278-1.52441,7.79785-2.30664,4.98731-1.45508,10.14746-2.91113,15.334-4.32813.01611-.00586.03271-.00976.04883-.01464v-.001c4.60449-1.2627,9.26269-2.50293,13.84521-3.68457,4.09424-1.06348,7.915-2.03223,11.67969-2.96192q3.73755-.93017,7.60937-1.85253c5.98536-1.45118,12.23291-2.90235,18.563-4.3125,5.29932-1.1836,10.55567-2.32227,15.62207-3.38282,19.84326-4.16211,40.19776-7.92285,60.49707-11.17871C523.09591,182.415,756.46749,171.46282,1021.2463,255.2011a.99974.99974,0,0,1-.30078,1.95313Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#ccc\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M432.92309,584.266a6.72948,6.72948,0,0,0-1.7-2.67,6.42983,6.42983,0,0,0-.92-.71c-2.61-1.74-6.51-2.13-8.99,0a5.81012,5.81012,0,0,0-.69.71q-1.11,1.365-2.28,2.67c-1.28,1.46-2.59,2.87-3.96,4.24-.39.38-.78.77-1.18,1.15-.23.23-.46.45-.69.67-.88.84-1.78,1.65-2.69,2.45-.48.43-.96.85-1.45,1.26-.73.61-1.46,1.22-2.2,1.81-.07.05-.14.1-.21.16-.02.01-.03.03-.05.04-.01,0-.02,0-.03.02a.17861.17861,0,0,0-.07.05c-.22.15-.37.25-.48.34.04-.01995.08-.05.12-.07-.18.14-.37.28-.55.42-1.75,1.29-3.54,2.53-5.37,3.69a99.21022,99.21022,0,0,1-14.22,7.55c-.33.13-.67.27-1.01.4a85.96993,85.96993,0,0,1-40.85,6.02q-2.13008-.165-4.26-.45c-1.64-.24-3.27-.53-4.89-.86a97.93186,97.93186,0,0,1-18.02-5.44,118.65185,118.65185,0,0,1-20.66-12.12c-1-.71-2.01-1.42-3.02-2.11,1.15-2.82,2.28-5.64,3.38-8.48.55-1.37,1.08-2.74,1.6-4.12,4.09-10.63,7.93-21.36,11.61-32.13q5.58-16.365,10.53-32.92.51-1.68.99-3.36,2.595-8.745,4.98-17.53c.15-.56994.31-1.12994.45-1.7q.68994-2.52,1.35-5.04c1-3.79-1.26-8.32-5.24-9.23a7.63441,7.63441,0,0,0-9.22,5.24c-.43,1.62-.86,3.23-1.3,4.85q-3.165,11.74494-6.66,23.41-.51,1.68-1.02,3.36-7.71,25.41-16.93,50.31-1.11,3.015-2.25,6.01c-.37.98-.74,1.96-1.12,2.94-.73,1.93-1.48,3.86-2.23,5.79-.43006,1.13-.87006,2.26-1.31,3.38-.29.71-.57,1.42-.85,2.12a41.80941,41.80941,0,0,0-8.81-2.12l-.48-.06a27.397,27.397,0,0,0-7.01.06,23.91419,23.91419,0,0,0-17.24,10.66c-4.77,7.51-4.71,18.25,1.98,24.63,6.89,6.57,17.32,6.52,25.43,2.41a28.35124,28.35124,0,0,0,10.52-9.86,50.56939,50.56939,0,0,0,2.74-4.65c.21.14.42.28.63.43.8.56,1.6,1.13,2.39,1.69a111.73777,111.73777,0,0,0,14.51,8.91,108.35887,108.35887,0,0,0,34.62,10.47c.27.03.53.07.8.1,1.33.17,2.67.3,4.01.41a103.78229,103.78229,0,0,0,55.58-11.36q2.175-1.125,4.31-2.36,3.315-1.92,6.48-4.08c1.15-.78,2.27-1.57,3.38-2.4a101.04244,101.04244,0,0,0,13.51-11.95q2.35491-2.475,4.51-5.11005a8.0612,8.0612,0,0,0,2.2-5.3A7.5644,7.5644,0,0,0,432.92309,584.266Zm-165.59,23.82c.21-.15.42-.31.62-.47C267.89312,607.766,267.60308,607.936,267.33312,608.086Zm3.21-3.23c-.23.26-.44.52-.67.78a23.36609,23.36609,0,0,1-2.25,2.2c-.11.1-.23.2-.35.29a.00976.00976,0,0,0-.01.01,3.80417,3.80417,0,0,0-.42005.22q-.645.39-1.31994.72a17.00459,17.00459,0,0,1-2.71.75,16.79925,16.79925,0,0,1-2.13.02h-.02a14.82252,14.82252,0,0,1-1.45-.4c-.24-.12-.47-.25994-.7-.4-.09-.08-.17005-.16-.22-.21a2.44015,2.44015,0,0,1-.26995-.29.0098.0098,0,0,0-.01-.01c-.11005-.2-.23005-.4-.34-.6a.031.031,0,0,1-.01-.02c-.08-.25-.15-.51-.21-.77a12.51066,12.51066,0,0,1,.01-1.37,13.4675,13.4675,0,0,1,.54-1.88,11.06776,11.06776,0,0,1,.69-1.26c.02-.04.12-.2.23-.38.01-.01.01-.01.01-.02.15-.17.3-.35.46-.51.27-.3.56-.56.85-.83a18.02212,18.02212,0,0,1,1.75-1.01,19.48061,19.48061,0,0,1,2.93-.79,24.98945,24.98945,0,0,1,4.41.04,30.30134,30.30134,0,0,1,4.1,1.01,36.94452,36.94452,0,0,1-2.77,4.54C270.6231,604.746,270.58312,604.806,270.54308,604.856Zm-11.12-3.29a2.18029,2.18029,0,0,1-.31.38995A1.40868,1.40868,0,0,1,259.42309,601.566Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M402.86309,482.136q-.13494,4.71-.27,9.42-.285,10.455-.59,20.92-.315,11.775-.66,23.54-.165,6.07507-.34,12.15-.465,16.365-.92,32.72c-.03,1.13-.07,2.25-.1,3.38q-.225,8.11506-.45,16.23-.255,8.805-.5,17.61-.18,6.59994-.37,13.21-1.34994,47.895-2.7,95.79a7.64844,7.64844,0,0,1-7.5,7.5,7.56114,7.56114,0,0,1-7.5-7.5q.75-26.94,1.52-53.88.675-24.36,1.37-48.72.225-8.025.45-16.06.345-12.09.68-24.18c.03-1.13.07-2.25.1-3.38.02-.99.05-1.97.08-2.96q.66-23.475,1.32-46.96.27-9.24.52-18.49.3-10.545.6-21.08c.09-3.09.17005-6.17.26-9.26a7.64844,7.64844,0,0,1,7.5-7.5A7.56116,7.56116,0,0,1,402.86309,482.136Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M814.29118,484.2172a893.23753,893.23753,0,0,1-28.16112,87.94127c-3.007,7.94641-6.08319,15.877-9.3715,23.71185l.75606-1.7916a54.58274,54.58274,0,0,1-5.58953,10.61184q-.22935.32119-.46685.63642,1.16559-1.49043.4428-.589c-.25405.30065-.5049.60219-.7676.89546a23.66436,23.66436,0,0,1-2.2489,2.20318q-.30139.25767-.61188.5043l.93783-.729c-.10884.25668-.87275.59747-1.11067.74287a18.25362,18.25362,0,0,1-2.40479,1.21853l1.7916-.75606a19.0859,19.0859,0,0,1-4.23122,1.16069l1.9938-.26791a17.02055,17.02055,0,0,1-4.29785.046l1.99379.2679a14.0022,14.0022,0,0,1-3.40493-.917l1.79159.75606a12.01175,12.01175,0,0,1-1.67882-.89614c-.27135-.17688-1.10526-.80852-.01487.02461,1.13336.86595.14562.07434-.08763-.15584-.19427-.19171-.36962-.4-.55974-.595-.88208-.90454.99637,1.55662.39689.49858a18.18179,18.18179,0,0,1-.87827-1.63672l.75606,1.7916a11.92493,11.92493,0,0,1-.728-2.65143l.26791,1.9938a13.65147,13.65147,0,0,1-.00316-3.40491l-.2679,1.9938a15.96371,15.96371,0,0,1,.99486-3.68011l-.75606,1.7916a16.72914,16.72914,0,0,1,1.17794-2.29848,6.72934,6.72934,0,0,1,.72851-1.0714c.04915.01594-1.26865,1.51278-.56937.757.1829-.19767.354-.40592.539-.602.29617-.31382.61354-.60082.92561-.89791,1.04458-.99442-1.46188.966-.25652.17907a19.0489,19.0489,0,0,1,2.74925-1.49923l-1.79159.75606a20.31136,20.31136,0,0,1,4.99523-1.33984l-1.9938.2679a25.62828,25.62828,0,0,1,6.46062.07647l-1.9938-.2679a33.21056,33.21056,0,0,1,7.89178,2.2199l-1.7916-.75606c5.38965,2.31383,10.16308,5.74926,14.928,9.118a111.94962,111.94962,0,0,0,14.50615,8.9065,108.38849,108.38849,0,0,0,34.62226,10.47371,103.93268,103.93268,0,0,0,92.58557-36.75192,8.07773,8.07773,0,0,0,2.1967-5.3033,7.63232,7.63232,0,0,0-2.1967-5.3033c-2.75154-2.52586-7.94926-3.239-10.6066,0a95.63575,95.63575,0,0,1-8.10664,8.72692q-2.01736,1.914-4.14232,3.70983-1.21364,1.02588-2.46086,2.01121c-.3934.31081-1.61863,1.13807.26309-.19744-.43135.30614-.845.64036-1.27058.95478a99.26881,99.26881,0,0,1-20.33215,11.56478l1.79159-.75606a96.8364,96.8364,0,0,1-24.17119,6.62249l1.99379-.2679a97.64308,97.64308,0,0,1-25.75362-.03807l1.99379.2679a99.79982,99.79982,0,0,1-24.857-6.77027l1.7916.75607a116.02515,116.02515,0,0,1-21.7364-12.59112,86.87725,86.87725,0,0,0-11.113-6.99417,42.8238,42.8238,0,0,0-14.43784-4.38851c-9.43884-1.11076-19.0571,2.56562-24.24624,10.72035-4.77557,7.50482-4.71394,18.24362,1.97369,24.62519,6.8877,6.5725,17.31846,6.51693,25.43556,2.40567,7.81741-3.95946,12.51288-12.18539,15.815-19.94186,7.43109-17.45514,14.01023-35.31364,20.1399-53.263q9.09651-26.63712,16.49855-53.81332.91661-3.36581,1.80683-6.73869c1.001-3.78869-1.26094-8.32-5.23829-9.22589a7.63317,7.63317,0,0,0-9.22589,5.23829Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M889.12382,482.13557l-2.69954,95.79311-2.68548,95.29418-1.5185,53.88362a7.56465,7.56465,0,0,0,7.5,7.5,7.64923,7.64923,0,0,0,7.5-7.5l2.69955-95.79311,2.68548-95.29418,1.51849-53.88362a7.56465,7.56465,0,0,0-7.5-7.5,7.64923,7.64923,0,0,0-7.5,7.5Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M629.52566,700.36106h2.32885V594.31942h54.32863v-2.32291H631.85451V547.25214H673.8102q-.92256-1.17339-1.89893-2.31694H631.85451V515.38231c-.7703-.32846-1.54659-.64493-2.32885-.9435V544.9352h-45.652V507.07c-.78227.03583-1.55258.08959-2.3289.15527v37.71h-36.4201V516.68409c-.78227.34636-1.55258.71061-2.31694,1.0928V544.9352h-30.6158v2.31694h30.6158v44.74437h-30.6158v2.32291h30.6158V700.36106h2.31694V594.31942a36.41283,36.41283,0,0,1,36.4201,36.42007v69.62157h2.3289V594.31942h45.652Zm-84.401-108.36455V547.25214h36.4201v44.74437Zm38.749,0V547.25214h.91362a44.74135,44.74135,0,0,1,44.73842,44.74437Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    opacity: 0.2\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M615.30309,668.566a63.05854,63.05854,0,0,1-20.05,33.7c-.74.64-1.48,1.26-2.25,1.87q-2.805.25506-5.57.52c-1.53.14-3.04.29-4.54.43l-.27.03-.19-1.64-.76-6.64a37.623,37.623,0,0,1-3.3-32.44c2.64-7.12,7.42-13.41,12.12-19.65,6.49-8.62,12.8-17.14,13.03-27.65a60.54415,60.54415,0,0,1,7.9,13.33,16.432,16.432,0,0,0-5.12,3.76995c-.41.45-.82,1.08-.54,1.62006.24.46.84.57,1.36.62994,1.25.13,2.51.26,3.76.39,1,.11,2,.21,3,.32a63.99025,63.99025,0,0,1,2.45,12.18A61.18851,61.18851,0,0,1,615.30309,668.566Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M648.50311,642.356c-5.9,4.29-9.35,10.46-12.03,17.26a16.62776,16.62776,0,0,0-7.17,4.58c-.41.45-.82,1.08-.54,1.62006.24.46.84.57,1.36.62994,1.25.13,2.51.26,3.76.39-2.68,8.04-5.14,16.36-9.88,23.15a36.98942,36.98942,0,0,1-12.03,10.91,38.49166,38.49166,0,0,1-4.02,1.99q-7.62.585-14.95,1.25-2.805.25506-5.57.52c-1.53.14-3.04.29-4.54.43q-.015-.825,0-1.65a63.30382,63.30382,0,0,1,15.25-39.86c.45-.52.91-1.03,1.38-1.54a61.7925,61.7925,0,0,1,16.81-12.7A62.65425,62.65425,0,0,1,648.50311,642.356Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#536dfe\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M589.16308,699.526l-1.15,3.4-.58,1.73c-1.53.14-3.04.29-4.54.43l-.27.03c-1.66.17-3.31.34-4.96.51-.43-.5-.86-1.01-1.28-1.53a62.03045,62.03045,0,0,1,8.07-87.11c-1.32,6.91.22,13.53,2.75,20.1-.27.11-.53.22-.78.34a16.432,16.432,0,0,0-5.12,3.76995c-.41.45-.82,1.08-.54,1.62006.24.46.84.57,1.36.62994,1.25.13,2.51.26,3.76.39,1,.11,2,.21,3,.32q.705.075,1.41.15c.07.15.13.29.2.44,2.85,6.18,5.92,12.39,7.65,18.83a43.66591,43.66591,0,0,1,1.02,4.91A37.604,37.604,0,0,1,589.16308,699.526Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#536dfe\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M689.82123,554.48655c-8.60876-16.79219-21.94605-30.92088-37.63219-41.30357a114.2374,114.2374,0,0,0-52.5626-18.37992q-3.69043-.33535-7.399-.39281c-2.92141-.04371-46.866,12.63176-61.58712,22.98214a114.29462,114.29462,0,0,0-35.333,39.527,102.49972,102.49972,0,0,0-12.12557,51.6334,113.56387,113.56387,0,0,0,14.70268,51.47577,110.47507,110.47507,0,0,0,36.44425,38.74592C549.66655,708.561,565.07375,734.51,583.1831,735.426c18.24576.923,39.05418-23.55495,55.6951-30.98707a104.42533,104.42533,0,0,0,41.72554-34.005,110.24964,110.24964,0,0,0,19.599-48.94777c2.57368-18.08313,1.37415-36.73271-4.80123-54.01627a111.85969,111.85969,0,0,0-5.58024-12.9833c-1.77961-3.50519-6.996-4.7959-10.26142-2.69063a7.67979,7.67979,0,0,0-2.69064,10.26142q1.56766,3.08773,2.91536,6.27758l-.75606-1.7916a101.15088,101.15088,0,0,1,6.87641,25.53816l-.26791-1.99379a109.2286,109.2286,0,0,1-.06613,28.68252l.26791-1.9938a109.73379,109.73379,0,0,1-7.55462,27.67419l.75606-1.79159a104.212,104.212,0,0,1-6.67151,13.09835q-1.92308,3.18563-4.08062,6.22159c-.63172.8881-1.28287,1.761-1.939,2.63114-.85625,1.13555,1.16691-1.48321.28228-.36941-.15068.18972-.30049.3801-.45182.5693q-.68121.85165-1.3818,1.68765a93.61337,93.61337,0,0,1-10.17647,10.38359q-1.36615,1.19232-2.77786,2.33115c-.46871.37832-.932.77269-1.42079,1.12472.01861-.0134,1.57956-1.19945.65556-.511-.2905.21644-.57851.43619-.86961.65184q-2.90994,2.1558-5.97433,4.092a103.48509,103.48509,0,0,1-14.75565,7.7131l1.7916-.75606a109.21493,109.21493,0,0,1-27.59663,7.55154l1.9938-.26791a108.15361,108.15361,0,0,1-28.58907.0506l1.99379.2679a99.835,99.835,0,0,1-25.09531-6.78448l1.79159.75607a93.64314,93.64314,0,0,1-13.41605-6.99094q-3.17437-2-6.18358-4.24743c-.2862-.21359-.56992-.43038-.855-.64549-.9155-.69088.65765.50965.67021.51787a19.16864,19.16864,0,0,1-1.535-1.22469q-1.45353-1.18358-2.86136-2.4218a101.98931,101.98931,0,0,1-10.49319-10.70945q-1.21308-1.43379-2.37407-2.91054c-.33524-.4263-.9465-1.29026.40424.5289-.17775-.23939-.36206-.47414-.54159-.71223q-.64657-.85751-1.27568-1.72793-2.203-3.048-4.18787-6.24586a109.29037,109.29037,0,0,1-7.8054-15.10831l.75606,1.7916a106.58753,106.58753,0,0,1-7.34039-26.837l.26791,1.9938a97.86589,97.86589,0,0,1-.04843-25.63587l-.2679,1.9938A94.673,94.673,0,0,1,505.27587,570.55l-.75606,1.7916a101.55725,101.55725,0,0,1,7.19519-13.85624q2.0655-3.32328,4.37767-6.4847.52528-.71832,1.06244-1.42786c.324-.4279,1.215-1.49333-.30537.38842.14906-.18449.29252-.37428.43942-.56041q1.26882-1.60756,2.59959-3.1649A107.40164,107.40164,0,0,1,530.772,536.21508q1.47408-1.29171,2.99464-2.52906.6909-.56218,1.39108-1.11284c.18664-.14673.37574-.29073.56152-.43858-1.99743,1.58953-.555.43261-.10157.09288q3.13393-2.34833,6.43534-4.46134a103.64393,103.64393,0,0,1,15.38655-8.10791l-1.7916.75606c7.76008-3.25839,42.14086-10.9492,48.394-10.10973l-1.99379-.26791A106.22471,106.22471,0,0,1,628.768,517.419l-1.7916-.75606a110.31334,110.31334,0,0,1,12.6002,6.32922q3.04344,1.78405,5.96742,3.76252,1.38351.93658,2.73809,1.915.677.48917,1.34626.98885c.24789.185.49386.37253.74135.558,1.03924.779-1.43148-1.1281-.34209-.26655a110.84261,110.84261,0,0,1,10.36783,9.2532q2.401,2.445,4.63686,5.04515,1.14659,1.33419,2.24643,2.70757c.36436.45495,1.60506,2.101.08448.08457.37165.49285.74744.98239,1.11436,1.47884a97.97718,97.97718,0,0,1,8.39161,13.53807c1.79317,3.49775,6.98675,4.80186,10.26142,2.69064A7.67666,7.67666,0,0,0,689.82123,554.48655Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M602.43116,676.88167a3.77983,3.77983,0,0,1-2.73939-6.55137c.09531-.37882.16368-.65085.259-1.02968q-.05115-.12366-.1029-.24717c-3.47987-8.29769-25.685,14.83336-26.645,22.63179a30.029,30.029,0,0,0,.52714,10.32752A120.39223,120.39223,0,0,1,562.77838,652.01a116.20247,116.20247,0,0,1,.72078-12.96332q.59712-5.293,1.65679-10.51055a121.78667,121.78667,0,0,1,24.1515-51.61646c6.87378.38364,12.898-.66348,13.47967-13.98532.10346-2.36972,1.86113-4.42156,2.24841-6.756-.65621.08607-1.32321.13985-1.97941.18285-.20444.0107-.41958.02149-.624.03228l-.07709.00346a3.745,3.745,0,0,1-3.07566-6.10115q.425-.52305.85054-1.04557c.43036-.53793.87143-1.06507,1.30171-1.60292a1.865,1.865,0,0,0,.13986-.16144c.49494-.61322.98971-1.21564,1.48465-1.82885a10.82911,10.82911,0,0,0-3.55014-3.43169c-4.95941-2.90463-11.80146-.89293-15.38389,3.59313-3.59313,4.486-4.27083,10.77947-3.023,16.3843a43.39764,43.39764,0,0,0,6.003,13.3828c-.269.34429-.54872.67779-.81765,1.02209a122.57366,122.57366,0,0,0-12.79359,20.2681c1.0163-7.93863-11.41159-36.60795-16.21776-42.68052-5.773-7.29409-17.61108-4.11077-18.62815,5.13562q-.01476.13428-.02884.26849,1.07082.60411,2.0964,1.28237a5.12707,5.12707,0,0,1-2.06713,9.33031l-.10452.01613c-9.55573,13.64367,21.07745,49.1547,28.74518,41.18139a125.11045,125.11045,0,0,0-6.73449,31.69282,118.66429,118.66429,0,0,0,.08607,19.15986l-.03231-.22593C558.90163,648.154,529.674,627.51374,521.139,629.233c-4.91675.99041-9.75952.76525-9.01293,5.72484q.01788.11874.03635.2375a34.4418,34.4418,0,0,1,3.862,1.86105q1.07082.60423,2.09639,1.28237a5.12712,5.12712,0,0,1-2.06712,9.33039l-.10464.01606c-.07528.01079-.13987.02157-.21507.03237-4.34967,14.96631,27.90735,39.12,47.5177,31.43461h.01081a125.07484,125.07484,0,0,0,8.402,24.52806H601.679c.10765-.3335.20443-.67779.3013-1.01129a34.102,34.102,0,0,1-8.30521-.49477c2.22693-2.73257,4.45377-5.48664,6.6807-8.21913a1.86122,1.86122,0,0,0,.13986-.16135c1.12956-1.39849,2.26992-2.78627,3.39948-4.18476l.00061-.00173a49.95232,49.95232,0,0,0-1.46367-12.72495Zm-34.37066-67.613.0158-.02133-.0158.04282Zm-6.64832,59.93237-.25822-.58084c.01079-.41957.01079-.83914,0-1.26942,0-.11845-.0215-.23672-.0215-.35508.09678.74228.18285,1.48464.29042,2.22692Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 95.24878,\n    cy: 439,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 227.24878,\n    cy: 559,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 728.24878,\n    cy: 559,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 755.24878,\n    cy: 419,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 723.24878,\n    cy: 317,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M434.1831,583.426a10.949,10.949,0,1,1-.21-2.16A10.9921,10.9921,0,0,1,434.1831,583.426Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 484.24878,\n    cy: 349,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M545.1831,513.426a10.949,10.949,0,1,1-.21-2.16A10.9921,10.9921,0,0,1,545.1831,513.426Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M403.1831,481.426a10.949,10.949,0,1,1-.21-2.16A10.9921,10.9921,0,0,1,403.1831,481.426Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#3f3d56\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 599.24878,\n    cy: 443,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 426.24878,\n    cy: 338,\n    r: 16,\n    fill: \"#3f3d56\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1028.875,735.26666l-857.75.30733a1.19068,1.19068,0,1,1,0-2.38136l857.75-.30734a1.19069,1.19069,0,0,1,0,2.38137Z\",\n    transform: \"translate(-169.93432 -164.42601)\",\n    fill: \"#cacaca\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawPageNotFoundReE9O6);\nexport default __webpack_public_path__ + \"static/media/undraw_page_not_found_re_e9o6.5a31cb7fee92ff4bdf8c02f345299bbe.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable linebreak-style */\n/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/no-danger */\n\nimport React, { Component } from 'react';\n\nimport Button from 'elements/Button';\n\nimport NotFound from 'assets/images/undraw_page_not_found_re_e9o6.svg';\n\nimport { useDynamicSvg } from 'svgBgChanger';\n\nimport colors from 'themeColors';\n\nimport { ActiveTheme } from '../customize';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class NotFoundPage extends Component {\n  constructor(props) {\n    super(props);\n    const colorMappings = {\n      '#536dfe': colors[ActiveTheme], // Old color: new color\n    };\n    this.svgContent = useDynamicSvg(NotFound, colorMappings);\n  }\n\n  render() {\n    return (\n      <div className=\"flex flex-col w-full h-screen justify-center bg-gray-800\">\n        <div\n          className=\"flex w-full justify-center\"\n          dangerouslySetInnerHTML={{ __html: this.svgContent }}\n        />\n        <h1 className=\"text-white text-2xl text-center mt-5\">\n          You weren't supposed to find this place...\n        </h1>\n        <div className=\"flex justify-center\">\n          <Button href=\"/\" type=\"link\" className=\"flex w-30 h-10 px-5 mt-5 bg-gray-600 text-white items-center rounded transform transition duration-500 hover:bg-gray-900\">\n            Go Back\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _polygon, _path18, _path19, _path20, _path21, _polygon2, _polygon3, _path22, _path23, _polygon4, _path24, _path25, _polygon5, _path26, _polygon6, _path27, _path28, _path29, _path30, _polygon7, _path31, _path32, _path33, _polygon8, _path34, _path35, _polygon9, _polygon10, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _polygon11, _path43, _polygon12, _path44, _path45, _path46, _circle, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _rect, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23, _rect24, _rect25, _rect26, _rect27, _rect28, _rect29, _rect30, _rect31, _rect32, _rect33, _path54, _ellipse, _ellipse2, _ellipse3, _path55, _path56, _path57, _rect34, _rect35, _rect36, _polygon13, _path58, _path59, _path60, _path61, _polygon14, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _polygon15, _polygon16, _polygon17, _polygon18, _circle2, _path82, _path83, _path84, _path85, _path86, _path87, _circle3, _path88, _path89, _path90, _path91, _path92, _path93;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUndrawTeamCollaborationReOw29(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 936.13137,\n    height: 505.29587,\n    viewBox: \"0 0 936.13137 505.29587\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M191.22942,619.35948l-2.92,14.65c-.22,1.12-.45,2.26-.7,3.39a14.28772,14.28772,0,0,0-7.34.41,68.511,68.511,0,0,1,5.04,8.43c-1.84,5.67-4.54,10.91-9.06,14.7a22.71964,22.71964,0,0,1-21.95,3.86l.13-.58c-4.86-9.43-2.22-21.32,3.82-30.03a58.3846,58.3846,0,0,1,10.85-11.47c4.07995-3.4,8.49-6.45,12.86-9.46A5.99007,5.99007,0,0,1,191.22942,619.35948Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e4e4e4\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"b311a411-101b-4365-a37b-2cdfec47a637-533\",\n    \"data-name\": \"a4b268fa-75d0-4ac1-9d87-14bdca948464-2189\",\n    d: \"M155.33929,700.04932c-1.229-8.953-2.493-18.02-1.631-27.069.766-8.036,3.217-15.885,8.209-22.321a37.13173,37.13173,0,0,1,9.527-8.633c.953-.6,1.829.909.881,1.507a35.29987,35.29987,0,0,0-13.963,16.847c-3.04,7.732-3.528,16.161-3,24.374.317,4.967.988,9.9,1.665,14.83a.9.9,0,0,1-.61,1.074.878.878,0,0,1-1.074-.61Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#f2f2f2\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.88665,250.986q64.2559-1.1173,128.52565-.321,64.26043.801,128.47773,3.52415,36.035,1.5282,72.04082,3.66151c1.92853.11411,1.92189-2.88628,0-3q-64.15339-3.79623-128.40043-5.6811-64.23792-1.8798-128.51292-1.83728-36.06741.024-72.13085.65375c-1.92833.03353-1.93442,3.03363,0,3Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M464.42206,232.1752l18.73149-1.39412c1.91356-.14242,1.92908-3.14357,0-3l-18.73149,1.39412c-1.91356.14242-1.92908,3.14358,0,3Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M464.42206,250.1752l18.73149-1.39412c1.91356-.14242,1.92908-3.14357,0-3l-18.73149,1.39412c-1.91356.14242-1.92908,3.14358,0,3Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M463.01309,241.955,489.645,244.3745c1.92205.17461,1.9102-2.82646,0-3L463.01309,238.955c-1.922-.17461-1.9102,2.82646,0,3Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M176.97218,228.14065a6.6356,6.6356,0,0,0-6.13315,4.00554,5.97374,5.97374,0,0,0,1.37464,7.09581,7.1022,7.1022,0,0,0,6.72877,1.367,6.00261,6.00261,0,0,0,4.02336-5.64266,6.70726,6.70726,0,0,0-4.17854-6.469,1.50605,1.50605,0,0,0-1.84518,1.04766,1.54254,1.54254,0,0,0,1.04766,1.84518c.26142.101-.23881-.1285.00529.00448.10036.05468.20261.10408.30116.16246.08379.04963.164.10394.2455.15713.28.18276-.13669-.13416.04228.03012.15522.14248.309.28149.45006.43871.05335.05944.26234.2247.09993.10919-.12426-.08838-.04792-.0676-.00005.00337.03634.05386.07477.10625.11066.16044a5.3458,5.3458,0,0,1,.31836.55036c.02205.04387.0422.08877.06462.13243.042.0818.10289.10324.00414.00077-.09435-.0979-.03428-.09121-.00052.003.02219.06193.04641.12308.068.18523a5.782,5.782,0,0,1,.17685.6173c.022.09655.03967.19367.05856.29082.067.34448-.00973-.21415.00645.04173.01352.21364.02927.425.02555.63949q-.00255.14723-.0128.29409c-.00345.04884-.00889.09755-.01211.14639-.01555.23538-.01606-.086.01688-.108a2.77013,2.77013,0,0,0-.13555.617c-.02687.09326-.05878.18448-.08868.27672-.10435.32182.098-.17543-.01323.04454a5.48681,5.48681,0,0,1-.30646.5497c-.04887.07423-.23316.24186-.08246.1252.16353-.1266-.08574.09141-.13893.14751q-.10248.10809-.21273.20867a1.70367,1.70367,0,0,1-.14877.1293c-.00954-.00479.25061-.17374.1104-.08432-.17824.11368-.347.23528-.53484.33425-.02187.01152-.262.12277-.261.12671-.01036-.0405.30871-.11234.08969-.04157-.046.01486-.09113.03281-.13695.04826a4.90024,4.90024,0,0,1-.60932.1623c-.04725.00941-.09723.01419-.14378.02623-.15506.0401.14818-.02352.15729-.01826a1.30824,1.30824,0,0,0-.34135.03022,5.5808,5.5808,0,0,1-.639-.00006c-.04925-.00282-.09838-.00773-.14761-.01059-.1143-.00664-.19817-.089-.04607.0004.11735.069.10759.01866.00362-.00054-.04862-.009-.09747-.01658-.14608-.0257a5.82144,5.82144,0,0,1-.624-.15284c-.11033-.03362-.21843-.07272-.32727-.11076a.86911.86911,0,0,1-.138-.05312c-.00066-.01235.28052.13436.13207.05436-.18737-.101-.38113-.18564-.56409-.296-.09763-.0589-.19141-.12294-.28634-.186a.9227.9227,0,0,1-.11872-.085c.00314-.01268.23256.1999.11213.08514-.1523-.14515-.31522-.27508-.45946-.42964-.033-.03535-.06421-.07236-.09709-.10779l-.03184-.03638q-.12195-.14906-.00451.00143c.07949.02342.07587.11067.00044-.00265-.02688-.04038-.05545-.07959-.08227-.12a3.13367,3.13367,0,0,1-.31006-.55366c.00731-.00569.12994.36093.03617.08426-.01772-.05227-.03764-.10369-.055-.15609q-.0517-.15588-.091-.31524c-.02593-.10523-.03924-.21379-.06539-.31859-.04409-.17666.02575.13937.01779.1315-.025-.02471-.01436-.17791-.01623-.21457-.012-.23537.01482-.46383.019-.69778.00327-.18124-.015.14125-.01878.1318a.5081.5081,0,0,1,.02848-.15932c.02715-.12339.05242-.24665.08566-.36867q.05709-.20957.13146-.414c.01852-.051.0411-.10125.05833-.15267.06313-.18837-.125.22748-.02127.05764.14271-.23369.249-.48658.40052-.71737.0359-.05471.25421-.35945.13835-.20559-.11539.15325.11857-.13721.16286-.18652.184-.20489.40037-.3731.59087-.56928.11276-.11613-.07871.05718-.09.06526.059-.04215.11677-.0859.1765-.12706q.15621-.10767.32008-.20359c.12306-.07215.26221-.12586.38148-.20218.1409-.09017-.10776.03958-.11221.04229a1.11642,1.11642,0,0,1,.20093-.07659c.11615-.04119.62132-.25917.72729-.191-.0048-.00309-.38358.03048-.07738.01081.07236-.00465.14442-.0117.2169-.0147.14658-.00607.29266-.0024.43909.0052a1.50993,1.50993,0,0,0,1.5-1.5,1.5333,1.5333,0,0,0-1.5-1.5Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.97218,228.14065a6.6356,6.6356,0,0,0-6.13315,4.00554,5.97374,5.97374,0,0,0,1.37464,7.09581,7.1022,7.1022,0,0,0,6.72877,1.367,6.00261,6.00261,0,0,0,4.02336-5.64266,6.70726,6.70726,0,0,0-4.17854-6.469,1.50605,1.50605,0,0,0-1.84518,1.04766,1.54254,1.54254,0,0,0,1.04766,1.84518c.26142.101-.23881-.1285.00529.00448.10036.05468.20261.10408.30116.16246.08379.04963.164.10394.2455.15713.28.18276-.13669-.13416.04228.03012.15522.14248.309.28149.45006.43871.05335.05944.26234.2247.09993.10919-.12426-.08838-.04792-.0676-.00005.00337.03634.05386.07477.10625.11066.16044a5.3458,5.3458,0,0,1,.31836.55036c.02205.04387.0422.08877.06462.13243.042.0818.10289.10324.00414.00077-.09435-.0979-.03428-.09121-.00052.003.02219.06193.04641.12308.068.18523a5.782,5.782,0,0,1,.17685.6173c.022.09655.03967.19367.05856.29082.067.34448-.00973-.21415.00645.04173.01352.21364.02927.425.02555.63949q-.00255.14723-.0128.29409c-.00345.04884-.00889.09755-.01211.14639-.01555.23538-.01606-.086.01688-.108a2.77013,2.77013,0,0,0-.13555.617c-.02687.09326-.05878.18448-.08868.27672-.10435.32182.098-.17543-.01323.04454a5.48681,5.48681,0,0,1-.30646.5497c-.04887.07423-.23316.24186-.08246.1252.16353-.1266-.08574.09141-.13893.14751q-.10248.10809-.21273.20867a1.70367,1.70367,0,0,1-.14877.1293c-.00954-.00479.25061-.17374.1104-.08432-.17824.11368-.347.23528-.53484.33425-.02187.01152-.262.12277-.261.12671-.01036-.0405.30871-.11234.08969-.04157-.046.01486-.09113.03281-.13695.04826a4.90024,4.90024,0,0,1-.60932.1623c-.04725.00941-.09723.01419-.14378.02623-.15506.0401.14818-.02352.15729-.01826a1.30824,1.30824,0,0,0-.34135.03022,5.5808,5.5808,0,0,1-.639-.00006c-.04925-.00282-.09838-.00773-.14761-.01059-.1143-.00664-.19817-.089-.04607.0004.11735.069.10759.01866.00362-.00054-.04862-.009-.09747-.01658-.14608-.0257a5.82144,5.82144,0,0,1-.624-.15284c-.11033-.03362-.21843-.07272-.32727-.11076a.86911.86911,0,0,1-.138-.05312c-.00066-.01235.28052.13436.13207.05436-.18737-.101-.38113-.18564-.56409-.296-.09763-.0589-.19141-.12294-.28634-.186a.9227.9227,0,0,1-.11872-.085c.00314-.01268.23256.1999.11213.08514-.1523-.14515-.31522-.27508-.45946-.42964-.033-.03535-.06421-.07236-.09709-.10779l-.03184-.03638q-.12195-.14906-.00451.00143c.07949.02342.07587.11067.00044-.00265-.02688-.04038-.05545-.07959-.08227-.12a3.13367,3.13367,0,0,1-.31006-.55366c.00731-.00569.12994.36093.03617.08426-.01772-.05227-.03764-.10369-.055-.15609q-.0517-.15588-.091-.31524c-.02593-.10523-.03924-.21379-.06539-.31859-.04409-.17666.02575.13937.01779.1315-.025-.02471-.01436-.17791-.01623-.21457-.012-.23537.01482-.46383.019-.69778.00327-.18124-.015.14125-.01878.1318a.5081.5081,0,0,1,.02848-.15932c.02715-.12339.05242-.24665.08566-.36867q.05709-.20957.13146-.414c.01852-.051.0411-.10125.05833-.15267.06313-.18837-.125.22748-.02127.05764.14271-.23369.249-.48658.40052-.71737.0359-.05471.25421-.35945.13835-.20559-.11539.15325.11857-.13721.16286-.18652.184-.20489.40037-.3731.59087-.56928.11276-.11613-.07871.05718-.09.06526.059-.04215.11677-.0859.1765-.12706q.15621-.10767.32008-.20359c.12306-.07215.26221-.12586.38148-.20218.1409-.09017-.10776.03958-.11221.04229a1.11642,1.11642,0,0,1,.20093-.07659c.11615-.04119.62132-.25917.72729-.191-.0048-.00309-.38358.03048-.07738.01081.07236-.00465.14442-.0117.2169-.0147.14658-.00607.29266-.0024.43909.0052a1.50993,1.50993,0,0,0,1.5-1.5,1.5333,1.5333,0,0,0-1.5-1.5Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.97218,228.14065a6.6356,6.6356,0,0,0-6.13315,4.00554,5.97374,5.97374,0,0,0,1.37464,7.09581,7.1022,7.1022,0,0,0,6.72877,1.367,6.00261,6.00261,0,0,0,4.02336-5.64266,6.70726,6.70726,0,0,0-4.17854-6.469,1.50605,1.50605,0,0,0-1.84518,1.04766,1.54254,1.54254,0,0,0,1.04766,1.84518c.26142.101-.23881-.1285.00529.00448.10036.05468.20261.10408.30116.16246.08379.04963.164.10394.2455.15713.28.18276-.13669-.13416.04228.03012.15522.14248.309.28149.45006.43871.05335.05944.26234.2247.09993.10919-.12426-.08838-.04792-.0676-.00005.00337.03634.05386.07477.10625.11066.16044a5.3458,5.3458,0,0,1,.31836.55036c.02205.04387.0422.08877.06462.13243.042.0818.10289.10324.00414.00077-.09435-.0979-.03428-.09121-.00052.003.02219.06193.04641.12308.068.18523a5.782,5.782,0,0,1,.17685.6173c.022.09655.03967.19367.05856.29082.067.34448-.00973-.21415.00645.04173.01352.21364.02927.425.02555.63949q-.00255.14723-.0128.29409c-.00345.04884-.00889.09755-.01211.14639-.01555.23538-.01606-.086.01688-.108a2.77013,2.77013,0,0,0-.13555.617c-.02687.09326-.05878.18448-.08868.27672-.10435.32182.098-.17543-.01323.04454a5.48681,5.48681,0,0,1-.30646.5497c-.04887.07423-.23316.24186-.08246.1252.16353-.1266-.08574.09141-.13893.14751q-.10248.10809-.21273.20867a1.70367,1.70367,0,0,1-.14877.1293c-.00954-.00479.25061-.17374.1104-.08432-.17824.11368-.347.23528-.53484.33425-.02187.01152-.262.12277-.261.12671-.01036-.0405.30871-.11234.08969-.04157-.046.01486-.09113.03281-.13695.04826a4.90024,4.90024,0,0,1-.60932.1623c-.04725.00941-.09723.01419-.14378.02623-.15506.0401.14818-.02352.15729-.01826a1.30824,1.30824,0,0,0-.34135.03022,5.5808,5.5808,0,0,1-.639-.00006c-.04925-.00282-.09838-.00773-.14761-.01059-.1143-.00664-.19817-.089-.04607.0004.11735.069.10759.01866.00362-.00054-.04862-.009-.09747-.01658-.14608-.0257a5.82144,5.82144,0,0,1-.624-.15284c-.11033-.03362-.21843-.07272-.32727-.11076a.86911.86911,0,0,1-.138-.05312c-.00066-.01235.28052.13436.13207.05436-.18737-.101-.38113-.18564-.56409-.296-.09763-.0589-.19141-.12294-.28634-.186a.9227.9227,0,0,1-.11872-.085c.00314-.01268.23256.1999.11213.08514-.1523-.14515-.31522-.27508-.45946-.42964-.033-.03535-.06421-.07236-.09709-.10779l-.03184-.03638q-.12195-.14906-.00451.00143c.07949.02342.07587.11067.00044-.00265-.02688-.04038-.05545-.07959-.08227-.12a3.13367,3.13367,0,0,1-.31006-.55366c.00731-.00569.12994.36093.03617.08426-.01772-.05227-.03764-.10369-.055-.15609q-.0517-.15588-.091-.31524c-.02593-.10523-.03924-.21379-.06539-.31859-.04409-.17666.02575.13937.01779.1315-.025-.02471-.01436-.17791-.01623-.21457-.012-.23537.01482-.46383.019-.69778.00327-.18124-.015.14125-.01878.1318a.5081.5081,0,0,1,.02848-.15932c.02715-.12339.05242-.24665.08566-.36867q.05709-.20957.13146-.414c.01852-.051.0411-.10125.05833-.15267.06313-.18837-.125.22748-.02127.05764.14271-.23369.249-.48658.40052-.71737.0359-.05471.25421-.35945.13835-.20559-.11539.15325.11857-.13721.16286-.18652.184-.20489.40037-.3731.59087-.56928.11276-.11613-.07871.05718-.09.06526.059-.04215.11677-.0859.1765-.12706q.15621-.10767.32008-.20359c.12306-.07215.26221-.12586.38148-.20218.1409-.09017-.10776.03958-.11221.04229a1.11642,1.11642,0,0,1,.20093-.07659c.11615-.04119.62132-.25917.72729-.191-.0048-.00309-.38358.03048-.07738.01081.07236-.00465.14442-.0117.2169-.0147.14658-.00607.29266-.0024.43909.0052a1.50993,1.50993,0,0,0,1.5-1.5,1.5333,1.5333,0,0,0-1.5-1.5Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M522.34554,560.35206H154.44027a17.56665,17.56665,0,0,1-17.54737-17.54687V214.89943a17.56708,17.56708,0,0,1,17.54737-17.54737H522.34554a17.56707,17.56707,0,0,1,17.54736,17.54737V542.80519A17.56664,17.56664,0,0,1,522.34554,560.35206Zm-367.90527-361a15.56509,15.56509,0,0,0-15.54737,15.54737V542.80519a15.565,15.565,0,0,0,15.54737,15.54687H522.34554a15.565,15.565,0,0,0,15.54736-15.54687V214.89943a15.56509,15.56509,0,0,0-15.54736-15.54737Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.83072,420.458l129.37919-.39354,128.71909-.39154,72.61077-.22087a1.5009,1.5009,0,0,0,0-3l-129.37919.39355-128.71909.39153-72.61077.22087a1.5009,1.5009,0,0,0,0,3Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M219.10043,418.02586l.8-47.237c.03271-1.93121-2.96728-1.93159-3,0l-.8,47.237c-.03271,1.93121,2.96728,1.93158,3,0Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.93574,418.537l1.94957-59.37448.557-16.96414c.06341-1.931-2.93667-1.92873-3,0l-1.94957,59.37448-.557,16.96414c-.06341,1.931,2.93667,1.92873,3,0Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M342.60417,314.05333c-1.17594,21.03-3.35188,83.05995-4.52782,104.08992-.10787,1.929,2.89248,1.92287,3,0,1.17594-21.03,3.35188-83.05994,4.52782-104.08992.10787-1.929-2.89247-1.92287-3,0Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M403.97576,397.04114l-.36774,20.21318c-.03514,1.93123,2.96486,1.9314,3,0,.43432-23.87319,1.54814-23.095,1.67072-29.83275.03513-1.93123-2.96487-1.9314-3,0C405.27874,387.42157,404.41008,373.168,403.97576,397.04114Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M464.08772,343.94069l.33928,56.70864.09715,16.23815a1.5009,1.5009,0,0,0,3,0l-.33928-56.70864-.09715-16.23815a1.5009,1.5009,0,0,0-3,0Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.07194,418.77029c-2.48323-6.82393,3.11451-13.38719,8.8663-16.33636,6.891-3.53328,14.81824-4.33414,21.78229-7.7403,10.38228-5.078,17.9444-14.19152,24.67329-23.31385,6.92579-9.38927,13.26278-19.46629,22.06318-27.26763a44.19424,44.19424,0,0,1,16.06871-9.29914c7.50226-2.34128,15.4588-2.50189,23.21086-1.55834,16.01863,1.94973,30.868,8.56585,46.324,12.77089,14.57206,3.96456,30.62763,6.194,44.9307.02889,7.2669-3.13229,13.20938-8.38563,19.59206-12.93164a65.29581,65.29581,0,0,1,20.40827-9.84464c14.35794-3.99257,30.03794-2.92647,43.40518,3.823a58.2428,58.2428,0,0,1,27.46977,28.99246c6.33716,15.13848,5.5121,32.05568,3.442,47.9899-.5351,4.11874-1.17191,8.22371-1.81565,12.32661-.29634,1.88872,2.594,2.70228,2.89284.79752,2.578-16.43077,5.14772-33.38193,1.94028-49.9161A60.45584,60.45584,0,0,0,456.995,330.915a62.04356,62.04356,0,0,0-40.91133-12.91137,67.07853,67.07853,0,0,0-22.47417,4.99833c-7.41935,3.06889-13.702,7.61753-20.08361,12.40377-6.56132,4.921-13.325,8.99143-21.47108,10.59636-7.90151,1.55675-16.12137.97319-23.98827-.49665-16.23236-3.03284-31.36257-9.98514-47.45717-13.54734-14.91163-3.30038-31.0026-3.63015-44.35545,4.79389-10.27143,6.48-17.52933,16.53993-24.49477,26.25395-6.90438,9.62885-13.89606,19.92529-23.99209,26.50286-6.15873,4.01242-13.08185,5.49293-19.97135,7.74936-6.90729,2.26225-13.53837,6.07871-16.35476,13.15546a12.79371,12.79371,0,0,0-.26184,9.15423c.655,1.79995,3.55524,1.02278,2.89283-.79752Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"86.171 166.905 86.167 166.907 86.175 166.905 86.171 166.905\",\n    fill: \"#e6e6e6\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.30684,361.49757a5.96169,5.96169,0,0,0-7.22314-2.67334,5.24684,5.24684,0,0,0-2.98908,2.78314c-.05743.13605-.091.27912-.13787.41852-.065.1051-.14313.2-.20136.30994a5.95769,5.95769,0,0,0,9.29083,7.11792A6.41612,6.41612,0,0,0,223.30684,361.49757Zm-3.75726,2.54761c.01233.07574.00781.14532,0,0Zm-.3819-.86841c-.01471-.01691-.01287-.01507,0,0Zm-1.68335.67688c-.02252-.03467-.02472-.04047,0,0Zm.399.33826c.095.03235.05743.02557,0,0Zm.17816.0849.03949-.01807a.05015.05015,0,0,1-.02795-.00555l.00116-.00019.03094.00385.0058-.00263-.01788-.00415c.0155-.00054.01727.00159.01831.004.17846-.08172.05762-.04242-.04584-.01037l-.0069-.00159a.68136.68136,0,0,0-.20568-.066c-.0066-.00372-.01447-.00641-.02-.01038-.05744-.04089-.34772-.26764-.07843-.0299-.0586-.05176-.11652-.1026-.17164-.15845a.78291.78291,0,0,1-.088-.10815q-.053-.09091-.10278-.18342l-.005-.03326c-.00439-.02765-.00769-.03912-.01135-.05572.00171-.01716.00446-.03559.00714-.05347a.64632.64632,0,0,0,.03809-.16767l.0116-.01464c.04309-.06012.08081-.13025.12194-.19275-.2174.3302.085-.03644.10761-.08289.00384-.00793-.00287-.0036-.00122-.00909.00879-.00489.0061-.00153.01672-.00775.06738-.03968.13123-.08393.19965-.12183.08148-.04517.40246-.13629.06958-.04114.07562-.0216.14819-.04889.22461-.06885.01385-.0036.12591-.01928.18628-.03015.053-.00134.10443-.00293.10986-.00287.0249.00031.0498.00336.07471.00446-.05524.00739.18957.0603.26227.07147.01049.00824.01586.01355.03015.024.06146.04492.13623.08484.20111.12677-.2901-.1875.00378.01489.0592.07031.03314.03314.06366.06848.09485.10333a.8089.8089,0,0,1,.07727.106c.04755.08716.09815.17536.14813.26111l.01386.022a.08283.08283,0,0,0-.00043.00849,2.37222,2.37222,0,0,0,.11487.40777.33315.33315,0,0,1,.00568.03388c.00463.07617.011.1521.01116.2287l-.00067.0155A1.643,1.643,0,0,0,218.06148,364.27681Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.11458,364.2552c.00434.00134.00019.0011-.00079.00147Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.11348,364.25484l.0011.00036Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.11379,364.25667l-.00452.00073C218.115,364.258,218.11293,364.257,218.11379,364.25667Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"86.177 166.902 86.177 166.902 86.179 166.903 86.177 166.902\",\n    fill: \"#e6e6e6\"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"150.171 138.905 150.167 138.907 150.175 138.905 150.171 138.905\",\n    fill: \"#e6e6e6\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M287.30684,333.49757a5.96169,5.96169,0,0,0-7.22314-2.67334,5.24684,5.24684,0,0,0-2.98908,2.78314c-.05743.13605-.091.27912-.13787.41852-.065.1051-.14313.2-.20136.30994a5.95769,5.95769,0,0,0,9.29083,7.11792A6.41612,6.41612,0,0,0,287.30684,333.49757Zm-3.75726,2.54761c.01233.07574.00781.14532,0,0Zm-.3819-.86841c-.01471-.01691-.01287-.01507,0,0Zm-1.68335.67688c-.02252-.03467-.02472-.04047,0,0Zm.399.33826c.095.03235.05743.02557,0,0Zm.17816.0849.03949-.01807a.05015.05015,0,0,1-.028-.00555l.00116-.00019.03094.00385.0058-.00263-.01788-.00415c.0155-.00054.01727.00159.01831.004.17846-.08172.05762-.04242-.04584-.01037l-.0069-.00159a.68136.68136,0,0,0-.20568-.066c-.0066-.00372-.01447-.00641-.02-.01038-.05744-.04089-.34772-.26764-.07843-.0299-.0586-.05176-.11652-.1026-.17164-.15845a.78291.78291,0,0,1-.088-.10815q-.053-.09091-.10278-.18342l-.005-.03326c-.00439-.02765-.00769-.03912-.01135-.05572.00171-.01716.00446-.03559.00714-.05347a.64632.64632,0,0,0,.03809-.16767l.0116-.01464c.04309-.06012.08081-.13025.12194-.19275-.2174.3302.085-.03644.10761-.08289.00384-.00793-.00287-.0036-.00122-.00909.00879-.00489.0061-.00153.01672-.00775.06738-.03968.13123-.08393.19965-.12183.08148-.04517.40246-.13629.06958-.04114.07562-.0216.14819-.04889.22461-.06885.01385-.0036.12591-.01928.18628-.03015.053-.00134.10443-.00293.10986-.00287.0249.00031.0498.00336.07471.00446-.05524.00739.18957.0603.26227.07147.01049.00824.01586.01355.03015.024.06146.04492.13623.08484.20111.12677-.2901-.1875.00378.01489.0592.07031.03314.03314.06366.06848.09485.10333a.8089.8089,0,0,1,.07727.106c.04755.08716.09815.17536.14813.26111l.01386.022a.08283.08283,0,0,0-.00043.00849,2.37222,2.37222,0,0,0,.11487.40777.33315.33315,0,0,1,.00568.03388c.00463.07617.011.1521.01116.2287l-.00067.0155A1.643,1.643,0,0,0,282.06148,336.27681Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.11379,336.25667l-.00452.00073C282.115,336.258,282.11293,336.257,282.11379,336.25667Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _polygon4 || (_polygon4 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"150.177 138.902 150.177 138.902 150.179 138.903 150.177 138.902\",\n    fill: \"#e6e6e6\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.11458,336.2552c.00434.00134.00019.0011-.00079.00147Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.11348,336.25484l.0011.00036Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _polygon5 || (_polygon5 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"212.177 152.902 212.177 152.902 212.179 152.903 212.177 152.902\",\n    fill: \"#e6e6e6\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M349.30684,305.49757a5.96169,5.96169,0,0,0-7.22314-2.67334,5.24684,5.24684,0,0,0-2.98908,2.78314c-.05743.13605-.091.27912-.13787.41852-.065.1051-.14313.2-.20136.30994a5.95769,5.95769,0,0,0,9.29083,7.11792A6.41612,6.41612,0,0,0,349.30684,305.49757Zm-3.75726,2.54761c.01233.07574.00781.14532,0,0Zm-.3819-.86841c-.01471-.01691-.01287-.01507,0,0Zm-1.68335.67688c-.02252-.03467-.02472-.04047,0,0Zm.399.33826c.095.03235.05743.02557,0,0Zm.17816.0849.03949-.01807a.05015.05015,0,0,1-.028-.00555l.00116-.00019.03094.00385.0058-.00263-.01788-.00415c.0155-.00054.01727.00159.01831.004.17846-.08172.05762-.04242-.04584-.01037l-.0069-.00159a.68136.68136,0,0,0-.20568-.066c-.0066-.00372-.01447-.00641-.02-.01038-.05744-.04089-.34772-.26764-.07843-.0299-.0586-.05176-.11652-.1026-.17164-.15845a.78291.78291,0,0,1-.088-.10815q-.053-.09091-.10278-.18342l-.005-.03326c-.00439-.02765-.00769-.03912-.01135-.05572.00171-.01716.00446-.03559.00714-.05347a.64632.64632,0,0,0,.03809-.16767l.0116-.01464c.04309-.06012.08081-.13025.12194-.19275-.2174.3302.085-.03644.10761-.08289.00384-.00793-.00287-.0036-.00122-.00909.00879-.00489.0061-.00153.01672-.00775.06738-.03968.13123-.08393.19965-.12183.08148-.04517.40246-.13629.06958-.04114.07562-.0216.14819-.04889.22461-.06885.01385-.0036.12591-.01928.18628-.03015.053-.00134.10443-.00293.10986-.00287.0249.00031.0498.00336.07471.00446-.05524.00739.18957.0603.26227.07147.01049.00824.01586.01355.03015.024.06146.04492.13623.08484.20111.12677-.2901-.1875.00378.01489.0592.07031.03314.03314.06366.06848.09485.10333a.8089.8089,0,0,1,.07727.106c.04755.08716.09815.17536.14813.26111l.01386.022a.08283.08283,0,0,0-.00043.00849,2.37222,2.37222,0,0,0,.11487.40777.33315.33315,0,0,1,.00568.03388c.00463.07617.011.1521.01116.2287l-.00067.0155A1.643,1.643,0,0,0,344.06148,308.27681Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _polygon6 || (_polygon6 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"212.171 152.905 212.167 152.907 212.175 152.905 212.171 152.905\",\n    fill: \"#e6e6e6\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M344.11348,350.25484l.0011.00036Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M344.11379,350.25667l-.00452.00073C344.115,350.258,344.11293,350.257,344.11379,350.25667Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M344.11458,350.2552c.00434.00134.00019.0011-.00079.00147Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M412.30684,382.49757a5.96169,5.96169,0,0,0-7.22314-2.67334,5.24684,5.24684,0,0,0-2.98908,2.78314c-.05743.13605-.091.27912-.13787.41852-.065.1051-.14313.2-.20136.30994a5.95769,5.95769,0,0,0,9.29083,7.11792A6.41612,6.41612,0,0,0,412.30684,382.49757Zm-3.75726,2.54761c.01233.07574.00781.14532,0,0Zm-.3819-.86841c-.01471-.01691-.01287-.01507,0,0Zm-1.68335.67688c-.02252-.03467-.02472-.04047,0,0Zm.399.33826c.095.03235.05743.02557,0,0Zm.17816.0849.03949-.01807a.05015.05015,0,0,1-.028-.00555l.00116-.00019.03094.00385.0058-.00263-.01788-.00415c.0155-.00054.01727.00159.01831.004.17846-.08172.05762-.04242-.04584-.01037l-.0069-.00159a.68136.68136,0,0,0-.20568-.066c-.0066-.00372-.01447-.00641-.02-.01038-.05744-.04089-.34772-.26764-.07843-.0299-.0586-.05176-.11652-.1026-.17164-.15845a.78291.78291,0,0,1-.088-.10815q-.053-.09091-.10278-.18342l-.005-.03326c-.00439-.02765-.00769-.03912-.01135-.05572.00171-.01716.00446-.03559.00714-.05347a.64632.64632,0,0,0,.03809-.16767l.0116-.01464c.04309-.06012.08081-.13025.12194-.19275-.2174.3302.085-.03644.10761-.08289.00384-.00793-.00287-.0036-.00122-.00909.00879-.00489.0061-.00153.01672-.00775.06738-.03968.13123-.08393.19965-.12183.08148-.04517.40246-.13629.06958-.04114.07562-.0216.14819-.04889.22461-.06885.01385-.0036.12591-.01928.18628-.03015.053-.00134.10443-.00293.10986-.00287.0249.00031.0498.00336.07471.00446-.05524.00739.18957.0603.26227.07147.01049.00824.01586.01355.03015.024.06146.04492.13623.08484.20111.12677-.2901-.1875.00378.01489.0592.07031.03314.03314.06366.06848.09485.10333a.8089.8089,0,0,1,.07727.106c.04755.08716.09815.17536.14813.26111l.01386.022a.08283.08283,0,0,0-.00043.00849,2.37222,2.37222,0,0,0,.11487.40777.33315.33315,0,0,1,.00568.03388c.00463.07617.011.1521.01116.2287l-.00067.0155A1.643,1.643,0,0,0,407.06148,385.27681Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _polygon7 || (_polygon7 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"275.171 121.905 275.167 121.907 275.175 121.905 275.171 121.905\",\n    fill: \"#e6e6e6\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M407.11348,319.25484l.0011.00036Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M407.11379,319.25667l-.00452.00073C407.115,319.258,407.11293,319.257,407.11379,319.25667Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M407.11458,319.2552c.00434.00134.00019.0011-.00079.00147Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _polygon8 || (_polygon8 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"275.177 121.902 275.177 121.902 275.179 121.903 275.177 121.902\",\n    fill: \"#e6e6e6\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M466.11348,339.25484l.0011.00036Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M471.30684,336.49757a5.96169,5.96169,0,0,0-7.22314-2.67334,5.24684,5.24684,0,0,0-2.98908,2.78314c-.05743.13605-.091.27912-.13787.41852-.065.1051-.14313.2-.20136.30994a5.95769,5.95769,0,0,0,9.29083,7.11792A6.41612,6.41612,0,0,0,471.30684,336.49757Zm-3.75726,2.54761c.01233.07574.00781.14532,0,0Zm-.3819-.86841c-.01471-.01691-.01287-.01507,0,0Zm-1.68335.67688c-.02252-.03467-.02472-.04047,0,0Zm.399.33826c.095.03235.05743.02557,0,0Zm.17816.0849.03949-.01807a.05015.05015,0,0,1-.028-.00555l.00116-.00019.03094.00385.0058-.00263-.01788-.00415c.0155-.00054.01727.00159.01831.004.17846-.08172.05762-.04242-.04584-.01037l-.0069-.00159a.68136.68136,0,0,0-.20568-.066c-.0066-.00372-.01447-.00641-.02-.01038-.05744-.04089-.34772-.26764-.07843-.0299-.0586-.05176-.11652-.1026-.17164-.15845a.78291.78291,0,0,1-.088-.10815q-.053-.09091-.10278-.18342l-.005-.03326c-.00439-.02765-.00769-.03912-.01135-.05572.00171-.01716.00446-.03559.00714-.05347a.64632.64632,0,0,0,.03809-.16767l.0116-.01464c.04309-.06012.08081-.13025.12194-.19275-.2174.3302.085-.03644.10761-.08289.00384-.00793-.00287-.0036-.00122-.00909.00879-.00489.0061-.00153.01672-.00775.06738-.03968.13123-.08393.19965-.12183.08148-.04517.40246-.13629.06958-.04114.07562-.0216.14819-.04889.22461-.06885.01385-.0036.12591-.01928.18628-.03015.053-.00134.10443-.00293.10986-.00287.0249.00031.0498.00336.07471.00446-.05524.00739.18957.0603.26227.07147.01049.00824.01586.01355.03015.024.06146.04492.13623.08484.20111.12677-.2901-.1875.00378.01489.0592.07031.03314.03314.06366.06848.09485.10333a.8089.8089,0,0,1,.07727.106c.04755.08716.09815.17536.14813.26111l.01386.022a.08283.08283,0,0,0-.00043.00849,2.37222,2.37222,0,0,0,.11487.40777.33315.33315,0,0,1,.00568.03388c.00463.07617.011.1521.01116.2287l-.00067.0155A1.643,1.643,0,0,0,466.06148,339.27681Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _polygon9 || (_polygon9 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"334.171 141.905 334.167 141.907 334.175 141.905 334.171 141.905\",\n    fill: \"#e6e6e6\"\n  })), _polygon10 || (_polygon10 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"334.177 141.902 334.177 141.902 334.179 141.903 334.177 141.902\",\n    fill: \"#e6e6e6\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M466.11458,339.2552c.00434.00134.00019.0011-.00079.00147Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M466.11379,339.25667l-.00452.00073C466.115,339.258,466.11293,339.257,466.11379,339.25667Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M449.9376,385.08528l-46.49682,2.58432a1.02517,1.02517,0,0,1-.2217-2.03544l47.52456-7.73334Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#3f3d56\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M509.02823,488.60148l17.52161-29.4782,12.95055,6.11652s-22.31534,27.8716-23.02629,28.67345a6.857,6.857,0,1,1-7.44587-5.31177Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ffb6b6\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M516.31671,420.1259l28.38759,14.81061a15.7158,15.7158,0,0,1,2.66026,23.07858l-19.5701,22.4493-8.5256-11.55273,6.57123-13.73984-12.72381-3.35516Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#536dfe\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M435.41987,385.56689,432.22247,419.71l-14.32229.02391s8.21712-34.74593,8.51582-35.7751a6.857,6.857,0,1,1,9.00387,1.60813Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ffb6b6\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M463.92912,455.38874l-32.96452-6.04537c-13.88142-1.66929-19.57814-10.80283-17.07345-19.71158l8.06061-28.6703,12.65411,6.78416-.04865,15.2303,17.71307-2.42166Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#536dfe\"\n  })), _polygon11 || (_polygon11 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"318.501 493.992 309.437 493.992 305.125 459.03 318.503 459.03 318.501 493.992\",\n    fill: \"#ffb6b6\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M450.75485,700.80015l-27.87342-.00105v-.3525a10.84971,10.84971,0,0,1,10.84911-10.84894h.00068l5.09143-3.86263,9.4995,3.86322,2.43317.00008Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _polygon12 || (_polygon12 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"382.636 493.992 391.7 493.992 396.012 459.03 382.634 459.03 382.636 493.992\",\n    fill: \"#ffb6b6\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M514.251,700.80015l27.87342-.00105v-.3525a10.8497,10.8497,0,0,0-10.84911-10.84894h-.00067l-5.09144-3.86263-9.4995,3.86322-2.43317.00008Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M436.6606,630.69c.13386-1.99494,1.19824-13.02767,1.19824-13.02767l2.54945-23.39757,4.49339-62.02167,4.00519-16.30232,19.82578,7.72341,16.087-7.71206,19.12086,6.11232,14.88876,5.58329s.02548,2.39011.1402,5.27738c.153,3.77959.42064,8.41318,1.058,9.6178,1.06439,2.12881.79671,13.5567.79671,13.5567s1.058,23.25095,2.3901,25.80039,1.59975,7.85869,1.19825,8.92307,1.3321,28.9872,1.3321,28.9872,4.44946,49.413,1.65781,56.8638-13.34066,2.57019-13.34066,2.57019.50988-1.98857-2.54945-2.92551-12.3776-71.00212-12.3776-71.00212-1.7336-14.36616-3.327-18.48349-3.05932-15.68547-3.05932-15.68547-9.84087-19.14637-9.96835-23.40394c0,0-1.28749-3.98351-2.50483.40154s-4.80569,14.88876-4.80569,14.88876l-3.49911,12.90016L467.85305,595.208l-2.66417,16.22725s-3.98989,21.53644-4.62725,22.467,0,20.60592,0,20.60592-3.08481,16.75623-7.44439,19.68174-15.90977.04646-15.90977.04646S436.52674,632.6849,436.6606,630.69Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M451.48141,463.4844l-2.53328,32.81806-3.8061,3.939a3.67047,3.67047,0,0,0,.19226,5.286h0l-2.09691,3.59581-.74242,11.33014a6.15824,6.15824,0,0,0,5.69891,7.58983l65.63208,3.08345a6.15823,6.15823,0,0,0,6.39361-6.96235l-5.58086-42.01386V479.009l-2.49845-6.06691,1.28412-20.32414,2.98692-32.25875-17.36244-4.48476-9.41385-6.47691-16.35468.26039-9.92373,8.15016L450.125,419.88027l-10.00658,1.98907-1.27473,2.77028,2.54945-.55406,9.24061,36.04127Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#536dfe\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 349.15767,\n    cy: 188.3819,\n    r: 19.26595,\n    fill: \"#ffb6b6\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M476.447,403.75706l13.9197-.71c1.78357-.091,3.73022-.2485,5.02752-1.47587a7.61645,7.61645,0,0,0,1.57785-2.62117c1.28687-2.98916,2.57378-5.97839,3.82778-8.9815,1.73455-4.15394,3.43808-8.53993,2.99533-13.01965a8.28531,8.28531,0,0,0-2.40838-5.43091,4.59943,4.59943,0,0,0-5.5901-.56644,9.45237,9.45237,0,0,0-4.692-6.81251,14.4862,14.4862,0,0,0-8.26222-1.75172,19.94078,19.94078,0,0,0-11.35626,4.47585,24.64986,24.64986,0,0,1-2.89711,2.29575,4.5479,4.5479,0,0,1-3.53584.65422,2.55893,2.55893,0,0,1-1.87846-2.78916,4.92343,4.92343,0,0,0-1.25935,6.49978,4.54324,4.54324,0,0,1-4.44025-.5253,5.42846,5.42846,0,1,0,5.69282,9.18831c.84481,1.18329.5302,2.79132.42013,4.24107s.27874,3.25148,1.67635,3.65218c1.88945.5417,3.4199-2.0024,5.38528-1.9753a2.95555,2.95555,0,0,1,2.34381,1.51036,8.7243,8.7243,0,0,1,.93824,2.73911l2.51535,11.324\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1019.19147,576.98891c0-2.98336-1.0019-5.40458-2.232-5.41012H681.61475c-1.23566.00554-2.232,2.42676-2.23753,5.41012V699.79837a1.11465,1.11465,0,0,1-1.00673,1.10966q-1.3501.12958-2.7002.24121c-.02229,0-.04454.00558-.06683.00558-.48977.0445-.97958.07789-1.46939.11686h-.00557q-.37793-.69876-.7471-1.4097a1.1195,1.1195,0,0,1-.12676-.51712V569.97022c0-.82379.03339-1.65312.089-2.4713a31.661,31.661,0,0,1,.41745-3.35073c.94065-5.17078,3.06686-8.67181,5.48251-8.68292h340.08141a2.6062,2.6062,0,0,1,1.02412.217,3.99262,3.99262,0,0,1,1.26349.885,7.83147,7.83147,0,0,1,1.24121,1.69761,22.34258,22.34258,0,0,1,2.34329,8.86661c0,.03339.00557.06679.00557.10018.07793.90172.11686,1.82009.11132,2.73849l.0779,11.92789.05011,7.11331.15029,22.3196.05565,7.926.2449,81.37464h0a1.1132,1.1132,0,0,1-1.11319,1.1132h-4.475a1.1132,1.1132,0,0,1-1.1132-1.1132Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M928.06752,499.652h-36.134a1.928,1.928,0,0,0-1.925,1.93v57.08105h39.989V501.582A1.929,1.929,0,0,0,928.06752,499.652ZM910.1221,532.08476a4.28685,4.28685,0,0,1-4.26683-4.26681v-6.5838a4.26681,4.26681,0,0,1,8.53363,0v6.5838a4.28679,4.28679,0,0,1-4.2668,4.26681Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M889.88448,556.83725v5.50719a1.07883,1.07883,0,0,0,1.07664,1.07662h38.08381a1.08205,1.08205,0,0,0,1.07662-1.07662v-5.50719Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#3f3d56\"\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M987.90215,410.57058H833.44347a5.01407,5.01407,0,0,0-5.00608,5.00605V519.806a5.01087,5.01087,0,0,0,5.00608,5.006H987.90215a5.01086,5.01086,0,0,0,5.00607-5.006V415.57663A5.01406,5.01406,0,0,0,987.90215,410.57058Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e6e6e6\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M986.61286,414.18638H834.734a2.68306,2.68306,0,0,0-2.67724,2.6828V518.51512a2.68185,2.68185,0,0,0,2.67724,2.67723H986.61286a2.68184,2.68184,0,0,0,2.67723-2.67723V416.86918A2.68306,2.68306,0,0,0,986.61286,414.18638Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M957.02942,565.3374H866.66975a1.66223,1.66223,0,0,1-1.62659-2.00462l1.4021-6.65907a1.6694,1.6694,0,0,1,1.62631-1.31974h87.556a1.66942,1.66942,0,0,1,1.62631,1.31974l1.40209,6.65907a1.66222,1.66222,0,0,1-1.62658,2.00462Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 736.77892,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 742.3449,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 747.91088,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 753.47686,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 759.04284,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 764.60882,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 770.1748,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 775.74078,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 781.30676,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 786.87274,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 792.43872,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 798.0047,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 803.57069,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 809.13667,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 814.70265,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 820.26863,\n    y: 359.20098,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 736.71315,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 742.27913,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 747.84511,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 753.41109,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 758.97707,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 764.54305,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 770.10903,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect24 || (_rect24 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 775.67501,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect25 || (_rect25 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 781.24099,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect26 || (_rect26 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 786.80697,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect27 || (_rect27 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 792.37295,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect28 || (_rect28 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 797.93893,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect29 || (_rect29 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 803.50492,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect30 || (_rect30 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 809.0709,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect31 || (_rect31 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 814.63688,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect32 || (_rect32 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 820.20286,\n    y: 361.98397,\n    width: 2.78299,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _rect33 || (_rect33 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 763.42985,\n    y: 365.32356,\n    width: 22.26392,\n    height: 1.66979,\n    rx: 0.48819,\n    fill: \"#e6e6e6\"\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M978.97816,428.19092H836.86568a.56528.56528,0,0,1,0-1.13028H978.97816a.56528.56528,0,0,1,0,1.13028Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#cacaca\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 714.60514,\n    cy: 223.43727,\n    rx: 3.312,\n    ry: 3.38581,\n    fill: \"#ccc\"\n  })), _ellipse2 || (_ellipse2 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 726.04658,\n    cy: 223.43727,\n    rx: 3.312,\n    ry: 3.38581,\n    fill: \"#ccc\"\n  })), _ellipse3 || (_ellipse3 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 737.48802,\n    cy: 223.43727,\n    rx: 3.312,\n    ry: 3.38581,\n    fill: \"#ccc\"\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M972.08945,418.24274H963.962a.61551.61551,0,0,0,0,1.23078h8.12741a.61551.61551,0,0,0,0-1.23078Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M972.08945,420.55272H963.962a.61552.61552,0,0,0,0,1.23079h8.12741a.61552.61552,0,0,0,0-1.23079Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M972.08945,422.85968H963.962a.61551.61551,0,0,0,0,1.23078h8.12741a.61551.61551,0,0,0,0-1.23078Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _rect34 || (_rect34 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 767.289,\n    y: 261.62867,\n    width: 22.58782,\n    height: 4.83014,\n    rx: 2.41507,\n    fill: \"#536dfe\"\n  })), _rect35 || (_rect35 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 755.81742,\n    y: 271.28894,\n    width: 45.53098,\n    height: 4.83014,\n    rx: 2.41507,\n    fill: \"#e6e6e6\"\n  })), _rect36 || (_rect36 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 755.81742,\n    y: 280.94922,\n    width: 45.53098,\n    height: 4.83014,\n    rx: 2.41507,\n    fill: \"#e6e6e6\"\n  })), _polygon13 || (_polygon13 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"524.726 431.447 516.54 427.531 527.785 393.314 539.867 399.092 524.726 431.447\",\n    fill: \"#ffb6b6\"\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M711.54262,623.28229c-.59529.37288-1.19058.73959-1.79189,1.10646-1.19664.73357-2.40523,1.45512-3.61387,2.16462-.60733.35482-1.22067.70965-1.828,1.05845v.01791l-.03608.006-.012.006-.926.22858-1.32887-3.5117-.61334-1.61748-.86589-2.291-1.58746-4.19111-8.35817-22.068,12.99427-3.205.48706,1.99036h.006l.2405.98608,4.53991,18.41214.926,3.7642.03006.11421.55921,2.24889.48108,1.94824.53513,2.1768Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ffb6b6\"\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M789.05859,545.78443c-.82379,1.32288-1.66564,2.63975-2.51347,3.94458q-2.36319,3.6439-4.85256,7.17962c0,.006-.006.006-.012.012a16.97642,16.97642,0,0,1-3.18693,2.32706c-.04811.03608-.10221.06012-.15032.09018a11.74913,11.74913,0,0,1-2.68185,1.07636c-.33673.08416-.67948.16835-1.01622.25254-1.21461.28862-2.41723.53518-3.61387.75164-2.12862.37883-4.23319.64942-6.32574.81777-.16838.01806-.33673.03006-.50511.04209-8.60473.63137-16.981-.38484-25.724-2.05044-4.31743-.81781-8.725-1.79794-13.28894-2.81416-1.49124-.33673-2.98849-.66744-4.5038-.99815-.11425-.024-.23452-.05414-.35479-.07818-2.16469-.475-4.36547-.94406-6.62037-1.40707-2.8382-.58326-5.76657-1.14849-8.80919-1.68366l.21646,4.28733a32.26822,32.26822,0,0,0,2.03243,9.639c1.29885,3.80027,2.32706,6.80681.15635,13.06642L706.25839,583.27a10.35021,10.35021,0,0,1-1.06432,9.15795l-.21045.31868,8.725,22.074.56523,1.43112h-4.46776l-5.49593.006H694.9959l-13.43927-26.9627-.64341-1.28681v-.06613l1.389-51.81475c.01805-.457.05413-.92.11425-1.377a15.7532,15.7532,0,0,1,5.99506-10.60705,15.17083,15.17083,0,0,1,11.29858-3.09074l4.6.59529,9.39846,1.21466,6.62037.85986.13231.018,19.52447,2.52551,1.40106-5.71243.25856-.0962,8.21991-3.01256,28.42985-10.42069.07216-.024,1.87006-.6855.22248.36077c.06617.10827.1323.2165.19242.32473a55.72845,55.72845,0,0,1,4.49179,10.42667,163.68257,163.68257,0,0,1,4.72026,18.02124q.08121.39687.14431.72158l.01806.06613c.018.10221.03006.16835.03607.18641A16.8184,16.8184,0,0,1,789.05859,545.78443Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M790.25853,526.68917c-.09022-.38485-.20447-.77567-.3247-1.1545a82.26988,82.26988,0,0,0-3.33123-8.43036c-1.41908-3.12681-3.1208-6.4761-5.1472-10.102q-1.47021-2.63376-3.16289-5.47791-.84785-1.42511-1.76183-2.90433a1.53038,1.53038,0,0,0-.07818-.13227l-.17436-.28861-28.12923,3.76419-10.47479,1.40106-.62535,5.21936-.15032,1.29282c-.006,0-.006,0,0,.006l-.42093,3.52366v.006l-.55921,4.65412-.04811-.006-15.54382-2.01436-16.01886-2.07453-8.60473-1.1124a15.16164,15.16164,0,0,0-11.29857,3.09073,15.76117,15.76117,0,0,0-5.995,10.60709c-.05413.42093-.09021.85385-.10827,1.28079l-8.11766,19.23586a124.10762,124.10762,0,0,0-9.176,36.10255l-5.953,19.03143.84783.07817,12.61544,1.17256,3.33124.3127,7.336-10.70931c.83583-1.22067,1.62956-2.47739,2.36916-3.7642a57.16729,57.16729,0,0,0,3.24106-6.5182l15.86854-37.76217q1.84.31578,3.64393.60131,8.34321,1.353,16.01887,2.20679c16.6382,1.85806,31.04556,2.00237,43.87148.427q5.40276-.65842,10.44473-1.73177,1.84906-.3879,3.64995-.83583c.28259-.06614.55921-.13227.83582-.20446a15.345,15.345,0,0,0,10.73335-10.02983A15.65694,15.65694,0,0,0,790.25853,526.68917Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M659.27551,623.21123l-8.85726-4.24524-1.389-.66744-2.21883,5.44785-15.48972,3.40945a3.67535,3.67535,0,0,0-.60131,6.99322l15.13493,6.17545,4.80445-4.32341-1.17858,5.80265,5.70039,2.32706,6.24757-19.88528Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _polygon14 || (_polygon14 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"581.774 417.469 582.34 418.9 581.774 418.9 581.774 417.469\",\n    fill: \"#2f2e41\"\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M710.62386,616.55758l-9.2808,3.21559-1.45663.50307,2.25657,5.43233-8.60767,13.32155a3.67535,3.67535,0,0,0,4.4933,5.39231l15.09969-6.26111.37189-6.45262,3.24539,4.95249,5.68793-2.35736-9.55231-18.52592Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M654.29426,417.60112a6.59162,6.59162,0,0,0,9.85736,2.23448L683.66723,432.791l.03722-12.17246L665.16639,410.182a6.62733,6.62733,0,0,0-10.87213,7.41908Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ffb6b6\"\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M668.87388,423.22728l9.10526-10.3586,37.07416,22.00944,49.14578-4.5007a16.619,16.619,0,0,1,18.06343,18.081h0a16.63668,16.63668,0,0,1-18.07975,15.0161l-55.35008-5.12316Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M782.94031,423.38713l-.08527-.10723h0a35.90712,35.90712,0,0,0-34.75218,18.00664l-4.17086,7.347c-13.49095,16.49312-3.68758,27.86723-3.10071,29.55866l-4.68285,21.59147,1.04956,7.226.52418,2.1465L791.17623,537.087c3.04333-14.62225.10065-27.08252-10.9867-36.60114L790.917,467.10773A47.01985,47.01985,0,0,0,782.94031,423.38713Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M740.43783,585.54392h-17.1461a3.917,3.917,0,0,1-3.87533-3.3671,87.17978,87.17978,0,0,1,0-23.47951,3.91726,3.91726,0,0,1,3.80956-3.3665c5.39475-2.41816,11.20436-2.41786,17.27088-.0003a3.87165,3.87165,0,0,1,2.94606,1.42077,3.96093,3.96093,0,0,1,.81741,3.30162,52.71012,52.71012,0,0,0,0,20.76834,3.96093,3.96093,0,0,1-.81741,3.30162A3.871,3.871,0,0,1,740.43783,585.54392Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#536dfe\"\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M738.64212,564.28232h-14.4314a.902.902,0,1,1,0-1.80393h14.4314a.902.902,0,1,1,0,1.80393Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M738.64212,571.498h-14.4314a.902.902,0,1,1,0-1.80393h14.4314a.902.902,0,1,1,0,1.80393Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M738.64212,578.71372h-14.4314a.902.902,0,1,1,0-1.80392h14.4314a.902.902,0,1,1,0,1.80392Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M657.43783,423.54392h-17.1461a3.917,3.917,0,0,1-3.87533-3.3671,87.17978,87.17978,0,0,1,0-23.47951,3.91726,3.91726,0,0,1,3.80956-3.3665c5.39475-2.41816,11.20436-2.41786,17.27088-.0003a3.87165,3.87165,0,0,1,2.94606,1.42077,3.96093,3.96093,0,0,1,.81741,3.30162,52.71012,52.71012,0,0,0,0,20.76834,3.96093,3.96093,0,0,1-.81741,3.30162A3.871,3.871,0,0,1,657.43783,423.54392Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#536dfe\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M655.64212,402.28232h-14.4314a.902.902,0,1,1,0-1.80393h14.4314a.902.902,0,1,1,0,1.80393Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M655.64212,409.498h-14.4314a.902.902,0,1,1,0-1.80393h14.4314a.902.902,0,1,1,0,1.80393Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M655.64212,416.71372h-14.4314a.902.902,0,1,1,0-1.80392h14.4314a.902.902,0,1,1,0,1.80392Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M356.43783,467.54392h-17.1461a3.917,3.917,0,0,1-3.87533-3.3671,87.17978,87.17978,0,0,1,0-23.47951,3.91726,3.91726,0,0,1,3.80956-3.3665c5.39475-2.41816,11.20436-2.41786,17.27088-.0003a3.87165,3.87165,0,0,1,2.94606,1.42077,3.96093,3.96093,0,0,1,.81741,3.30162,52.71012,52.71012,0,0,0,0,20.76834,3.96093,3.96093,0,0,1-.81741,3.30162A3.871,3.871,0,0,1,356.43783,467.54392Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#536dfe\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M354.64212,446.28232h-14.4314a.902.902,0,1,1,0-1.80393h14.4314a.902.902,0,1,1,0,1.80393Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M354.64212,453.498h-14.4314a.902.902,0,1,1,0-1.80393h14.4314a.902.902,0,1,1,0,1.80393Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M354.64212,460.71372h-14.4314a.902.902,0,1,1,0-1.80392h14.4314a.902.902,0,1,1,0,1.80392Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#fff\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M745.46161,563.62594a6.5916,6.5916,0,0,0,1.64575-9.97255l11.77477-20.24983-12.15324.685-9.31829,19.12456a6.62733,6.62733,0,0,0,8.051,10.41283Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ffb6b6\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M750.21291,548.73823l-10.88053-8.4747,19.77122-38.31459-7.40838-48.7922a16.619,16.619,0,0,1,16.97747-19.10428h0a16.63667,16.63667,0,0,1,16.06224,17.15706l-1.83044,55.55653Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M224.31966,538.26993a6.64617,6.64617,0,0,0-.92425-10.14919l10.582-52.56023-11.68584,3.752-8.4704,50.83891a6.68225,6.68225,0,0,0,10.49845,8.11854Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#9e616a\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.94458,427.06627l-7.25052-5.47306s-6.39609-.45294-7.5289,11.08163-3.45883,34.01358-3.45883,34.01358l-11.09474,51.38647,15.35812,3.371,11.88326-55.4551,7.12879-16.46808Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _polygon15 || (_polygon15 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"96.057 313.623 136.914 312.942 140.319 285.023 96.057 285.023 96.057 313.623\",\n    fill: \"#9e616a\"\n  })), _polygon16 || (_polygon16 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"132.828 485.427 142.26 485.427 146.747 449.046 132.826 449.047 132.828 485.427\",\n    fill: \"#9e616a\"\n  })), _polygon17 || (_polygon17 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"73.738 486.301 83.17 486.234 87.402 449.823 75.135 452.637 73.738 486.301\",\n    fill: \"#9e616a\"\n  })), _polygon18 || (_polygon18 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"103.238 260.98 101.101 266.536 101.528 272.093 143.355 286.58 141.28 262.262 136.578 256.705 103.238 260.98\",\n    fill: \"#ffb6b6\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 121.18221,\n    cy: 196.03649,\n    r: 14.93893,\n    fill: \"#9e616a\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.42294,678.12643l14.91014-.88993v6.38815l14.17548,9.7901a3.99028,3.99028,0,0,1-2.26741,7.27391H271.49007l-3.05966-6.31886-1.19465,6.31886h-6.69287Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.4458,679.02206l14.90355-.99428.04471,6.388,14.24367,9.69063a3.99028,3.99028,0,0,1-2.21644,7.28961l-17.75064.12425-3.10383-6.29729-1.15038,6.32707-6.69271.04685Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.73736,655.75874l6.8681-54.89788,8.17141-57.8808c-5.98409-11.11333,7.49045-45.62369,7.49045-45.62369l1.902.09126,43.05,8.12158-.00928-.04143c8.80514,24.01585,11.72238,35.88019,11.23985,61.45474l-1.73467,91.935h.54417a3.40475,3.40475,0,0,1,0,6.80951H263.23565a3.40476,3.40476,0,1,1,0-6.80951h.43893L248.04884,549.45028l-13.24821,45.963L219.81972,655.3369c5.4476-1.3619,4.60175,1.79359,4.60175,3.58067a3.40476,3.40476,0,0,1-3.40476,3.40475H203.993a3.40121,3.40121,0,0,1-1.25559-6.56358Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M221.91528,499.144l1.36194-13.619a2.71478,2.71478,0,0,1,2.4549-2.03932c.56745-6.48761,2.95489-34.47566,3.09753-35.69629l.00557-.05162,1.08564-23.19163a3.42964,3.42964,0,0,1,3.20218-3.262l5.73413-.37481a.30343.30343,0,0,0,.29322-.30323,4.82207,4.82207,0,0,1,4.82205-4.8221h16.97689a4.51469,4.51469,0,0,1,4.47767,3.95212.29971.29971,0,0,0,.30506.26974l.002,0a8.06559,8.06559,0,0,1,8.11384,6.68989c2.32095,13.50393,6.97231,44.15273,4.6726,61.1917-.80056,5.93155.92521,1.2336,1.228,6.19651a3.65315,3.65315,0,0,1-.9095,2.64862,2.63369,2.63369,0,0,1,1.58533,3.34765l.29838-.07386a2.72377,2.72377,0,0,1-3.307,1.97535L233,508C231.5413,507.6323,221.54758,500.60264,221.91528,499.144Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M340.59989,443.772a6.64617,6.64617,0,0,1-9.35992,4.03141l-17.17084,15.67037L311.78928,451.414l16.666-12.99325a6.68225,6.68225,0,0,1,12.14465,5.35125Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#9e616a\"\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.83559,431.79406s-5.98735-13.53065-13.54943-10.84111-3.65762,15.81786-3.65762,15.81786l28.411,42.81149s40.97912-26.28757,35.99605-26.47325-6.47365-9.24886-6.47365-9.24886L299.90375,454.682l-.7328-3.85243-1.17455,1.17455-3.03091-2.38559Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#ccc\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 638.68288,\n    cy: 198.72118,\n    r: 20.85682,\n    fill: \"#ffb6b6\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M837.5538,426.76378a18.08782,18.08782,0,0,1-9.94255,7.00011,20.797,20.797,0,0,1-4.94982.8407,18.715,18.715,0,0,0-1.47122-5.49886,15.4508,15.4508,0,0,1-.7635,5.486,18.38753,18.38753,0,0,1-7.236-1.93873,15.945,15.945,0,0,1-8.53138-11.4438c-.88359-5.70476,1.70286-11.30656,2.63792-17.00271.93935-5.69617-.82354-12.91072-6.3996-14.4077-4.2464-1.14094-3.77029-.64766-7.30036,1.97308,3.672,5.42946-9.89092,25.32605-15.44141,23.591-3.13813-.98094-5.14714-3.86035-5.79482-3.86035-4.36219,7.5148,3.85176,20.17676-4.42654,22.80609l.682-.682c4.997-6.14652-5.44739-19.15592-.45037-25.30246,1.394-1.72,2.87809-3.75741,2.46633-5.93205-.39034-2.06744-3.67162-3.1612-4.63244-1.46266,1.72859-3.959-.82353-9.2434-5.04846-10.26-3.75312-.905-3.68451.21017-7.45048.69486a18.69,18.69,0,0,0-1.36828-4.7225,15.3235,15.3235,0,0,1-.5619,4.81258,6.04294,6.04294,0,0,1-3.65447-1.3211c-3.07111-2.47493-2.44919-7.67353.29167-10.50874,2.74515-2.83521,6.82426-3.85606,10.71461-4.51662,1.13094-7.87547,22.85981-8.697,25.74-.82783,1.22675-5.87632,8.58285-8.926,14.30047-7.103s9.6852,7.16311,11.77408,12.79064c2.08887,5.62324,2.67221,11.67543,3.959,17.53458s3.46146,11.82554,7.93946,15.81886c4.478,3.989,11.77408,5.31013,16.49229,1.60419A13.20769,13.20769,0,0,1,837.5538,426.76378Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1033.22942,474.35948l-2.92,14.65c-.22,1.12-.44995,2.26-.69995,3.39a14.28772,14.28772,0,0,0-7.34.41,68.511,68.511,0,0,1,5.04,8.43c-1.84,5.67-4.54,10.91-9.06,14.7a22.71964,22.71964,0,0,1-21.95,3.86l.13-.58c-4.86-9.43-2.22-21.32,3.82-30.03a58.3846,58.3846,0,0,1,10.85-11.47c4.07995-3.4,8.49-6.45,12.86-9.46A5.99007,5.99007,0,0,1,1033.22942,474.35948Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#e4e4e4\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"a7585634-9c2c-4d81-a429-c019b32aabf2-534\",\n    \"data-name\": \"a4b268fa-75d0-4ac1-9d87-14bdca948464-2189\",\n    d: \"M997.33929,555.04932c-1.229-8.953-2.493-18.02-1.631-27.069.766-8.036,3.217-15.885,8.209-22.321a37.13173,37.13173,0,0,1,9.527-8.633c.953-.6,1.829.909.881,1.507a35.29987,35.29987,0,0,0-13.963,16.847c-3.04,7.732-3.528,16.161-3,24.374.317,4.967.988,9.9,1.665,14.83a.9.9,0,0,1-.61,1.074.878.878,0,0,1-1.074-.61Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#f2f2f2\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1066.875,702.3406l-933.75.30734a1.19069,1.19069,0,0,1,0-2.38137l933.75-.30734a1.19069,1.19069,0,0,1,0,2.38137Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#cacaca\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.53416,384.24148c-2.29115,1.09956-4.85587-.55463-6.83394-2.1938l.70759.6111c-3.496,3.40136-5.13049,8.295-5.92915,13.1122-.79946,4.81219-.8886,9.73349-1.89518,14.51148-1.00736,4.77294-3.097,9.5685-7.00017,12.49186-5.229,3.91551-12.44089,3.66418-18.8579,2.4639-.08549-.01739-.16516-.03053-.25065-.04792a39.17631,39.17631,0,0,0,2.06351-15.53107,35.62051,35.62051,0,0,1-8.55133,14.01635,81.77118,81.77118,0,0,1-12.41776-4.52484c-2.59486-1.19436-5.38892-2.82751-6.10908-5.59277-.722-2.74434.95459-5.62289,3.19644-7.35579s4.99335-2.637,7.54733-3.87152c2.54979-1.22872,5.073-2.98061,6.09393-5.62536,2.35472-6.084-4.35321-13.0653-1.739-19.04589,1.28916-2.94091,4.44678-4.54059,7.41464-5.7739a108.82521,108.82521,0,0,1,13.92569-4.69721c4.16318-1.09817,8.51015-1.95158,12.7512-1.2317s8.396,3.29944,9.92241,7.32712c2.54684.86075,5.25072,1.83091,6.88523,3.97468C238.09171,379.39715,237.96,383.07906,235.53416,384.24148Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M255.92053,377.19147c-6.5545-5.17444-11.85405-4.29114-15.9423-1.07639-.68728-.76456-3.61211,1.339-4.60242,1.03664l-3.58185,6.72422c-1.84318,3.25252-2.59937,6.57264-2.30142,8.44132-3.3904,9.50778,4.64952,15.92831,14.15749,19.31852a18.14268,18.14268,0,0,0,11.76508.1704l.11686-1.62011.72,1.32781s8.6921,17.89737,10.74606,18.70108c-1.24628-3.233-4.5334-18.59855-5.45092-21.80147-1.2581-4.35783-.39868-11.28126.34075-15.52611a24.0569,24.0569,0,0,0,.07136-7.91713l-.0183-.11474,2.03365,4.10533,4.563-2.86926C266.79366,381.01218,266.75885,374.93582,255.92053,377.19147Z\",\n    transform: \"translate(-131.93432 -197.35206)\",\n    fill: \"#2f2e41\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndrawTeamCollaborationReOw29);\nexport default __webpack_public_path__ + \"static/media/undraw_team_collaboration_re_ow29.041670522b30395b3c025a9d7c00d794.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable linebreak-style */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\n\n// import Team from 'assets/images/hero/team.png';\nimport teamSvg from '../assets/images/hero/undraw_team_collaboration_re_ow29.svg';\n\nimport colors from '../themeColors';\n\nimport { useDynamicSvg } from '../svgBgChanger';\n\nimport {\n  ActiveTheme,\n  SecondaryColor,\n  teamHeader,\n  teamSubtitle,\n} from '../customize';\n\nexport default function HeroTeam() {\n  const colorMappings = {\n    '#536dfe': colors[ActiveTheme], // Old color: new color\n  };\n  const svgContent = useDynamicSvg(teamSvg, colorMappings);\n  return (\n    <section className=\"hero sm:items-center lg:items-start sm:flex-row\">\n\n      <div className=\"w-full sm:w-1/2 flex flex-col px-5 mb-5 sm:mb-0 sm:px-12 sm:mt-6 lg:mt-6 xl:mt-20\">\n        <Fade direction=\"up\" triggerOnce>\n          <h1 className={`text-6xl text-${SecondaryColor} font-bold leading-tight mb-5`}>\n            {teamHeader}\n          </h1>\n        </Fade>\n        <Fade direction=\"up\" delay={500} triggerOnce>\n          <p className=\"font-light text-xl text-gray-400 leading-relaxed\">\n            {teamSubtitle}\n          </p>\n        </Fade>\n      </div>\n      <div className=\"flex pt-5 w-full justify-center items-center order-first md:w-full lg:order-last lg:w-1/2\">\n        <Fade direction=\"up\" triggerOnce delay={300}>\n        <div\n          className=\"svg-container\" // Using the updated CSS class\n          dangerouslySetInnerHTML={{ __html: svgContent }} // eslint-disable-line react/no-danger\n        />\n        </Fade>\n      </div>\n    </section>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nimport Fade from 'react-awesome-reveal';\n\nimport { ActiveTheme, SecondaryColor } from 'customize';\n\nexport default function AllTeam({ data }) {\n  return (\n    <section className=\"container mx-0 sm:mx-auto\">\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-y-8 gap-x-32 sm:gap-14 lg:gap-10 mx-16 justify-items-center\">\n        {\n          data.map((item, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Fade bottom triggerOnce delay={200 * index} key={index}>\n              <div>\n                <div className={`flex flex-col w-44 h-60 sm:w-56 sm:h-72 rounded-xl shadow-xl border border-light-${ActiveTheme} justify-center transform transition duration-500 hover:scale-105`}>\n                  <div className=\"flex justify-center xl:mb-5\">\n                    <img src={item.imageUrl} alt=\"Team Member\" className=\"flex w-32 h-32 rounded-full\" />\n                  </div>\n                  <h2 className={`text-${SecondaryColor} text-center text-xl`}>{item.name}</h2>\n                  <p className=\"font-light text-gray-400 text-center mb-3\">{item.position}</p>\n                </div>\n              </div>\n            </Fade>\n          ))\n        }\n      </div>\n    </section>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { Component } from 'react';\n\nimport Header from 'parts/Header';\nimport HeroTeam from 'parts/HeroTeam';\nimport AllTeam from 'parts/AllTeam';\nimport Footer from 'parts/Footer';\n\nimport { TeamMembers } from 'json/landingPageData';\n\nexport default class TeamPage extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <HeroTeam />\n        <AllTeam data={TeamMembers} />\n        <Footer />\n      </>\n    );\n  }\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable import/extensions */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport Fade from 'react-awesome-reveal';\n\nimport NotFound from 'assets/images/undraw_page_not_found_re_e9o6.svg';\n\nimport { useDynamicSvg } from 'svgBgChanger';\n\nimport colors from 'themeColors';\n\nimport Button from 'elements/Button';\n\nimport { ActiveTheme, SecondaryColor } from '../customize';\n\nexport default function PortfolioDetail({ data }) {\n  if (data === null) {\n    const colorMappings = {\n      '#536dfe': colors[ActiveTheme], // Old color: new color\n    };\n    const svgContent = useDynamicSvg(NotFound, colorMappings);\n    return (\n      <section className=\"container mx-auto\">\n        <Fade bottom triggerOnce>\n          <div className=\"flex flex-col w-full justify-center\">\n            <div\n              className=\"flex w-full justify-center\"\n              dangerouslySetInnerHTML={{ __html: svgContent }} // eslint-disable-line react/no-danger\n            />\n            <h1 className={`text-${SecondaryColor} text-2xl text-center mt-5`}>\n              Project Not Found\n            </h1>\n            <div className=\"flex justify-center\">\n              <Button href=\"/project\" type=\"link\" className={`flex w-30 h-10 px-5 mt-5 bg-${SecondaryColor} text-white items-center rounded transform transition duration-500 hover:bg-gray-900`}>\n                Go Back\n              </Button>\n            </div>\n          </div>\n        </Fade>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"container mx-auto\">\n      <Fade bottom>\n        <Button type=\"link\" href=\"/project\" className=\"flex w-40 h-8 text-lg items-center ml-6 sm:ml-20 mt-8 font-light text-gray-400 hover:underline\">\n          <svg className=\"w-5 h-5 text-gray-400 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\n          </svg>\n          See All Project\n        </Button>\n      </Fade>\n\n      {\n        data.map((item) => (\n          <div className=\"flex flex-col mt-8 justify-center\">\n            <Fade bottom triggerOnce>\n              <h1 className={`text-5xl text-${SecondaryColor} text-center font-bold`}>{item.title}</h1>\n\n              <p className=\"font-light text-xl text-gray-400 text-center mb-10\">\n                {item.type}\n              </p>\n            </Fade>\n\n            <Fade bottom delay={300 * 1} triggerOnce>\n              <div className=\"flex justify-center xl:mb-6\">\n                <img src={item.imageUrl} alt=\"Project\" className=\"flex w-4/5 sm:w-4/6\" />\n              </div>\n            </Fade>\n\n            <Fade bottom delay={300 * 1} triggerOnce>\n              <div className=\"flex flex-col mt-16 mb-12 mx-8 sm:mx-16 xl:mx-28\">\n                <h1 className={`text-3xl text-${SecondaryColor} font-bold mb-3`}>\n                  Project Detail\n                </h1>\n\n                <p\n                  className=\"font-light text-lg text-gray-400 text-justify\"\n                  dangerouslySetInnerHTML={{ __html: item.description }} // eslint-disable-line react/no-danger\n                />\n              </div>\n\n              <div className=\"flex flex-col mx-8 sm:mx-16 xl:mx-28\">\n                <h1 className={`text-3xl text-${SecondaryColor} font-bold mb-5`}>\n                  Project Responsibilities\n                </h1>\n\n                <div className=\"flex flex-row ml-1\">\n                  {\n                    item.responsibility.map((responsibility) => (\n                      <div className={`mr-4 px-6 py-3 text-${ActiveTheme} border border-${ActiveTheme} rounded-full shadow-lg`}>\n                        {responsibility}\n                      </div>\n                    ))\n                  }\n                </div>\n              </div>\n\n              <p className=\"font-light text-gray-400 mt-16 mx-8 sm:mx-16 xl:mx-28\">\n\n                Interested? Let&apos;s get started! <br /><br />\n\n                <Button\n                  type=\"link\"\n                  className={`font-normal px-5 py-2 mr-3 text-${ActiveTheme} text-lg border border-${ActiveTheme} rounded-full transition duration-300 hover:bg-${ActiveTheme} hover:focus:outline-none focus:bg-${ActiveTheme} focus:text-white`}\n                  target=\"_blank\"\n                  isExternal\n                  href={item.buyNowLink} // add pricing link here\n                >Visit</Button>\n\n                {/* * This project is just example.\n                {' '}\n                <br />\n                Original project :\n                {' '}\n                <Button type=\"link\" href={item.credit} target=\"_blank\" className={`text-${ActiveTheme}`} isExternal>{item.credit}</Button> */}\n              </p>\n            </Fade>\n          </div>\n        ))\n      }\n    </section>\n  );\n}\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useEffect } from 'react';\n\nimport Header from 'parts/Header';\nimport { useParams } from 'react-router-dom';\nimport PortfolioDetail from 'parts/PortfolioDetail';\nimport Footer from 'parts/Footer';\n\nimport { Portfolios } from 'json/landingPageData';\n\nexport const ProjectDetailPage = () => {\n  const { id } = useParams();\n  const detailData = Portfolios.filter((item) => item.id === id);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <>\n      <Header />\n      <PortfolioDetail data={detailData.length === 1 ? [detailData[0]] : null} />\n      <Footer />\n    </>\n  );\n};\n","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","/* eslint-disable linebreak-style */\n/* eslint-disable object-shorthand */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ActiveTheme, SecondaryColor } from 'customize';\n\nexport const Form = (props) => {\n  const {\n    name, value, type, placeholder, className, errorResponse,\n  } = props;\n\n  const [hasError, setHasError] = useState(null);\n\n  let pattern;\n  if (type === 'email') pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (type === 'number') pattern = /^[0-9]{10}$/;\n\n  const onChange = (event) => {\n    const target = {\n      target: {\n        name: name,\n        value: event.target.value,\n      },\n    };\n\n    if (type === 'email') {\n      if (!pattern.test(event.target.value)) setHasError(errorResponse);\n      else setHasError(null);\n    }\n\n    if (type === 'number') {\n      if (event.target.validity.valid) props.onChange(target);\n      if (!pattern.test(event.target.value)) {\n        setHasError(errorResponse);\n      } else {\n        setHasError(null);\n        props.onChange(target);\n      }\n    } else {\n      props.onChange(target);\n    }\n  };\n\n  if (type === 'textarea') {\n    return (\n      <textarea\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        className={[\n          `w-95 sm:w-192 lg:w-192.5 xl:w-192.5 p-4 mx-2 mb-6 font-light text-lg text-${SecondaryColor} rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-${ActiveTheme}`,\n          className,\n        ].join(' ')}\n        onChange={onChange}\n        rows=\"9\"\n        required\n      />\n    );\n  }\n\n  if (type === 'number') {\n    return (\n      <div className=\"flex flex-col mb-6 mx-2 lg:mx-5 \">\n        <input\n          name={name}\n          type={type}\n          placeholder={placeholder}\n          pattern={pattern}\n          value={value}\n          className={[\n            `p-4 font-light text-lg text-${SecondaryColor} rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-${ActiveTheme}`,\n            className,\n          ].join(' ')}\n          onChange={onChange}\n          required\n        />\n        {hasError && (\n          <span className=\"text-sm text-white bg-red-500 p-1 rounded\">\n            {hasError}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col mb-6 mx-2 lg:mx-5 \">\n      <input\n        name={name}\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        className={[\n          `p-4 font-light text-lg text-${SecondaryColor} rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-${ActiveTheme}`,\n          className,\n        ].join(' ')}\n        onChange={onChange}\n        required\n      />\n      {hasError && (\n        <span className=\"text-sm text-white bg-red-500 p-1 rounded\">\n          {hasError}\n        </span>\n      )}\n    </div>\n  );\n};\n\nForm.defaultProps = {\n  errorResponse: 'Please match the requested format.',\n  type: '',\n  placeholder: '',\n  className: '',\n};\n\nForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  errorResponse: PropTypes.string,\n};\n","/* eslint-disable linebreak-style */\n/* eslint-disable no-useless-escape */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable max-len */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { Fade } from 'react-awesome-reveal';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as emailjs from '@emailjs/browser';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { ToastContainer, toast } from 'react-toastify';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form } from 'elements/Form';\nimport Button from 'elements/Button';\nimport { ActiveTheme, SecondaryColor } from 'customize';\n\nexport const DiscussForm = (actions) => {\n  const { data, resetForm } = actions;\n  const submitEmail = () => {\n    const {\n      name, company, email, phone, projectIdea,\n    } = data;\n\n    const templateParams = {\n      from_name: `${name} - ${company} ( ${phone} - ${email} )`,\n      to_name: 'arboraistudio',\n      message: projectIdea,\n    };\n\n    if (\n      name !== ''\n      && company !== ''\n      && email !== ''\n      && phone !== ''\n      && projectIdea !== ''\n    ) {\n      emailjs.send(\n        process.env.REACT_APP_EMAILJS_SERVICE_ID,\n        process.env.REACT_APP_EMAILJS_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_EMAILJS_USER_ID,\n      )\n        .then(() => {\n          toast.success('Success! we\\'\\ll get back to you soon. Thank you!');\n          resetForm();\n        }, (error) => {\n          toast.error(error);\n        });\n    } else {\n      toast.error('Please fill out the blank form.');\n    }\n  };\n\n  return (\n    <section className=\"flex flex-col container mx-auto mt-10 justify-center\">\n\n      <Fade direction=\"down\" triggerOnce>\n        <h1 className={`text-5xl text-${SecondaryColor} text-center font-bold`}>Lets Discuss</h1>\n      </Fade>\n\n      <Fade direction=\"up\" triggerOnce>\n        <p className=\"font-light text-lg text-gray-400 text-center mb-12\">\n          {/* eslint-disable-next-line react/no-unescaped-entities */}\n          Please fill out the form below to discuss your project and we'll get back to you in less than 24 hours.\n        </p>\n      </Fade>\n\n      <Fade direction=\"up\" triggerOnce>\n        <div className=\"flex flex-col\">\n          <div className=\"flex flex-col sm:flex-row mx-auto\">\n            <Form\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              value={data.name}\n              placeholder=\"Your name\"\n              className=\"\"\n              onChange={actions.onChange}\n            />\n            <Form\n              id=\"company\"\n              name=\"company\"\n              type=\"text\"\n              value={data.company}\n              placeholder=\"Your company\"\n              className=\"\"\n              onChange={actions.onChange}\n            />\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row mx-auto\">\n            <Form\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              value={data.email}\n              placeholder=\"Your email address\"\n              className=\"\"\n              onChange={actions.onChange}\n            />\n            <Form\n              id=\"phone\"\n              name=\"phone\"\n              type=\"number\"\n              value={data.phone}\n              placeholder=\"Your contact number\"\n              className=\"\"\n              onChange={actions.onChange}\n            />\n          </div>\n\n          <div className=\"mx-auto\">\n            <Form\n              id=\"projectIdea\"\n              name=\"projectIdea\"\n              type=\"textarea\"\n              value={data.projectIdea}\n              placeholder=\"Explain about your project idea\"\n              className=\"\"\n              onChange={actions.onChange}\n            />\n          </div>\n          <Button\n            className={`text-xl mx-auto px-12 py-3 mt-5 bg-${ActiveTheme} text-white rounded-full border-2 border-${ActiveTheme} hover:bg-dark-${ActiveTheme} transition duration-200 focus:outline-none\"\n            type=\"button`}\n            onClick={submitEmail}\n          >\n            Submit\n          </Button>\n        </div>\n      </Fade>\n\n      <ToastContainer />\n\n    </section>\n  );\n};\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useState, useEffect } from 'react';\nimport { DiscussForm } from 'parts/DiscussForm';\n\nimport Header from 'parts/Header';\nimport Footer from 'parts/Footer';\n\nexport const DiscussProjectPage = () => {\n  const [data, setData] = useState({\n    name: '',\n    company: '',\n    email: '',\n    phone: '',\n    projectIdea: '',\n  });\n\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, []);\n\n  const onChange = (event) => {\n    setData((prevData) => ({\n      ...prevData,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const resetForm = () => {\n    setData({\n      name: '',\n      company: '',\n      email: '',\n      phone: '',\n      projectIdea: '',\n    });\n  };\n\n  return (\n    <>\n      <Header />\n      <DiscussForm data={data} onChange={onChange} resetForm={resetForm} />\n      <Footer />\n    </>\n  );\n};\n","/* eslint-disable linebreak-style */\n/* eslint-disable import/extensions */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable-next-line no-unused-vars */\n\nimport { Route, Routes } from 'react-router-dom';\n\nimport LandingPage from 'pages/LandingPage';\nimport ProjectPage from 'pages/ProjectPage';\nimport NotFoundPage from 'pages/NotFoundPage';\nimport TeamPage from 'pages/TeamPage';\n\nimport { ProjectDetailPage } from 'pages/ProjectDetailPage';\nimport { DiscussProjectPage } from 'pages/DiscussProjectPage';\n\nimport './assets/css/styles.css';\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route exact path=\"/\" element={<LandingPage />} />\n        <Route path=\"/project\" element={<ProjectPage />} />\n        <Route exact path=\"/project/:id\" element={<ProjectDetailPage />} />\n        <Route exact path=\"/team\" element={<TeamPage />} />\n        <Route exact path=\"/discuss-project\" element={<DiscussProjectPage />} />\n        <Route path=\"**\" element={<NotFoundPage />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","/* eslint-disable linebreak-style */\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable linebreak-style */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/extensions */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","i","key","descriptor","e","u","b","Symbol","for","c","d","f","g","h","k","l","m","n","p","q","t","v","a","r","$$typeof","isFragment","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","hasOwnProperty","ka","la","ma","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","set","Reflect","construct","includes","Pa","tag","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","J","x","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","index","Pg","Qg","props","Rg","implementation","Sg","Tg","y","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","console","error","Mi","WeakMap","Ni","Oi","Pi","Qi","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Component","PureComponent","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","leafPrototypes","getProto","obj","__esModule","ns","def","definition","o","chunkId","all","reduce","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","_ref","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","v7_partialHydration","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","ViewTransitionContext","isTransitioning","startTransitionImpl","ReactDOM","BrowserRouter","_ref4","historyRef","setStateImpl","v7_startTransition","newState","isBrowser","ABSOLUTE_URL_REGEX","Link","_ref7","absoluteHref","reloadDocument","preventScrollReset","viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","NavLink","_ref8","ariaCurrentProp","className","classNameProp","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","opts","vtContext","useViewTransitionState","currentPath","currentLocation","nextPath","nextLocation","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Boolean","UNSAFE_DataRouterContext","ItemTypes","AI_SOFTWARE","DATA_ANALYSIS","UI_UX","Services","title","svgUrl","AiConsulting","AiSoftwareDevelopment","DataAnalysis","Portfolios","imageUrl","GigachadSalesman","responsibility","credit","description","buyNowLink","Advantages","DataDriven","ClientFocused","CollaborativeApproach","CustomerFavorite","Testimonials","company","testimoni","Sasha","Reiner","TeamMembers","position","SaifMahmud","requestAnimationFrame","cancelAnimationFrame","nextFrame","_len","_key","microTask","_len2","_key2","getPropertyValue","group","dispose","writable","detect","handoffState","currentId","reset","nextId","isServer","isClient","handoff","isHandoffComplete","process","globalThis","getAnimations","None","Closed","Enter","Leave","hasFlag","addFlag","removeFlag","setFlag","toggleFlag","prepare","run","inFlight","_ref2","offsetHeight","CSSTransition","allSettled","finished","closed","enter","leave","Open","Closing","Opening","flatMap","captureStackTrace","RenderStrategy","Static","Unmount","Hidden","ourProps","theirProps","slot","defaultTag","features","visible","mergeRefs","$","hidden","as","refName","entries","_len3","_key3","_len4","_key4","Event","enterFrom","enterTo","leaveFrom","leaveTo","_e","Visible","_ref3","find","chains","wait","register","unregister","onStart","onStop","show","appear","initial","beforeEnter","beforeLeave","afterEnter","afterLeave","entered","Child","Root","Button","onClickHandler","_jsx","rel","ActiveTheme","SecondaryColor","BrandIconPartAColor","subtitleText","footerSubtitle","ColorMappings","colors","BrandIcon","_jsxs","Header","isCollapse","setIsCollapse","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","Transition","StyleSheet","_this","_insertTag","before","tags","insertionPoint","prepend","container","isSpeedy","speedy","ctr","nonce","_proto","nodes","insert","rule","createStyleElement","sheet","styleSheets","ownerNode","sheetForTag","insertRule","cssRules","flush","_tag$parentNode","abs","replacement","indexof","charat","charCodeAt","begin","strlen","sizeof","append","array","line","column","character","characters","root","parent","copy","peek","caret","token","alloc","dealloc","delimit","delimiter","whitespace","escaping","commenter","identifier","MS","MOZ","WEBKIT","COMMENT","RULESET","DECLARATION","KEYFRAMES","serialize","output","compile","rules","rulesets","pseudo","points","declarations","atrule","property","previous","variable","scanning","ampersand","reference","comment","declaration","ruleset","post","identifierWithPointTracking","getRules","parsed","toRules","fixedElements","compat","isImplicitRule","parentRules","removeLabel","prefix","defaultStylisPlugins","combine","exec","createCache","ssrStyles","_insert","stylisPlugins","inserted","nodesToHydrate","attrib","currentSheet","finalizingPlugins","serializer","collection","middleware","selector","serialized","shouldCache","styles","stylis","registered","getRegisteredStyles","registeredStyles","classNames","rawClassName","registerStyles","isStringTag","insertStyles","unitlessKeys","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","scale","WebkitLineClamp","memoize","arg","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","styleName","processStyleValue","p1","p2","cursor","unitless","handleInterpolation","mergedProps","interpolation","componentSelector","__emotion_styles","keyframes","anim","serializedStyles","string","asString","interpolated","_i","createStringFromObject","previousCursor","cached","labelPattern","serializeStyles","args","stringMode","strings","raw","lastIndex","identifierName","str","len","hashString","useInsertionEffectAlwaysWithSyncFallback","EmotionCacheContext","HTMLElement","withEmotionCache","func","ThemeContext","hasOwn","typePropName","Insertion","Emotion$1","cssProp","css","WrappedComponent","newProps","ReactJSXRuntime","Emotion","createEmotionProps","insertable","classnames","cls","toAdd","serializedArr","ClassNames","content","cx","merge","theme","ele","observerMap","RootIds","rootId","unsupportedValue","optionsToId","getRootId","observe","fallbackInView","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","boundingClientRect","intersectionRect","rootBounds","observer","elements","thresholds","entry","_a","inView","trackVisibility","isVisible","createObserver","callbacks","unobserve","disconnect","InView","__publicField","triggerOnce","skip","initialInView","observeNode","isPlainChildren","onChange","prevProps","rootMargin","_unobserveCb","handleChange","handleNode","useInView","setRef","React2","entryTarget","previousEntryTarget","fadeIn","fadeInBottomLeft","fadeInBottomRight","fadeInDown","fadeInDownBig","fadeInLeft","fadeInLeftBig","fadeInRight","fadeInRightBig","fadeInTopLeft","fadeInTopRight","fadeInUp","fadeInUpBig","matchIf","onTrue","onFalse","condition","matchIfOrNull","hideWhen","Reveal","cascade","damping","duration","fraction","childClassName","childStyle","onVisibilityChange","animationStyles","timingFunction","iterationCount","getAnimationCss","isNullable","TextReveal","FragmentReveal","nodeDelay","animationDelay","textBaseStyles","whiteSpace","fadeOut","fadeOutBottomLeft","fadeOutBottomRight","fadeOutDown","fadeOutDownBig","fadeOutLeft","fadeOutLeftBig","fadeOutRight","fadeOutRightBig","fadeOutTopLeft","fadeOutTopRight","fadeOutUp","fadeOutUpBig","Fade","big","direction","reverse","getStyles$5","useDynamicSvg","colorMappings","svgContent","setSvgContent","fetch","res","originalData","svg","DOMParser","parseFromString","outerHTML","oldColor","newColor","Hero","controlAiSvg","SvgDisplay","svgMarkup","Service","item","Portfolio","bottom","alt","Advantage","isObject","ssrDocument","blur","querySelector","getElementById","createEvent","initEvent","childNodes","importNode","host","hostname","getDocument","doc","ssrWindow","userAgent","back","CustomEvent","getComputedStyle","Image","screen","matchMedia","getWindow","win","classesToTokens","classes","nextTick","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","WebKitCSSMatrix","transform","webkitTransform","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","isNode","noExtend","nextSource","keysArray","nextKey","desc","__swiper__","setCSSProperty","varName","varValue","animateCSSModeScroll","swiper","targetPosition","side","startPosition","translate","speed","wrapperEl","scrollSnapType","cssModeFrameID","dir","isOutOfBound","animate","getTime","progress","max","easeProgress","cos","PI","currentPosition","scrollTo","elementChildren","HTMLSlotElement","assignedElements","showWarning","classList","elementStyle","elementIndex","elementParents","parents","parentElement","elementOuterSize","includeMargins","offsetWidth","makeElementsArray","support","deviceCached","browser","getSupport","smoothScroll","touch","DocumentTouch","calcSupport","getDevice","overrides","platform","device","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","os","calcDevice","getBrowser","needPerspectiveFix","isSafari","major","minor","num","Number","isWebView","isSafariBrowser","need3dFix","calcBrowser","eventsEmitter","on","events","handler","eventsListeners","destroyed","method","once","onceHandler","off","__emitterProxy","onAny","eventsAnyListeners","offAny","eventHandler","emit","toggleSlideClasses$1","slideEl","remove","toggleSlideClasses","processLazyPreloader","imageEl","closest","slideClass","lazyEl","lazyPreloaderClass","shadowRoot","unlazy","slides","preload","amount","lazyPreloadPrevNext","slidesPerView","slidesPerViewDynamic","activeIndex","grid","rows","activeColumn","preloadColumns","slideIndexLastInView","rewind","loop","realIndex","update","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","updateSlides","getDirectionPropertyValue","label","getDirectionLabel","slidesEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","cssMode","gridEnabled","slideSize","initSlides","unsetSlides","shouldResetSlideSize","breakpoints","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","swiperSlideSize","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","slidesBefore","slidesAfter","groupSize","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","offsetSize","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","updateAutoHeight","activeSlides","newHeight","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","cssOverflowAdjustment","updateSlidesProgress","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","isFullyVisible","slideVisibleClass","slideFullyVisibleClass","originalProgress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","autoHeight","updateSlidesClasses","getFilteredSlide","activeSlide","prevSlide","nextSlide","nextEls","nextElementSibling","elementNextAll","prevEls","previousElementSibling","elementPrevAll","slideActiveClass","slideNextClass","slidePrevClass","emitSlidesClasses","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","getActiveIndexByTranslate","firstSlideInColumn","activeSlideIndex","runCallbacksOnInit","updateClickedSlide","pathEl","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","previousTranslate","translateTo","runCallbacks","translateBounds","animating","preventInteractionOnTransition","newTranslate","isH","behavior","onTranslateToWrapperTransitionEnd","transitionEmit","step","transitionDuration","transitionDelay","transitionStart","transitionEnd","slideTo","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","_immediateVirtual","_cssModeVirtualInitialSet","initialSlide","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","targetSlideIndex","cols","needLoopFix","loopFix","slideRealIndex","slideNext","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","_clientLeft","clientLeft","slidePrev","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","slideReset","slideToClosest","currentSnap","slideToIndex","slideSelector","loopedSlides","getSlideIndex","loopCreate","shouldFillGroup","shouldFillGrid","addBlankSlides","amountOfSlides","slideBlankClass","loopAddBlankSlides","recalcSlides","byMousewheel","loopAdditionalSlides","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","activeColIndexWithShift","colIndexToPrepend","__preventObserver__","swiperLoopMoveDOM","currentSlideTranslate","diff","touchEventsData","startTranslate","controller","control","loopParams","loopDestroy","newSlidesOrder","swiperSlideIndex","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","touchEventsTarget","unsetGrabCursor","preventEdgeSwipe","startX","edgeSwipeDetection","edgeSwipeThreshold","innerWidth","onTouchStart","originalEvent","touchId","targetEl","isChild","elementIsChildOf","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","closestElement","allowClick","swipeHandler","currentX","currentY","startY","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchMove","targetTouch","preventedByNestedSwiper","touchReleaseOnEdges","previousX","previousY","diffX","diffY","sqrt","touchAngle","atan2","preventTouchMoveFromPointerMove","touchMoveStopPropagation","nested","touchesDiff","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","allowLoopFix","evt","bySwiperTouchMove","allowMomentumBounce","loopSwapReset","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","swipeToLast","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","nextEl","prevEl","onResize","setBreakpoint","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","onLoad","onDocumentTouchStart","documentTouchHandlerProceeded","touchAction","domMethod","swiperMethod","updateOnWindowResize","events$1","attachEvents","detachEvents","isGridEnabled","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasGrabCursor","isGrabCursor","wasEnabled","emitContainerClasses","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","wasLoop","changeDirection","isEnabled","hasLoop","containerEl","currentHeight","innerHeight","point","minRatio","addClasses","suffixes","resultClasses","prepareClasses","removeClasses","checkOverflow$1","wasLocked","lastSlideRightEdge","defaults","init","swiperElementNodeName","resizeObserver","createElements","eventsPrefix","uniqueNavElements","passiveListeners","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","auto","prototypes","extendedDefaults","Swiper","swipers","newParams","modules","__modules__","mod","extendParams","swiperParams","passedParams","eventName","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","setProgress","getSlideClasses","updates","exact","spv","breakLoop","translateValue","translated","complete","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","mounted","getWrapperSelector","getWrapper","slideSlots","hostEl","lazyElements","deleteInstance","cleanStyles","object","deleteProps","extendDefaults","newDefaults","installModule","use","prototypeGroup","protoMethod","animationFrame","resizeHandler","orientationChangeHandler","ResizeObserver","newWidth","contentBoxSize","contentRect","inlineSize","blockSize","observers","attach","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","paramsList","needsNavigation","needsPagination","pagination","needsScrollbar","scrollbar","uniqueClasses","unique","isChildSwiperSlide","processChildren","slots","foundSlides","SwiperSlideContext","SwiperContext","externalElRef","Tag","wrapperTag","WrapperTag","onSwiper","eventsAssigned","containerClasses","setContainerClasses","virtualData","setVirtualData","breakpointChanged","setBreakpointChanged","initializedRef","swiperElRef","swiperRef","oldPassedParamsRef","oldSlides","nextElRef","prevElRef","paginationElRef","scrollbarElRef","restProps","splitEvents","allowedParams","plainObj","getParams","onBeforeBreakpoint","_containerClasses","initSwiper","passParams","Swiper$1","extendWith","renderExternal","renderExternalUpdate","paginationEl","scrollbarEl","mountSwiper","changedParams","oldParams","oldChildren","getKey","addKey","oldChildrenKeys","childrenKeys","newKeys","oldKeys","newKey","oldKey","getChangedParams","updateParams","currentParams","thumbs","needThumbsInit","needControllerInit","needPaginationInit","needScrollbarInit","needNavigationInit","loopNeedDestroy","loopNeedEnable","loopNeedReloop","destroyModule","newValue","part","nextButtonSvg","prevButtonSvg","updateSwiper","parallax","updateOnVirtualData","loopFrom","loopTo","slidesToRender","virtualIndex","renderVirtual","SwiperSlide","externalRef","slideElRef","slideClasses","setSlideClasses","lazyLoaded","setLazyLoaded","updateClasses","_s","slideData","renderChildren","createElementIfNotDefined","checkProps","Navigation","getEl","toggleEl","subEl","disabledClass","lockClass","onPrevClick","onNextClick","initButton","destroyButton","hideOnClick","hiddenClass","navigationDisabledClass","targetIsButton","clickable","toggle","classesToSelector","Pagination","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","bulletEl","onBulletClick","moveDirection","total","firstIndex","midIndex","classesToRemove","suffix","flat","bullet","bulletIndex","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","subElIndex","fractionEl","totalEl","progressbarDirection","scaleX","scaleY","progressEl","paginationHTML","numberOfBullets","Scrollbar","dragStartPos","dragSize","trackSize","divider","dragTimeout","dragEl","newSize","newPos","hide","getPointerPosition","setDragPosition","positionRatio","box","clientTop","scrollY","scrollX","elementOffset","onDragStart","onDragMove","onDragEnd","snapOnRelease","activeListener","passiveListener","eventMethod","swiperEl","dragClass","draggable","scrollbarDisabledClass","A11y","a11y","notificationClass","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","slideLabelMessage","containerMessage","containerRoleDescriptionMessage","containerRole","itemRoleDescriptionMessage","slideRole","scrollOnFocus","clicked","preventFocusHandler","focusTargetSlideEl","liveRegion","visibilityChangedTimestamp","notify","notification","makeElFocusable","makeElNotFocusable","addElRole","role","addElRoleDescription","addElLabel","disableEl","enableEl","onEnterOrSpaceKey","click","hasPagination","hasClickablePagination","initNavEl","wrapperId","controls","addElControls","handlePointerDown","handlePointerUp","handleFocus","sourceCapabilities","firesTouchEvents","randomChar","round","live","addElLive","updateNavigation","updatePagination","Autoplay","raf","timeLeft","waitForTransition","disableOnInteraction","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","autoplayTimeLeft","wasPaused","pausedByTouch","touchStartTimeout","slideChanged","pausedByInteraction","pausedByPointerEnter","autoplayDelayTotal","autoplayDelayCurrent","autoplayStartTime","onTransitionEnd","calcTimeLeft","delayForce","currentSlideDelay","getSlideDelay","activeSlideEl","proceed","stop","pause","visibilityState","onPointerEnter","onPointerLeave","Testimonial","Discuss","Footer","LandingPage","_Fragment","HeroPortfolio","heroPortfolio","makeTypeChecker","tabsRole","isTab","isTabList","isTabPanel","deepMap","isTabChild","deepForEach","getTabsCount","tabCount","isTabNode","isTabDisabled","canUseActiveElement","UncontrolledTabs","tabNodes","tabIds","setSelected","onSelect","selectedIndex","getNextTab","getTab","getPrevTab","getTabsCountHelper","handleClick","isTabFromContainer","nodeAncestor","disabledTabClassName","domRef","forceRenderTabPanel","selectedTabClassName","selectedTabPanelClassName","environment","disableUpDownKeys","disableLeftRightKeys","onKeyDown","useSelectedIndex","getLastTab","getFirstTab","listIndex","wasTabFocused","env","determineCanUseActiveElement","tab","tabRef","selectedClassName","disabledClassName","forceRender","defaultFocus","focusTabOnClick","defaultIndex","Tabs","setFocus","getModeFromProps","setSelectedIndex","tabsCount","maxTabIndex","subProps","handleSelected","TabList","DEFAULT_CLASS","Tab","nodeRef","tabIndex","TabPanel","AllPortfolio","tabsData","values","items","panelIndex","itemIndex","ProjectPage","NotFoundPage","NotFound","HeroTeam","teamSvg","AllTeam","TeamPage","PortfolioDetail","ProjectDetailPage","useParams","detailData","EmailJSResponseStatus","_text","store","blockHeadless","storageProvider","createWebStorage","localStorage","getItem","setItem","removeItem","buildOptions","publicKey","sendPost","async","headers","response","responseStatus","validateParams","serviceID","templateID","isHeadless","webdriver","languages","headlessError","isBlockedValueInParams","list","watchVariable","isBlockListDisabled","validateBlockListParams","FormData","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","leftTime","lastTime","getLeftTime","limitRateError","send","templateParams","blockList","limitRate","validateTemplateParams","lib_version","user_id","service_id","template_id","template_params","Form","placeholder","errorResponse","hasError","setHasError","validity","valid","DiscussForm","actions","resetForm","phone","projectIdea","submitEmail","emailjs","REACT_APP_EMAILJS_SERVICE_ID","REACT_APP_EMAILJS_TEMPLATE_ID","from_name","to_name","REACT_APP_EMAILJS_USER_ID","toast","success","ToastContainer","DiscussProjectPage","setData","scroll","prevData","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","App","reportWebVitals"],"sourceRoot":""}